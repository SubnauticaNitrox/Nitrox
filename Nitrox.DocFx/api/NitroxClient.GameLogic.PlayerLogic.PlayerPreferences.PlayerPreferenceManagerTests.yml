### YamlMime:ManagedReference
items:
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests
  commentId: T:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests
  id: PlayerPreferenceManagerTests
  parent: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  children:
  - NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress
  - NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress
  - NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference
  - NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone
  - NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry
  - NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress
  - NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer
  langs:
  - csharp
  - vb
  name: PlayerPreferenceManagerTests
  nameWithType: PlayerPreferenceManagerTests
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests
  type: Class
  source:
    remote:
      path: Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: PlayerPreferenceManagerTests
    path: ../Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
    startLine: 12
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  syntax:
    content: >-
      [TestClass]

      public class PlayerPreferenceManagerTests
    content.vb: >-
      <TestClass>

      Public Class PlayerPreferenceManagerTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry
  commentId: M:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry
  id: ShouldBeAbleToRetrieveANewPreferenceEntry
  parent: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests
  langs:
  - csharp
  - vb
  name: ShouldBeAbleToRetrieveANewPreferenceEntry()
  nameWithType: PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry()
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ShouldBeAbleToRetrieveANewPreferenceEntry
    path: ../Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
    startLine: 15
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  syntax:
    content: >-
      [TestMethod]

      public void ShouldBeAbleToRetrieveANewPreferenceEntry()
    content.vb: >-
      <TestMethod>

      Public Sub ShouldBeAbleToRetrieveANewPreferenceEntry()
  overload: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress
  commentId: M:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress
  id: ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress
  parent: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests
  langs:
  - csharp
  - vb
  name: ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress()
  nameWithType: PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress()
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress
    path: ../Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
    startLine: 41
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  syntax:
    content: >-
      [TestMethod]

      public void ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress()
    content.vb: >-
      <TestMethod>

      Public Sub ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress()
  overload: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress
  commentId: M:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress
  id: SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress
  parent: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests
  langs:
  - csharp
  - vb
  name: SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress()
  nameWithType: PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress()
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress
    path: ../Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
    startLine: 69
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  syntax:
    content: >-
      [TestMethod]

      public void SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress()
    content.vb: >-
      <TestMethod>

      Public Sub SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress()
  overload: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference
  commentId: M:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference
  id: SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference
  parent: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests
  langs:
  - csharp
  - vb
  name: SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference()
  nameWithType: PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference()
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference
    path: ../Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
    startLine: 90
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  syntax:
    content: >-
      [TestMethod]

      public void SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference()
    content.vb: >-
      <TestMethod>

      Public Sub SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference()
  overload: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer
  commentId: M:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer
  id: ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer
  parent: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests
  langs:
  - csharp
  - vb
  name: ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer()
  nameWithType: PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer()
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer
    path: ../Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
    startLine: 109
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  syntax:
    content: >-
      [TestMethod]

      public void ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer()
    content.vb: >-
      <TestMethod>

      Public Sub ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer()
  overload: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone
  commentId: M:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone
  id: ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone
  parent: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests
  langs:
  - csharp
  - vb
  name: ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone()
  nameWithType: PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone()
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone
    path: ../Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
    startLine: 147
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  syntax:
    content: >-
      [TestMethod]

      public void ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone()
    content.vb: >-
      <TestMethod>

      Public Sub ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone()
  overload: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress
  commentId: M:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress
  id: GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress
  parent: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests
  langs:
  - csharp
  - vb
  name: GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress()
  nameWithType: PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress()
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress
    path: ../Nitrox.Test/Client/GameLogic/PlayerLogic/PlayerPreferences/PlayerPreferenceManagerTests.cs
    startLine: 167
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  syntax:
    content: >-
      [TestMethod]

      public void GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress()
    content.vb: >-
      <TestMethod>

      Public Sub GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress()
  overload: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
references:
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  commentId: N:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  href: NitroxClient.html
  name: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  nameWithType: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
  spec.csharp:
  - uid: NitroxClient
    name: NitroxClient
    href: NitroxClient.html
  - name: .
  - uid: NitroxClient.GameLogic
    name: GameLogic
    href: NitroxClient.GameLogic.html
  - name: .
  - uid: NitroxClient.GameLogic.PlayerLogic
    name: PlayerLogic
    href: NitroxClient.GameLogic.PlayerLogic.html
  - name: .
  - uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
    name: PlayerPreferences
    href: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.html
  spec.vb:
  - uid: NitroxClient
    name: NitroxClient
    href: NitroxClient.html
  - name: .
  - uid: NitroxClient.GameLogic
    name: GameLogic
    href: NitroxClient.GameLogic.html
  - name: .
  - uid: NitroxClient.GameLogic.PlayerLogic
    name: PlayerLogic
    href: NitroxClient.GameLogic.PlayerLogic.html
  - name: .
  - uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences
    name: PlayerPreferences
    href: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry*
  commentId: Overload:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry
  href: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry.html#NitroxClient_GameLogic_PlayerLogic_PlayerPreferences_PlayerPreferenceManagerTests_ShouldBeAbleToRetrieveANewPreferenceEntry
  name: ShouldBeAbleToRetrieveANewPreferenceEntry
  nameWithType: PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress*
  commentId: Overload:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress
  href: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress.html#NitroxClient_GameLogic_PlayerLogic_PlayerPreferences_PlayerPreferenceManagerTests_ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress
  name: ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress
  nameWithType: PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress*
  commentId: Overload:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress
  href: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress.html#NitroxClient_GameLogic_PlayerLogic_PlayerPreferences_PlayerPreferenceManagerTests_SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress
  name: SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress
  nameWithType: PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference*
  commentId: Overload:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference
  href: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference.html#NitroxClient_GameLogic_PlayerLogic_PlayerPreferences_PlayerPreferenceManagerTests_SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference
  name: SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference
  nameWithType: PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer*
  commentId: Overload:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer
  href: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer.html#NitroxClient_GameLogic_PlayerLogic_PlayerPreferences_PlayerPreferenceManagerTests_ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer
  name: ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer
  nameWithType: PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone*
  commentId: Overload:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone
  href: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone.html#NitroxClient_GameLogic_PlayerLogic_PlayerPreferences_PlayerPreferenceManagerTests_ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone
  name: ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone
  nameWithType: PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone
- uid: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress*
  commentId: Overload:NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress
  href: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress.html#NitroxClient_GameLogic_PlayerLogic_PlayerPreferences_PlayerPreferenceManagerTests_GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress
  name: GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress
  nameWithType: PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress
  fullName: NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress
memberLayout: SeparatePages
