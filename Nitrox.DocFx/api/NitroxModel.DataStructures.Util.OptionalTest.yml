### YamlMime:ManagedReference
items:
- uid: NitroxModel.DataStructures.Util.OptionalTest
  commentId: T:NitroxModel.DataStructures.Util.OptionalTest
  id: OptionalTest
  parent: NitroxModel.DataStructures.Util
  children:
  - NitroxModel.DataStructures.Util.OptionalTest.Init
  - NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty
  - NitroxModel.DataStructures.Util.OptionalTest.OptionalGet
  - NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks
  - NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent
  - NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent
  - NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue
  - NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue
  - NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull
  langs:
  - csharp
  - vb
  name: OptionalTest
  nameWithType: OptionalTest
  fullName: NitroxModel.DataStructures.Util.OptionalTest
  type: Class
  source:
    remote:
      path: Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OptionalTest
    path: ../Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
    startLine: 6
  assemblies:
  - Nitrox.Test
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: >-
      [TestClass]

      public class OptionalTest
    content.vb: >-
      <TestClass>

      Public Class OptionalTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.Util.OptionalTest.Init
  commentId: M:NitroxModel.DataStructures.Util.OptionalTest.Init
  id: Init
  parent: NitroxModel.DataStructures.Util.OptionalTest
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: OptionalTest.Init()
  fullName: NitroxModel.DataStructures.Util.OptionalTest.Init()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Init
    path: ../Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
    startLine: 13
  assemblies:
  - Nitrox.Test
  namespace: NitroxModel.DataStructures.Util
  summary: >-
    These optional additions should be in <xref href="NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks" data-throw-if-not-resolved="false"></xref> test method but MSTest

    reuses instances which causes <xref href="NitroxModel.DataStructures.Util.Optional%601.HasValue?text=Optional%7bT%7d.HasValue" data-throw-if-not-resolved="false"></xref> to be called before the new conditions are added.
  example: []
  syntax:
    content: >-
      [TestInitialize]

      public static void Init()
    content.vb: >-
      <TestInitialize>

      Public Shared Sub Init()
  overload: NitroxModel.DataStructures.Util.OptionalTest.Init*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalGet
  commentId: M:NitroxModel.DataStructures.Util.OptionalTest.OptionalGet
  id: OptionalGet
  parent: NitroxModel.DataStructures.Util.OptionalTest
  langs:
  - csharp
  - vb
  name: OptionalGet()
  nameWithType: OptionalTest.OptionalGet()
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalGet()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OptionalGet
    path: ../Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
    startLine: 20
  assemblies:
  - Nitrox.Test
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: >-
      [TestMethod]

      public void OptionalGet()
    content.vb: >-
      <TestMethod>

      Public Sub OptionalGet()
  overload: NitroxModel.DataStructures.Util.OptionalTest.OptionalGet*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent
  commentId: M:NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent
  id: OptionalIsPresent
  parent: NitroxModel.DataStructures.Util.OptionalTest
  langs:
  - csharp
  - vb
  name: OptionalIsPresent()
  nameWithType: OptionalTest.OptionalIsPresent()
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OptionalIsPresent
    path: ../Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
    startLine: 27
  assemblies:
  - Nitrox.Test
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: >-
      [TestMethod]

      public void OptionalIsPresent()
    content.vb: >-
      <TestMethod>

      Public Sub OptionalIsPresent()
  overload: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent
  commentId: M:NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent
  id: OptionalIsNotPresent
  parent: NitroxModel.DataStructures.Util.OptionalTest
  langs:
  - csharp
  - vb
  name: OptionalIsNotPresent()
  nameWithType: OptionalTest.OptionalIsNotPresent()
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OptionalIsNotPresent
    path: ../Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
    startLine: 34
  assemblies:
  - Nitrox.Test
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: >-
      [TestMethod]

      public void OptionalIsNotPresent()
    content.vb: >-
      <TestMethod>

      Public Sub OptionalIsNotPresent()
  overload: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue
  commentId: M:NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue
  id: OptionalOrElseValidValue
  parent: NitroxModel.DataStructures.Util.OptionalTest
  langs:
  - csharp
  - vb
  name: OptionalOrElseValidValue()
  nameWithType: OptionalTest.OptionalOrElseValidValue()
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OptionalOrElseValidValue
    path: ../Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
    startLine: 41
  assemblies:
  - Nitrox.Test
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: >-
      [TestMethod]

      public void OptionalOrElseValidValue()
    content.vb: >-
      <TestMethod>

      Public Sub OptionalOrElseValidValue()
  overload: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue
  commentId: M:NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue
  id: OptionalOrElseNoValue
  parent: NitroxModel.DataStructures.Util.OptionalTest
  langs:
  - csharp
  - vb
  name: OptionalOrElseNoValue()
  nameWithType: OptionalTest.OptionalOrElseNoValue()
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OptionalOrElseNoValue
    path: ../Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
    startLine: 48
  assemblies:
  - Nitrox.Test
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: >-
      [TestMethod]

      public void OptionalOrElseNoValue()
    content.vb: >-
      <TestMethod>

      Public Sub OptionalOrElseNoValue()
  overload: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty
  commentId: M:NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty
  id: OptionalEmpty
  parent: NitroxModel.DataStructures.Util.OptionalTest
  langs:
  - csharp
  - vb
  name: OptionalEmpty()
  nameWithType: OptionalTest.OptionalEmpty()
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OptionalEmpty
    path: ../Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
    startLine: 55
  assemblies:
  - Nitrox.Test
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: >-
      [TestMethod]

      public void OptionalEmpty()
    content.vb: >-
      <TestMethod>

      Public Sub OptionalEmpty()
  overload: NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull
  commentId: M:NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull
  id: OptionalSetValueNull
  parent: NitroxModel.DataStructures.Util.OptionalTest
  langs:
  - csharp
  - vb
  name: OptionalSetValueNull()
  nameWithType: OptionalTest.OptionalSetValueNull()
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OptionalSetValueNull
    path: ../Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
    startLine: 62
  assemblies:
  - Nitrox.Test
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: >-
      [TestMethod]

      public void OptionalSetValueNull()
    content.vb: >-
      <TestMethod>

      Public Sub OptionalSetValueNull()
  overload: NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks
  commentId: M:NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks
  id: OptionalHasValueDynamicChecks
  parent: NitroxModel.DataStructures.Util.OptionalTest
  langs:
  - csharp
  - vb
  name: OptionalHasValueDynamicChecks()
  nameWithType: OptionalTest.OptionalHasValueDynamicChecks()
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OptionalHasValueDynamicChecks
    path: ../Nitrox.Test/Model/DataStructures/Util/OptionalTest.cs
    startLine: 72
  assemblies:
  - Nitrox.Test
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: >-
      [TestMethod]

      public void OptionalHasValueDynamicChecks()
    content.vb: >-
      <TestMethod>

      Public Sub OptionalHasValueDynamicChecks()
  overload: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
references:
- uid: NitroxModel.DataStructures.Util
  commentId: N:NitroxModel.DataStructures.Util
  href: NitroxModel.html
  name: NitroxModel.DataStructures.Util
  nameWithType: NitroxModel.DataStructures.Util
  fullName: NitroxModel.DataStructures.Util
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.Util
    name: Util
    href: NitroxModel.DataStructures.Util.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.Util
    name: Util
    href: NitroxModel.DataStructures.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks
  commentId: M:NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks
  href: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalHasValueDynamicChecks
  name: OptionalHasValueDynamicChecks()
  nameWithType: OptionalTest.OptionalHasValueDynamicChecks()
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks()
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks
    name: OptionalHasValueDynamicChecks
    href: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalHasValueDynamicChecks
  - name: (
  - name: )
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks
    name: OptionalHasValueDynamicChecks
    href: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalHasValueDynamicChecks
  - name: (
  - name: )
- uid: NitroxModel.DataStructures.Util.Optional`1.HasValue
  commentId: P:NitroxModel.DataStructures.Util.Optional`1.HasValue
  href: NitroxModel.DataStructures.Util.Optional-1.HasValue.html#NitroxModel_DataStructures_Util_Optional_1_HasValue
  name: HasValue
  nameWithType: Optional<T>.HasValue
  fullName: NitroxModel.DataStructures.Util.Optional<T>.HasValue
  nameWithType.vb: Optional(Of T).HasValue
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).HasValue
- uid: NitroxModel.DataStructures.Util.OptionalTest.Init*
  commentId: Overload:NitroxModel.DataStructures.Util.OptionalTest.Init
  href: NitroxModel.DataStructures.Util.OptionalTest.Init.html#NitroxModel_DataStructures_Util_OptionalTest_Init
  name: Init
  nameWithType: OptionalTest.Init
  fullName: NitroxModel.DataStructures.Util.OptionalTest.Init
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalGet*
  commentId: Overload:NitroxModel.DataStructures.Util.OptionalTest.OptionalGet
  href: NitroxModel.DataStructures.Util.OptionalTest.OptionalGet.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalGet
  name: OptionalGet
  nameWithType: OptionalTest.OptionalGet
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalGet
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent*
  commentId: Overload:NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent
  href: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalIsPresent
  name: OptionalIsPresent
  nameWithType: OptionalTest.OptionalIsPresent
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent*
  commentId: Overload:NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent
  href: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalIsNotPresent
  name: OptionalIsNotPresent
  nameWithType: OptionalTest.OptionalIsNotPresent
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue*
  commentId: Overload:NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue
  href: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalOrElseValidValue
  name: OptionalOrElseValidValue
  nameWithType: OptionalTest.OptionalOrElseValidValue
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue*
  commentId: Overload:NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue
  href: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalOrElseNoValue
  name: OptionalOrElseNoValue
  nameWithType: OptionalTest.OptionalOrElseNoValue
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty*
  commentId: Overload:NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty
  href: NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalEmpty
  name: OptionalEmpty
  nameWithType: OptionalTest.OptionalEmpty
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull*
  commentId: Overload:NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull
  href: NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalSetValueNull
  name: OptionalSetValueNull
  nameWithType: OptionalTest.OptionalSetValueNull
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull
- uid: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks*
  commentId: Overload:NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks
  href: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks.html#NitroxModel_DataStructures_Util_OptionalTest_OptionalHasValueDynamicChecks
  name: OptionalHasValueDynamicChecks
  nameWithType: OptionalTest.OptionalHasValueDynamicChecks
  fullName: NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks
memberLayout: SeparatePages
