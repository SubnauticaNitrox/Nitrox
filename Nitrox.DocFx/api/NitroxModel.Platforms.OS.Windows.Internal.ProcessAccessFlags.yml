### YamlMime:ManagedReference
items:
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  commentId: T:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  id: ProcessAccessFlags
  parent: NitroxModel.Platforms.OS.Windows.Internal
  children:
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.ALL
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.CREATE_PROCESS
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.CREATE_THREAD
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.DUPLICATE_HANDLE
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.QUERY_INFORMATION
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.QUERY_LIMITED_INFORMATION
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SET_INFORMATION
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SET_QUOTA
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SYNCHRONIZE
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.TERMINATE
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_OPERATION
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_READ
  - NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_WRITE
  langs:
  - csharp
  - vb
  name: ProcessAccessFlags
  nameWithType: ProcessAccessFlags
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  type: Enum
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ProcessAccessFlags
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 4
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: >-
      [Flags]

      public enum ProcessAccessFlags : uint
    content.vb: >-
      <Flags>

      Public Enum ProcessAccessFlags As UInteger
  extensionMethods:
  - System.Enum.NitroxModel.Extensions.GetAttribute``1
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.ALL
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.ALL
  id: ALL
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: ALL
  nameWithType: ProcessAccessFlags.ALL
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.ALL
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ALL
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 7
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: ALL = 2035711
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.TERMINATE
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.TERMINATE
  id: TERMINATE
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: TERMINATE
  nameWithType: ProcessAccessFlags.TERMINATE
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.TERMINATE
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: TERMINATE
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 8
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: TERMINATE = 1
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.CREATE_THREAD
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.CREATE_THREAD
  id: CREATE_THREAD
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: CREATE_THREAD
  nameWithType: ProcessAccessFlags.CREATE_THREAD
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.CREATE_THREAD
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: CREATE_THREAD
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 9
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: CREATE_THREAD = 2
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_OPERATION
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_OPERATION
  id: VIRTUAL_MEMORY_OPERATION
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: VIRTUAL_MEMORY_OPERATION
  nameWithType: ProcessAccessFlags.VIRTUAL_MEMORY_OPERATION
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_OPERATION
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: VIRTUAL_MEMORY_OPERATION
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 10
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: VIRTUAL_MEMORY_OPERATION = 8
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_READ
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_READ
  id: VIRTUAL_MEMORY_READ
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: VIRTUAL_MEMORY_READ
  nameWithType: ProcessAccessFlags.VIRTUAL_MEMORY_READ
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_READ
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: VIRTUAL_MEMORY_READ
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 11
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: VIRTUAL_MEMORY_READ = 16
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_WRITE
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_WRITE
  id: VIRTUAL_MEMORY_WRITE
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: VIRTUAL_MEMORY_WRITE
  nameWithType: ProcessAccessFlags.VIRTUAL_MEMORY_WRITE
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.VIRTUAL_MEMORY_WRITE
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: VIRTUAL_MEMORY_WRITE
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 12
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: VIRTUAL_MEMORY_WRITE = 32
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.DUPLICATE_HANDLE
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.DUPLICATE_HANDLE
  id: DUPLICATE_HANDLE
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: DUPLICATE_HANDLE
  nameWithType: ProcessAccessFlags.DUPLICATE_HANDLE
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.DUPLICATE_HANDLE
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: DUPLICATE_HANDLE
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 13
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: DUPLICATE_HANDLE = 64
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.CREATE_PROCESS
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.CREATE_PROCESS
  id: CREATE_PROCESS
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: CREATE_PROCESS
  nameWithType: ProcessAccessFlags.CREATE_PROCESS
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.CREATE_PROCESS
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: CREATE_PROCESS
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 14
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: CREATE_PROCESS = 128
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SET_QUOTA
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SET_QUOTA
  id: SET_QUOTA
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: SET_QUOTA
  nameWithType: ProcessAccessFlags.SET_QUOTA
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SET_QUOTA
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: SET_QUOTA
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 15
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: SET_QUOTA = 256
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SET_INFORMATION
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SET_INFORMATION
  id: SET_INFORMATION
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: SET_INFORMATION
  nameWithType: ProcessAccessFlags.SET_INFORMATION
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SET_INFORMATION
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: SET_INFORMATION
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 16
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: SET_INFORMATION = 512
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.QUERY_INFORMATION
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.QUERY_INFORMATION
  id: QUERY_INFORMATION
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: QUERY_INFORMATION
  nameWithType: ProcessAccessFlags.QUERY_INFORMATION
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.QUERY_INFORMATION
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: QUERY_INFORMATION
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 17
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: QUERY_INFORMATION = 1024
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.QUERY_LIMITED_INFORMATION
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.QUERY_LIMITED_INFORMATION
  id: QUERY_LIMITED_INFORMATION
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: QUERY_LIMITED_INFORMATION
  nameWithType: ProcessAccessFlags.QUERY_LIMITED_INFORMATION
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.QUERY_LIMITED_INFORMATION
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: QUERY_LIMITED_INFORMATION
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 18
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: QUERY_LIMITED_INFORMATION = 4096
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SYNCHRONIZE
  commentId: F:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SYNCHRONIZE
  id: SYNCHRONIZE
  parent: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: SYNCHRONIZE
  nameWithType: ProcessAccessFlags.SYNCHRONIZE
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.SYNCHRONIZE
  type: Field
  source:
    remote:
      path: NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: SYNCHRONIZE
    path: ../NitroxModel/Platforms/OS/Windows/Internal/ProcessAccessFlags.cs
    startLine: 19
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Windows.Internal
  syntax:
    content: SYNCHRONIZE = 1048576
    return:
      type: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
references:
- uid: NitroxModel.Platforms.OS.Windows.Internal
  commentId: N:NitroxModel.Platforms.OS.Windows.Internal
  href: NitroxModel.html
  name: NitroxModel.Platforms.OS.Windows.Internal
  nameWithType: NitroxModel.Platforms.OS.Windows.Internal
  fullName: NitroxModel.Platforms.OS.Windows.Internal
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.Platforms
    name: Platforms
    href: NitroxModel.Platforms.html
  - name: .
  - uid: NitroxModel.Platforms.OS
    name: OS
    href: NitroxModel.Platforms.OS.html
  - name: .
  - uid: NitroxModel.Platforms.OS.Windows
    name: Windows
    href: NitroxModel.Platforms.OS.Windows.html
  - name: .
  - uid: NitroxModel.Platforms.OS.Windows.Internal
    name: Internal
    href: NitroxModel.Platforms.OS.Windows.Internal.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.Platforms
    name: Platforms
    href: NitroxModel.Platforms.html
  - name: .
  - uid: NitroxModel.Platforms.OS
    name: OS
    href: NitroxModel.Platforms.OS.html
  - name: .
  - uid: NitroxModel.Platforms.OS.Windows
    name: Windows
    href: NitroxModel.Platforms.OS.Windows.html
  - name: .
  - uid: NitroxModel.Platforms.OS.Windows.Internal
    name: Internal
    href: NitroxModel.Platforms.OS.Windows.Internal.html
- uid: System.Enum.NitroxModel.Extensions.GetAttribute``1
  commentId: M:NitroxModel.Extensions.GetAttribute``1(System.Enum)
  parent: NitroxModel.Extensions
  definition: NitroxModel.Extensions.GetAttribute``1(System.Enum)
  href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  name: GetAttribute<TAttribute>(Enum)
  nameWithType: Extensions.GetAttribute<TAttribute>(Enum)
  fullName: NitroxModel.Extensions.GetAttribute<TAttribute>(System.Enum)
  nameWithType.vb: Extensions.GetAttribute(Of TAttribute)(Enum)
  fullName.vb: NitroxModel.Extensions.GetAttribute(Of TAttribute)(System.Enum)
  name.vb: GetAttribute(Of TAttribute)(Enum)
  spec.csharp:
  - uid: NitroxModel.Extensions.GetAttribute``1(System.Enum)
    name: GetAttribute
    href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  - name: <
  - name: TAttribute
  - name: '>'
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
  spec.vb:
  - uid: NitroxModel.Extensions.GetAttribute``1(System.Enum)
    name: GetAttribute
    href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  - name: (
  - name: Of
  - name: " "
  - name: TAttribute
  - name: )
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
- uid: NitroxModel.Extensions.GetAttribute``1(System.Enum)
  commentId: M:NitroxModel.Extensions.GetAttribute``1(System.Enum)
  isExternal: true
  href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  name: GetAttribute<TAttribute>(Enum)
  nameWithType: Extensions.GetAttribute<TAttribute>(Enum)
  fullName: NitroxModel.Extensions.GetAttribute<TAttribute>(System.Enum)
  nameWithType.vb: Extensions.GetAttribute(Of TAttribute)(Enum)
  fullName.vb: NitroxModel.Extensions.GetAttribute(Of TAttribute)(System.Enum)
  name.vb: GetAttribute(Of TAttribute)(Enum)
  spec.csharp:
  - uid: NitroxModel.Extensions.GetAttribute``1(System.Enum)
    name: GetAttribute
    href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  - name: <
  - name: TAttribute
  - name: '>'
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
  spec.vb:
  - uid: NitroxModel.Extensions.GetAttribute``1(System.Enum)
    name: GetAttribute
    href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  - name: (
  - name: Of
  - name: " "
  - name: TAttribute
  - name: )
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
- uid: NitroxModel.Extensions
  commentId: T:NitroxModel.Extensions
  parent: NitroxModel
  href: NitroxModel.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: NitroxModel.Extensions
- uid: NitroxModel
  commentId: N:NitroxModel
  href: NitroxModel.html
  name: NitroxModel
  nameWithType: NitroxModel
  fullName: NitroxModel
- uid: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  commentId: T:NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
  parent: NitroxModel.Platforms.OS.Windows.Internal
  href: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.html
  name: ProcessAccessFlags
  nameWithType: ProcessAccessFlags
  fullName: NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags
memberLayout: SeparatePages
