### YamlMime:ManagedReference
items:
- uid: NitroxModel.Core.NitroxServiceLocator
  commentId: T:NitroxModel.Core.NitroxServiceLocator
  id: NitroxServiceLocator
  parent: NitroxModel.Core
  children:
  - NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope
  - NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope
  - NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer(NitroxModel.Core.IAutoFacRegistrar[])
  - NitroxModel.Core.NitroxServiceLocator.LifetimeScopeEnded
  - NitroxModel.Core.NitroxServiceLocator.LocateOptionalService(System.Type)
  - NitroxModel.Core.NitroxServiceLocator.LocateOptionalService``1
  - NitroxModel.Core.NitroxServiceLocator.LocateService(System.Type)
  - NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime``1
  - NitroxModel.Core.NitroxServiceLocator.LocateService``1
  langs:
  - csharp
  - vb
  name: NitroxServiceLocator
  nameWithType: NitroxServiceLocator
  fullName: NitroxModel.Core.NitroxServiceLocator
  type: Class
  source:
    remote:
      path: NitroxModel/Core/NitroxServiceLocator.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: NitroxServiceLocator
    path: ../NitroxModel/Core/NitroxServiceLocator.cs
    startLine: 10
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Core
  summary: Dependency Injection (DI) class for resolving types as defined in the DI registrar, implementing <xref href="NitroxModel.Core.IAutoFacRegistrar" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class NitroxServiceLocator
    content.vb: Public Module NitroxServiceLocator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: NitroxModel.Core.NitroxServiceLocator.LifetimeScopeEnded
  commentId: E:NitroxModel.Core.NitroxServiceLocator.LifetimeScopeEnded
  id: LifetimeScopeEnded
  parent: NitroxModel.Core.NitroxServiceLocator
  langs:
  - csharp
  - vb
  name: LifetimeScopeEnded
  nameWithType: NitroxServiceLocator.LifetimeScopeEnded
  fullName: NitroxModel.Core.NitroxServiceLocator.LifetimeScopeEnded
  type: Event
  source:
    remote:
      path: NitroxModel/Core/NitroxServiceLocator.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: LifetimeScopeEnded
    path: ../NitroxModel/Core/NitroxServiceLocator.cs
    startLine: 14
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Core
  syntax:
    content: public static event EventHandler LifetimeScopeEnded
    return:
      type: System.EventHandler
    content.vb: Public Shared Event LifetimeScopeEnded As EventHandler
- uid: NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer(NitroxModel.Core.IAutoFacRegistrar[])
  commentId: M:NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer(NitroxModel.Core.IAutoFacRegistrar[])
  id: InitializeDependencyContainer(NitroxModel.Core.IAutoFacRegistrar[])
  parent: NitroxModel.Core.NitroxServiceLocator
  langs:
  - csharp
  - vb
  name: InitializeDependencyContainer(params IAutoFacRegistrar[])
  nameWithType: NitroxServiceLocator.InitializeDependencyContainer(params IAutoFacRegistrar[])
  fullName: NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer(params NitroxModel.Core.IAutoFacRegistrar[])
  type: Method
  source:
    remote:
      path: NitroxModel/Core/NitroxServiceLocator.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: InitializeDependencyContainer
    path: ../NitroxModel/Core/NitroxServiceLocator.cs
    startLine: 16
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Core
  syntax:
    content: public static void InitializeDependencyContainer(params IAutoFacRegistrar[] registrars)
    parameters:
    - id: registrars
      type: NitroxModel.Core.IAutoFacRegistrar[]
    content.vb: Public Shared Sub InitializeDependencyContainer(ParamArray registrars As IAutoFacRegistrar())
  overload: NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer*
  nameWithType.vb: NitroxServiceLocator.InitializeDependencyContainer(ParamArray IAutoFacRegistrar())
  fullName.vb: NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer(ParamArray NitroxModel.Core.IAutoFacRegistrar())
  name.vb: InitializeDependencyContainer(ParamArray IAutoFacRegistrar())
- uid: NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope
  commentId: M:NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope
  id: BeginNewLifetimeScope
  parent: NitroxModel.Core.NitroxServiceLocator
  langs:
  - csharp
  - vb
  name: BeginNewLifetimeScope()
  nameWithType: NitroxServiceLocator.BeginNewLifetimeScope()
  fullName: NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope()
  type: Method
  source:
    remote:
      path: NitroxModel/Core/NitroxServiceLocator.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: BeginNewLifetimeScope
    path: ../NitroxModel/Core/NitroxServiceLocator.cs
    startLine: 37
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Core
  summary: >-
    Starts a new life time scope. A single instance per registered service will be returned while this scope is active.

    Services can scoped to this life time using <xref href="Autofac.Builder.IRegistrationBuilder%603.InstancePerLifetimeScope" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    A life time scope should be created when the game leaves the main menu and loads a level with multiplayer.

    It should end when the game process unloads the level (e.g. player returns to the main menu).
  example: []
  syntax:
    content: public static void BeginNewLifetimeScope()
    content.vb: Public Shared Sub BeginNewLifetimeScope()
  overload: NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope*
- uid: NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope
  commentId: M:NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope
  id: EndCurrentLifetimeScope
  parent: NitroxModel.Core.NitroxServiceLocator
  langs:
  - csharp
  - vb
  name: EndCurrentLifetimeScope()
  nameWithType: NitroxServiceLocator.EndCurrentLifetimeScope()
  fullName: NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope()
  type: Method
  source:
    remote:
      path: NitroxModel/Core/NitroxServiceLocator.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: EndCurrentLifetimeScope
    path: ../NitroxModel/Core/NitroxServiceLocator.cs
    startLine: 51
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Core
  summary: Ends the life time scoped services that were registered using <xref href="Autofac.Builder.IRegistrationBuilder%603.InstancePerLifetimeScope" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void EndCurrentLifetimeScope()
    content.vb: Public Shared Sub EndCurrentLifetimeScope()
  overload: NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope*
- uid: NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime``1
  commentId: M:NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime``1
  id: LocateServicePreLifetime``1
  parent: NitroxModel.Core.NitroxServiceLocator
  langs:
  - csharp
  - vb
  name: LocateServicePreLifetime<T>()
  nameWithType: NitroxServiceLocator.LocateServicePreLifetime<T>()
  fullName: NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime<T>()
  type: Method
  source:
    remote:
      path: NitroxModel/Core/NitroxServiceLocator.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: LocateServicePreLifetime
    path: ../NitroxModel/Core/NitroxServiceLocator.cs
    startLine: 60
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Core
  summary: Only locates the service in the container, pre-lifetime scope.
  example: []
  syntax:
    content: public static T LocateServicePreLifetime<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function LocateServicePreLifetime(Of T)() As T
  overload: NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime*
  nameWithType.vb: NitroxServiceLocator.LocateServicePreLifetime(Of T)()
  fullName.vb: NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime(Of T)()
  name.vb: LocateServicePreLifetime(Of T)()
- uid: NitroxModel.Core.NitroxServiceLocator.LocateService``1
  commentId: M:NitroxModel.Core.NitroxServiceLocator.LocateService``1
  id: LocateService``1
  parent: NitroxModel.Core.NitroxServiceLocator
  langs:
  - csharp
  - vb
  name: LocateService<T>()
  nameWithType: NitroxServiceLocator.LocateService<T>()
  fullName: NitroxModel.Core.NitroxServiceLocator.LocateService<T>()
  type: Method
  source:
    remote:
      path: NitroxModel/Core/NitroxServiceLocator.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: LocateService
    path: ../NitroxModel/Core/NitroxServiceLocator.cs
    startLine: 72
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Core
  summary: Retrieves a service which was registered into the DI container. Creates a new instance if required.<br />
  remarks: >-
    This method should not be used if the constructor is available for defining a parameter where its type is the service to inject.

    For Unity monobehaviours the constructor is used by Unity and cannot be used to inject services. In this case, use this method.
  example: []
  syntax:
    content: 'public static T LocateService<T>() where T : class'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function LocateService(Of T As Class)() As T
  overload: NitroxModel.Core.NitroxServiceLocator.LocateService*
  nameWithType.vb: NitroxServiceLocator.LocateService(Of T)()
  fullName.vb: NitroxModel.Core.NitroxServiceLocator.LocateService(Of T)()
  name.vb: LocateService(Of T)()
- uid: NitroxModel.Core.NitroxServiceLocator.LocateService(System.Type)
  commentId: M:NitroxModel.Core.NitroxServiceLocator.LocateService(System.Type)
  id: LocateService(System.Type)
  parent: NitroxModel.Core.NitroxServiceLocator
  langs:
  - csharp
  - vb
  name: LocateService(Type)
  nameWithType: NitroxServiceLocator.LocateService(Type)
  fullName: NitroxModel.Core.NitroxServiceLocator.LocateService(System.Type)
  type: Method
  source:
    remote:
      path: NitroxModel/Core/NitroxServiceLocator.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: LocateService
    path: ../NitroxModel/Core/NitroxServiceLocator.cs
    startLine: 82
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Core
  summary: Non-generic alternative to <xref href="NitroxModel.Core.NitroxServiceLocator.LocateService%60%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static object LocateService(Type serviceType)
    parameters:
    - id: serviceType
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Shared Function LocateService(serviceType As Type) As Object
  overload: NitroxModel.Core.NitroxServiceLocator.LocateService*
- uid: NitroxModel.Core.NitroxServiceLocator.LocateOptionalService``1
  commentId: M:NitroxModel.Core.NitroxServiceLocator.LocateOptionalService``1
  id: LocateOptionalService``1
  parent: NitroxModel.Core.NitroxServiceLocator
  langs:
  - csharp
  - vb
  name: LocateOptionalService<T>()
  nameWithType: NitroxServiceLocator.LocateOptionalService<T>()
  fullName: NitroxModel.Core.NitroxServiceLocator.LocateOptionalService<T>()
  type: Method
  source:
    remote:
      path: NitroxModel/Core/NitroxServiceLocator.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: LocateOptionalService
    path: ../NitroxModel/Core/NitroxServiceLocator.cs
    startLine: 93
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Core
  summary: Tries to locate the service if it exists. Can return an <xref href="NitroxModel.DataStructures.Util.Optional%601" data-throw-if-not-resolved="false"></xref> without a value.
  example: []
  syntax:
    content: 'public static Optional<T> LocateOptionalService<T>() where T : class'
    typeParameters:
    - id: T
      description: Type of service to try to locate.
    return:
      type: NitroxModel.DataStructures.Util.Optional{{T}}
      description: Optional that might or might not hold the service instance.
    content.vb: Public Shared Function LocateOptionalService(Of T As Class)() As [Optional](Of T)
  overload: NitroxModel.Core.NitroxServiceLocator.LocateOptionalService*
  nameWithType.vb: NitroxServiceLocator.LocateOptionalService(Of T)()
  fullName.vb: NitroxModel.Core.NitroxServiceLocator.LocateOptionalService(Of T)()
  name.vb: LocateOptionalService(Of T)()
- uid: NitroxModel.Core.NitroxServiceLocator.LocateOptionalService(System.Type)
  commentId: M:NitroxModel.Core.NitroxServiceLocator.LocateOptionalService(System.Type)
  id: LocateOptionalService(System.Type)
  parent: NitroxModel.Core.NitroxServiceLocator
  langs:
  - csharp
  - vb
  name: LocateOptionalService(Type)
  nameWithType: NitroxServiceLocator.LocateOptionalService(Type)
  fullName: NitroxModel.Core.NitroxServiceLocator.LocateOptionalService(System.Type)
  type: Method
  source:
    remote:
      path: NitroxModel/Core/NitroxServiceLocator.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: LocateOptionalService
    path: ../NitroxModel/Core/NitroxServiceLocator.cs
    startLine: 104
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Core
  summary: Tries to locate the service if it exists. Can return an <xref href="NitroxModel.DataStructures.Util.Optional%601" data-throw-if-not-resolved="false"></xref> without a value.
  example: []
  syntax:
    content: public static Optional<object> LocateOptionalService(Type serviceType)
    parameters:
    - id: serviceType
      type: System.Type
      description: Type of service to try to locate.
    return:
      type: NitroxModel.DataStructures.Util.Optional{System.Object}
      description: Optional that might or might not hold the service instance.
    content.vb: Public Shared Function LocateOptionalService(serviceType As Type) As [Optional](Of Object)
  overload: NitroxModel.Core.NitroxServiceLocator.LocateOptionalService*
references:
- uid: NitroxModel.Core.IAutoFacRegistrar
  commentId: T:NitroxModel.Core.IAutoFacRegistrar
  parent: NitroxModel.Core
  href: NitroxModel.Core.IAutoFacRegistrar.html
  name: IAutoFacRegistrar
  nameWithType: IAutoFacRegistrar
  fullName: NitroxModel.Core.IAutoFacRegistrar
- uid: NitroxModel.Core
  commentId: N:NitroxModel.Core
  href: NitroxModel.html
  name: NitroxModel.Core
  nameWithType: NitroxModel.Core
  fullName: NitroxModel.Core
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.Core
    name: Core
    href: NitroxModel.Core.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.Core
    name: Core
    href: NitroxModel.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer*
  commentId: Overload:NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer
  href: NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer.html#NitroxModel_Core_NitroxServiceLocator_InitializeDependencyContainer_NitroxModel_Core_IAutoFacRegistrar___
  name: InitializeDependencyContainer
  nameWithType: NitroxServiceLocator.InitializeDependencyContainer
  fullName: NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer
- uid: NitroxModel.Core.IAutoFacRegistrar[]
  isExternal: true
  href: NitroxModel.Core.IAutoFacRegistrar.html
  name: IAutoFacRegistrar[]
  nameWithType: IAutoFacRegistrar[]
  fullName: NitroxModel.Core.IAutoFacRegistrar[]
  nameWithType.vb: IAutoFacRegistrar()
  fullName.vb: NitroxModel.Core.IAutoFacRegistrar()
  name.vb: IAutoFacRegistrar()
  spec.csharp:
  - uid: NitroxModel.Core.IAutoFacRegistrar
    name: IAutoFacRegistrar
    href: NitroxModel.Core.IAutoFacRegistrar.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: NitroxModel.Core.IAutoFacRegistrar
    name: IAutoFacRegistrar
    href: NitroxModel.Core.IAutoFacRegistrar.html
  - name: (
  - name: )
- uid: Autofac.Builder.IRegistrationBuilder`3.InstancePerLifetimeScope
  commentId: M:Autofac.Builder.IRegistrationBuilder`3.InstancePerLifetimeScope
  isExternal: true
  name: InstancePerLifetimeScope()
  nameWithType: IRegistrationBuilder<TLimit, TActivatorData, TRegistrationStyle>.InstancePerLifetimeScope()
  fullName: Autofac.Builder.IRegistrationBuilder<TLimit, TActivatorData, TRegistrationStyle>.InstancePerLifetimeScope()
  nameWithType.vb: IRegistrationBuilder(Of TLimit, TActivatorData, TRegistrationStyle).InstancePerLifetimeScope()
  fullName.vb: Autofac.Builder.IRegistrationBuilder(Of TLimit, TActivatorData, TRegistrationStyle).InstancePerLifetimeScope()
  spec.csharp:
  - uid: Autofac.Builder.IRegistrationBuilder`3.InstancePerLifetimeScope
    name: InstancePerLifetimeScope
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Autofac.Builder.IRegistrationBuilder`3.InstancePerLifetimeScope
    name: InstancePerLifetimeScope
    isExternal: true
  - name: (
  - name: )
- uid: NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope*
  commentId: Overload:NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope
  href: NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope.html#NitroxModel_Core_NitroxServiceLocator_BeginNewLifetimeScope
  name: BeginNewLifetimeScope
  nameWithType: NitroxServiceLocator.BeginNewLifetimeScope
  fullName: NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope
- uid: NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope*
  commentId: Overload:NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope
  href: NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope.html#NitroxModel_Core_NitroxServiceLocator_EndCurrentLifetimeScope
  name: EndCurrentLifetimeScope
  nameWithType: NitroxServiceLocator.EndCurrentLifetimeScope
  fullName: NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope
- uid: NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime*
  commentId: Overload:NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime
  href: NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime.html#NitroxModel_Core_NitroxServiceLocator_LocateServicePreLifetime__1
  name: LocateServicePreLifetime
  nameWithType: NitroxServiceLocator.LocateServicePreLifetime
  fullName: NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NitroxModel.Core.NitroxServiceLocator.LocateService*
  commentId: Overload:NitroxModel.Core.NitroxServiceLocator.LocateService
  href: NitroxModel.Core.NitroxServiceLocator.LocateService.html#NitroxModel_Core_NitroxServiceLocator_LocateService__1
  name: LocateService
  nameWithType: NitroxServiceLocator.LocateService
  fullName: NitroxModel.Core.NitroxServiceLocator.LocateService
- uid: NitroxModel.Core.NitroxServiceLocator.LocateService``1
  commentId: M:NitroxModel.Core.NitroxServiceLocator.LocateService``1
  href: NitroxModel.Core.NitroxServiceLocator.LocateService.html#NitroxModel_Core_NitroxServiceLocator_LocateService__1
  name: LocateService<T>()
  nameWithType: NitroxServiceLocator.LocateService<T>()
  fullName: NitroxModel.Core.NitroxServiceLocator.LocateService<T>()
  nameWithType.vb: NitroxServiceLocator.LocateService(Of T)()
  fullName.vb: NitroxModel.Core.NitroxServiceLocator.LocateService(Of T)()
  name.vb: LocateService(Of T)()
  spec.csharp:
  - uid: NitroxModel.Core.NitroxServiceLocator.LocateService``1
    name: LocateService
    href: NitroxModel.Core.NitroxServiceLocator.LocateService.html#NitroxModel_Core_NitroxServiceLocator_LocateService__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: NitroxModel.Core.NitroxServiceLocator.LocateService``1
    name: LocateService
    href: NitroxModel.Core.NitroxServiceLocator.LocateService.html#NitroxModel_Core_NitroxServiceLocator_LocateService__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: NitroxModel.DataStructures.Util.Optional`1
  commentId: T:NitroxModel.DataStructures.Util.Optional`1
  parent: NitroxModel.DataStructures.Util
  href: NitroxModel.DataStructures.Util.Optional-1.html
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: NitroxModel.DataStructures.Util.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.Core.NitroxServiceLocator.LocateOptionalService*
  commentId: Overload:NitroxModel.Core.NitroxServiceLocator.LocateOptionalService
  href: NitroxModel.Core.NitroxServiceLocator.LocateOptionalService.html#NitroxModel_Core_NitroxServiceLocator_LocateOptionalService__1
  name: LocateOptionalService
  nameWithType: NitroxServiceLocator.LocateOptionalService
  fullName: NitroxModel.Core.NitroxServiceLocator.LocateOptionalService
- uid: NitroxModel.DataStructures.Util.Optional{{T}}
  commentId: T:NitroxModel.DataStructures.Util.Optional{``0}
  parent: NitroxModel.DataStructures.Util
  definition: NitroxModel.DataStructures.Util.Optional`1
  href: NitroxModel.DataStructures.Util.Optional-1.html
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: NitroxModel.DataStructures.Util.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.Util
  commentId: N:NitroxModel.DataStructures.Util
  href: NitroxModel.html
  name: NitroxModel.DataStructures.Util
  nameWithType: NitroxModel.DataStructures.Util
  fullName: NitroxModel.DataStructures.Util
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.Util
    name: Util
    href: NitroxModel.DataStructures.Util.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.Util
    name: Util
    href: NitroxModel.DataStructures.Util.html
- uid: NitroxModel.DataStructures.Util.Optional{System.Object}
  commentId: T:NitroxModel.DataStructures.Util.Optional{System.Object}
  parent: NitroxModel.DataStructures.Util
  definition: NitroxModel.DataStructures.Util.Optional`1
  href: NitroxModel.DataStructures.Util.Optional-1.html
  name: Optional<object>
  nameWithType: Optional<object>
  fullName: NitroxModel.DataStructures.Util.Optional<object>
  nameWithType.vb: Optional(Of Object)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of Object)
  name.vb: Optional(Of Object)
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
memberLayout: SeparatePages
