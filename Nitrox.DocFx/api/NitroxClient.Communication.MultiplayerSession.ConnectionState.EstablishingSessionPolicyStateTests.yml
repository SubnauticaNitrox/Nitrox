### YamlMime:ManagedReference
items:
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  commentId: T:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  id: EstablishingSessionPolicyStateTests
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState
  children:
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword
  langs:
  - csharp
  - vb
  name: EstablishingSessionPolicyStateTests
  nameWithType: EstablishingSessionPolicyStateTests
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  type: Class
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: EstablishingSessionPolicyStateTests
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
    startLine: 11
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestClass]

      public class EstablishingSessionPolicyStateTests
    content.vb: >-
      <TestClass>

      Public Class EstablishingSessionPolicyStateTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState
  id: NegotiateShouldTransitionToAwaitingReservationCredentialsState
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  langs:
  - csharp
  - vb
  name: NegotiateShouldTransitionToAwaitingReservationCredentialsState()
  nameWithType: EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: NegotiateShouldTransitionToAwaitingReservationCredentialsState
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
    startLine: 14
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void NegotiateShouldTransitionToAwaitingReservationCredentialsState()
    content.vb: >-
      <TestMethod>

      Public Sub NegotiateShouldTransitionToAwaitingReservationCredentialsState()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword
  id: NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  langs:
  - csharp
  - vb
  name: NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword()
  nameWithType: EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
    startLine: 30
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword()
    content.vb: >-
      <TestMethod>

      Public Sub NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId
  id: NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  langs:
  - csharp
  - vb
  name: NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId()
  nameWithType: EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
    startLine: 46
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId()
    content.vb: >-
      <TestMethod>

      Public Sub NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull
  id: NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  langs:
  - csharp
  - vb
  name: NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull()
  nameWithType: EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
    startLine: 62
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull()
    content.vb: >-
      <TestMethod>

      Public Sub NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException
  id: JoinSessionShouldThrowInvalidOperationException
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  langs:
  - csharp
  - vb
  name: JoinSessionShouldThrowInvalidOperationException()
  nameWithType: EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: JoinSessionShouldThrowInvalidOperationException
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
    startLine: 78
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void JoinSessionShouldThrowInvalidOperationException()
    content.vb: >-
      <TestMethod>

      Public Sub JoinSessionShouldThrowInvalidOperationException()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient
  id: DisconnectShouldStopTheClient
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  langs:
  - csharp
  - vb
  name: DisconnectShouldStopTheClient()
  nameWithType: EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: DisconnectShouldStopTheClient
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
    startLine: 92
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void DisconnectShouldStopTheClient()
    content.vb: >-
      <TestMethod>

      Public Sub DisconnectShouldStopTheClient()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext
  id: DisconnectShouldResetTheConnectionContext
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  langs:
  - csharp
  - vb
  name: DisconnectShouldResetTheConnectionContext()
  nameWithType: EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: DisconnectShouldResetTheConnectionContext
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
    startLine: 109
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void DisconnectShouldResetTheConnectionContext()
    content.vb: >-
      <TestMethod>

      Public Sub DisconnectShouldResetTheConnectionContext()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState
  id: DisconnectShouldTransitionToDisconnectedState
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests
  langs:
  - csharp
  - vb
  name: DisconnectShouldTransitionToDisconnectedState()
  nameWithType: EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: DisconnectShouldTransitionToDisconnectedState
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/EstablishingSessionPolicyStateTests.cs
    startLine: 126
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void DisconnectShouldTransitionToDisconnectedState()
    content.vb: >-
      <TestMethod>

      Public Sub DisconnectShouldTransitionToDisconnectedState()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
references:
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState
  commentId: N:NitroxClient.Communication.MultiplayerSession.ConnectionState
  href: NitroxClient.html
  name: NitroxClient.Communication.MultiplayerSession.ConnectionState
  nameWithType: NitroxClient.Communication.MultiplayerSession.ConnectionState
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState
  spec.csharp:
  - uid: NitroxClient
    name: NitroxClient
    href: NitroxClient.html
  - name: .
  - uid: NitroxClient.Communication
    name: Communication
    href: NitroxClient.Communication.html
  - name: .
  - uid: NitroxClient.Communication.MultiplayerSession
    name: MultiplayerSession
    href: NitroxClient.Communication.MultiplayerSession.html
  - name: .
  - uid: NitroxClient.Communication.MultiplayerSession.ConnectionState
    name: ConnectionState
    href: NitroxClient.Communication.MultiplayerSession.ConnectionState.html
  spec.vb:
  - uid: NitroxClient
    name: NitroxClient
    href: NitroxClient.html
  - name: .
  - uid: NitroxClient.Communication
    name: Communication
    href: NitroxClient.Communication.html
  - name: .
  - uid: NitroxClient.Communication.MultiplayerSession
    name: MultiplayerSession
    href: NitroxClient.Communication.MultiplayerSession.html
  - name: .
  - uid: NitroxClient.Communication.MultiplayerSession.ConnectionState
    name: ConnectionState
    href: NitroxClient.Communication.MultiplayerSession.ConnectionState.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_EstablishingSessionPolicyStateTests_NegotiateShouldTransitionToAwaitingReservationCredentialsState
  name: NegotiateShouldTransitionToAwaitingReservationCredentialsState
  nameWithType: EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_EstablishingSessionPolicyStateTests_NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword
  name: NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword
  nameWithType: EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_EstablishingSessionPolicyStateTests_NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId
  name: NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId
  nameWithType: EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_EstablishingSessionPolicyStateTests_NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull
  name: NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull
  nameWithType: EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_EstablishingSessionPolicyStateTests_JoinSessionShouldThrowInvalidOperationException
  name: JoinSessionShouldThrowInvalidOperationException
  nameWithType: EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_EstablishingSessionPolicyStateTests_DisconnectShouldStopTheClient
  name: DisconnectShouldStopTheClient
  nameWithType: EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_EstablishingSessionPolicyStateTests_DisconnectShouldResetTheConnectionContext
  name: DisconnectShouldResetTheConnectionContext
  nameWithType: EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_EstablishingSessionPolicyStateTests_DisconnectShouldTransitionToDisconnectedState
  name: DisconnectShouldTransitionToDisconnectedState
  nameWithType: EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState
memberLayout: SeparatePages
