### YamlMime:ManagedReference
items:
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
  commentId: T:NitroxModel.DataStructures.GameLogic.NitroxTechType
  id: NitroxTechType
  parent: NitroxModel.DataStructures.GameLogic
  children:
  - NitroxModel.DataStructures.GameLogic.NitroxTechType.#ctor
  - NitroxModel.DataStructures.GameLogic.NitroxTechType.#ctor(System.String)
  - NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  - NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals(System.Object)
  - NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode
  - NitroxModel.DataStructures.GameLogic.NitroxTechType.Name
  - NitroxModel.DataStructures.GameLogic.NitroxTechType.None
  - NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString
  langs:
  - csharp
  - vb
  name: NitroxTechType
  nameWithType: NitroxTechType
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType
  type: Class
  source:
    remote:
      path: NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: NitroxTechType
    path: ../NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
    startLine: 13
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.GameLogic
  summary: TechType is the enum used in Subnautica for defining all the spawnable objects in the world. This includes food, enemies and bases.
  remarks: Shim tech type model to bridge the gap between original subnautica and BZ.
  example: []
  syntax:
    content: >-
      [Serializable]

      [DataContract]

      public class NitroxTechType : IEquatable<NitroxTechType>
    content.vb: >-
      <Serializable>

      <DataContract>

      Public Class NitroxTechType Implements IEquatable(Of NitroxTechType)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{NitroxModel.DataStructures.GameLogic.NitroxTechType}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.Name
  commentId: P:NitroxModel.DataStructures.GameLogic.NitroxTechType.Name
  id: Name
  parent: NitroxModel.DataStructures.GameLogic.NitroxTechType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NitroxTechType.Name
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.Name
  type: Property
  source:
    remote:
      path: NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Name
    path: ../NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
    startLine: 17
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.GameLogic
  syntax:
    content: >-
      [DataMember(Order = 1)]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Order:=1)>

      Public ReadOnly Property Name As String
  overload: NitroxModel.DataStructures.GameLogic.NitroxTechType.Name*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 1
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.#ctor
  commentId: M:NitroxModel.DataStructures.GameLogic.NitroxTechType.#ctor
  id: '#ctor'
  parent: NitroxModel.DataStructures.GameLogic.NitroxTechType
  langs:
  - csharp
  - vb
  name: NitroxTechType()
  nameWithType: NitroxTechType.NitroxTechType()
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.NitroxTechType()
  type: Constructor
  source:
    remote:
      path: NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: .ctor
    path: ../NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
    startLine: 20
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.GameLogic
  syntax:
    content: >-
      [IgnoreConstructor]

      protected NitroxTechType()
    content.vb: >-
      <IgnoreConstructor>

      Protected Sub New()
  overload: NitroxModel.DataStructures.GameLogic.NitroxTechType.#ctor*
  attributes:
  - type: BinaryPack.Attributes.IgnoreConstructorAttribute
    ctor: BinaryPack.Attributes.IgnoreConstructorAttribute.#ctor
    arguments: []
  nameWithType.vb: NitroxTechType.New()
  fullName.vb: NitroxModel.DataStructures.GameLogic.NitroxTechType.New()
  name.vb: New()
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.#ctor(System.String)
  commentId: M:NitroxModel.DataStructures.GameLogic.NitroxTechType.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: NitroxModel.DataStructures.GameLogic.NitroxTechType
  langs:
  - csharp
  - vb
  name: NitroxTechType(string)
  nameWithType: NitroxTechType.NitroxTechType(string)
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.NitroxTechType(string)
  type: Constructor
  source:
    remote:
      path: NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: .ctor
    path: ../NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
    startLine: 27
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.GameLogic
  syntax:
    content: public NitroxTechType(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: NitroxModel.DataStructures.GameLogic.NitroxTechType.#ctor*
  nameWithType.vb: NitroxTechType.New(String)
  fullName.vb: NitroxModel.DataStructures.GameLogic.NitroxTechType.New(String)
  name.vb: New(String)
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.None
  commentId: P:NitroxModel.DataStructures.GameLogic.NitroxTechType.None
  id: None
  parent: NitroxModel.DataStructures.GameLogic.NitroxTechType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: NitroxTechType.None
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.None
  type: Property
  source:
    remote:
      path: NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: None
    path: ../NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
    startLine: 32
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.GameLogic
  syntax:
    content: public static NitroxTechType None { get; }
    parameters: []
    return:
      type: NitroxModel.DataStructures.GameLogic.NitroxTechType
    content.vb: Public Shared ReadOnly Property None As NitroxTechType
  overload: NitroxModel.DataStructures.GameLogic.NitroxTechType.None*
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString
  commentId: M:NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString
  id: ToString
  parent: NitroxModel.DataStructures.GameLogic.NitroxTechType
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NitroxTechType.ToString()
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ToString
    path: ../NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
    startLine: 34
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.GameLogic
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString*
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals(System.Object)
  commentId: M:NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals(System.Object)
  id: Equals(System.Object)
  parent: NitroxModel.DataStructures.GameLogic.NitroxTechType
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: NitroxTechType.Equals(object)
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals(object)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Equals
    path: ../NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
    startLine: 39
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.GameLogic
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals*
  nameWithType.vb: NitroxTechType.Equals(Object)
  fullName.vb: NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals(Object)
  name.vb: Equals(Object)
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  commentId: M:NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  id: Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  parent: NitroxModel.DataStructures.GameLogic.NitroxTechType
  langs:
  - csharp
  - vb
  name: Equals(NitroxTechType)
  nameWithType: NitroxTechType.Equals(NitroxTechType)
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Equals
    path: ../NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
    startLine: 59
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.GameLogic
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(NitroxTechType other)
    parameters:
    - id: other
      type: NitroxModel.DataStructures.GameLogic.NitroxTechType
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As NitroxTechType) As Boolean
  overload: NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals*
  implements:
  - System.IEquatable{NitroxModel.DataStructures.GameLogic.NitroxTechType}.Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode
  commentId: M:NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode
  id: GetHashCode
  parent: NitroxModel.DataStructures.GameLogic.NitroxTechType
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: NitroxTechType.GetHashCode()
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetHashCode
    path: ../NitroxModel/DataStructures/GameLogic/NitroxTechType.cs
    startLine: 74
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.GameLogic
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode*
references:
- uid: NitroxModel.DataStructures.GameLogic
  commentId: N:NitroxModel.DataStructures.GameLogic
  href: NitroxModel.html
  name: NitroxModel.DataStructures.GameLogic
  nameWithType: NitroxModel.DataStructures.GameLogic
  fullName: NitroxModel.DataStructures.GameLogic
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.GameLogic
    name: GameLogic
    href: NitroxModel.DataStructures.GameLogic.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.GameLogic
    name: GameLogic
    href: NitroxModel.DataStructures.GameLogic.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{NitroxModel.DataStructures.GameLogic.NitroxTechType}
  commentId: T:System.IEquatable{NitroxModel.DataStructures.GameLogic.NitroxTechType}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<NitroxTechType>
  nameWithType: IEquatable<NitroxTechType>
  fullName: System.IEquatable<NitroxModel.DataStructures.GameLogic.NitroxTechType>
  nameWithType.vb: IEquatable(Of NitroxTechType)
  fullName.vb: System.IEquatable(Of NitroxModel.DataStructures.GameLogic.NitroxTechType)
  name.vb: IEquatable(Of NitroxTechType)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
    name: NitroxTechType
    href: NitroxModel.DataStructures.GameLogic.NitroxTechType.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
    name: NitroxTechType
    href: NitroxModel.DataStructures.GameLogic.NitroxTechType.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.Name*
  commentId: Overload:NitroxModel.DataStructures.GameLogic.NitroxTechType.Name
  href: NitroxModel.DataStructures.GameLogic.NitroxTechType.Name.html#NitroxModel_DataStructures_GameLogic_NitroxTechType_Name
  name: Name
  nameWithType: NitroxTechType.Name
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.#ctor*
  commentId: Overload:NitroxModel.DataStructures.GameLogic.NitroxTechType.#ctor
  href: NitroxModel.DataStructures.GameLogic.NitroxTechType.-ctor.html#NitroxModel_DataStructures_GameLogic_NitroxTechType__ctor
  name: NitroxTechType
  nameWithType: NitroxTechType.NitroxTechType
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.NitroxTechType
  nameWithType.vb: NitroxTechType.New
  fullName.vb: NitroxModel.DataStructures.GameLogic.NitroxTechType.New
  name.vb: New
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.None*
  commentId: Overload:NitroxModel.DataStructures.GameLogic.NitroxTechType.None
  href: NitroxModel.DataStructures.GameLogic.NitroxTechType.None.html#NitroxModel_DataStructures_GameLogic_NitroxTechType_None
  name: None
  nameWithType: NitroxTechType.None
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.None
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
  commentId: T:NitroxModel.DataStructures.GameLogic.NitroxTechType
  parent: NitroxModel.DataStructures.GameLogic
  href: NitroxModel.DataStructures.GameLogic.NitroxTechType.html
  name: NitroxTechType
  nameWithType: NitroxTechType
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString*
  commentId: Overload:NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString
  href: NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString.html#NitroxModel_DataStructures_GameLogic_NitroxTechType_ToString
  name: ToString
  nameWithType: NitroxTechType.ToString
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals*
  commentId: Overload:NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals
  href: NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals.html#NitroxModel_DataStructures_GameLogic_NitroxTechType_Equals_System_Object_
  name: Equals
  nameWithType: NitroxTechType.Equals
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{NitroxModel.DataStructures.GameLogic.NitroxTechType}.Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  commentId: M:System.IEquatable{NitroxModel.DataStructures.GameLogic.NitroxTechType}.Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  parent: System.IEquatable{NitroxModel.DataStructures.GameLogic.NitroxTechType}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(NitroxTechType)
  nameWithType: IEquatable<NitroxTechType>.Equals(NitroxTechType)
  fullName: System.IEquatable<NitroxModel.DataStructures.GameLogic.NitroxTechType>.Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  nameWithType.vb: IEquatable(Of NitroxTechType).Equals(NitroxTechType)
  fullName.vb: System.IEquatable(Of NitroxModel.DataStructures.GameLogic.NitroxTechType).Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  spec.csharp:
  - uid: System.IEquatable{NitroxModel.DataStructures.GameLogic.NitroxTechType}.Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
    name: NitroxTechType
    href: NitroxModel.DataStructures.GameLogic.NitroxTechType.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NitroxModel.DataStructures.GameLogic.NitroxTechType}.Equals(NitroxModel.DataStructures.GameLogic.NitroxTechType)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
    name: NitroxTechType
    href: NitroxModel.DataStructures.GameLogic.NitroxTechType.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode*
  commentId: Overload:NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode
  href: NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode.html#NitroxModel_DataStructures_GameLogic_NitroxTechType_GetHashCode
  name: GetHashCode
  nameWithType: NitroxTechType.GetHashCode
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
memberLayout: SeparatePages
