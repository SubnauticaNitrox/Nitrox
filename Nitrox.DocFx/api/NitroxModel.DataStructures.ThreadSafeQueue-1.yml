### YamlMime:ManagedReference
items:
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1
  commentId: T:NitroxModel.DataStructures.ThreadSafeQueue`1
  id: ThreadSafeQueue`1
  parent: NitroxModel.DataStructures
  children:
  - NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor
  - NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor(System.Collections.Generic.Queue{`0},System.Boolean)
  - NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor(System.Int32)
  - NitroxModel.DataStructures.ThreadSafeQueue`1.Clear
  - NitroxModel.DataStructures.ThreadSafeQueue`1.Clone
  - NitroxModel.DataStructures.ThreadSafeQueue`1.Contains(`0)
  - NitroxModel.DataStructures.ThreadSafeQueue`1.CopyTo(`0[],System.Int32)
  - NitroxModel.DataStructures.ThreadSafeQueue`1.Count
  - NitroxModel.DataStructures.ThreadSafeQueue`1.Dequeue
  - NitroxModel.DataStructures.ThreadSafeQueue`1.Enqueue(`0)
  - NitroxModel.DataStructures.ThreadSafeQueue`1.GetEnumerator
  - NitroxModel.DataStructures.ThreadSafeQueue`1.Peek
  - NitroxModel.DataStructures.ThreadSafeQueue`1.ToArray
  - NitroxModel.DataStructures.ThreadSafeQueue`1.TrimExcess
  langs:
  - csharp
  - vb
  name: ThreadSafeQueue<T>
  nameWithType: ThreadSafeQueue<T>
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>
  type: Class
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ThreadSafeQueue
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 8
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: >-
      [DataContract]

      [Serializable]

      public class ThreadSafeQueue<T> : IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable
    typeParameters:
    - id: T
    content.vb: >-
      <DataContract>

      <Serializable>

      Public Class ThreadSafeQueue(Of T) Implements IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Collections.Generic.IEnumerable{`0}.NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{{T}})
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: ThreadSafeQueue(Of T)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T)
  name.vb: ThreadSafeQueue(Of T)
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Count
  commentId: P:NitroxModel.DataStructures.ThreadSafeQueue`1.Count
  id: Count
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ThreadSafeQueue<T>.Count
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Count
  type: Property
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Count
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 21
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Gets the number of elements in the collection.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements in the collection.
    content.vb: Public ReadOnly Property Count As Integer
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.Count*
  implements:
  - System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  nameWithType.vb: ThreadSafeQueue(Of T).Count
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Count
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor
  id: '#ctor'
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: ThreadSafeQueue()
  nameWithType: ThreadSafeQueue<T>.ThreadSafeQueue()
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.ThreadSafeQueue()
  type: Constructor
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: .ctor
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 32
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public ThreadSafeQueue()
    content.vb: Public Sub New()
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor*
  nameWithType.vb: ThreadSafeQueue(Of T).New()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).New()
  name.vb: New()
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor(System.Int32)
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: ThreadSafeQueue(int)
  nameWithType: ThreadSafeQueue<T>.ThreadSafeQueue(int)
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.ThreadSafeQueue(int)
  type: Constructor
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: .ctor
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 37
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public ThreadSafeQueue(int initialCapacity)
    parameters:
    - id: initialCapacity
      type: System.Int32
    content.vb: Public Sub New(initialCapacity As Integer)
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor*
  nameWithType.vb: ThreadSafeQueue(Of T).New(Integer)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).New(Integer)
  name.vb: New(Integer)
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: ThreadSafeQueue(IEnumerable<T>)
  nameWithType: ThreadSafeQueue<T>.ThreadSafeQueue(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.ThreadSafeQueue(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: .ctor
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 42
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public ThreadSafeQueue(IEnumerable<T> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Sub New(values As IEnumerable(Of T))
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor*
  nameWithType.vb: ThreadSafeQueue(Of T).New(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).New(System.Collections.Generic.IEnumerable(Of T))
  name.vb: New(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor(System.Collections.Generic.Queue{`0},System.Boolean)
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor(System.Collections.Generic.Queue{`0},System.Boolean)
  id: '#ctor(System.Collections.Generic.Queue{`0},System.Boolean)'
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: ThreadSafeQueue(Queue<T>, bool)
  nameWithType: ThreadSafeQueue<T>.ThreadSafeQueue(Queue<T>, bool)
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.ThreadSafeQueue(System.Collections.Generic.Queue<T>, bool)
  type: Constructor
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: .ctor
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 47
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public ThreadSafeQueue(Queue<T> queue, bool createCopy = true)
    parameters:
    - id: queue
      type: System.Collections.Generic.Queue{{T}}
    - id: createCopy
      type: System.Boolean
    content.vb: Public Sub New(queue As Queue(Of T), createCopy As Boolean = True)
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor*
  nameWithType.vb: ThreadSafeQueue(Of T).New(Queue(Of T), Boolean)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).New(System.Collections.Generic.Queue(Of T), Boolean)
  name.vb: New(Queue(Of T), Boolean)
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Clear
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.Clear
  id: Clear
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ThreadSafeQueue<T>.Clear()
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Clear()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Clear
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 51
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.Clear*
  nameWithType.vb: ThreadSafeQueue(Of T).Clear()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Clear()
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Contains(`0)
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.Contains(`0)
  id: Contains(`0)
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: ThreadSafeQueue<T>.Contains(T)
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Contains(T)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Contains
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 59
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As T) As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.Contains*
  nameWithType.vb: ThreadSafeQueue(Of T).Contains(T)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Contains(T)
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.CopyTo(`0[],System.Int32)
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], int)
  nameWithType: ThreadSafeQueue<T>.CopyTo(T[], int)
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.CopyTo(T[], int)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: CopyTo
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 67
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.CopyTo*
  nameWithType.vb: ThreadSafeQueue(Of T).CopyTo(T(), Integer)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Dequeue
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.Dequeue
  id: Dequeue
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: Dequeue()
  nameWithType: ThreadSafeQueue<T>.Dequeue()
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Dequeue()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Dequeue
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 75
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public T Dequeue()
    return:
      type: '{T}'
    content.vb: Public Function Dequeue() As T
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.Dequeue*
  nameWithType.vb: ThreadSafeQueue(Of T).Dequeue()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Dequeue()
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Enqueue(`0)
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.Enqueue(`0)
  id: Enqueue(`0)
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: Enqueue(T)
  nameWithType: ThreadSafeQueue<T>.Enqueue(T)
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Enqueue(T)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Enqueue
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 83
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public void Enqueue(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Public Sub Enqueue(item As T)
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.Enqueue*
  nameWithType.vb: ThreadSafeQueue(Of T).Enqueue(T)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Enqueue(T)
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Peek
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.Peek
  id: Peek
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: ThreadSafeQueue<T>.Peek()
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Peek()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Peek
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 91
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public T Peek()
    return:
      type: '{T}'
    content.vb: Public Function Peek() As T
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.Peek*
  nameWithType.vb: ThreadSafeQueue(Of T).Peek()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Peek()
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.ToArray
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.ToArray
  id: ToArray
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: ThreadSafeQueue<T>.ToArray()
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.ToArray()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ToArray
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 99
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public T[] ToArray()
    return:
      type: '{T}[]'
    content.vb: Public Function ToArray() As T()
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.ToArray*
  nameWithType.vb: ThreadSafeQueue(Of T).ToArray()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).ToArray()
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.TrimExcess
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.TrimExcess
  id: TrimExcess
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: TrimExcess()
  nameWithType: ThreadSafeQueue<T>.TrimExcess()
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.TrimExcess()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: TrimExcess
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 107
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public void TrimExcess()
    content.vb: Public Sub TrimExcess()
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.TrimExcess*
  nameWithType.vb: ThreadSafeQueue(Of T).TrimExcess()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).TrimExcess()
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Clone
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.Clone
  id: Clone
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ThreadSafeQueue<T>.Clone()
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Clone()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Clone
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 115
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public IEnumerable<T> Clone()
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Function Clone() As IEnumerable(Of T)
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.Clone*
  nameWithType.vb: ThreadSafeQueue(Of T).Clone()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Clone()
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.GetEnumerator
  commentId: M:NitroxModel.DataStructures.ThreadSafeQueue`1.GetEnumerator
  id: GetEnumerator
  parent: NitroxModel.DataStructures.ThreadSafeQueue`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ThreadSafeQueue<T>.GetEnumerator()
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeQueue.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetEnumerator
    path: ../NitroxModel/DataStructures/ThreadSafeQueue.cs
    startLine: 128
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: NitroxModel.DataStructures.ThreadSafeQueue`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: ThreadSafeQueue(Of T).GetEnumerator()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).GetEnumerator()
references:
- uid: NitroxModel.DataStructures
  commentId: N:NitroxModel.DataStructures
  href: NitroxModel.html
  name: NitroxModel.DataStructures
  nameWithType: NitroxModel.DataStructures
  fullName: NitroxModel.DataStructures
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: NitroxModel.Extensions
  definition: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  name: SequenceEqualOrBothNull<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: Extensions.SequenceEqualOrBothNull<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: NitroxModel.Extensions.SequenceEqualOrBothNull<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.SequenceEqualOrBothNull(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: NitroxModel.Extensions.SequenceEqualOrBothNull(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: SequenceEqualOrBothNull(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})
    name: SequenceEqualOrBothNull
    href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})
    name: SequenceEqualOrBothNull
    href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  name: SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Extensions.SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: NitroxModel.Extensions.SequenceEqualOrBothNull<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  nameWithType.vb: Extensions.SequenceEqualOrBothNull(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName.vb: NitroxModel.Extensions.SequenceEqualOrBothNull(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SequenceEqualOrBothNull(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqualOrBothNull
    href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: )
  spec.vb:
  - uid: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqualOrBothNull
    href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: )
- uid: NitroxModel.Extensions
  commentId: T:NitroxModel.Extensions
  parent: NitroxModel
  href: NitroxModel.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: NitroxModel.Extensions
- uid: NitroxModel
  commentId: N:NitroxModel
  href: NitroxModel.html
  name: NitroxModel
  nameWithType: NitroxModel
  fullName: NitroxModel
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Count*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.Count
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.Count.html#NitroxModel_DataStructures_ThreadSafeQueue_1_Count
  name: Count
  nameWithType: ThreadSafeQueue<T>.Count
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Count
  nameWithType.vb: ThreadSafeQueue(Of T).Count
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Count
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{`0}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{{T}}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.#ctor
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.-ctor.html#NitroxModel_DataStructures_ThreadSafeQueue_1__ctor
  name: ThreadSafeQueue
  nameWithType: ThreadSafeQueue<T>.ThreadSafeQueue
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.ThreadSafeQueue
  nameWithType.vb: ThreadSafeQueue(Of T).New
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).New
  name.vb: New
- uid: System.Collections.Generic.Queue{{T}}
  commentId: T:System.Collections.Generic.Queue{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Queue`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  name: Queue<T>
  nameWithType: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  nameWithType.vb: Queue(Of T)
  fullName.vb: System.Collections.Generic.Queue(Of T)
  name.vb: Queue(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.Queue`1
  commentId: T:System.Collections.Generic.Queue`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  name: Queue<T>
  nameWithType: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  nameWithType.vb: Queue(Of T)
  fullName.vb: System.Collections.Generic.Queue(Of T)
  name.vb: Queue(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Clear*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.Clear
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.Clear.html#NitroxModel_DataStructures_ThreadSafeQueue_1_Clear
  name: Clear
  nameWithType: ThreadSafeQueue<T>.Clear
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Clear
  nameWithType.vb: ThreadSafeQueue(Of T).Clear
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Clear
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Contains*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.Contains
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.Contains.html#NitroxModel_DataStructures_ThreadSafeQueue_1_Contains__0_
  name: Contains
  nameWithType: ThreadSafeQueue<T>.Contains
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Contains
  nameWithType.vb: ThreadSafeQueue(Of T).Contains
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Contains
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.CopyTo*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.CopyTo
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.CopyTo.html#NitroxModel_DataStructures_ThreadSafeQueue_1_CopyTo__0___System_Int32_
  name: CopyTo
  nameWithType: ThreadSafeQueue<T>.CopyTo
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.CopyTo
  nameWithType.vb: ThreadSafeQueue(Of T).CopyTo
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).CopyTo
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Dequeue*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.Dequeue
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.Dequeue.html#NitroxModel_DataStructures_ThreadSafeQueue_1_Dequeue
  name: Dequeue
  nameWithType: ThreadSafeQueue<T>.Dequeue
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Dequeue
  nameWithType.vb: ThreadSafeQueue(Of T).Dequeue
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Dequeue
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Enqueue*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.Enqueue
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.Enqueue.html#NitroxModel_DataStructures_ThreadSafeQueue_1_Enqueue__0_
  name: Enqueue
  nameWithType: ThreadSafeQueue<T>.Enqueue
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Enqueue
  nameWithType.vb: ThreadSafeQueue(Of T).Enqueue
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Enqueue
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Peek*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.Peek
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.Peek.html#NitroxModel_DataStructures_ThreadSafeQueue_1_Peek
  name: Peek
  nameWithType: ThreadSafeQueue<T>.Peek
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Peek
  nameWithType.vb: ThreadSafeQueue(Of T).Peek
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Peek
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.ToArray*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.ToArray
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.ToArray.html#NitroxModel_DataStructures_ThreadSafeQueue_1_ToArray
  name: ToArray
  nameWithType: ThreadSafeQueue<T>.ToArray
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.ToArray
  nameWithType.vb: ThreadSafeQueue(Of T).ToArray
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).ToArray
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.TrimExcess*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.TrimExcess
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.TrimExcess.html#NitroxModel_DataStructures_ThreadSafeQueue_1_TrimExcess
  name: TrimExcess
  nameWithType: ThreadSafeQueue<T>.TrimExcess
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.TrimExcess
  nameWithType.vb: ThreadSafeQueue(Of T).TrimExcess
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).TrimExcess
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.Clone*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.Clone
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.Clone.html#NitroxModel_DataStructures_ThreadSafeQueue_1_Clone
  name: Clone
  nameWithType: ThreadSafeQueue<T>.Clone
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.Clone
  nameWithType.vb: ThreadSafeQueue(Of T).Clone
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).Clone
- uid: NitroxModel.DataStructures.ThreadSafeQueue`1.GetEnumerator*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeQueue`1.GetEnumerator
  href: NitroxModel.DataStructures.ThreadSafeQueue-1.GetEnumerator.html#NitroxModel_DataStructures_ThreadSafeQueue_1_GetEnumerator
  name: GetEnumerator
  nameWithType: ThreadSafeQueue<T>.GetEnumerator
  fullName: NitroxModel.DataStructures.ThreadSafeQueue<T>.GetEnumerator
  nameWithType.vb: ThreadSafeQueue(Of T).GetEnumerator
  fullName.vb: NitroxModel.DataStructures.ThreadSafeQueue(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
memberLayout: SeparatePages
