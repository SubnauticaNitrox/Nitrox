### YamlMime:ManagedReference
items:
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData
  commentId: T:NitroxServer.GameLogic.Unlockables.PDAStateData
  id: PDAStateData
  parent: NitroxServer.GameLogic.Unlockables
  children:
  - NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  - NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry(System.String)
  - NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType,System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.NitroxTechType})
  - NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry(NitroxModel.DataStructures.GameLogic.PDALogEntry)
  - NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment(NitroxModel.DataStructures.NitroxId)
  - NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes
  - NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries
  - NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData
  - NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes
  - NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog
  - NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete
  - NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments
  - NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial
  - NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress(NitroxModel.DataStructures.GameLogic.NitroxTechType,System.Int32,System.Boolean)
  langs:
  - csharp
  - vb
  name: PDAStateData
  nameWithType: PDAStateData
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData
  type: Class
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: PDAStateData
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 8
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  syntax:
    content: >-
      [DataContract]

      public class PDAStateData
    content.vb: >-
      <DataContract>

      Public Class PDAStateData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes
  commentId: P:NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes
  id: KnownTechTypes
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: KnownTechTypes
  nameWithType: PDAStateData.KnownTechTypes
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes
  type: Property
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: KnownTechTypes
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 15
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  summary: >-
    Gets or sets the KnownTech construct which powers the popup shown to the user when a new TechType is discovered ("New Creature Discovered!")

    The KnownTech construct uses both <xref href="NitroxModel.Packets.KnownTechEntryAdd.EntryCategory.KNOWN?text=KnownTech.knownTech" data-throw-if-not-resolved="false"></xref> and <xref href="NitroxModel.Packets.KnownTechEntryAdd.EntryCategory.ANALYZED?text=KnownTech.analyzedTech" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [DataMember(Order = 1)]

      public ThreadSafeList<NitroxTechType> KnownTechTypes { get; }
    parameters: []
    return:
      type: NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.NitroxTechType}
    content.vb: >-
      <DataMember(Order:=1)>

      Public ReadOnly Property KnownTechTypes As ThreadSafeList(Of NitroxTechType)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 1
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes
  commentId: P:NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes
  id: AnalyzedTechTypes
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: AnalyzedTechTypes
  nameWithType: PDAStateData.AnalyzedTechTypes
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes
  type: Property
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AnalyzedTechTypes
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 18
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  syntax:
    content: >-
      [DataMember(Order = 2)]

      public ThreadSafeList<NitroxTechType> AnalyzedTechTypes { get; }
    parameters: []
    return:
      type: NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.NitroxTechType}
    content.vb: >-
      <DataMember(Order:=2)>

      Public ReadOnly Property AnalyzedTechTypes As ThreadSafeList(Of NitroxTechType)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 2
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog
  commentId: P:NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog
  id: PdaLog
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: PdaLog
  nameWithType: PDAStateData.PdaLog
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog
  type: Property
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: PdaLog
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 24
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  summary: Gets or sets the log of story events present in the PDA
  example: []
  syntax:
    content: >-
      [DataMember(Order = 3)]

      public ThreadSafeList<PDALogEntry> PdaLog { get; }
    parameters: []
    return:
      type: NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.PDALogEntry}
    content.vb: >-
      <DataMember(Order:=3)>

      Public ReadOnly Property PdaLog As ThreadSafeList(Of PDALogEntry)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 3
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries
  commentId: P:NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries
  id: EncyclopediaEntries
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: EncyclopediaEntries
  nameWithType: PDAStateData.EncyclopediaEntries
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries
  type: Property
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: EncyclopediaEntries
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 30
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  summary: Gets or sets the entries that show up the the PDA's Encyclopedia
  example: []
  syntax:
    content: >-
      [DataMember(Order = 4)]

      public ThreadSafeList<string> EncyclopediaEntries { get; }
    parameters: []
    return:
      type: NitroxModel.DataStructures.ThreadSafeList{System.String}
    content.vb: >-
      <DataMember(Order:=4)>

      Public ReadOnly Property EncyclopediaEntries As ThreadSafeList(Of String)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 4
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments
  commentId: P:NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments
  id: ScannerFragments
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: ScannerFragments
  nameWithType: PDAStateData.ScannerFragments
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments
  type: Property
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ScannerFragments
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 40
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  summary: The ids of the already scanned entities.
  remarks: >-
    In Subnautica, this is a Dictionary, but the value is not used, the only important thing is whether a key is stored or not.

    We can therefore use it as a list.
  example: []
  syntax:
    content: >-
      [DataMember(Order = 5)]

      public ThreadSafeSet<NitroxId> ScannerFragments { get; }
    parameters: []
    return:
      type: NitroxModel.DataStructures.ThreadSafeSet{NitroxModel.DataStructures.NitroxId}
    content.vb: >-
      <DataMember(Order:=5)>

      Public ReadOnly Property ScannerFragments As ThreadSafeSet(Of NitroxId)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 5
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial
  commentId: P:NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial
  id: ScannerPartial
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: ScannerPartial
  nameWithType: PDAStateData.ScannerPartial
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial
  type: Property
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ScannerPartial
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 46
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  summary: Partially unlocked PDA entries (e.g. fragments)
  example: []
  syntax:
    content: >-
      [DataMember(Order = 6)]

      public ThreadSafeList<PDAEntry> ScannerPartial { get; }
    parameters: []
    return:
      type: NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.PDAEntry}
    content.vb: >-
      <DataMember(Order:=6)>

      Public ReadOnly Property ScannerPartial As ThreadSafeList(Of PDAEntry)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 6
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete
  commentId: P:NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete
  id: ScannerComplete
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: ScannerComplete
  nameWithType: PDAStateData.ScannerComplete
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete
  type: Property
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ScannerComplete
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 52
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  summary: Fully unlocked PDA entries
  example: []
  syntax:
    content: >-
      [DataMember(Order = 7)]

      public ThreadSafeList<NitroxTechType> ScannerComplete { get; }
    parameters: []
    return:
      type: NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.NitroxTechType}
    content.vb: >-
      <DataMember(Order:=7)>

      Public ReadOnly Property ScannerComplete As ThreadSafeList(Of NitroxTechType)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 7
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType,System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.NitroxTechType})
  commentId: M:NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType,System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.NitroxTechType})
  id: AddKnownTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType,System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.NitroxTechType})
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: AddKnownTechType(NitroxTechType, List<NitroxTechType>)
  nameWithType: PDAStateData.AddKnownTechType(NitroxTechType, List<NitroxTechType>)
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType, System.Collections.Generic.List<NitroxModel.DataStructures.GameLogic.NitroxTechType>)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AddKnownTechType
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 55
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  syntax:
    content: public void AddKnownTechType(NitroxTechType techType, List<NitroxTechType> partialTechTypesToRemove)
    parameters:
    - id: techType
      type: NitroxModel.DataStructures.GameLogic.NitroxTechType
    - id: partialTechTypesToRemove
      type: System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.NitroxTechType}
    content.vb: Public Sub AddKnownTechType(techType As NitroxTechType, partialTechTypesToRemove As List(Of NitroxTechType))
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType*
  nameWithType.vb: PDAStateData.AddKnownTechType(NitroxTechType, List(Of NitroxTechType))
  fullName.vb: NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType, System.Collections.Generic.List(Of NitroxModel.DataStructures.GameLogic.NitroxTechType))
  name.vb: AddKnownTechType(NitroxTechType, List(Of NitroxTechType))
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  commentId: M:NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  id: AddAnalyzedTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: AddAnalyzedTechType(NitroxTechType)
  nameWithType: PDAStateData.AddAnalyzedTechType(NitroxTechType)
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType(NitroxModel.DataStructures.GameLogic.NitroxTechType)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AddAnalyzedTechType
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 68
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  syntax:
    content: public void AddAnalyzedTechType(NitroxTechType techType)
    parameters:
    - id: techType
      type: NitroxModel.DataStructures.GameLogic.NitroxTechType
    content.vb: Public Sub AddAnalyzedTechType(techType As NitroxTechType)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType*
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry(System.String)
  commentId: M:NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry(System.String)
  id: AddEncyclopediaEntry(System.String)
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: AddEncyclopediaEntry(string)
  nameWithType: PDAStateData.AddEncyclopediaEntry(string)
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry(string)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AddEncyclopediaEntry
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 80
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  syntax:
    content: public void AddEncyclopediaEntry(string entry)
    parameters:
    - id: entry
      type: System.String
    content.vb: Public Sub AddEncyclopediaEntry(entry As String)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry*
  nameWithType.vb: PDAStateData.AddEncyclopediaEntry(String)
  fullName.vb: NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry(String)
  name.vb: AddEncyclopediaEntry(String)
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry(NitroxModel.DataStructures.GameLogic.PDALogEntry)
  commentId: M:NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry(NitroxModel.DataStructures.GameLogic.PDALogEntry)
  id: AddPDALogEntry(NitroxModel.DataStructures.GameLogic.PDALogEntry)
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: AddPDALogEntry(PDALogEntry)
  nameWithType: PDAStateData.AddPDALogEntry(PDALogEntry)
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry(NitroxModel.DataStructures.GameLogic.PDALogEntry)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AddPDALogEntry
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 92
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  syntax:
    content: public void AddPDALogEntry(PDALogEntry entry)
    parameters:
    - id: entry
      type: NitroxModel.DataStructures.GameLogic.PDALogEntry
    content.vb: Public Sub AddPDALogEntry(entry As PDALogEntry)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry*
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment(NitroxModel.DataStructures.NitroxId)
  commentId: M:NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment(NitroxModel.DataStructures.NitroxId)
  id: AddScannerFragment(NitroxModel.DataStructures.NitroxId)
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: AddScannerFragment(NitroxId)
  nameWithType: PDAStateData.AddScannerFragment(NitroxId)
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment(NitroxModel.DataStructures.NitroxId)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AddScannerFragment
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 104
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  syntax:
    content: public void AddScannerFragment(NitroxId id)
    parameters:
    - id: id
      type: NitroxModel.DataStructures.NitroxId
    content.vb: Public Sub AddScannerFragment(id As NitroxId)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment*
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress(NitroxModel.DataStructures.GameLogic.NitroxTechType,System.Int32,System.Boolean)
  commentId: M:NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress(NitroxModel.DataStructures.GameLogic.NitroxTechType,System.Int32,System.Boolean)
  id: UpdateEntryUnlockedProgress(NitroxModel.DataStructures.GameLogic.NitroxTechType,System.Int32,System.Boolean)
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: UpdateEntryUnlockedProgress(NitroxTechType, int, bool)
  nameWithType: PDAStateData.UpdateEntryUnlockedProgress(NitroxTechType, int, bool)
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress(NitroxModel.DataStructures.GameLogic.NitroxTechType, int, bool)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: UpdateEntryUnlockedProgress
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 109
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  syntax:
    content: public void UpdateEntryUnlockedProgress(NitroxTechType techType, int unlockedAmount, bool fullyResearched)
    parameters:
    - id: techType
      type: NitroxModel.DataStructures.GameLogic.NitroxTechType
    - id: unlockedAmount
      type: System.Int32
    - id: fullyResearched
      type: System.Boolean
    content.vb: Public Sub UpdateEntryUnlockedProgress(techType As NitroxTechType, unlockedAmount As Integer, fullyResearched As Boolean)
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress*
  nameWithType.vb: PDAStateData.UpdateEntryUnlockedProgress(NitroxTechType, Integer, Boolean)
  fullName.vb: NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress(NitroxModel.DataStructures.GameLogic.NitroxTechType, Integer, Boolean)
  name.vb: UpdateEntryUnlockedProgress(NitroxTechType, Integer, Boolean)
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData
  commentId: M:NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData
  id: GetInitialPDAData
  parent: NitroxServer.GameLogic.Unlockables.PDAStateData
  langs:
  - csharp
  - vb
  name: GetInitialPDAData()
  nameWithType: PDAStateData.GetInitialPDAData()
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData()
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Unlockables/PDAStateData.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetInitialPDAData
    path: ../NitroxServer/GameLogic/Unlockables/PDAStateData.cs
    startLine: 133
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Unlockables
  syntax:
    content: public InitialPDAData GetInitialPDAData()
    return:
      type: NitroxModel.DataStructures.GameLogic.InitialPDAData
    content.vb: Public Function GetInitialPDAData() As InitialPDAData
  overload: NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData*
references:
- uid: NitroxServer.GameLogic.Unlockables
  commentId: N:NitroxServer.GameLogic.Unlockables
  href: NitroxServer.html
  name: NitroxServer.GameLogic.Unlockables
  nameWithType: NitroxServer.GameLogic.Unlockables
  fullName: NitroxServer.GameLogic.Unlockables
  spec.csharp:
  - uid: NitroxServer
    name: NitroxServer
    href: NitroxServer.html
  - name: .
  - uid: NitroxServer.GameLogic
    name: GameLogic
    href: NitroxServer.GameLogic.html
  - name: .
  - uid: NitroxServer.GameLogic.Unlockables
    name: Unlockables
    href: NitroxServer.GameLogic.Unlockables.html
  spec.vb:
  - uid: NitroxServer
    name: NitroxServer
    href: NitroxServer.html
  - name: .
  - uid: NitroxServer.GameLogic
    name: GameLogic
    href: NitroxServer.GameLogic.html
  - name: .
  - uid: NitroxServer.GameLogic.Unlockables
    name: Unlockables
    href: NitroxServer.GameLogic.Unlockables.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NitroxModel.Packets.KnownTechEntryAdd.EntryCategory.KNOWN
  commentId: F:NitroxModel.Packets.KnownTechEntryAdd.EntryCategory.KNOWN
  name: KNOWN
  nameWithType: KnownTechEntryAdd.EntryCategory.KNOWN
  fullName: NitroxModel.Packets.KnownTechEntryAdd.EntryCategory.KNOWN
- uid: NitroxModel.Packets.KnownTechEntryAdd.EntryCategory.ANALYZED
  commentId: F:NitroxModel.Packets.KnownTechEntryAdd.EntryCategory.ANALYZED
  name: ANALYZED
  nameWithType: KnownTechEntryAdd.EntryCategory.ANALYZED
  fullName: NitroxModel.Packets.KnownTechEntryAdd.EntryCategory.ANALYZED
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes.html#NitroxServer_GameLogic_Unlockables_PDAStateData_KnownTechTypes
  name: KnownTechTypes
  nameWithType: PDAStateData.KnownTechTypes
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes
- uid: NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.NitroxTechType}
  commentId: T:NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.NitroxTechType}
  parent: NitroxModel.DataStructures
  definition: NitroxModel.DataStructures.ThreadSafeList`1
  name: ThreadSafeList<NitroxTechType>
  nameWithType: ThreadSafeList<NitroxTechType>
  fullName: NitroxModel.DataStructures.ThreadSafeList<NitroxModel.DataStructures.GameLogic.NitroxTechType>
  nameWithType.vb: ThreadSafeList(Of NitroxTechType)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeList(Of NitroxModel.DataStructures.GameLogic.NitroxTechType)
  name.vb: ThreadSafeList(Of NitroxTechType)
  spec.csharp:
  - uid: NitroxModel.DataStructures.ThreadSafeList`1
    name: ThreadSafeList
  - name: <
  - uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
    name: NitroxTechType
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.ThreadSafeList`1
    name: ThreadSafeList
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
    name: NitroxTechType
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeList`1
  commentId: T:NitroxModel.DataStructures.ThreadSafeList`1
  href: NitroxModel.DataStructures.ThreadSafeList-1.html
  name: ThreadSafeList<T>
  nameWithType: ThreadSafeList<T>
  fullName: NitroxModel.DataStructures.ThreadSafeList<T>
  nameWithType.vb: ThreadSafeList(Of T)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeList(Of T)
  name.vb: ThreadSafeList(Of T)
  spec.csharp:
  - uid: NitroxModel.DataStructures.ThreadSafeList`1
    name: ThreadSafeList
    href: NitroxModel.DataStructures.ThreadSafeList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.ThreadSafeList`1
    name: ThreadSafeList
    href: NitroxModel.DataStructures.ThreadSafeList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures
  commentId: N:NitroxModel.DataStructures
  href: NitroxModel.html
  name: NitroxModel.DataStructures
  nameWithType: NitroxModel.DataStructures
  fullName: NitroxModel.DataStructures
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes.html#NitroxServer_GameLogic_Unlockables_PDAStateData_AnalyzedTechTypes
  name: AnalyzedTechTypes
  nameWithType: PDAStateData.AnalyzedTechTypes
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog.html#NitroxServer_GameLogic_Unlockables_PDAStateData_PdaLog
  name: PdaLog
  nameWithType: PDAStateData.PdaLog
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog
- uid: NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.PDALogEntry}
  commentId: T:NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.PDALogEntry}
  parent: NitroxModel.DataStructures
  definition: NitroxModel.DataStructures.ThreadSafeList`1
  name: ThreadSafeList<PDALogEntry>
  nameWithType: ThreadSafeList<PDALogEntry>
  fullName: NitroxModel.DataStructures.ThreadSafeList<NitroxModel.DataStructures.GameLogic.PDALogEntry>
  nameWithType.vb: ThreadSafeList(Of PDALogEntry)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeList(Of NitroxModel.DataStructures.GameLogic.PDALogEntry)
  name.vb: ThreadSafeList(Of PDALogEntry)
  spec.csharp:
  - uid: NitroxModel.DataStructures.ThreadSafeList`1
    name: ThreadSafeList
  - name: <
  - uid: NitroxModel.DataStructures.GameLogic.PDALogEntry
    name: PDALogEntry
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.ThreadSafeList`1
    name: ThreadSafeList
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.GameLogic.PDALogEntry
    name: PDALogEntry
  - name: )
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries.html#NitroxServer_GameLogic_Unlockables_PDAStateData_EncyclopediaEntries
  name: EncyclopediaEntries
  nameWithType: PDAStateData.EncyclopediaEntries
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries
- uid: NitroxModel.DataStructures.ThreadSafeList{System.String}
  commentId: T:NitroxModel.DataStructures.ThreadSafeList{System.String}
  parent: NitroxModel.DataStructures
  definition: NitroxModel.DataStructures.ThreadSafeList`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ThreadSafeList<string>
  nameWithType: ThreadSafeList<string>
  fullName: NitroxModel.DataStructures.ThreadSafeList<string>
  nameWithType.vb: ThreadSafeList(Of String)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeList(Of String)
  name.vb: ThreadSafeList(Of String)
  spec.csharp:
  - uid: NitroxModel.DataStructures.ThreadSafeList`1
    name: ThreadSafeList
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.ThreadSafeList`1
    name: ThreadSafeList
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments.html#NitroxServer_GameLogic_Unlockables_PDAStateData_ScannerFragments
  name: ScannerFragments
  nameWithType: PDAStateData.ScannerFragments
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments
- uid: NitroxModel.DataStructures.ThreadSafeSet{NitroxModel.DataStructures.NitroxId}
  commentId: T:NitroxModel.DataStructures.ThreadSafeSet{NitroxModel.DataStructures.NitroxId}
  parent: NitroxModel.DataStructures
  definition: NitroxModel.DataStructures.ThreadSafeSet`1
  name: ThreadSafeSet<NitroxId>
  nameWithType: ThreadSafeSet<NitroxId>
  fullName: NitroxModel.DataStructures.ThreadSafeSet<NitroxModel.DataStructures.NitroxId>
  nameWithType.vb: ThreadSafeSet(Of NitroxId)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of NitroxModel.DataStructures.NitroxId)
  name.vb: ThreadSafeSet(Of NitroxId)
  spec.csharp:
  - uid: NitroxModel.DataStructures.ThreadSafeSet`1
    name: ThreadSafeSet
  - name: <
  - uid: NitroxModel.DataStructures.NitroxId
    name: NitroxId
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.ThreadSafeSet`1
    name: ThreadSafeSet
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.NitroxId
    name: NitroxId
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1
  commentId: T:NitroxModel.DataStructures.ThreadSafeSet`1
  href: NitroxModel.DataStructures.ThreadSafeSet-1.html
  name: ThreadSafeSet<T>
  nameWithType: ThreadSafeSet<T>
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>
  nameWithType.vb: ThreadSafeSet(Of T)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T)
  name.vb: ThreadSafeSet(Of T)
  spec.csharp:
  - uid: NitroxModel.DataStructures.ThreadSafeSet`1
    name: ThreadSafeSet
    href: NitroxModel.DataStructures.ThreadSafeSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.ThreadSafeSet`1
    name: ThreadSafeSet
    href: NitroxModel.DataStructures.ThreadSafeSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial.html#NitroxServer_GameLogic_Unlockables_PDAStateData_ScannerPartial
  name: ScannerPartial
  nameWithType: PDAStateData.ScannerPartial
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial
- uid: NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.PDAEntry}
  commentId: T:NitroxModel.DataStructures.ThreadSafeList{NitroxModel.DataStructures.GameLogic.PDAEntry}
  parent: NitroxModel.DataStructures
  definition: NitroxModel.DataStructures.ThreadSafeList`1
  name: ThreadSafeList<PDAEntry>
  nameWithType: ThreadSafeList<PDAEntry>
  fullName: NitroxModel.DataStructures.ThreadSafeList<NitroxModel.DataStructures.GameLogic.PDAEntry>
  nameWithType.vb: ThreadSafeList(Of PDAEntry)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeList(Of NitroxModel.DataStructures.GameLogic.PDAEntry)
  name.vb: ThreadSafeList(Of PDAEntry)
  spec.csharp:
  - uid: NitroxModel.DataStructures.ThreadSafeList`1
    name: ThreadSafeList
  - name: <
  - uid: NitroxModel.DataStructures.GameLogic.PDAEntry
    name: PDAEntry
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.ThreadSafeList`1
    name: ThreadSafeList
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.GameLogic.PDAEntry
    name: PDAEntry
  - name: )
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete.html#NitroxServer_GameLogic_Unlockables_PDAStateData_ScannerComplete
  name: ScannerComplete
  nameWithType: PDAStateData.ScannerComplete
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType.html#NitroxServer_GameLogic_Unlockables_PDAStateData_AddKnownTechType_NitroxModel_DataStructures_GameLogic_NitroxTechType_System_Collections_Generic_List_NitroxModel_DataStructures_GameLogic_NitroxTechType__
  name: AddKnownTechType
  nameWithType: PDAStateData.AddKnownTechType
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType
- uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
  commentId: T:NitroxModel.DataStructures.GameLogic.NitroxTechType
  parent: NitroxModel.DataStructures.GameLogic
  href: NitroxModel.DataStructures.GameLogic.NitroxTechType.html
  name: NitroxTechType
  nameWithType: NitroxTechType
  fullName: NitroxModel.DataStructures.GameLogic.NitroxTechType
- uid: System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.NitroxTechType}
  commentId: T:System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.NitroxTechType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<NitroxTechType>
  nameWithType: List<NitroxTechType>
  fullName: System.Collections.Generic.List<NitroxModel.DataStructures.GameLogic.NitroxTechType>
  nameWithType.vb: List(Of NitroxTechType)
  fullName.vb: System.Collections.Generic.List(Of NitroxModel.DataStructures.GameLogic.NitroxTechType)
  name.vb: List(Of NitroxTechType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
    name: NitroxTechType
    href: NitroxModel.DataStructures.GameLogic.NitroxTechType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.GameLogic.NitroxTechType
    name: NitroxTechType
    href: NitroxModel.DataStructures.GameLogic.NitroxTechType.html
  - name: )
- uid: NitroxModel.DataStructures.GameLogic
  commentId: N:NitroxModel.DataStructures.GameLogic
  href: NitroxModel.html
  name: NitroxModel.DataStructures.GameLogic
  nameWithType: NitroxModel.DataStructures.GameLogic
  fullName: NitroxModel.DataStructures.GameLogic
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.GameLogic
    name: GameLogic
    href: NitroxModel.DataStructures.GameLogic.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.GameLogic
    name: GameLogic
    href: NitroxModel.DataStructures.GameLogic.html
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType.html#NitroxServer_GameLogic_Unlockables_PDAStateData_AddAnalyzedTechType_NitroxModel_DataStructures_GameLogic_NitroxTechType_
  name: AddAnalyzedTechType
  nameWithType: PDAStateData.AddAnalyzedTechType
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry.html#NitroxServer_GameLogic_Unlockables_PDAStateData_AddEncyclopediaEntry_System_String_
  name: AddEncyclopediaEntry
  nameWithType: PDAStateData.AddEncyclopediaEntry
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry.html#NitroxServer_GameLogic_Unlockables_PDAStateData_AddPDALogEntry_NitroxModel_DataStructures_GameLogic_PDALogEntry_
  name: AddPDALogEntry
  nameWithType: PDAStateData.AddPDALogEntry
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry
- uid: NitroxModel.DataStructures.GameLogic.PDALogEntry
  commentId: T:NitroxModel.DataStructures.GameLogic.PDALogEntry
  parent: NitroxModel.DataStructures.GameLogic
  href: NitroxModel.DataStructures.GameLogic.PDALogEntry.html
  name: PDALogEntry
  nameWithType: PDALogEntry
  fullName: NitroxModel.DataStructures.GameLogic.PDALogEntry
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment.html#NitroxServer_GameLogic_Unlockables_PDAStateData_AddScannerFragment_NitroxModel_DataStructures_NitroxId_
  name: AddScannerFragment
  nameWithType: PDAStateData.AddScannerFragment
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment
- uid: NitroxModel.DataStructures.NitroxId
  commentId: T:NitroxModel.DataStructures.NitroxId
  parent: NitroxModel.DataStructures
  href: NitroxModel.DataStructures.NitroxId.html
  name: NitroxId
  nameWithType: NitroxId
  fullName: NitroxModel.DataStructures.NitroxId
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress.html#NitroxServer_GameLogic_Unlockables_PDAStateData_UpdateEntryUnlockedProgress_NitroxModel_DataStructures_GameLogic_NitroxTechType_System_Int32_System_Boolean_
  name: UpdateEntryUnlockedProgress
  nameWithType: PDAStateData.UpdateEntryUnlockedProgress
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData*
  commentId: Overload:NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData
  href: NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData.html#NitroxServer_GameLogic_Unlockables_PDAStateData_GetInitialPDAData
  name: GetInitialPDAData
  nameWithType: PDAStateData.GetInitialPDAData
  fullName: NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData
- uid: NitroxModel.DataStructures.GameLogic.InitialPDAData
  commentId: T:NitroxModel.DataStructures.GameLogic.InitialPDAData
  parent: NitroxModel.DataStructures.GameLogic
  href: NitroxModel.DataStructures.GameLogic.InitialPDAData.html
  name: InitialPDAData
  nameWithType: InitialPDAData
  fullName: NitroxModel.DataStructures.GameLogic.InitialPDAData
memberLayout: SeparatePages
