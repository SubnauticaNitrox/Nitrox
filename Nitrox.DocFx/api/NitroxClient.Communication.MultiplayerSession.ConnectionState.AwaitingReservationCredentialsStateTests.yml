### YamlMime:ManagedReference
items:
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  commentId: T:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  id: AwaitingReservationCredentialsStateTests
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState
  children:
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull
  - NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState
  langs:
  - csharp
  - vb
  name: AwaitingReservationCredentialsStateTests
  nameWithType: AwaitingReservationCredentialsStateTests
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  type: Class
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AwaitingReservationCredentialsStateTests
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
    startLine: 11
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestClass]

      public class AwaitingReservationCredentialsStateTests
    content.vb: >-
      <TestClass>

      Public Class AwaitingReservationCredentialsStateTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest
  id: NegotiateShouldSendServerAuthorityReservationRequest
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  langs:
  - csharp
  - vb
  name: NegotiateShouldSendServerAuthorityReservationRequest()
  nameWithType: AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: NegotiateShouldSendServerAuthorityReservationRequest
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
    startLine: 14
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void NegotiateShouldSendServerAuthorityReservationRequest()
    content.vb: >-
      <TestMethod>

      Public Sub NegotiateShouldSendServerAuthorityReservationRequest()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState
  id: NegotiateShouldTransitionToAwaitingSessionReservationState
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  langs:
  - csharp
  - vb
  name: NegotiateShouldTransitionToAwaitingSessionReservationState()
  nameWithType: AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: NegotiateShouldTransitionToAwaitingSessionReservationState
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
    startLine: 35
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void NegotiateShouldTransitionToAwaitingSessionReservationState()
    content.vb: >-
      <TestMethod>

      Public Sub NegotiateShouldTransitionToAwaitingSessionReservationState()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull
  id: NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  langs:
  - csharp
  - vb
  name: NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull()
  nameWithType: AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
    startLine: 56
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull()
    content.vb: >-
      <TestMethod>

      Public Sub NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull
  id: NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  langs:
  - csharp
  - vb
  name: NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull()
  nameWithType: AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
    startLine: 76
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull()
    content.vb: >-
      <TestMethod>

      Public Sub NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException
  id: JoinSessionShouldThrowInvalidOperationException
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  langs:
  - csharp
  - vb
  name: JoinSessionShouldThrowInvalidOperationException()
  nameWithType: AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: JoinSessionShouldThrowInvalidOperationException
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
    startLine: 96
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void JoinSessionShouldThrowInvalidOperationException()
    content.vb: >-
      <TestMethod>

      Public Sub JoinSessionShouldThrowInvalidOperationException()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient
  id: DisconnectShouldStopTheClient
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  langs:
  - csharp
  - vb
  name: DisconnectShouldStopTheClient()
  nameWithType: AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: DisconnectShouldStopTheClient
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
    startLine: 110
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void DisconnectShouldStopTheClient()
    content.vb: >-
      <TestMethod>

      Public Sub DisconnectShouldStopTheClient()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext
  id: DisconnectShouldResetTheConnectionContext
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  langs:
  - csharp
  - vb
  name: DisconnectShouldResetTheConnectionContext()
  nameWithType: AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: DisconnectShouldResetTheConnectionContext
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
    startLine: 127
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void DisconnectShouldResetTheConnectionContext()
    content.vb: >-
      <TestMethod>

      Public Sub DisconnectShouldResetTheConnectionContext()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState
  commentId: M:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState
  id: DisconnectShouldTransitionToDisconnectedState
  parent: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests
  langs:
  - csharp
  - vb
  name: DisconnectShouldTransitionToDisconnectedState()
  nameWithType: AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState()
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState()
  type: Method
  source:
    remote:
      path: Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: DisconnectShouldTransitionToDisconnectedState
    path: ../Nitrox.Test/Client/Communication/MultiplayerSession/ConnectionState/ConnectionNegotiatingState/AwaitingReservationCredentialsStateTests.cs
    startLine: 144
  assemblies:
  - Nitrox.Test
  namespace: NitroxClient.Communication.MultiplayerSession.ConnectionState
  syntax:
    content: >-
      [TestMethod]

      public void DisconnectShouldTransitionToDisconnectedState()
    content.vb: >-
      <TestMethod>

      Public Sub DisconnectShouldTransitionToDisconnectedState()
  overload: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
references:
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState
  commentId: N:NitroxClient.Communication.MultiplayerSession.ConnectionState
  href: NitroxClient.html
  name: NitroxClient.Communication.MultiplayerSession.ConnectionState
  nameWithType: NitroxClient.Communication.MultiplayerSession.ConnectionState
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState
  spec.csharp:
  - uid: NitroxClient
    name: NitroxClient
    href: NitroxClient.html
  - name: .
  - uid: NitroxClient.Communication
    name: Communication
    href: NitroxClient.Communication.html
  - name: .
  - uid: NitroxClient.Communication.MultiplayerSession
    name: MultiplayerSession
    href: NitroxClient.Communication.MultiplayerSession.html
  - name: .
  - uid: NitroxClient.Communication.MultiplayerSession.ConnectionState
    name: ConnectionState
    href: NitroxClient.Communication.MultiplayerSession.ConnectionState.html
  spec.vb:
  - uid: NitroxClient
    name: NitroxClient
    href: NitroxClient.html
  - name: .
  - uid: NitroxClient.Communication
    name: Communication
    href: NitroxClient.Communication.html
  - name: .
  - uid: NitroxClient.Communication.MultiplayerSession
    name: MultiplayerSession
    href: NitroxClient.Communication.MultiplayerSession.html
  - name: .
  - uid: NitroxClient.Communication.MultiplayerSession.ConnectionState
    name: ConnectionState
    href: NitroxClient.Communication.MultiplayerSession.ConnectionState.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_AwaitingReservationCredentialsStateTests_NegotiateShouldSendServerAuthorityReservationRequest
  name: NegotiateShouldSendServerAuthorityReservationRequest
  nameWithType: AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_AwaitingReservationCredentialsStateTests_NegotiateShouldTransitionToAwaitingSessionReservationState
  name: NegotiateShouldTransitionToAwaitingSessionReservationState
  nameWithType: AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_AwaitingReservationCredentialsStateTests_NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull
  name: NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull
  nameWithType: AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_AwaitingReservationCredentialsStateTests_NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull
  name: NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull
  nameWithType: AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_AwaitingReservationCredentialsStateTests_JoinSessionShouldThrowInvalidOperationException
  name: JoinSessionShouldThrowInvalidOperationException
  nameWithType: AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_AwaitingReservationCredentialsStateTests_DisconnectShouldStopTheClient
  name: DisconnectShouldStopTheClient
  nameWithType: AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_AwaitingReservationCredentialsStateTests_DisconnectShouldResetTheConnectionContext
  name: DisconnectShouldResetTheConnectionContext
  nameWithType: AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext
- uid: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState*
  commentId: Overload:NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState
  href: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState.html#NitroxClient_Communication_MultiplayerSession_ConnectionState_AwaitingReservationCredentialsStateTests_DisconnectShouldTransitionToDisconnectedState
  name: DisconnectShouldTransitionToDisconnectedState
  nameWithType: AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState
  fullName: NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState
memberLayout: SeparatePages
