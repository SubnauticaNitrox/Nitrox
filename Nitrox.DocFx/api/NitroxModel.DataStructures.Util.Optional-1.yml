### YamlMime:ManagedReference
items:
- uid: NitroxModel.DataStructures.Util.Optional`1
  commentId: T:NitroxModel.DataStructures.Util.Optional`1
  id: Optional`1
  parent: NitroxModel.DataStructures.Util
  children:
  - NitroxModel.DataStructures.Util.Optional`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - NitroxModel.DataStructures.Util.Optional`1.HasValue
  - NitroxModel.DataStructures.Util.Optional`1.OrElse(System.Func{`0})
  - NitroxModel.DataStructures.Util.Optional`1.OrElse(`0)
  - NitroxModel.DataStructures.Util.Optional`1.OrNull
  - NitroxModel.DataStructures.Util.Optional`1.ToString
  - NitroxModel.DataStructures.Util.Optional`1.Value
  - NitroxModel.DataStructures.Util.Optional`1.op_Explicit(NitroxModel.DataStructures.Util.Optional{`0})~`0
  - NitroxModel.DataStructures.Util.Optional`1.op_Implicit(NitroxModel.DataStructures.Util.OptionalEmpty)~NitroxModel.DataStructures.Util.Optional{`0}
  - NitroxModel.DataStructures.Util.Optional`1.op_Implicit(`0)~NitroxModel.DataStructures.Util.Optional{`0}
  - NitroxModel.DataStructures.Util.Optional`1.op_Implicit(`0)~System.Nullable{NitroxModel.DataStructures.Util.Optional{`0}}
  langs:
  - csharp
  - vb
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: NitroxModel.DataStructures.Util.Optional<T>
  type: Struct
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Optional
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 16
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  summary: Used to give context on whether the wrapped value is nullable and to improve error logging.
  remarks: >-
    Used some hacks to circumvent C#' lack of reverse type inference (usually need to specify the type when returning a

    value using a generic method).

    Code from https://tyrrrz.me/blog/return-type-inference
  example: []
  syntax:
    content: >-
      [Serializable]

      [DataContract]

      public struct Optional<T> : ISerializable where T : class
    typeParameters:
    - id: T
      description: ''
    content.vb: >-
      <Serializable>

      <DataContract>

      Public Structure [Optional](Of T As Class) Implements ISerializable
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  nameWithType.vb: Optional(Of T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T)
  name.vb: Optional(Of T)
- uid: NitroxModel.DataStructures.Util.Optional`1.Value
  commentId: P:NitroxModel.DataStructures.Util.Optional`1.Value
  id: Value
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Optional<T>.Value
  fullName: NitroxModel.DataStructures.Util.Optional<T>.Value
  type: Property
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Value
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 76
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: >-
      [DataMember(Order = 1)]

      public readonly T Value { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: >-
      <DataMember(Order:=1)>

      Public Property Value As T
  overload: NitroxModel.DataStructures.Util.Optional`1.Value*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 1
  nameWithType.vb: Optional(Of T).Value
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).Value
- uid: NitroxModel.DataStructures.Util.Optional`1.HasValue
  commentId: P:NitroxModel.DataStructures.Util.Optional`1.HasValue
  id: HasValue
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: Optional<T>.HasValue
  fullName: NitroxModel.DataStructures.Util.Optional<T>.HasValue
  type: Property
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: HasValue
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 79
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: public bool HasValue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasValue As Boolean
  overload: NitroxModel.DataStructures.Util.Optional`1.HasValue*
  nameWithType.vb: Optional(Of T).HasValue
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).HasValue
- uid: NitroxModel.DataStructures.Util.Optional`1.OrElse(`0)
  commentId: M:NitroxModel.DataStructures.Util.Optional`1.OrElse(`0)
  id: OrElse(`0)
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: OrElse(T)
  nameWithType: Optional<T>.OrElse(T)
  fullName: NitroxModel.DataStructures.Util.Optional<T>.OrElse(T)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OrElse
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 86
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: public T OrElse(T elseValue)
    parameters:
    - id: elseValue
      type: '{T}'
    return:
      type: '{T}'
    content.vb: Public Function [OrElse](elseValue As T) As T
  overload: NitroxModel.DataStructures.Util.Optional`1.OrElse*
  nameWithType.vb: Optional(Of T).OrElse(T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).OrElse(T)
- uid: NitroxModel.DataStructures.Util.Optional`1.OrElse(System.Func{`0})
  commentId: M:NitroxModel.DataStructures.Util.Optional`1.OrElse(System.Func{`0})
  id: OrElse(System.Func{`0})
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: OrElse(Func<T>)
  nameWithType: Optional<T>.OrElse(Func<T>)
  fullName: NitroxModel.DataStructures.Util.Optional<T>.OrElse(System.Func<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OrElse
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 91
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: public Optional<T> OrElse(Func<T> elseValue)
    parameters:
    - id: elseValue
      type: System.Func{{T}}
    return:
      type: NitroxModel.DataStructures.Util.Optional`1
    content.vb: Public Function [OrElse](elseValue As Func(Of T)) As [Optional](Of T)
  overload: NitroxModel.DataStructures.Util.Optional`1.OrElse*
  nameWithType.vb: Optional(Of T).OrElse(Func(Of T))
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).OrElse(System.Func(Of T))
  name.vb: OrElse(Func(Of T))
- uid: NitroxModel.DataStructures.Util.Optional`1.OrNull
  commentId: M:NitroxModel.DataStructures.Util.Optional`1.OrNull
  id: OrNull
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: OrNull()
  nameWithType: Optional<T>.OrNull()
  fullName: NitroxModel.DataStructures.Util.Optional<T>.OrNull()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OrNull
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 93
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: public T OrNull()
    return:
      type: '{T}'
    content.vb: Public Function OrNull() As T
  overload: NitroxModel.DataStructures.Util.Optional`1.OrNull*
  nameWithType.vb: Optional(Of T).OrNull()
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).OrNull()
- uid: NitroxModel.DataStructures.Util.Optional`1.ToString
  commentId: M:NitroxModel.DataStructures.Util.Optional`1.ToString
  id: ToString
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Optional<T>.ToString()
  fullName: NitroxModel.DataStructures.Util.Optional<T>.ToString()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ToString
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 110
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: NitroxModel.DataStructures.Util.Optional`1.ToString*
  nameWithType.vb: Optional(Of T).ToString()
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).ToString()
- uid: NitroxModel.DataStructures.Util.Optional`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:NitroxModel.DataStructures.Util.Optional`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Optional<T>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: NitroxModel.DataStructures.Util.Optional<T>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetObjectData
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 121
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  summary: Populates a <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> with the data needed to serialize the target object.
  example: []
  syntax:
    content: >-
      [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)]

      public void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> to populate with data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination (see <xref href="System.Runtime.Serialization.StreamingContext" data-throw-if-not-resolved="false"></xref>) for this serialization.
    content.vb: >-
      <SecurityPermission(SecurityAction.Demand, SerializationFormatter:=True)>

      Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: NitroxModel.DataStructures.Util.Optional`1.GetObjectData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the required permission.
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  attributes:
  - type: System.Security.Permissions.SecurityPermissionAttribute
    ctor: System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
    arguments:
    - type: System.Security.Permissions.SecurityAction
      value: 2
    namedArguments:
    - name: SerializationFormatter
      type: System.Boolean
      value: true
  nameWithType.vb: Optional(Of T).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
- uid: NitroxModel.DataStructures.Util.Optional`1.op_Implicit(NitroxModel.DataStructures.Util.OptionalEmpty)~NitroxModel.DataStructures.Util.Optional{`0}
  commentId: M:NitroxModel.DataStructures.Util.Optional`1.op_Implicit(NitroxModel.DataStructures.Util.OptionalEmpty)~NitroxModel.DataStructures.Util.Optional{`0}
  id: op_Implicit(NitroxModel.DataStructures.Util.OptionalEmpty)~NitroxModel.DataStructures.Util.Optional{`0}
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: implicit operator Optional<T>(OptionalEmpty)
  nameWithType: Optional<T>.implicit operator Optional<T>(OptionalEmpty)
  fullName: NitroxModel.DataStructures.Util.Optional<T>.implicit operator NitroxModel.DataStructures.Util.Optional<T>(NitroxModel.DataStructures.Util.OptionalEmpty)
  type: Operator
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: op_Implicit
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 128
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: public static implicit operator Optional<T>(OptionalEmpty none)
    parameters:
    - id: none
      type: NitroxModel.DataStructures.Util.OptionalEmpty
    return:
      type: NitroxModel.DataStructures.Util.Optional`1
    content.vb: Public Shared Widening Operator CType(none As OptionalEmpty) As [Optional](Of T)
  overload: NitroxModel.DataStructures.Util.Optional`1.op_Implicit*
  nameWithType.vb: Optional(Of T).CType(OptionalEmpty)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).CType(NitroxModel.DataStructures.Util.OptionalEmpty)
  name.vb: CType(OptionalEmpty)
- uid: NitroxModel.DataStructures.Util.Optional`1.op_Implicit(`0)~System.Nullable{NitroxModel.DataStructures.Util.Optional{`0}}
  commentId: M:NitroxModel.DataStructures.Util.Optional`1.op_Implicit(`0)~System.Nullable{NitroxModel.DataStructures.Util.Optional{`0}}
  id: op_Implicit(`0)~System.Nullable{NitroxModel.DataStructures.Util.Optional{`0}}
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: implicit operator Optional<T>?(T)
  nameWithType: Optional<T>.implicit operator Optional<T>?(T)
  fullName: NitroxModel.DataStructures.Util.Optional<T>.implicit operator NitroxModel.DataStructures.Util.Optional<T>?(T)
  type: Operator
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: op_Implicit
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 134
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: public static implicit operator Optional<T>?(T obj)
    parameters:
    - id: obj
      type: '{T}'
    return:
      type: System.Nullable{NitroxModel.DataStructures.Util.Optional`1}
    content.vb: Public Shared Widening Operator CType(obj As T) As [Optional](Of T)?
  overload: NitroxModel.DataStructures.Util.Optional`1.op_Implicit*
  nameWithType.vb: Optional(Of T).CType(T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).CType(T)
  name.vb: CType(T)
- uid: NitroxModel.DataStructures.Util.Optional`1.op_Implicit(`0)~NitroxModel.DataStructures.Util.Optional{`0}
  commentId: M:NitroxModel.DataStructures.Util.Optional`1.op_Implicit(`0)~NitroxModel.DataStructures.Util.Optional{`0}
  id: op_Implicit(`0)~NitroxModel.DataStructures.Util.Optional{`0}
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: implicit operator Optional<T>(T)
  nameWithType: Optional<T>.implicit operator Optional<T>(T)
  fullName: NitroxModel.DataStructures.Util.Optional<T>.implicit operator NitroxModel.DataStructures.Util.Optional<T>(T)
  type: Operator
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: op_Implicit
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 143
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: public static implicit operator Optional<T>(T obj)
    parameters:
    - id: obj
      type: '{T}'
    return:
      type: NitroxModel.DataStructures.Util.Optional`1
    content.vb: Public Shared Widening Operator CType(obj As T) As [Optional](Of T)
  overload: NitroxModel.DataStructures.Util.Optional`1.op_Implicit*
  nameWithType.vb: Optional(Of T).CType(T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).CType(T)
  name.vb: CType(T)
- uid: NitroxModel.DataStructures.Util.Optional`1.op_Explicit(NitroxModel.DataStructures.Util.Optional{`0})~`0
  commentId: M:NitroxModel.DataStructures.Util.Optional`1.op_Explicit(NitroxModel.DataStructures.Util.Optional{`0})~`0
  id: op_Explicit(NitroxModel.DataStructures.Util.Optional{`0})~`0
  parent: NitroxModel.DataStructures.Util.Optional`1
  langs:
  - csharp
  - vb
  name: explicit operator T(Optional<T>)
  nameWithType: Optional<T>.explicit operator T(Optional<T>)
  fullName: NitroxModel.DataStructures.Util.Optional<T>.explicit operator T(NitroxModel.DataStructures.Util.Optional<T>)
  type: Operator
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: op_Explicit
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 148
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: public static explicit operator T(Optional<T> value)
    parameters:
    - id: value
      type: NitroxModel.DataStructures.Util.Optional`1
    return:
      type: '{T}'
    content.vb: Public Shared Narrowing Operator CType(value As [Optional](Of T)) As T
  overload: NitroxModel.DataStructures.Util.Optional`1.op_Explicit*
  nameWithType.vb: Optional(Of T).CType(Optional(Of T))
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).CType(NitroxModel.DataStructures.Util.Optional(Of T))
  name.vb: CType(Optional(Of T))
references:
- uid: NitroxModel.DataStructures.Util
  commentId: N:NitroxModel.DataStructures.Util
  href: NitroxModel.html
  name: NitroxModel.DataStructures.Util
  nameWithType: NitroxModel.DataStructures.Util
  fullName: NitroxModel.DataStructures.Util
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.Util
    name: Util
    href: NitroxModel.DataStructures.Util.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.Util
    name: Util
    href: NitroxModel.DataStructures.Util.html
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NitroxModel.DataStructures.Util.Optional`1.Value*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional`1.Value
  href: NitroxModel.DataStructures.Util.Optional-1.Value.html#NitroxModel_DataStructures_Util_Optional_1_Value
  name: Value
  nameWithType: Optional<T>.Value
  fullName: NitroxModel.DataStructures.Util.Optional<T>.Value
  nameWithType.vb: Optional(Of T).Value
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).Value
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NitroxModel.DataStructures.Util.Optional`1.HasValue*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional`1.HasValue
  href: NitroxModel.DataStructures.Util.Optional-1.HasValue.html#NitroxModel_DataStructures_Util_Optional_1_HasValue
  name: HasValue
  nameWithType: Optional<T>.HasValue
  fullName: NitroxModel.DataStructures.Util.Optional<T>.HasValue
  nameWithType.vb: Optional(Of T).HasValue
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).HasValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NitroxModel.DataStructures.Util.Optional`1.OrElse*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional`1.OrElse
  href: NitroxModel.DataStructures.Util.Optional-1.OrElse.html#NitroxModel_DataStructures_Util_Optional_1_OrElse__0_
  name: OrElse
  nameWithType: Optional<T>.OrElse
  fullName: NitroxModel.DataStructures.Util.Optional<T>.OrElse
  nameWithType.vb: Optional(Of T).OrElse
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).OrElse
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.Util.Optional`1
  commentId: T:NitroxModel.DataStructures.Util.Optional`1
  parent: NitroxModel.DataStructures.Util
  href: NitroxModel.DataStructures.Util.Optional-1.html
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: NitroxModel.DataStructures.Util.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: NitroxModel.DataStructures.Util.Optional`1.OrNull*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional`1.OrNull
  href: NitroxModel.DataStructures.Util.Optional-1.OrNull.html#NitroxModel_DataStructures_Util_Optional_1_OrNull
  name: OrNull
  nameWithType: Optional<T>.OrNull
  fullName: NitroxModel.DataStructures.Util.Optional<T>.OrNull
  nameWithType.vb: Optional(Of T).OrNull
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).OrNull
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: NitroxModel.DataStructures.Util.Optional`1.ToString*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional`1.ToString
  href: NitroxModel.DataStructures.Util.Optional-1.ToString.html#NitroxModel_DataStructures_Util_Optional_1_ToString
  name: ToString
  nameWithType: Optional<T>.ToString
  fullName: NitroxModel.DataStructures.Util.Optional<T>.ToString
  nameWithType.vb: Optional(Of T).ToString
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.securityexception
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: NitroxModel.DataStructures.Util.Optional`1.GetObjectData*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional`1.GetObjectData
  href: NitroxModel.DataStructures.Util.Optional-1.GetObjectData.html#NitroxModel_DataStructures_Util_Optional_1_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  name: GetObjectData
  nameWithType: Optional<T>.GetObjectData
  fullName: NitroxModel.DataStructures.Util.Optional<T>.GetObjectData
  nameWithType.vb: Optional(Of T).GetObjectData
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
- uid: NitroxModel.DataStructures.Util.Optional`1.op_Implicit*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional`1.op_Implicit
  name: implicit operator
  nameWithType: Optional<T>.implicit operator
  fullName: NitroxModel.DataStructures.Util.Optional<T>.implicit operator
  nameWithType.vb: Optional(Of T).CType
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: NitroxModel.DataStructures.Util.OptionalEmpty
  commentId: T:NitroxModel.DataStructures.Util.OptionalEmpty
  parent: NitroxModel.DataStructures.Util
  href: NitroxModel.DataStructures.Util.OptionalEmpty.html
  name: OptionalEmpty
  nameWithType: OptionalEmpty
  fullName: NitroxModel.DataStructures.Util.OptionalEmpty
- uid: System.Nullable{NitroxModel.DataStructures.Util.Optional`1}
  commentId: T:System.Nullable{NitroxModel.DataStructures.Util.Optional`1}
  parent: System
  definition: System.Nullable`1
  href: NitroxModel.DataStructures.Util.Optional-1.html
  name: Optional<T>?
  nameWithType: Optional<T>?
  fullName: NitroxModel.DataStructures.Util.Optional<T>?
  nameWithType.vb: Optional(Of T)?
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T)?
  name.vb: Optional(Of T)?
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '?'
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.Util.Optional`1.op_Explicit*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional`1.op_Explicit
  name: explicit operator
  nameWithType: Optional<T>.explicit operator
  fullName: NitroxModel.DataStructures.Util.Optional<T>.explicit operator
  nameWithType.vb: Optional(Of T).CType
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
memberLayout: SeparatePages
