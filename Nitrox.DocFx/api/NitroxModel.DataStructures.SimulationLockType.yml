### YamlMime:ManagedReference
items:
- uid: NitroxModel.DataStructures.SimulationLockType
  commentId: T:NitroxModel.DataStructures.SimulationLockType
  id: SimulationLockType
  parent: NitroxModel.DataStructures
  children:
  - NitroxModel.DataStructures.SimulationLockType.EXCLUSIVE
  - NitroxModel.DataStructures.SimulationLockType.TRANSIENT
  langs:
  - csharp
  - vb
  name: SimulationLockType
  nameWithType: SimulationLockType
  fullName: NitroxModel.DataStructures.SimulationLockType
  type: Enum
  source:
    remote:
      path: NitroxModel/DataStructures/SimulationLock.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: SimulationLockType
    path: ../NitroxModel/DataStructures/SimulationLock.cs
    startLine: 4
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: >-
      [Serializable]

      public enum SimulationLockType
    content.vb: >-
      <Serializable>

      Public Enum SimulationLockType
  extensionMethods:
  - System.Enum.NitroxModel.Extensions.GetAttribute``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: NitroxModel.DataStructures.SimulationLockType.EXCLUSIVE
  commentId: F:NitroxModel.DataStructures.SimulationLockType.EXCLUSIVE
  id: EXCLUSIVE
  parent: NitroxModel.DataStructures.SimulationLockType
  langs:
  - csharp
  - vb
  name: EXCLUSIVE
  nameWithType: SimulationLockType.EXCLUSIVE
  fullName: NitroxModel.DataStructures.SimulationLockType.EXCLUSIVE
  type: Field
  source:
    remote:
      path: NitroxModel/DataStructures/SimulationLock.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: EXCLUSIVE
    path: ../NitroxModel/DataStructures/SimulationLock.cs
    startLine: 12
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: >-
    Exclusive locks: These are typically requested by a player to hold exclusive, unbreaking control

    over the simulation of an entity. An example of this could be a player piloting

    the cyclops. These can either be removed or downgraded when no longer needed.
  example: []
  syntax:
    content: EXCLUSIVE = 0
    return:
      type: NitroxModel.DataStructures.SimulationLockType
- uid: NitroxModel.DataStructures.SimulationLockType.TRANSIENT
  commentId: F:NitroxModel.DataStructures.SimulationLockType.TRANSIENT
  id: TRANSIENT
  parent: NitroxModel.DataStructures.SimulationLockType
  langs:
  - csharp
  - vb
  name: TRANSIENT
  nameWithType: SimulationLockType.TRANSIENT
  fullName: NitroxModel.DataStructures.SimulationLockType.TRANSIENT
  type: Field
  source:
    remote:
      path: NitroxModel/DataStructures/SimulationLock.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: TRANSIENT
    path: ../NitroxModel/DataStructures/SimulationLock.cs
    startLine: 21
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: >-
    Transient locks: A lock that allows a player to control the simulation of an entity.  Other players

    can steal this lock by requesting exclusive access. An example can be the following:

    a player is no longer piloting a cyclops but still simulating its movement.  A second

    player can request exclusive control to pilot the cyclops. Doing so will revoke the

    transient lock and grant the second player an exclusive lock.
  example: []
  syntax:
    content: TRANSIENT = 1
    return:
      type: NitroxModel.DataStructures.SimulationLockType
references:
- uid: NitroxModel.DataStructures
  commentId: N:NitroxModel.DataStructures
  href: NitroxModel.html
  name: NitroxModel.DataStructures
  nameWithType: NitroxModel.DataStructures
  fullName: NitroxModel.DataStructures
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
- uid: System.Enum.NitroxModel.Extensions.GetAttribute``1
  commentId: M:NitroxModel.Extensions.GetAttribute``1(System.Enum)
  parent: NitroxModel.Extensions
  definition: NitroxModel.Extensions.GetAttribute``1(System.Enum)
  href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  name: GetAttribute<TAttribute>(Enum)
  nameWithType: Extensions.GetAttribute<TAttribute>(Enum)
  fullName: NitroxModel.Extensions.GetAttribute<TAttribute>(System.Enum)
  nameWithType.vb: Extensions.GetAttribute(Of TAttribute)(Enum)
  fullName.vb: NitroxModel.Extensions.GetAttribute(Of TAttribute)(System.Enum)
  name.vb: GetAttribute(Of TAttribute)(Enum)
  spec.csharp:
  - uid: NitroxModel.Extensions.GetAttribute``1(System.Enum)
    name: GetAttribute
    href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  - name: <
  - name: TAttribute
  - name: '>'
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
  spec.vb:
  - uid: NitroxModel.Extensions.GetAttribute``1(System.Enum)
    name: GetAttribute
    href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  - name: (
  - name: Of
  - name: " "
  - name: TAttribute
  - name: )
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
- uid: NitroxModel.Extensions.GetAttribute``1(System.Enum)
  commentId: M:NitroxModel.Extensions.GetAttribute``1(System.Enum)
  isExternal: true
  href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  name: GetAttribute<TAttribute>(Enum)
  nameWithType: Extensions.GetAttribute<TAttribute>(Enum)
  fullName: NitroxModel.Extensions.GetAttribute<TAttribute>(System.Enum)
  nameWithType.vb: Extensions.GetAttribute(Of TAttribute)(Enum)
  fullName.vb: NitroxModel.Extensions.GetAttribute(Of TAttribute)(System.Enum)
  name.vb: GetAttribute(Of TAttribute)(Enum)
  spec.csharp:
  - uid: NitroxModel.Extensions.GetAttribute``1(System.Enum)
    name: GetAttribute
    href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  - name: <
  - name: TAttribute
  - name: '>'
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
  spec.vb:
  - uid: NitroxModel.Extensions.GetAttribute``1(System.Enum)
    name: GetAttribute
    href: NitroxModel.Extensions.GetAttribute.html#NitroxModel_Extensions_GetAttribute__1_System_Enum_
  - name: (
  - name: Of
  - name: " "
  - name: TAttribute
  - name: )
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
- uid: NitroxModel.Extensions
  commentId: T:NitroxModel.Extensions
  parent: NitroxModel
  href: NitroxModel.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: NitroxModel.Extensions
- uid: NitroxModel
  commentId: N:NitroxModel
  href: NitroxModel.html
  name: NitroxModel
  nameWithType: NitroxModel
  fullName: NitroxModel
- uid: NitroxModel.DataStructures.SimulationLockType
  commentId: T:NitroxModel.DataStructures.SimulationLockType
  parent: NitroxModel.DataStructures
  href: NitroxModel.DataStructures.SimulationLockType.html
  name: SimulationLockType
  nameWithType: SimulationLockType
  fullName: NitroxModel.DataStructures.SimulationLockType
memberLayout: SeparatePages
