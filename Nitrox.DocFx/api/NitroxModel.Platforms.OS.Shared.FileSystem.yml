### YamlMime:ManagedReference
items:
- uid: NitroxModel.Platforms.OS.Shared.FileSystem
  commentId: T:NitroxModel.Platforms.OS.Shared.FileSystem
  id: FileSystem
  parent: NitroxModel.Platforms.OS.Shared
  children:
  - NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions
  - NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms(System.String)
  - NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath(System.String)
  - NitroxModel.Platforms.OS.Shared.FileSystem.Instance
  - NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile(System.String)
  - NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable(System.String)
  - NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath(System.String,System.String)
  - NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile(System.String)
  - NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile(System.String,System.String)
  - NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser(System.String)
  - NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor
  - NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory(System.String,System.String,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: FileSystem
  nameWithType: FileSystem
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem
  type: Class
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: FileSystem
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 13
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  syntax:
    content: public abstract class FileSystem
    content.vb: Public MustInherit Class FileSystem
  inheritance:
  - System.Object
  derivedClasses:
  - NitroxModel.Platforms.OS.MacOS.MacFileSystem
  - NitroxModel.Platforms.OS.Unix.UnixFileSystem
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions
  commentId: P:NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions
  id: ExecutableFileExtensions
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: ExecutableFileExtensions
  nameWithType: FileSystem.ExecutableFileExtensions
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions
  type: Property
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ExecutableFileExtensions
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 23
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  syntax:
    content: public virtual IEnumerable<string> ExecutableFileExtensions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overridable ReadOnly Property ExecutableFileExtensions As IEnumerable(Of String)
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions*
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.Instance
  commentId: P:NitroxModel.Platforms.OS.Shared.FileSystem.Instance
  id: Instance
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: FileSystem.Instance
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.Instance
  type: Property
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Instance
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 24
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  syntax:
    content: public static FileSystem Instance { get; }
    parameters: []
    return:
      type: NitroxModel.Platforms.OS.Shared.FileSystem
    content.vb: Public Shared ReadOnly Property Instance As FileSystem
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.Instance*
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor
  commentId: P:NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor
  id: TextEditor
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: TextEditor
  nameWithType: FileSystem.TextEditor
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor
  type: Property
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: TextEditor
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 25
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  syntax:
    content: public virtual string TextEditor { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property TextEditor As String
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor*
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms(System.String)
  commentId: M:NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms(System.String)
  id: GetDefaultPrograms(System.String)
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: GetDefaultPrograms(string)
  nameWithType: FileSystem.GetDefaultPrograms(string)
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms(string)
  type: Method
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetDefaultPrograms
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 27
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  syntax:
    content: public virtual IEnumerable<string> GetDefaultPrograms(string file)
    parameters:
    - id: file
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overridable Function GetDefaultPrograms(file As String) As IEnumerable(Of String)
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms*
  nameWithType.vb: FileSystem.GetDefaultPrograms(String)
  fullName.vb: NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms(String)
  name.vb: GetDefaultPrograms(String)
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile(System.String)
  commentId: M:NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile(System.String)
  id: OpenOrExecuteFile(System.String)
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: OpenOrExecuteFile(string)
  nameWithType: FileSystem.OpenOrExecuteFile(string)
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile(string)
  type: Method
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OpenOrExecuteFile
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 35
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  summary: >-
    Opens the file with the default associated program or the default editor of the OS.

    The returned <xref href="System.Diagnostics.Process" data-throw-if-not-resolved="false"></xref> should be disposed.
  example: []
  syntax:
    content: public virtual Process OpenOrExecuteFile(string file)
    parameters:
    - id: file
      type: System.String
      description: File or program to open or execute.
    return:
      type: System.Diagnostics.Process
      description: Instance of a running process. Should be disposed.
    content.vb: Public Overridable Function OpenOrExecuteFile(file As String) As Process
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile*
  nameWithType.vb: FileSystem.OpenOrExecuteFile(String)
  fullName.vb: NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile(String)
  name.vb: OpenOrExecuteFile(String)
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath(System.String)
  commentId: M:NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath(System.String)
  id: GetFullPath(System.String)
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: GetFullPath(string)
  nameWithType: FileSystem.GetFullPath(string)
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath(string)
  type: Method
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetFullPath
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 68
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  summary: >-
    Gets the full path to a file or program. Searches the PATH environment variables if file could not be found

    relatively. Returns null if not found.
  example: []
  syntax:
    content: public string GetFullPath(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: File or program name to get the full path from.
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetFullPath(fileName As String) As String
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath*
  nameWithType.vb: FileSystem.GetFullPath(String)
  fullName.vb: NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath(String)
  name.vb: GetFullPath(String)
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath(System.String,System.String)
  commentId: M:NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath(System.String,System.String)
  id: MakeRelativePath(System.String,System.String)
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: MakeRelativePath(string, string)
  nameWithType: FileSystem.MakeRelativePath(string, string)
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath(string, string)
  type: Method
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: MakeRelativePath
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 94
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  syntax:
    content: public string MakeRelativePath(string fromPath, string toPath)
    parameters:
    - id: fromPath
      type: System.String
    - id: toPath
      type: System.String
    return:
      type: System.String
    content.vb: Public Function MakeRelativePath(fromPath As String, toPath As String) As String
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath*
  nameWithType.vb: FileSystem.MakeRelativePath(String, String)
  fullName.vb: NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath(String, String)
  name.vb: MakeRelativePath(String, String)
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory(System.String,System.String,System.String,System.Boolean)
  commentId: M:NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory(System.String,System.String,System.String,System.Boolean)
  id: ZipFilesInDirectory(System.String,System.String,System.String,System.Boolean)
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: ZipFilesInDirectory(string, string, string, bool)
  nameWithType: FileSystem.ZipFilesInDirectory(string, string, string, bool)
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory(string, string, string, bool)
  type: Method
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ZipFilesInDirectory
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 135
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  summary: Zips the files found in the given directory.
  example: []
  syntax:
    content: public string ZipFilesInDirectory(string dir, string outputPath = null, string fileSearchPattern = "*", bool replaceFile = false)
    parameters:
    - id: dir
      type: System.String
      description: Directory to search for files to zip.
    - id: outputPath
      type: System.String
      description: >-
        Name of output zip, optionally including full path. If null, uses the directory name given by

        dir.
    - id: fileSearchPattern
      type: System.String
      description: Search pattern used to filter against files to zip.
    - id: replaceFile
      type: System.Boolean
      description: If true, overwrites the file matching the output path.
    return:
      type: System.String
      description: Full path to the newly created zip or null if no files are found to zip.
    content.vb: Public Function ZipFilesInDirectory(dir As String, outputPath As String = Nothing, fileSearchPattern As String = "*", replaceFile As Boolean = False) As String
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: If zip file already exists.
  nameWithType.vb: FileSystem.ZipFilesInDirectory(String, String, String, Boolean)
  fullName.vb: NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory(String, String, String, Boolean)
  name.vb: ZipFilesInDirectory(String, String, String, Boolean)
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile(System.String,System.String)
  commentId: M:NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile(System.String,System.String)
  id: ReplaceFile(System.String,System.String)
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: ReplaceFile(string, string)
  nameWithType: FileSystem.ReplaceFile(string, string)
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile(string, string)
  type: Method
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ReplaceFile
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 187
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  summary: >-
    Replaces target file with source file. If target file does not exist then it moves the file.

    This falls back to a copy if the target is on a different drive.

    The source file will always be deleted.
  example: []
  syntax:
    content: public bool ReplaceFile(string source, string target)
    parameters:
    - id: source
      type: System.String
      description: Source file to replace with.
    - id: target
      type: System.String
      description: Target file to replace.
    return:
      type: System.Boolean
      description: True if file was moved or replaced successfully.
    content.vb: Public Function ReplaceFile(source As String, target As String) As Boolean
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile*
  nameWithType.vb: FileSystem.ReplaceFile(String, String)
  fullName.vb: NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile(String, String)
  name.vb: ReplaceFile(String, String)
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable(System.String)
  commentId: M:NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable(System.String)
  id: IsWritable(System.String)
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: IsWritable(string)
  nameWithType: FileSystem.IsWritable(string)
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable(string)
  type: Method
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: IsWritable
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 247
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  syntax:
    content: public bool IsWritable(string directory)
    parameters:
    - id: directory
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsWritable(directory As String) As Boolean
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable*
  nameWithType.vb: FileSystem.IsWritable(String)
  fullName.vb: NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable(String)
  name.vb: IsWritable(String)
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser(System.String)
  commentId: M:NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser(System.String)
  id: SetFullAccessToCurrentUser(System.String)
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: SetFullAccessToCurrentUser(string)
  nameWithType: FileSystem.SetFullAccessToCurrentUser(string)
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser(string)
  type: Method
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: SetFullAccessToCurrentUser
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 262
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  syntax:
    content: public abstract bool SetFullAccessToCurrentUser(string directory)
    parameters:
    - id: directory
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function SetFullAccessToCurrentUser(directory As String) As Boolean
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser*
  nameWithType.vb: FileSystem.SetFullAccessToCurrentUser(String)
  fullName.vb: NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser(String)
  name.vb: SetFullAccessToCurrentUser(String)
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile(System.String)
  commentId: M:NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile(System.String)
  id: IsTrustedFile(System.String)
  parent: NitroxModel.Platforms.OS.Shared.FileSystem
  langs:
  - csharp
  - vb
  name: IsTrustedFile(string)
  nameWithType: FileSystem.IsTrustedFile(string)
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile(string)
  type: Method
  source:
    remote:
      path: NitroxModel/Platforms/OS/Shared/FileSystem.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: IsTrustedFile
    path: ../NitroxModel/Platforms/OS/Shared/FileSystem.cs
    startLine: 263
  assemblies:
  - NitroxModel
  namespace: NitroxModel.Platforms.OS.Shared
  syntax:
    content: public abstract bool IsTrustedFile(string file)
    parameters:
    - id: file
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function IsTrustedFile(file As String) As Boolean
  overload: NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile*
  nameWithType.vb: FileSystem.IsTrustedFile(String)
  fullName.vb: NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile(String)
  name.vb: IsTrustedFile(String)
references:
- uid: NitroxModel.Platforms.OS.Shared
  commentId: N:NitroxModel.Platforms.OS.Shared
  href: NitroxModel.html
  name: NitroxModel.Platforms.OS.Shared
  nameWithType: NitroxModel.Platforms.OS.Shared
  fullName: NitroxModel.Platforms.OS.Shared
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.Platforms
    name: Platforms
    href: NitroxModel.Platforms.html
  - name: .
  - uid: NitroxModel.Platforms.OS
    name: OS
    href: NitroxModel.Platforms.OS.html
  - name: .
  - uid: NitroxModel.Platforms.OS.Shared
    name: Shared
    href: NitroxModel.Platforms.OS.Shared.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.Platforms
    name: Platforms
    href: NitroxModel.Platforms.html
  - name: .
  - uid: NitroxModel.Platforms.OS
    name: OS
    href: NitroxModel.Platforms.OS.html
  - name: .
  - uid: NitroxModel.Platforms.OS.Shared
    name: Shared
    href: NitroxModel.Platforms.OS.Shared.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions
  href: NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions.html#NitroxModel_Platforms_OS_Shared_FileSystem_ExecutableFileExtensions
  name: ExecutableFileExtensions
  nameWithType: FileSystem.ExecutableFileExtensions
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.Instance*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.Instance
  href: NitroxModel.Platforms.OS.Shared.FileSystem.Instance.html#NitroxModel_Platforms_OS_Shared_FileSystem_Instance
  name: Instance
  nameWithType: FileSystem.Instance
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.Instance
- uid: NitroxModel.Platforms.OS.Shared.FileSystem
  commentId: T:NitroxModel.Platforms.OS.Shared.FileSystem
  parent: NitroxModel.Platforms.OS.Shared
  href: NitroxModel.Platforms.OS.Shared.FileSystem.html
  name: FileSystem
  nameWithType: FileSystem
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor
  href: NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor.html#NitroxModel_Platforms_OS_Shared_FileSystem_TextEditor
  name: TextEditor
  nameWithType: FileSystem.TextEditor
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms
  href: NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms.html#NitroxModel_Platforms_OS_Shared_FileSystem_GetDefaultPrograms_System_String_
  name: GetDefaultPrograms
  nameWithType: FileSystem.GetDefaultPrograms
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms
- uid: System.Diagnostics.Process
  commentId: T:System.Diagnostics.Process
  parent: System.Diagnostics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.process
  name: Process
  nameWithType: Process
  fullName: System.Diagnostics.Process
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile
  href: NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile.html#NitroxModel_Platforms_OS_Shared_FileSystem_OpenOrExecuteFile_System_String_
  name: OpenOrExecuteFile
  nameWithType: FileSystem.OpenOrExecuteFile
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Diagnostics
    name: Diagnostics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Diagnostics
    name: Diagnostics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath
  href: NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath.html#NitroxModel_Platforms_OS_Shared_FileSystem_GetFullPath_System_String_
  name: GetFullPath
  nameWithType: FileSystem.GetFullPath
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath
  href: NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath.html#NitroxModel_Platforms_OS_Shared_FileSystem_MakeRelativePath_System_String_System_String_
  name: MakeRelativePath
  nameWithType: FileSystem.MakeRelativePath
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.ioexception
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory
  href: NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory.html#NitroxModel_Platforms_OS_Shared_FileSystem_ZipFilesInDirectory_System_String_System_String_System_String_System_Boolean_
  name: ZipFilesInDirectory
  nameWithType: FileSystem.ZipFilesInDirectory
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile
  href: NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile.html#NitroxModel_Platforms_OS_Shared_FileSystem_ReplaceFile_System_String_System_String_
  name: ReplaceFile
  nameWithType: FileSystem.ReplaceFile
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable
  href: NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable.html#NitroxModel_Platforms_OS_Shared_FileSystem_IsWritable_System_String_
  name: IsWritable
  nameWithType: FileSystem.IsWritable
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser
  href: NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser.html#NitroxModel_Platforms_OS_Shared_FileSystem_SetFullAccessToCurrentUser_System_String_
  name: SetFullAccessToCurrentUser
  nameWithType: FileSystem.SetFullAccessToCurrentUser
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser
- uid: NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile*
  commentId: Overload:NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile
  href: NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile.html#NitroxModel_Platforms_OS_Shared_FileSystem_IsTrustedFile_System_String_
  name: IsTrustedFile
  nameWithType: FileSystem.IsTrustedFile
  fullName: NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile
memberLayout: SeparatePages
