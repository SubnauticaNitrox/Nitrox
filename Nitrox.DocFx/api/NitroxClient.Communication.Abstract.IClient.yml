### YamlMime:ManagedReference
items:
- uid: NitroxClient.Communication.Abstract.IClient
  commentId: T:NitroxClient.Communication.Abstract.IClient
  id: IClient
  parent: NitroxClient.Communication.Abstract
  children:
  - NitroxClient.Communication.Abstract.IClient.IsConnected
  - NitroxClient.Communication.Abstract.IClient.PollEvents
  - NitroxClient.Communication.Abstract.IClient.Send(NitroxModel.Packets.Packet)
  - NitroxClient.Communication.Abstract.IClient.StartAsync(System.String,System.Int32)
  - NitroxClient.Communication.Abstract.IClient.Stop
  langs:
  - csharp
  - vb
  name: IClient
  nameWithType: IClient
  fullName: NitroxClient.Communication.Abstract.IClient
  type: Interface
  source:
    remote:
      path: NitroxClient/Communication/Abstract/IClient.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: IClient
    path: ../NitroxClient/Communication/Abstract/IClient.cs
    startLine: 10
  assemblies:
  - NitroxClient
  namespace: NitroxClient.Communication.Abstract
  summary: >-
    Abstracted IClient in order to give us options in the underlying protocol that we use to communicate with the server.

    Ex: We may want to also roll a UDP client in the future to handle packets where we don't necessarily care

    about transmission order or error recovery.
  example: []
  syntax:
    content: public interface IClient
    content.vb: Public Interface IClient
- uid: NitroxClient.Communication.Abstract.IClient.IsConnected
  commentId: P:NitroxClient.Communication.Abstract.IClient.IsConnected
  id: IsConnected
  parent: NitroxClient.Communication.Abstract.IClient
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: IClient.IsConnected
  fullName: NitroxClient.Communication.Abstract.IClient.IsConnected
  type: Property
  source:
    remote:
      path: NitroxClient/Communication/Abstract/IClient.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: IsConnected
    path: ../NitroxClient/Communication/Abstract/IClient.cs
    startLine: 12
  assemblies:
  - NitroxClient
  namespace: NitroxClient.Communication.Abstract
  syntax:
    content: bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsConnected As Boolean
  overload: NitroxClient.Communication.Abstract.IClient.IsConnected*
- uid: NitroxClient.Communication.Abstract.IClient.StartAsync(System.String,System.Int32)
  commentId: M:NitroxClient.Communication.Abstract.IClient.StartAsync(System.String,System.Int32)
  id: StartAsync(System.String,System.Int32)
  parent: NitroxClient.Communication.Abstract.IClient
  langs:
  - csharp
  - vb
  name: StartAsync(string, int)
  nameWithType: IClient.StartAsync(string, int)
  fullName: NitroxClient.Communication.Abstract.IClient.StartAsync(string, int)
  type: Method
  source:
    remote:
      path: NitroxClient/Communication/Abstract/IClient.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: StartAsync
    path: ../NitroxClient/Communication/Abstract/IClient.cs
    startLine: 13
  assemblies:
  - NitroxClient
  namespace: NitroxClient.Communication.Abstract
  syntax:
    content: Task StartAsync(string ipAddress, int serverPort)
    parameters:
    - id: ipAddress
      type: System.String
    - id: serverPort
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function StartAsync(ipAddress As String, serverPort As Integer) As Task
  overload: NitroxClient.Communication.Abstract.IClient.StartAsync*
  nameWithType.vb: IClient.StartAsync(String, Integer)
  fullName.vb: NitroxClient.Communication.Abstract.IClient.StartAsync(String, Integer)
  name.vb: StartAsync(String, Integer)
- uid: NitroxClient.Communication.Abstract.IClient.Stop
  commentId: M:NitroxClient.Communication.Abstract.IClient.Stop
  id: Stop
  parent: NitroxClient.Communication.Abstract.IClient
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: IClient.Stop()
  fullName: NitroxClient.Communication.Abstract.IClient.Stop()
  type: Method
  source:
    remote:
      path: NitroxClient/Communication/Abstract/IClient.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Stop
    path: ../NitroxClient/Communication/Abstract/IClient.cs
    startLine: 14
  assemblies:
  - NitroxClient
  namespace: NitroxClient.Communication.Abstract
  syntax:
    content: void Stop()
    content.vb: Sub [Stop]()
  overload: NitroxClient.Communication.Abstract.IClient.Stop*
- uid: NitroxClient.Communication.Abstract.IClient.PollEvents
  commentId: M:NitroxClient.Communication.Abstract.IClient.PollEvents
  id: PollEvents
  parent: NitroxClient.Communication.Abstract.IClient
  langs:
  - csharp
  - vb
  name: PollEvents()
  nameWithType: IClient.PollEvents()
  fullName: NitroxClient.Communication.Abstract.IClient.PollEvents()
  type: Method
  source:
    remote:
      path: NitroxClient/Communication/Abstract/IClient.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: PollEvents
    path: ../NitroxClient/Communication/Abstract/IClient.cs
    startLine: 15
  assemblies:
  - NitroxClient
  namespace: NitroxClient.Communication.Abstract
  syntax:
    content: void PollEvents()
    content.vb: Sub PollEvents()
  overload: NitroxClient.Communication.Abstract.IClient.PollEvents*
- uid: NitroxClient.Communication.Abstract.IClient.Send(NitroxModel.Packets.Packet)
  commentId: M:NitroxClient.Communication.Abstract.IClient.Send(NitroxModel.Packets.Packet)
  id: Send(NitroxModel.Packets.Packet)
  parent: NitroxClient.Communication.Abstract.IClient
  langs:
  - csharp
  - vb
  name: Send(Packet)
  nameWithType: IClient.Send(Packet)
  fullName: NitroxClient.Communication.Abstract.IClient.Send(NitroxModel.Packets.Packet)
  type: Method
  source:
    remote:
      path: NitroxClient/Communication/Abstract/IClient.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Send
    path: ../NitroxClient/Communication/Abstract/IClient.cs
    startLine: 16
  assemblies:
  - NitroxClient
  namespace: NitroxClient.Communication.Abstract
  syntax:
    content: void Send(Packet packet)
    parameters:
    - id: packet
      type: NitroxModel.Packets.Packet
    content.vb: Sub Send(packet As Packet)
  overload: NitroxClient.Communication.Abstract.IClient.Send*
references:
- uid: NitroxClient.Communication.Abstract
  commentId: N:NitroxClient.Communication.Abstract
  href: NitroxClient.html
  name: NitroxClient.Communication.Abstract
  nameWithType: NitroxClient.Communication.Abstract
  fullName: NitroxClient.Communication.Abstract
  spec.csharp:
  - uid: NitroxClient
    name: NitroxClient
    href: NitroxClient.html
  - name: .
  - uid: NitroxClient.Communication
    name: Communication
    href: NitroxClient.Communication.html
  - name: .
  - uid: NitroxClient.Communication.Abstract
    name: Abstract
    href: NitroxClient.Communication.Abstract.html
  spec.vb:
  - uid: NitroxClient
    name: NitroxClient
    href: NitroxClient.html
  - name: .
  - uid: NitroxClient.Communication
    name: Communication
    href: NitroxClient.Communication.html
  - name: .
  - uid: NitroxClient.Communication.Abstract
    name: Abstract
    href: NitroxClient.Communication.Abstract.html
- uid: NitroxClient.Communication.Abstract.IClient.IsConnected*
  commentId: Overload:NitroxClient.Communication.Abstract.IClient.IsConnected
  href: NitroxClient.Communication.Abstract.IClient.IsConnected.html#NitroxClient_Communication_Abstract_IClient_IsConnected
  name: IsConnected
  nameWithType: IClient.IsConnected
  fullName: NitroxClient.Communication.Abstract.IClient.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NitroxClient.Communication.Abstract.IClient.StartAsync*
  commentId: Overload:NitroxClient.Communication.Abstract.IClient.StartAsync
  href: NitroxClient.Communication.Abstract.IClient.StartAsync.html#NitroxClient_Communication_Abstract_IClient_StartAsync_System_String_System_Int32_
  name: StartAsync
  nameWithType: IClient.StartAsync
  fullName: NitroxClient.Communication.Abstract.IClient.StartAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: NitroxClient.Communication.Abstract.IClient.Stop*
  commentId: Overload:NitroxClient.Communication.Abstract.IClient.Stop
  href: NitroxClient.Communication.Abstract.IClient.Stop.html#NitroxClient_Communication_Abstract_IClient_Stop
  name: Stop
  nameWithType: IClient.Stop
  fullName: NitroxClient.Communication.Abstract.IClient.Stop
- uid: NitroxClient.Communication.Abstract.IClient.PollEvents*
  commentId: Overload:NitroxClient.Communication.Abstract.IClient.PollEvents
  href: NitroxClient.Communication.Abstract.IClient.PollEvents.html#NitroxClient_Communication_Abstract_IClient_PollEvents
  name: PollEvents
  nameWithType: IClient.PollEvents
  fullName: NitroxClient.Communication.Abstract.IClient.PollEvents
- uid: NitroxClient.Communication.Abstract.IClient.Send*
  commentId: Overload:NitroxClient.Communication.Abstract.IClient.Send
  href: NitroxClient.Communication.Abstract.IClient.Send.html#NitroxClient_Communication_Abstract_IClient_Send_NitroxModel_Packets_Packet_
  name: Send
  nameWithType: IClient.Send
  fullName: NitroxClient.Communication.Abstract.IClient.Send
- uid: NitroxModel.Packets.Packet
  commentId: T:NitroxModel.Packets.Packet
  parent: NitroxModel.Packets
  href: NitroxModel.Packets.Packet.html
  name: Packet
  nameWithType: Packet
  fullName: NitroxModel.Packets.Packet
- uid: NitroxModel.Packets
  commentId: N:NitroxModel.Packets
  href: NitroxModel.html
  name: NitroxModel.Packets
  nameWithType: NitroxModel.Packets
  fullName: NitroxModel.Packets
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.Packets
    name: Packets
    href: NitroxModel.Packets.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.Packets
    name: Packets
    href: NitroxModel.Packets.html
memberLayout: SeparatePages
