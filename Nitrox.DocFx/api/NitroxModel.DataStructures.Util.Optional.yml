### YamlMime:ManagedReference
items:
- uid: NitroxModel.DataStructures.Util.Optional
  commentId: T:NitroxModel.DataStructures.Util.Optional
  id: Optional
  parent: NitroxModel.DataStructures.Util
  children:
  - NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition``1(System.Func{``0,System.Boolean})
  - NitroxModel.DataStructures.Util.Optional.Empty
  - NitroxModel.DataStructures.Util.Optional.OfNullable``1(``0)
  - NitroxModel.DataStructures.Util.Optional.Of``1(``0)
  langs:
  - csharp
  - vb
  name: Optional
  nameWithType: Optional
  fullName: NitroxModel.DataStructures.Util.Optional
  type: Class
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Optional
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 163
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: public static class Optional
    content.vb: Public Module [Optional]
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: NitroxModel.DataStructures.Util.Optional.Empty
  commentId: P:NitroxModel.DataStructures.Util.Optional.Empty
  id: Empty
  parent: NitroxModel.DataStructures.Util.Optional
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Optional.Empty
  fullName: NitroxModel.DataStructures.Util.Optional.Empty
  type: Property
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Empty
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 167
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: public static OptionalEmpty Empty { get; }
    parameters: []
    return:
      type: NitroxModel.DataStructures.Util.OptionalEmpty
    content.vb: Public Shared ReadOnly Property Empty As OptionalEmpty
  overload: NitroxModel.DataStructures.Util.Optional.Empty*
- uid: NitroxModel.DataStructures.Util.Optional.Of``1(``0)
  commentId: M:NitroxModel.DataStructures.Util.Optional.Of``1(``0)
  id: Of``1(``0)
  parent: NitroxModel.DataStructures.Util.Optional
  langs:
  - csharp
  - vb
  name: Of<T>(T)
  nameWithType: Optional.Of<T>(T)
  fullName: NitroxModel.DataStructures.Util.Optional.Of<T>(T)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Of
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 170
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: 'public static Optional<T> Of<T>(T value) where T : class'
    parameters:
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: NitroxModel.DataStructures.Util.Optional{{T}}
    content.vb: Public Shared Function [Of](Of T As Class)(value As T) As [Optional](Of T)
  overload: NitroxModel.DataStructures.Util.Optional.Of*
  nameWithType.vb: Optional.Of(Of T)(T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional.Of(Of T)(T)
  name.vb: Of(Of T)(T)
- uid: NitroxModel.DataStructures.Util.Optional.OfNullable``1(``0)
  commentId: M:NitroxModel.DataStructures.Util.Optional.OfNullable``1(``0)
  id: OfNullable``1(``0)
  parent: NitroxModel.DataStructures.Util.Optional
  langs:
  - csharp
  - vb
  name: OfNullable<T>(T)
  nameWithType: Optional.OfNullable<T>(T)
  fullName: NitroxModel.DataStructures.Util.Optional.OfNullable<T>(T)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: OfNullable
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 171
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  syntax:
    content: 'public static Optional<T> OfNullable<T>(T value) where T : class'
    parameters:
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: NitroxModel.DataStructures.Util.Optional{{T}}
    content.vb: Public Shared Function OfNullable(Of T As Class)(value As T) As [Optional](Of T)
  overload: NitroxModel.DataStructures.Util.Optional.OfNullable*
  nameWithType.vb: Optional.OfNullable(Of T)(T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional.OfNullable(Of T)(T)
  name.vb: OfNullable(Of T)(T)
- uid: NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition``1(System.Func{``0,System.Boolean})
  commentId: M:NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition``1(System.Func{``0,System.Boolean})
  id: ApplyHasValueCondition``1(System.Func{``0,System.Boolean})
  parent: NitroxModel.DataStructures.Util.Optional
  langs:
  - csharp
  - vb
  name: ApplyHasValueCondition<T>(Func<T, bool>)
  nameWithType: Optional.ApplyHasValueCondition<T>(Func<T, bool>)
  fullName: NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition<T>(System.Func<T, bool>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/Optional.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ApplyHasValueCondition
    path: ../NitroxModel/DataStructures/Optional.cs
    startLine: 182
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures.Util
  summary: >-
    Adds a condition to the optional of the given type that is checked whenever <xref href="NitroxModel.DataStructures.Util.Optional%601.HasValue" data-throw-if-not-resolved="false"></xref> is

    checked.
  example: []
  syntax:
    content: 'public static void ApplyHasValueCondition<T>(Func<T, bool> hasValueCondition) where T : class'
    parameters:
    - id: hasValueCondition
      type: System.Func{{T},System.Boolean}
      description: Condition to add to the <xref href="NitroxModel.DataStructures.Util.Optional%601.HasValue" data-throw-if-not-resolved="false"></xref> check.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub ApplyHasValueCondition(Of T As Class)(hasValueCondition As Func(Of T, Boolean))
  overload: NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition*
  nameWithType.vb: Optional.ApplyHasValueCondition(Of T)(Func(Of T, Boolean))
  fullName.vb: NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition(Of T)(System.Func(Of T, Boolean))
  name.vb: ApplyHasValueCondition(Of T)(Func(Of T, Boolean))
references:
- uid: NitroxModel.DataStructures.Util
  commentId: N:NitroxModel.DataStructures.Util
  href: NitroxModel.html
  name: NitroxModel.DataStructures.Util
  nameWithType: NitroxModel.DataStructures.Util
  fullName: NitroxModel.DataStructures.Util
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.Util
    name: Util
    href: NitroxModel.DataStructures.Util.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.Util
    name: Util
    href: NitroxModel.DataStructures.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NitroxModel.DataStructures.Util.Optional.Empty*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional.Empty
  href: NitroxModel.DataStructures.Util.Optional.Empty.html#NitroxModel_DataStructures_Util_Optional_Empty
  name: Empty
  nameWithType: Optional.Empty
  fullName: NitroxModel.DataStructures.Util.Optional.Empty
- uid: NitroxModel.DataStructures.Util.OptionalEmpty
  commentId: T:NitroxModel.DataStructures.Util.OptionalEmpty
  parent: NitroxModel.DataStructures.Util
  href: NitroxModel.DataStructures.Util.OptionalEmpty.html
  name: OptionalEmpty
  nameWithType: OptionalEmpty
  fullName: NitroxModel.DataStructures.Util.OptionalEmpty
- uid: NitroxModel.DataStructures.Util.Optional.Of*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional.Of
  href: NitroxModel.DataStructures.Util.Optional.Of.html#NitroxModel_DataStructures_Util_Optional_Of__1___0_
  name: Of
  nameWithType: Optional.Of
  fullName: NitroxModel.DataStructures.Util.Optional.Of
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: NitroxModel.DataStructures.Util.Optional{{T}}
  commentId: T:NitroxModel.DataStructures.Util.Optional{``0}
  parent: NitroxModel.DataStructures.Util
  definition: NitroxModel.DataStructures.Util.Optional`1
  href: NitroxModel.DataStructures.Util.Optional-1.html
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: NitroxModel.DataStructures.Util.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NitroxModel.DataStructures.Util.Optional`1
  commentId: T:NitroxModel.DataStructures.Util.Optional`1
  parent: NitroxModel.DataStructures.Util
  href: NitroxModel.DataStructures.Util.Optional-1.html
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: NitroxModel.DataStructures.Util.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.Util.Optional.OfNullable*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional.OfNullable
  href: NitroxModel.DataStructures.Util.Optional.OfNullable.html#NitroxModel_DataStructures_Util_Optional_OfNullable__1___0_
  name: OfNullable
  nameWithType: Optional.OfNullable
  fullName: NitroxModel.DataStructures.Util.Optional.OfNullable
- uid: NitroxModel.DataStructures.Util.Optional`1.HasValue
  commentId: P:NitroxModel.DataStructures.Util.Optional`1.HasValue
  href: NitroxModel.DataStructures.Util.Optional-1.HasValue.html#NitroxModel_DataStructures_Util_Optional_1_HasValue
  name: HasValue
  nameWithType: Optional<T>.HasValue
  fullName: NitroxModel.DataStructures.Util.Optional<T>.HasValue
  nameWithType.vb: Optional(Of T).HasValue
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T).HasValue
- uid: NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition*
  commentId: Overload:NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition
  href: NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition.html#NitroxModel_DataStructures_Util_Optional_ApplyHasValueCondition__1_System_Func___0_System_Boolean__
  name: ApplyHasValueCondition
  nameWithType: Optional.ApplyHasValueCondition
  fullName: NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, bool>
  nameWithType: Func<T, bool>
  fullName: System.Func<T, bool>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
memberLayout: SeparatePages
