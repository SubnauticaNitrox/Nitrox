### YamlMime:ManagedReference
items:
- uid: NitroxServer.GameLogic.Entities.EntityRegistry
  commentId: T:NitroxServer.GameLogic.Entities.EntityRegistry
  id: EntityRegistry
  parent: NitroxServer.GameLogic.Entities
  children:
  - NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities(System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity})
  - NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate(System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity})
  - NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity(NitroxModel.DataStructures.GameLogic.Entity)
  - NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate(NitroxModel.DataStructures.GameLogic.Entity)
  - NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent(NitroxModel.DataStructures.GameLogic.Entity)
  - NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities(System.Boolean)
  - NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities(System.Collections.Generic.List{NitroxModel.DataStructures.NitroxId})
  - NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities``1
  - NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById(NitroxModel.DataStructures.NitroxId)
  - NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById``1(NitroxModel.DataStructures.NitroxId)
  - NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity(NitroxModel.DataStructures.NitroxId)
  - NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent(NitroxModel.DataStructures.GameLogic.Entity)
  - NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.GameLogic.Entity)
  - NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.NitroxId)
  - NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.GameLogic.Entity)
  - NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.NitroxId)
  - NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.GameLogic.Entity,System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean})
  - NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.NitroxId,System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean})
  - NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById``1(NitroxModel.DataStructures.NitroxId,``0@)
  langs:
  - csharp
  - vb
  name: EntityRegistry
  nameWithType: EntityRegistry
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry
  type: Class
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: EntityRegistry
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 11
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public class EntityRegistry
    content.vb: Public Class EntityRegistry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById``1(NitroxModel.DataStructures.NitroxId)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById``1(NitroxModel.DataStructures.NitroxId)
  id: GetEntityById``1(NitroxModel.DataStructures.NitroxId)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: GetEntityById<T>(NitroxId)
  nameWithType: EntityRegistry.GetEntityById<T>(NitroxId)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById<T>(NitroxModel.DataStructures.NitroxId)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetEntityById
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 15
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: 'public Optional<T> GetEntityById<T>(NitroxId id) where T : Entity'
    parameters:
    - id: id
      type: NitroxModel.DataStructures.NitroxId
    typeParameters:
    - id: T
    return:
      type: NitroxModel.DataStructures.Util.Optional{{T}}
    content.vb: Public Function GetEntityById(Of T As Entity)(id As NitroxId) As [Optional](Of T)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById*
  nameWithType.vb: EntityRegistry.GetEntityById(Of T)(NitroxId)
  fullName.vb: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById(Of T)(NitroxModel.DataStructures.NitroxId)
  name.vb: GetEntityById(Of T)(NitroxId)
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById(NitroxModel.DataStructures.NitroxId)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById(NitroxModel.DataStructures.NitroxId)
  id: GetEntityById(NitroxModel.DataStructures.NitroxId)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: GetEntityById(NitroxId)
  nameWithType: EntityRegistry.GetEntityById(NitroxId)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById(NitroxModel.DataStructures.NitroxId)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetEntityById
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 22
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public Optional<Entity> GetEntityById(NitroxId id)
    parameters:
    - id: id
      type: NitroxModel.DataStructures.NitroxId
    return:
      type: NitroxModel.DataStructures.Util.Optional{NitroxModel.DataStructures.GameLogic.Entity}
    content.vb: Public Function GetEntityById(id As NitroxId) As [Optional](Of Entity)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById*
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById``1(NitroxModel.DataStructures.NitroxId,``0@)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById``1(NitroxModel.DataStructures.NitroxId,``0@)
  id: TryGetEntityById``1(NitroxModel.DataStructures.NitroxId,``0@)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: TryGetEntityById<T>(NitroxId, out T)
  nameWithType: EntityRegistry.TryGetEntityById<T>(NitroxId, out T)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById<T>(NitroxModel.DataStructures.NitroxId, out T)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: TryGetEntityById
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 27
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: 'public bool TryGetEntityById<T>(NitroxId id, out T entity) where T : Entity'
    parameters:
    - id: id
      type: NitroxModel.DataStructures.NitroxId
    - id: entity
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function TryGetEntityById(Of T As Entity)(id As NitroxId, entity As T) As Boolean
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById*
  nameWithType.vb: EntityRegistry.TryGetEntityById(Of T)(NitroxId, T)
  fullName.vb: NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById(Of T)(NitroxModel.DataStructures.NitroxId, T)
  name.vb: TryGetEntityById(Of T)(NitroxId, T)
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities(System.Boolean)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities(System.Boolean)
  id: GetAllEntities(System.Boolean)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: GetAllEntities(bool)
  nameWithType: EntityRegistry.GetAllEntities(bool)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities(bool)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetAllEntities
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 38
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public List<Entity> GetAllEntities(bool exceptGlobalRoot = false)
    parameters:
    - id: exceptGlobalRoot
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.Entity}
    content.vb: Public Function GetAllEntities(exceptGlobalRoot As Boolean = False) As List(Of Entity)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities*
  nameWithType.vb: EntityRegistry.GetAllEntities(Boolean)
  fullName.vb: NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities(Boolean)
  name.vb: GetAllEntities(Boolean)
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities(System.Collections.Generic.List{NitroxModel.DataStructures.NitroxId})
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities(System.Collections.Generic.List{NitroxModel.DataStructures.NitroxId})
  id: GetEntities(System.Collections.Generic.List{NitroxModel.DataStructures.NitroxId})
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: GetEntities(List<NitroxId>)
  nameWithType: EntityRegistry.GetEntities(List<NitroxId>)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities(System.Collections.Generic.List<NitroxModel.DataStructures.NitroxId>)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetEntities
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 47
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public List<Entity> GetEntities(List<NitroxId> ids)
    parameters:
    - id: ids
      type: System.Collections.Generic.List{NitroxModel.DataStructures.NitroxId}
    return:
      type: System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.Entity}
    content.vb: Public Function GetEntities(ids As List(Of NitroxId)) As List(Of Entity)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities*
  nameWithType.vb: EntityRegistry.GetEntities(List(Of NitroxId))
  fullName.vb: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities(System.Collections.Generic.List(Of NitroxModel.DataStructures.NitroxId))
  name.vb: GetEntities(List(Of NitroxId))
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities``1
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities``1
  id: GetEntities``1
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: GetEntities<T>()
  nameWithType: EntityRegistry.GetEntities<T>()
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities<T>()
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetEntities
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 56
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public List<T> GetEntities<T>()
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Function GetEntities(Of T)() As List(Of T)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities*
  nameWithType.vb: EntityRegistry.GetEntities(Of T)()
  fullName.vb: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities(Of T)()
  name.vb: GetEntities(Of T)()
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity(NitroxModel.DataStructures.GameLogic.Entity)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity(NitroxModel.DataStructures.GameLogic.Entity)
  id: AddEntity(NitroxModel.DataStructures.GameLogic.Entity)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: AddEntity(Entity)
  nameWithType: EntityRegistry.AddEntity(Entity)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity(NitroxModel.DataStructures.GameLogic.Entity)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AddEntity
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 61
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void AddEntity(Entity entity)
    parameters:
    - id: entity
      type: NitroxModel.DataStructures.GameLogic.Entity
    content.vb: Public Sub AddEntity(entity As Entity)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity*
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate(NitroxModel.DataStructures.GameLogic.Entity)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate(NitroxModel.DataStructures.GameLogic.Entity)
  id: AddOrUpdate(NitroxModel.DataStructures.GameLogic.Entity)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: AddOrUpdate(Entity)
  nameWithType: EntityRegistry.AddOrUpdate(Entity)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate(NitroxModel.DataStructures.GameLogic.Entity)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AddOrUpdate
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 70
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void AddOrUpdate(Entity entity)
    parameters:
    - id: entity
      type: NitroxModel.DataStructures.GameLogic.Entity
    content.vb: Public Sub AddOrUpdate(entity As Entity)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate*
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities(System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity})
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities(System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity})
  id: AddEntities(System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity})
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: AddEntities(IEnumerable<Entity>)
  nameWithType: EntityRegistry.AddEntities(IEnumerable<Entity>)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities(System.Collections.Generic.IEnumerable<NitroxModel.DataStructures.GameLogic.Entity>)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AddEntities
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 85
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void AddEntities(IEnumerable<Entity> entities)
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity}
    content.vb: Public Sub AddEntities(entities As IEnumerable(Of Entity))
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities*
  nameWithType.vb: EntityRegistry.AddEntities(IEnumerable(Of Entity))
  fullName.vb: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities(System.Collections.Generic.IEnumerable(Of NitroxModel.DataStructures.GameLogic.Entity))
  name.vb: AddEntities(IEnumerable(Of Entity))
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate(System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity})
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate(System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity})
  id: AddEntitiesIgnoringDuplicate(System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity})
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: AddEntitiesIgnoringDuplicate(IEnumerable<Entity>)
  nameWithType: EntityRegistry.AddEntitiesIgnoringDuplicate(IEnumerable<Entity>)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate(System.Collections.Generic.IEnumerable<NitroxModel.DataStructures.GameLogic.Entity>)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AddEntitiesIgnoringDuplicate
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 98
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  summary: >-
    Used for situations when some children may be new but others may not be. For

    example a dropped InventoryEntity turns into a WorldEntity but keeps its 

    battery inside (already known).
  example: []
  syntax:
    content: public void AddEntitiesIgnoringDuplicate(IEnumerable<Entity> entities)
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity}
    content.vb: Public Sub AddEntitiesIgnoringDuplicate(entities As IEnumerable(Of Entity))
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate*
  nameWithType.vb: EntityRegistry.AddEntitiesIgnoringDuplicate(IEnumerable(Of Entity))
  fullName.vb: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate(System.Collections.Generic.IEnumerable(Of NitroxModel.DataStructures.GameLogic.Entity))
  name.vb: AddEntitiesIgnoringDuplicate(IEnumerable(Of Entity))
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity(NitroxModel.DataStructures.NitroxId)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity(NitroxModel.DataStructures.NitroxId)
  id: RemoveEntity(NitroxModel.DataStructures.NitroxId)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: RemoveEntity(NitroxId)
  nameWithType: EntityRegistry.RemoveEntity(NitroxId)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity(NitroxModel.DataStructures.NitroxId)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: RemoveEntity
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 107
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public Optional<Entity> RemoveEntity(NitroxId id)
    parameters:
    - id: id
      type: NitroxModel.DataStructures.NitroxId
    return:
      type: NitroxModel.DataStructures.Util.Optional{NitroxModel.DataStructures.GameLogic.Entity}
    content.vb: Public Function RemoveEntity(id As NitroxId) As [Optional](Of Entity)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity*
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent(NitroxModel.DataStructures.GameLogic.Entity)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent(NitroxModel.DataStructures.GameLogic.Entity)
  id: AddToParent(NitroxModel.DataStructures.GameLogic.Entity)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: AddToParent(Entity)
  nameWithType: EntityRegistry.AddToParent(Entity)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent(NitroxModel.DataStructures.GameLogic.Entity)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: AddToParent
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 122
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void AddToParent(Entity entity)
    parameters:
    - id: entity
      type: NitroxModel.DataStructures.GameLogic.Entity
    content.vb: Public Sub AddToParent(entity As Entity)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent*
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent(NitroxModel.DataStructures.GameLogic.Entity)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent(NitroxModel.DataStructures.GameLogic.Entity)
  id: RemoveFromParent(NitroxModel.DataStructures.GameLogic.Entity)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: RemoveFromParent(Entity)
  nameWithType: EntityRegistry.RemoveFromParent(Entity)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent(NitroxModel.DataStructures.GameLogic.Entity)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: RemoveFromParent
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 135
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void RemoveFromParent(Entity entity)
    parameters:
    - id: entity
      type: NitroxModel.DataStructures.GameLogic.Entity
    content.vb: Public Sub RemoveFromParent(entity As Entity)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent*
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.NitroxId)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.NitroxId)
  id: ReparentEntity(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.NitroxId)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: ReparentEntity(NitroxId, NitroxId)
  nameWithType: EntityRegistry.ReparentEntity(NitroxId, NitroxId)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.NitroxId, NitroxModel.DataStructures.NitroxId)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ReparentEntity
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 146
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void ReparentEntity(NitroxId entityId, NitroxId newParentId)
    parameters:
    - id: entityId
      type: NitroxModel.DataStructures.NitroxId
    - id: newParentId
      type: NitroxModel.DataStructures.NitroxId
    content.vb: Public Sub ReparentEntity(entityId As NitroxId, newParentId As NitroxId)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity*
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.GameLogic.Entity)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.GameLogic.Entity)
  id: ReparentEntity(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.GameLogic.Entity)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: ReparentEntity(NitroxId, Entity)
  nameWithType: EntityRegistry.ReparentEntity(NitroxId, Entity)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.NitroxId, NitroxModel.DataStructures.GameLogic.Entity)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ReparentEntity
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 156
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void ReparentEntity(NitroxId entityId, Entity newParent)
    parameters:
    - id: entityId
      type: NitroxModel.DataStructures.NitroxId
    - id: newParent
      type: NitroxModel.DataStructures.GameLogic.Entity
    content.vb: Public Sub ReparentEntity(entityId As NitroxId, newParent As Entity)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity*
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.NitroxId)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.NitroxId)
  id: ReparentEntity(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.NitroxId)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: ReparentEntity(Entity, NitroxId)
  nameWithType: EntityRegistry.ReparentEntity(Entity, NitroxId)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.GameLogic.Entity, NitroxModel.DataStructures.NitroxId)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ReparentEntity
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 166
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void ReparentEntity(Entity entity, NitroxId newParentId)
    parameters:
    - id: entity
      type: NitroxModel.DataStructures.GameLogic.Entity
    - id: newParentId
      type: NitroxModel.DataStructures.NitroxId
    content.vb: Public Sub ReparentEntity(entity As Entity, newParentId As NitroxId)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity*
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.GameLogic.Entity)
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.GameLogic.Entity)
  id: ReparentEntity(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.GameLogic.Entity)
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: ReparentEntity(Entity, Entity)
  nameWithType: EntityRegistry.ReparentEntity(Entity, Entity)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity(NitroxModel.DataStructures.GameLogic.Entity, NitroxModel.DataStructures.GameLogic.Entity)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ReparentEntity
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 172
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void ReparentEntity(Entity entity, Entity newParent)
    parameters:
    - id: entity
      type: NitroxModel.DataStructures.GameLogic.Entity
    - id: newParent
      type: NitroxModel.DataStructures.GameLogic.Entity
    content.vb: Public Sub ReparentEntity(entity As Entity, newParent As Entity)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity*
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.NitroxId,System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean})
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.NitroxId,System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean})
  id: TransferChildren(NitroxModel.DataStructures.NitroxId,NitroxModel.DataStructures.NitroxId,System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean})
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: TransferChildren(NitroxId, NitroxId, Func<Entity, bool>)
  nameWithType: EntityRegistry.TransferChildren(NitroxId, NitroxId, Func<Entity, bool>)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren(NitroxModel.DataStructures.NitroxId, NitroxModel.DataStructures.NitroxId, System.Func<NitroxModel.DataStructures.GameLogic.Entity, bool>)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: TransferChildren
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 183
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void TransferChildren(NitroxId parentId, NitroxId newParentId, Func<Entity, bool> filter = null)
    parameters:
    - id: parentId
      type: NitroxModel.DataStructures.NitroxId
    - id: newParentId
      type: NitroxModel.DataStructures.NitroxId
    - id: filter
      type: System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean}
    content.vb: Public Sub TransferChildren(parentId As NitroxId, newParentId As NitroxId, filter As Func(Of Entity, Boolean) = Nothing)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren*
  nameWithType.vb: EntityRegistry.TransferChildren(NitroxId, NitroxId, Func(Of Entity, Boolean))
  fullName.vb: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren(NitroxModel.DataStructures.NitroxId, NitroxModel.DataStructures.NitroxId, System.Func(Of NitroxModel.DataStructures.GameLogic.Entity, Boolean))
  name.vb: TransferChildren(NitroxId, NitroxId, Func(Of Entity, Boolean))
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.GameLogic.Entity,System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean})
  commentId: M:NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.GameLogic.Entity,System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean})
  id: TransferChildren(NitroxModel.DataStructures.GameLogic.Entity,NitroxModel.DataStructures.GameLogic.Entity,System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean})
  parent: NitroxServer.GameLogic.Entities.EntityRegistry
  langs:
  - csharp
  - vb
  name: TransferChildren(Entity, Entity, Func<Entity, bool>)
  nameWithType: EntityRegistry.TransferChildren(Entity, Entity, Func<Entity, bool>)
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren(NitroxModel.DataStructures.GameLogic.Entity, NitroxModel.DataStructures.GameLogic.Entity, System.Func<NitroxModel.DataStructures.GameLogic.Entity, bool>)
  type: Method
  source:
    remote:
      path: NitroxServer/GameLogic/Entities/EntityRegistry.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: TransferChildren
    path: ../NitroxServer/GameLogic/Entities/EntityRegistry.cs
    startLine: 198
  assemblies:
  - NitroxServer
  namespace: NitroxServer.GameLogic.Entities
  syntax:
    content: public void TransferChildren(Entity parent, Entity newParent, Func<Entity, bool> filter = null)
    parameters:
    - id: parent
      type: NitroxModel.DataStructures.GameLogic.Entity
    - id: newParent
      type: NitroxModel.DataStructures.GameLogic.Entity
    - id: filter
      type: System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean}
    content.vb: Public Sub TransferChildren(parent As Entity, newParent As Entity, filter As Func(Of Entity, Boolean) = Nothing)
  overload: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren*
  nameWithType.vb: EntityRegistry.TransferChildren(Entity, Entity, Func(Of Entity, Boolean))
  fullName.vb: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren(NitroxModel.DataStructures.GameLogic.Entity, NitroxModel.DataStructures.GameLogic.Entity, System.Func(Of NitroxModel.DataStructures.GameLogic.Entity, Boolean))
  name.vb: TransferChildren(Entity, Entity, Func(Of Entity, Boolean))
references:
- uid: NitroxServer.GameLogic.Entities
  commentId: N:NitroxServer.GameLogic.Entities
  href: NitroxServer.html
  name: NitroxServer.GameLogic.Entities
  nameWithType: NitroxServer.GameLogic.Entities
  fullName: NitroxServer.GameLogic.Entities
  spec.csharp:
  - uid: NitroxServer
    name: NitroxServer
    href: NitroxServer.html
  - name: .
  - uid: NitroxServer.GameLogic
    name: GameLogic
    href: NitroxServer.GameLogic.html
  - name: .
  - uid: NitroxServer.GameLogic.Entities
    name: Entities
    href: NitroxServer.GameLogic.Entities.html
  spec.vb:
  - uid: NitroxServer
    name: NitroxServer
    href: NitroxServer.html
  - name: .
  - uid: NitroxServer.GameLogic
    name: GameLogic
    href: NitroxServer.GameLogic.html
  - name: .
  - uid: NitroxServer.GameLogic.Entities
    name: Entities
    href: NitroxServer.GameLogic.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById
  href: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById.html#NitroxServer_GameLogic_Entities_EntityRegistry_GetEntityById__1_NitroxModel_DataStructures_NitroxId_
  name: GetEntityById
  nameWithType: EntityRegistry.GetEntityById
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById
- uid: NitroxModel.DataStructures.NitroxId
  commentId: T:NitroxModel.DataStructures.NitroxId
  parent: NitroxModel.DataStructures
  href: NitroxModel.DataStructures.NitroxId.html
  name: NitroxId
  nameWithType: NitroxId
  fullName: NitroxModel.DataStructures.NitroxId
- uid: NitroxModel.DataStructures.Util.Optional{{T}}
  commentId: T:NitroxModel.DataStructures.Util.Optional{``0}
  parent: NitroxModel.DataStructures.Util
  definition: NitroxModel.DataStructures.Util.Optional`1
  href: NitroxModel.DataStructures.Util.Optional-1.html
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: NitroxModel.DataStructures.Util.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures
  commentId: N:NitroxModel.DataStructures
  href: NitroxModel.html
  name: NitroxModel.DataStructures
  nameWithType: NitroxModel.DataStructures
  fullName: NitroxModel.DataStructures
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
- uid: NitroxModel.DataStructures.Util.Optional`1
  commentId: T:NitroxModel.DataStructures.Util.Optional`1
  parent: NitroxModel.DataStructures.Util
  href: NitroxModel.DataStructures.Util.Optional-1.html
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: NitroxModel.DataStructures.Util.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
    href: NitroxModel.DataStructures.Util.Optional-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.Util
  commentId: N:NitroxModel.DataStructures.Util
  href: NitroxModel.html
  name: NitroxModel.DataStructures.Util
  nameWithType: NitroxModel.DataStructures.Util
  fullName: NitroxModel.DataStructures.Util
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.Util
    name: Util
    href: NitroxModel.DataStructures.Util.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.Util
    name: Util
    href: NitroxModel.DataStructures.Util.html
- uid: NitroxModel.DataStructures.Util.Optional{NitroxModel.DataStructures.GameLogic.Entity}
  commentId: T:NitroxModel.DataStructures.Util.Optional{NitroxModel.DataStructures.GameLogic.Entity}
  parent: NitroxModel.DataStructures.Util
  definition: NitroxModel.DataStructures.Util.Optional`1
  name: Optional<Entity>
  nameWithType: Optional<Entity>
  fullName: NitroxModel.DataStructures.Util.Optional<NitroxModel.DataStructures.GameLogic.Entity>
  nameWithType.vb: Optional(Of Entity)
  fullName.vb: NitroxModel.DataStructures.Util.Optional(Of NitroxModel.DataStructures.GameLogic.Entity)
  name.vb: Optional(Of Entity)
  spec.csharp:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
  - name: <
  - uid: NitroxModel.DataStructures.GameLogic.Entity
    name: Entity
  - name: '>'
  spec.vb:
  - uid: NitroxModel.DataStructures.Util.Optional`1
    name: Optional
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.GameLogic.Entity
    name: Entity
  - name: )
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById
  href: NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById.html#NitroxServer_GameLogic_Entities_EntityRegistry_TryGetEntityById__1_NitroxModel_DataStructures_NitroxId___0__
  name: TryGetEntityById
  nameWithType: EntityRegistry.TryGetEntityById
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities
  href: NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities.html#NitroxServer_GameLogic_Entities_EntityRegistry_GetAllEntities_System_Boolean_
  name: GetAllEntities
  nameWithType: EntityRegistry.GetAllEntities
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities
- uid: System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.Entity}
  commentId: T:System.Collections.Generic.List{NitroxModel.DataStructures.GameLogic.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Entity>
  nameWithType: List<Entity>
  fullName: System.Collections.Generic.List<NitroxModel.DataStructures.GameLogic.Entity>
  nameWithType.vb: List(Of Entity)
  fullName.vb: System.Collections.Generic.List(Of NitroxModel.DataStructures.GameLogic.Entity)
  name.vb: List(Of Entity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: NitroxModel.DataStructures.GameLogic.Entity
    name: Entity
    href: NitroxModel.DataStructures.GameLogic.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.GameLogic.Entity
    name: Entity
    href: NitroxModel.DataStructures.GameLogic.Entity.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities
  href: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities.html#NitroxServer_GameLogic_Entities_EntityRegistry_GetEntities_System_Collections_Generic_List_NitroxModel_DataStructures_NitroxId__
  name: GetEntities
  nameWithType: EntityRegistry.GetEntities
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities
- uid: System.Collections.Generic.List{NitroxModel.DataStructures.NitroxId}
  commentId: T:System.Collections.Generic.List{NitroxModel.DataStructures.NitroxId}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<NitroxId>
  nameWithType: List<NitroxId>
  fullName: System.Collections.Generic.List<NitroxModel.DataStructures.NitroxId>
  nameWithType.vb: List(Of NitroxId)
  fullName.vb: System.Collections.Generic.List(Of NitroxModel.DataStructures.NitroxId)
  name.vb: List(Of NitroxId)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: NitroxModel.DataStructures.NitroxId
    name: NitroxId
    href: NitroxModel.DataStructures.NitroxId.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.NitroxId
    name: NitroxId
    href: NitroxModel.DataStructures.NitroxId.html
  - name: )
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity
  href: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity.html#NitroxServer_GameLogic_Entities_EntityRegistry_AddEntity_NitroxModel_DataStructures_GameLogic_Entity_
  name: AddEntity
  nameWithType: EntityRegistry.AddEntity
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity
- uid: NitroxModel.DataStructures.GameLogic.Entity
  commentId: T:NitroxModel.DataStructures.GameLogic.Entity
  parent: NitroxModel.DataStructures.GameLogic
  href: NitroxModel.DataStructures.GameLogic.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: NitroxModel.DataStructures.GameLogic.Entity
- uid: NitroxModel.DataStructures.GameLogic
  commentId: N:NitroxModel.DataStructures.GameLogic
  href: NitroxModel.html
  name: NitroxModel.DataStructures.GameLogic
  nameWithType: NitroxModel.DataStructures.GameLogic
  fullName: NitroxModel.DataStructures.GameLogic
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.GameLogic
    name: GameLogic
    href: NitroxModel.DataStructures.GameLogic.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  - name: .
  - uid: NitroxModel.DataStructures.GameLogic
    name: GameLogic
    href: NitroxModel.DataStructures.GameLogic.html
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate
  href: NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate.html#NitroxServer_GameLogic_Entities_EntityRegistry_AddOrUpdate_NitroxModel_DataStructures_GameLogic_Entity_
  name: AddOrUpdate
  nameWithType: EntityRegistry.AddOrUpdate
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities
  href: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities.html#NitroxServer_GameLogic_Entities_EntityRegistry_AddEntities_System_Collections_Generic_IEnumerable_NitroxModel_DataStructures_GameLogic_Entity__
  name: AddEntities
  nameWithType: EntityRegistry.AddEntities
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities
- uid: System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity}
  commentId: T:System.Collections.Generic.IEnumerable{NitroxModel.DataStructures.GameLogic.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Entity>
  nameWithType: IEnumerable<Entity>
  fullName: System.Collections.Generic.IEnumerable<NitroxModel.DataStructures.GameLogic.Entity>
  nameWithType.vb: IEnumerable(Of Entity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NitroxModel.DataStructures.GameLogic.Entity)
  name.vb: IEnumerable(Of Entity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NitroxModel.DataStructures.GameLogic.Entity
    name: Entity
    href: NitroxModel.DataStructures.GameLogic.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.GameLogic.Entity
    name: Entity
    href: NitroxModel.DataStructures.GameLogic.Entity.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate
  href: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate.html#NitroxServer_GameLogic_Entities_EntityRegistry_AddEntitiesIgnoringDuplicate_System_Collections_Generic_IEnumerable_NitroxModel_DataStructures_GameLogic_Entity__
  name: AddEntitiesIgnoringDuplicate
  nameWithType: EntityRegistry.AddEntitiesIgnoringDuplicate
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity
  href: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity.html#NitroxServer_GameLogic_Entities_EntityRegistry_RemoveEntity_NitroxModel_DataStructures_NitroxId_
  name: RemoveEntity
  nameWithType: EntityRegistry.RemoveEntity
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent
  href: NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent.html#NitroxServer_GameLogic_Entities_EntityRegistry_AddToParent_NitroxModel_DataStructures_GameLogic_Entity_
  name: AddToParent
  nameWithType: EntityRegistry.AddToParent
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent
  href: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent.html#NitroxServer_GameLogic_Entities_EntityRegistry_RemoveFromParent_NitroxModel_DataStructures_GameLogic_Entity_
  name: RemoveFromParent
  nameWithType: EntityRegistry.RemoveFromParent
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity
  href: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity.html#NitroxServer_GameLogic_Entities_EntityRegistry_ReparentEntity_NitroxModel_DataStructures_NitroxId_NitroxModel_DataStructures_NitroxId_
  name: ReparentEntity
  nameWithType: EntityRegistry.ReparentEntity
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity
- uid: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren*
  commentId: Overload:NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren
  href: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren.html#NitroxServer_GameLogic_Entities_EntityRegistry_TransferChildren_NitroxModel_DataStructures_NitroxId_NitroxModel_DataStructures_NitroxId_System_Func_NitroxModel_DataStructures_GameLogic_Entity_System_Boolean__
  name: TransferChildren
  nameWithType: EntityRegistry.TransferChildren
  fullName: NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren
- uid: System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean}
  commentId: T:System.Func{NitroxModel.DataStructures.GameLogic.Entity,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Entity, bool>
  nameWithType: Func<Entity, bool>
  fullName: System.Func<NitroxModel.DataStructures.GameLogic.Entity, bool>
  nameWithType.vb: Func(Of Entity, Boolean)
  fullName.vb: System.Func(Of NitroxModel.DataStructures.GameLogic.Entity, Boolean)
  name.vb: Func(Of Entity, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: NitroxModel.DataStructures.GameLogic.Entity
    name: Entity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: NitroxModel.DataStructures.GameLogic.Entity
    name: Entity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
memberLayout: SeparatePages
