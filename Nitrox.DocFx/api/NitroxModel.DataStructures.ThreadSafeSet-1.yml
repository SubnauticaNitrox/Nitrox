### YamlMime:ManagedReference
items:
- uid: NitroxModel.DataStructures.ThreadSafeSet`1
  commentId: T:NitroxModel.DataStructures.ThreadSafeSet`1
  id: ThreadSafeSet`1
  parent: NitroxModel.DataStructures
  children:
  - NitroxModel.DataStructures.ThreadSafeSet`1.#ctor
  - NitroxModel.DataStructures.ThreadSafeSet`1.#ctor(System.Collections.Generic.HashSet{`0},System.Boolean)
  - NitroxModel.DataStructures.ThreadSafeSet`1.#ctor(`0[])
  - NitroxModel.DataStructures.ThreadSafeSet`1.Add(`0)
  - NitroxModel.DataStructures.ThreadSafeSet`1.Clear
  - NitroxModel.DataStructures.ThreadSafeSet`1.Clone
  - NitroxModel.DataStructures.ThreadSafeSet`1.Contains(`0)
  - NitroxModel.DataStructures.ThreadSafeSet`1.CopyTo(`0[],System.Int32)
  - NitroxModel.DataStructures.ThreadSafeSet`1.Count
  - NitroxModel.DataStructures.ThreadSafeSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.GetEnumerator
  - NitroxModel.DataStructures.ThreadSafeSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.IsReadOnly
  - NitroxModel.DataStructures.ThreadSafeSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.Remove(`0)
  - NitroxModel.DataStructures.ThreadSafeSet`1.RemoveAll(System.Predicate{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.Set(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  - NitroxModel.DataStructures.ThreadSafeSet`1.ToList
  - NitroxModel.DataStructures.ThreadSafeSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  langs:
  - csharp
  - vb
  name: ThreadSafeSet<T>
  nameWithType: ThreadSafeSet<T>
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>
  type: Class
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ThreadSafeSet
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 8
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: >-
      [DataContract]

      [Serializable]

      public class ThreadSafeSet<T> : ISet<T>, ICollection<T>, IEnumerable<T>, IEnumerable
    typeParameters:
    - id: T
    content.vb: >-
      <DataContract>

      <Serializable>

      Public Class ThreadSafeSet(Of T) Implements ISet(Of T), ICollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ISet{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Collections.Generic.IEnumerable{`0}.NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{{T}})
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: ThreadSafeSet(Of T)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T)
  name.vb: ThreadSafeSet(Of T)
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.#ctor
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.#ctor
  id: '#ctor'
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: ThreadSafeSet()
  nameWithType: ThreadSafeSet<T>.ThreadSafeSet()
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.ThreadSafeSet()
  type: Constructor
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: .ctor
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 25
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public ThreadSafeSet()
    content.vb: Public Sub New()
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.#ctor*
  nameWithType.vb: ThreadSafeSet(Of T).New()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).New()
  name.vb: New()
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.#ctor(System.Collections.Generic.HashSet{`0},System.Boolean)
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.#ctor(System.Collections.Generic.HashSet{`0},System.Boolean)
  id: '#ctor(System.Collections.Generic.HashSet{`0},System.Boolean)'
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: ThreadSafeSet(HashSet<T>, bool)
  nameWithType: ThreadSafeSet<T>.ThreadSafeSet(HashSet<T>, bool)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.ThreadSafeSet(System.Collections.Generic.HashSet<T>, bool)
  type: Constructor
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: .ctor
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 30
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public ThreadSafeSet(HashSet<T> set, bool createCopy = true)
    parameters:
    - id: set
      type: System.Collections.Generic.HashSet{{T}}
    - id: createCopy
      type: System.Boolean
    content.vb: Public Sub New([set] As HashSet(Of T), createCopy As Boolean = True)
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.#ctor*
  nameWithType.vb: ThreadSafeSet(Of T).New(HashSet(Of T), Boolean)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).New(System.Collections.Generic.HashSet(Of T), Boolean)
  name.vb: New(HashSet(Of T), Boolean)
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.#ctor(`0[])
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.#ctor(`0[])
  id: '#ctor(`0[])'
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: ThreadSafeSet(params T[])
  nameWithType: ThreadSafeSet<T>.ThreadSafeSet(params T[])
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.ThreadSafeSet(params T[])
  type: Constructor
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: .ctor
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 40
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public ThreadSafeSet(params T[] values)
    parameters:
    - id: values
      type: '{T}[]'
    content.vb: Public Sub New(ParamArray values As T())
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.#ctor*
  nameWithType.vb: ThreadSafeSet(Of T).New(ParamArray T())
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).New(ParamArray T())
  name.vb: New(ParamArray T())
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Count
  commentId: P:NitroxModel.DataStructures.ThreadSafeSet`1.Count
  id: Count
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ThreadSafeSet<T>.Count
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Count
  type: Property
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Count
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 45
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Gets the number of elements contained in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Count As Integer
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.Count*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  nameWithType.vb: ThreadSafeSet(Of T).Count
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Count
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IsReadOnly
  commentId: P:NitroxModel.DataStructures.ThreadSafeSet`1.IsReadOnly
  id: IsReadOnly
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ThreadSafeSet<T>.IsReadOnly
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: IsReadOnly
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 56
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Gets a value indicating whether the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  nameWithType.vb: ThreadSafeSet(Of T).IsReadOnly
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IsReadOnly
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Add(`0)
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.Add(`0)
  id: Add(`0)
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: ThreadSafeSet<T>.Add(T)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Add(T)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Add
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 60
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public bool Add(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Add(item As T) As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.Add*
  nameWithType.vb: ThreadSafeSet(Of T).Add(T)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Add(T)
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  id: UnionWith(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: UnionWith(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.UnionWith(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: UnionWith
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 68
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Modifies the current set so that it contains all elements that are present in the current set, in the specified collection, or in both.
  example: []
  syntax:
    content: public void UnionWith(IEnumerable<T> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to compare to the current set.
    content.vb: Public Sub UnionWith(other As IEnumerable(Of T))
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.UnionWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">other</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.ISet{{T}}.UnionWith(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: ThreadSafeSet(Of T).UnionWith(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: UnionWith(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  id: IntersectWith(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: IntersectWith(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.IntersectWith(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: IntersectWith
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 76
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Modifies the current set so that it contains only elements that are also in a specified collection.
  example: []
  syntax:
    content: public void IntersectWith(IEnumerable<T> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to compare to the current set.
    content.vb: Public Sub IntersectWith(other As IEnumerable(Of T))
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.IntersectWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">other</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.ISet{{T}}.IntersectWith(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: ThreadSafeSet(Of T).IntersectWith(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IntersectWith(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  id: ExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: ExceptWith(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.ExceptWith(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ExceptWith
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 84
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Removes all elements in the specified collection from the current set.
  example: []
  syntax:
    content: public void ExceptWith(IEnumerable<T> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection of items to remove from the set.
    content.vb: Public Sub ExceptWith(other As IEnumerable(Of T))
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.ExceptWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">other</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.ISet{{T}}.ExceptWith(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: ThreadSafeSet(Of T).ExceptWith(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ExceptWith(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  id: SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: SymmetricExceptWith
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 92
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both.
  example: []
  syntax:
    content: public void SymmetricExceptWith(IEnumerable<T> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to compare to the current set.
    content.vb: Public Sub SymmetricExceptWith(other As IEnumerable(Of T))
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.SymmetricExceptWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">other</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.ISet{{T}}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: ThreadSafeSet(Of T).SymmetricExceptWith(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SymmetricExceptWith(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: IsSubsetOf
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 100
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Determines whether a set is a subset of a specified collection.
  example: []
  syntax:
    content: public bool IsSubsetOf(IEnumerable<T> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to compare to the current set.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current set is a subset of <code class="paramref">other</code>; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function IsSubsetOf(other As IEnumerable(Of T)) As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.IsSubsetOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">other</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.ISet{{T}}.IsSubsetOf(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: ThreadSafeSet(Of T).IsSubsetOf(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSubsetOf(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: IsSupersetOf
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 108
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Determines whether the current set is a superset of a specified collection.
  example: []
  syntax:
    content: public bool IsSupersetOf(IEnumerable<T> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to compare to the current set.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current set is a superset of <code class="paramref">other</code>; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function IsSupersetOf(other As IEnumerable(Of T)) As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.IsSupersetOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">other</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.ISet{{T}}.IsSupersetOf(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: ThreadSafeSet(Of T).IsSupersetOf(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSupersetOf(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: IsProperSupersetOf
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 116
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Determines whether the current set is a proper (strict) superset of a specified collection.
  example: []
  syntax:
    content: public bool IsProperSupersetOf(IEnumerable<T> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to compare to the current set.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current set is a proper superset of <code class="paramref">other</code>; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function IsProperSupersetOf(other As IEnumerable(Of T)) As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSupersetOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">other</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.ISet{{T}}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: ThreadSafeSet(Of T).IsProperSupersetOf(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: IsProperSubsetOf
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 124
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Determines whether the current set is a proper (strict) subset of a specified collection.
  example: []
  syntax:
    content: public bool IsProperSubsetOf(IEnumerable<T> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to compare to the current set.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current set is a proper subset of <code class="paramref">other</code>; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function IsProperSubsetOf(other As IEnumerable(Of T)) As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSubsetOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">other</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.ISet{{T}}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: ThreadSafeSet(Of T).IsProperSubsetOf(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  id: Overlaps(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: Overlaps(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.Overlaps(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Overlaps
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 132
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Determines whether the current set overlaps with the specified collection.
  example: []
  syntax:
    content: public bool Overlaps(IEnumerable<T> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to compare to the current set.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current set and <code class="paramref">other</code> share at least one common element; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Overlaps(other As IEnumerable(Of T)) As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.Overlaps*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">other</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.ISet{{T}}.Overlaps(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: ThreadSafeSet(Of T).Overlaps(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Overlaps(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  id: SetEquals(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: SetEquals(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.SetEquals(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: SetEquals
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 140
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Determines whether the current set and the specified collection contain the same elements.
  example: []
  syntax:
    content: public bool SetEquals(IEnumerable<T> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to compare to the current set.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current set is equal to <code class="paramref">other</code>; otherwise, false.
    content.vb: Public Function SetEquals(other As IEnumerable(Of T)) As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.SetEquals*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">other</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.ISet{{T}}.SetEquals(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: ThreadSafeSet(Of T).SetEquals(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SetEquals(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Clear
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.Clear
  id: Clear
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ThreadSafeSet<T>.Clear()
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Clear()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Clear
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 156
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Removes all items from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  nameWithType.vb: ThreadSafeSet(Of T).Clear()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Clear()
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.CopyTo(`0[],System.Int32)
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], int)
  nameWithType: ThreadSafeSet<T>.CopyTo(T[], int)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.CopyTo(T[], int)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: CopyTo
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 164
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Copies the elements of the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> to an <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at a particular <xref href="System.Array" data-throw-if-not-resolved="false"></xref> index.
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
      description: The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in <code class="paramref">array</code> at which copying begins.
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">array</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">arrayIndex</code> is less than 0.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The number of elements in the source <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is greater than the available space from <code class="paramref">arrayIndex</code> to the end of the destination <code class="paramref">array</code>.
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: ThreadSafeSet(Of T).CopyTo(T(), Integer)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Remove(`0)
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.Remove(`0)
  id: Remove(`0)
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: ThreadSafeSet<T>.Remove(T)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Remove(T)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Remove
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 172
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Removes the first occurrence of a specific object from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to remove from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">item</code> was successfully removed from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. This method also returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if <code class="paramref">item</code> is not found in the original <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Remove(item As T) As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: ThreadSafeSet(Of T).Remove(T)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Remove(T)
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Contains(`0)
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.Contains(`0)
  id: Contains(`0)
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: ThreadSafeSet<T>.Contains(T)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Contains(T)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Contains
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 180
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Determines whether the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> contains a specific value.
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">item</code> is found in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Contains(item As T) As Boolean
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: ThreadSafeSet(Of T).Contains(T)
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Contains(T)
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.GetEnumerator
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.GetEnumerator
  id: GetEnumerator
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ThreadSafeSet<T>.GetEnumerator()
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: GetEnumerator
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 188
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: ThreadSafeSet(Of T).GetEnumerator()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).GetEnumerator()
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.ToList
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.ToList
  id: ToList
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: ToList()
  nameWithType: ThreadSafeSet<T>.ToList()
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.ToList()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: ToList
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 201
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public List<T> ToList()
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Function ToList() As List(Of T)
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.ToList*
  nameWithType.vb: ThreadSafeSet(Of T).ToList()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).ToList()
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Set(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.Set(System.Collections.Generic.IEnumerable{`0})
  id: Set(System.Collections.Generic.IEnumerable{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: Set(IEnumerable<T>)
  nameWithType: ThreadSafeSet<T>.Set(IEnumerable<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Set(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Set
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 213
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  summary: Clears the set and adds the given items.
  example: []
  syntax:
    content: public void Set(IEnumerable<T> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Items to add onto the empty set.
    content.vb: Public Sub [Set](items As IEnumerable(Of T))
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.Set*
  nameWithType.vb: ThreadSafeSet(Of T).Set(IEnumerable(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Set(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Set(IEnumerable(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.RemoveAll(System.Predicate{`0})
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.RemoveAll(System.Predicate{`0})
  id: RemoveAll(System.Predicate{`0})
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: RemoveAll(Predicate<T>)
  nameWithType: ThreadSafeSet<T>.RemoveAll(Predicate<T>)
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.RemoveAll(System.Predicate<T>)
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: RemoveAll
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 225
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public void RemoveAll(Predicate<T> predicate)
    parameters:
    - id: predicate
      type: System.Predicate{{T}}
    content.vb: Public Sub RemoveAll(predicate As Predicate(Of T))
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.RemoveAll*
  nameWithType.vb: ThreadSafeSet(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Clone
  commentId: M:NitroxModel.DataStructures.ThreadSafeSet`1.Clone
  id: Clone
  parent: NitroxModel.DataStructures.ThreadSafeSet`1
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ThreadSafeSet<T>.Clone()
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Clone()
  type: Method
  source:
    remote:
      path: NitroxModel/DataStructures/ThreadSafeSet.cs
      branch: docfx
      repo: https://github.com/killzoms/Nitrox/
    id: Clone
    path: ../NitroxModel/DataStructures/ThreadSafeSet.cs
    startLine: 233
  assemblies:
  - NitroxModel
  namespace: NitroxModel.DataStructures
  syntax:
    content: public IEnumerable<T> Clone()
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Function Clone() As IEnumerable(Of T)
  overload: NitroxModel.DataStructures.ThreadSafeSet`1.Clone*
  nameWithType.vb: ThreadSafeSet(Of T).Clone()
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Clone()
references:
- uid: NitroxModel.DataStructures
  commentId: N:NitroxModel.DataStructures
  href: NitroxModel.html
  name: NitroxModel.DataStructures
  nameWithType: NitroxModel.DataStructures
  fullName: NitroxModel.DataStructures
  spec.csharp:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
  spec.vb:
  - uid: NitroxModel
    name: NitroxModel
    href: NitroxModel.html
  - name: .
  - uid: NitroxModel.DataStructures
    name: DataStructures
    href: NitroxModel.DataStructures.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.ISet{{T}}
  commentId: T:System.Collections.Generic.ISet{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: NitroxModel.Extensions
  definition: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  name: SequenceEqualOrBothNull<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: Extensions.SequenceEqualOrBothNull<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: NitroxModel.Extensions.SequenceEqualOrBothNull<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.SequenceEqualOrBothNull(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: NitroxModel.Extensions.SequenceEqualOrBothNull(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: SequenceEqualOrBothNull(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})
    name: SequenceEqualOrBothNull
    href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})
    name: SequenceEqualOrBothNull
    href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  name: SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Extensions.SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: NitroxModel.Extensions.SequenceEqualOrBothNull<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  nameWithType.vb: Extensions.SequenceEqualOrBothNull(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName.vb: NitroxModel.Extensions.SequenceEqualOrBothNull(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SequenceEqualOrBothNull(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqualOrBothNull
    href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: )
  spec.vb:
  - uid: NitroxModel.Extensions.SequenceEqualOrBothNull``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqualOrBothNull
    href: NitroxModel.Extensions.SequenceEqualOrBothNull.html#NitroxModel_Extensions_SequenceEqualOrBothNull__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: )
- uid: NitroxModel.Extensions
  commentId: T:NitroxModel.Extensions
  parent: NitroxModel
  href: NitroxModel.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: NitroxModel.Extensions
- uid: NitroxModel
  commentId: N:NitroxModel
  href: NitroxModel.html
  name: NitroxModel
  nameWithType: NitroxModel
  fullName: NitroxModel
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.#ctor*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.#ctor
  href: NitroxModel.DataStructures.ThreadSafeSet-1.-ctor.html#NitroxModel_DataStructures_ThreadSafeSet_1__ctor
  name: ThreadSafeSet
  nameWithType: ThreadSafeSet<T>.ThreadSafeSet
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.ThreadSafeSet
  nameWithType.vb: ThreadSafeSet(Of T).New
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).New
  name.vb: New
- uid: System.Collections.Generic.HashSet{{T}}
  commentId: T:System.Collections.Generic.HashSet{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Count*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.Count
  href: NitroxModel.DataStructures.ThreadSafeSet-1.Count.html#NitroxModel_DataStructures_ThreadSafeSet_1_Count
  name: Count
  nameWithType: ThreadSafeSet<T>.Count
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Count
  nameWithType.vb: ThreadSafeSet(Of T).Count
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IsReadOnly*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.IsReadOnly
  href: NitroxModel.DataStructures.ThreadSafeSet-1.IsReadOnly.html#NitroxModel_DataStructures_ThreadSafeSet_1_IsReadOnly
  name: IsReadOnly
  nameWithType: ThreadSafeSet<T>.IsReadOnly
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IsReadOnly
  nameWithType.vb: ThreadSafeSet(Of T).IsReadOnly
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Add*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.Add
  href: NitroxModel.DataStructures.ThreadSafeSet-1.Add.html#NitroxModel_DataStructures_ThreadSafeSet_1_Add__0_
  name: Add
  nameWithType: ThreadSafeSet<T>.Add
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Add
  nameWithType.vb: ThreadSafeSet(Of T).Add
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Add
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.UnionWith*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.UnionWith
  href: NitroxModel.DataStructures.ThreadSafeSet-1.UnionWith.html#NitroxModel_DataStructures_ThreadSafeSet_1_UnionWith_System_Collections_Generic_IEnumerable__0__
  name: UnionWith
  nameWithType: ThreadSafeSet<T>.UnionWith
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.UnionWith
  nameWithType.vb: ThreadSafeSet(Of T).UnionWith
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).UnionWith
- uid: System.Collections.Generic.ISet{{T}}.UnionWith(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:System.Collections.Generic.ISet{`0}.UnionWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.unionwith
  name: UnionWith(IEnumerable<T>)
  nameWithType: ISet<T>.UnionWith(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).UnionWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: UnionWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet{`0}.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.unionwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet{`0}.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.unionwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.unionwith
  name: UnionWith(IEnumerable<T>)
  nameWithType: ISet<T>.UnionWith(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).UnionWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: UnionWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.unionwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.unionwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IntersectWith*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.IntersectWith
  href: NitroxModel.DataStructures.ThreadSafeSet-1.IntersectWith.html#NitroxModel_DataStructures_ThreadSafeSet_1_IntersectWith_System_Collections_Generic_IEnumerable__0__
  name: IntersectWith
  nameWithType: ThreadSafeSet<T>.IntersectWith
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IntersectWith
  nameWithType.vb: ThreadSafeSet(Of T).IntersectWith
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IntersectWith
- uid: System.Collections.Generic.ISet{{T}}.IntersectWith(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:System.Collections.Generic.ISet{`0}.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.intersectwith
  name: IntersectWith(IEnumerable<T>)
  nameWithType: ISet<T>.IntersectWith(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).IntersectWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IntersectWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet{`0}.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.intersectwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet{`0}.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.intersectwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.intersectwith
  name: IntersectWith(IEnumerable<T>)
  nameWithType: ISet<T>.IntersectWith(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).IntersectWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IntersectWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.intersectwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.intersectwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.ExceptWith*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.ExceptWith
  href: NitroxModel.DataStructures.ThreadSafeSet-1.ExceptWith.html#NitroxModel_DataStructures_ThreadSafeSet_1_ExceptWith_System_Collections_Generic_IEnumerable__0__
  name: ExceptWith
  nameWithType: ThreadSafeSet<T>.ExceptWith
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.ExceptWith
  nameWithType.vb: ThreadSafeSet(Of T).ExceptWith
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).ExceptWith
- uid: System.Collections.Generic.ISet{{T}}.ExceptWith(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:System.Collections.Generic.ISet{`0}.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.exceptwith
  name: ExceptWith(IEnumerable<T>)
  nameWithType: ISet<T>.ExceptWith(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).ExceptWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet{`0}.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.exceptwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet{`0}.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.exceptwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.exceptwith
  name: ExceptWith(IEnumerable<T>)
  nameWithType: ISet<T>.ExceptWith(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).ExceptWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.exceptwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.exceptwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.SymmetricExceptWith*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.SymmetricExceptWith
  href: NitroxModel.DataStructures.ThreadSafeSet-1.SymmetricExceptWith.html#NitroxModel_DataStructures_ThreadSafeSet_1_SymmetricExceptWith_System_Collections_Generic_IEnumerable__0__
  name: SymmetricExceptWith
  nameWithType: ThreadSafeSet<T>.SymmetricExceptWith
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.SymmetricExceptWith
  nameWithType.vb: ThreadSafeSet(Of T).SymmetricExceptWith
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).SymmetricExceptWith
- uid: System.Collections.Generic.ISet{{T}}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:System.Collections.Generic.ISet{`0}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.symmetricexceptwith
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: ISet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).SymmetricExceptWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SymmetricExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet{`0}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.symmetricexceptwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet{`0}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.symmetricexceptwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.symmetricexceptwith
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: ISet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).SymmetricExceptWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SymmetricExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.symmetricexceptwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.symmetricexceptwith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IsSubsetOf*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.IsSubsetOf
  href: NitroxModel.DataStructures.ThreadSafeSet-1.IsSubsetOf.html#NitroxModel_DataStructures_ThreadSafeSet_1_IsSubsetOf_System_Collections_Generic_IEnumerable__0__
  name: IsSubsetOf
  nameWithType: ThreadSafeSet<T>.IsSubsetOf
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IsSubsetOf
  nameWithType.vb: ThreadSafeSet(Of T).IsSubsetOf
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IsSubsetOf
- uid: System.Collections.Generic.ISet{{T}}.IsSubsetOf(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:System.Collections.Generic.ISet{`0}.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issubsetof
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: ISet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).IsSubsetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet{`0}.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issubsetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet{`0}.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issubsetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issubsetof
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: ISet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).IsSubsetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issubsetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issubsetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IsSupersetOf*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.IsSupersetOf
  href: NitroxModel.DataStructures.ThreadSafeSet-1.IsSupersetOf.html#NitroxModel_DataStructures_ThreadSafeSet_1_IsSupersetOf_System_Collections_Generic_IEnumerable__0__
  name: IsSupersetOf
  nameWithType: ThreadSafeSet<T>.IsSupersetOf
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IsSupersetOf
  nameWithType.vb: ThreadSafeSet(Of T).IsSupersetOf
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IsSupersetOf
- uid: System.Collections.Generic.ISet{{T}}.IsSupersetOf(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:System.Collections.Generic.ISet{`0}.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issupersetof
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: ISet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).IsSupersetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet{`0}.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issupersetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet{`0}.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issupersetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issupersetof
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: ISet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).IsSupersetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issupersetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.issupersetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSupersetOf*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSupersetOf
  href: NitroxModel.DataStructures.ThreadSafeSet-1.IsProperSupersetOf.html#NitroxModel_DataStructures_ThreadSafeSet_1_IsProperSupersetOf_System_Collections_Generic_IEnumerable__0__
  name: IsProperSupersetOf
  nameWithType: ThreadSafeSet<T>.IsProperSupersetOf
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IsProperSupersetOf
  nameWithType.vb: ThreadSafeSet(Of T).IsProperSupersetOf
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IsProperSupersetOf
- uid: System.Collections.Generic.ISet{{T}}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:System.Collections.Generic.ISet{`0}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersupersetof
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: ISet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).IsProperSupersetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet{`0}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersupersetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet{`0}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersupersetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersupersetof
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: ISet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).IsProperSupersetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersupersetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersupersetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSubsetOf*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.IsProperSubsetOf
  href: NitroxModel.DataStructures.ThreadSafeSet-1.IsProperSubsetOf.html#NitroxModel_DataStructures_ThreadSafeSet_1_IsProperSubsetOf_System_Collections_Generic_IEnumerable__0__
  name: IsProperSubsetOf
  nameWithType: ThreadSafeSet<T>.IsProperSubsetOf
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.IsProperSubsetOf
  nameWithType.vb: ThreadSafeSet(Of T).IsProperSubsetOf
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).IsProperSubsetOf
- uid: System.Collections.Generic.ISet{{T}}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:System.Collections.Generic.ISet{`0}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersubsetof
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: ISet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).IsProperSubsetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet{`0}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersubsetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet{`0}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersubsetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersubsetof
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: ISet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).IsProperSubsetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersubsetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.ispropersubsetof
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Overlaps*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.Overlaps
  href: NitroxModel.DataStructures.ThreadSafeSet-1.Overlaps.html#NitroxModel_DataStructures_ThreadSafeSet_1_Overlaps_System_Collections_Generic_IEnumerable__0__
  name: Overlaps
  nameWithType: ThreadSafeSet<T>.Overlaps
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Overlaps
  nameWithType.vb: ThreadSafeSet(Of T).Overlaps
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Overlaps
- uid: System.Collections.Generic.ISet{{T}}.Overlaps(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:System.Collections.Generic.ISet{`0}.Overlaps(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.overlaps
  name: Overlaps(IEnumerable<T>)
  nameWithType: ISet<T>.Overlaps(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).Overlaps(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Overlaps(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet{`0}.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet{`0}.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.overlaps
  name: Overlaps(IEnumerable<T>)
  nameWithType: ISet<T>.Overlaps(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).Overlaps(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Overlaps(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.SetEquals*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.SetEquals
  href: NitroxModel.DataStructures.ThreadSafeSet-1.SetEquals.html#NitroxModel_DataStructures_ThreadSafeSet_1_SetEquals_System_Collections_Generic_IEnumerable__0__
  name: SetEquals
  nameWithType: ThreadSafeSet<T>.SetEquals
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.SetEquals
  nameWithType.vb: ThreadSafeSet(Of T).SetEquals
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).SetEquals
- uid: System.Collections.Generic.ISet{{T}}.SetEquals(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:System.Collections.Generic.ISet{`0}.SetEquals(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.setequals
  name: SetEquals(IEnumerable<T>)
  nameWithType: ISet<T>.SetEquals(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).SetEquals(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SetEquals(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet{`0}.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.setequals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet{`0}.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.setequals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.setequals
  name: SetEquals(IEnumerable<T>)
  nameWithType: ISet<T>.SetEquals(IEnumerable<T>)
  fullName: System.Collections.Generic.ISet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISet(Of T).SetEquals(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.ISet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SetEquals(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.setequals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1.setequals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Clear*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.Clear
  href: NitroxModel.DataStructures.ThreadSafeSet-1.Clear.html#NitroxModel_DataStructures_ThreadSafeSet_1_Clear
  name: Clear
  nameWithType: ThreadSafeSet<T>.Clear
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Clear
  nameWithType.vb: ThreadSafeSet(Of T).Clear
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Clear
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Array
  commentId: T:System.Array
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.array
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.CopyTo*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.CopyTo
  href: NitroxModel.DataStructures.ThreadSafeSet-1.CopyTo.html#NitroxModel_DataStructures_ThreadSafeSet_1_CopyTo__0___System_Int32_
  name: CopyTo
  nameWithType: ThreadSafeSet<T>.CopyTo
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.CopyTo
  nameWithType.vb: ThreadSafeSet(Of T).CopyTo
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).CopyTo
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Remove*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.Remove
  href: NitroxModel.DataStructures.ThreadSafeSet-1.Remove.html#NitroxModel_DataStructures_ThreadSafeSet_1_Remove__0_
  name: Remove
  nameWithType: ThreadSafeSet<T>.Remove
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Remove
  nameWithType.vb: ThreadSafeSet(Of T).Remove
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Contains*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.Contains
  href: NitroxModel.DataStructures.ThreadSafeSet-1.Contains.html#NitroxModel_DataStructures_ThreadSafeSet_1_Contains__0_
  name: Contains
  nameWithType: ThreadSafeSet<T>.Contains
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Contains
  nameWithType.vb: ThreadSafeSet(Of T).Contains
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.GetEnumerator*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.GetEnumerator
  href: NitroxModel.DataStructures.ThreadSafeSet-1.GetEnumerator.html#NitroxModel_DataStructures_ThreadSafeSet_1_GetEnumerator
  name: GetEnumerator
  nameWithType: ThreadSafeSet<T>.GetEnumerator
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.GetEnumerator
  nameWithType.vb: ThreadSafeSet(Of T).GetEnumerator
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.ToList*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.ToList
  href: NitroxModel.DataStructures.ThreadSafeSet-1.ToList.html#NitroxModel_DataStructures_ThreadSafeSet_1_ToList
  name: ToList
  nameWithType: ThreadSafeSet<T>.ToList
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.ToList
  nameWithType.vb: ThreadSafeSet(Of T).ToList
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).ToList
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Set*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.Set
  href: NitroxModel.DataStructures.ThreadSafeSet-1.Set.html#NitroxModel_DataStructures_ThreadSafeSet_1_Set_System_Collections_Generic_IEnumerable__0__
  name: Set
  nameWithType: ThreadSafeSet<T>.Set
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Set
  nameWithType.vb: ThreadSafeSet(Of T).Set
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Set
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.RemoveAll*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.RemoveAll
  href: NitroxModel.DataStructures.ThreadSafeSet-1.RemoveAll.html#NitroxModel_DataStructures_ThreadSafeSet_1_RemoveAll_System_Predicate__0__
  name: RemoveAll
  nameWithType: ThreadSafeSet<T>.RemoveAll
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.RemoveAll
  nameWithType.vb: ThreadSafeSet(Of T).RemoveAll
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).RemoveAll
- uid: System.Predicate{{T}}
  commentId: T:System.Predicate{`0}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NitroxModel.DataStructures.ThreadSafeSet`1.Clone*
  commentId: Overload:NitroxModel.DataStructures.ThreadSafeSet`1.Clone
  href: NitroxModel.DataStructures.ThreadSafeSet-1.Clone.html#NitroxModel_DataStructures_ThreadSafeSet_1_Clone
  name: Clone
  nameWithType: ThreadSafeSet<T>.Clone
  fullName: NitroxModel.DataStructures.ThreadSafeSet<T>.Clone
  nameWithType.vb: ThreadSafeSet(Of T).Clone
  fullName.vb: NitroxModel.DataStructures.ThreadSafeSet(Of T).Clone
memberLayout: SeparatePages
