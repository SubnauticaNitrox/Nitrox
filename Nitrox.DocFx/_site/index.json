{
  "api/AddressablesTools.AddressablesJsonParser.FromString.html": {
    "href": "api/AddressablesTools.AddressablesJsonParser.FromString.html",
    "title": "Method FromString | Nitrox",
    "keywords": "Method FromString Namespace AddressablesTools Assembly NitroxServer-Subnautica.dll FromString(string) public static ContentCatalogData FromString(string data) Parameters data string Returns ContentCatalogData"
  },
  "api/AddressablesTools.AddressablesJsonParser.html": {
    "href": "api/AddressablesTools.AddressablesJsonParser.html",
    "title": "Class AddressablesJsonParser | Nitrox",
    "keywords": "Class AddressablesJsonParser Namespace AddressablesTools Assembly NitroxServer-Subnautica.dll public static class AddressablesJsonParser Inheritance object AddressablesJsonParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FromString(string)"
  },
  "api/AddressablesTools.Catalog.ContentCatalogData.InstanceProviderData.html": {
    "href": "api/AddressablesTools.Catalog.ContentCatalogData.InstanceProviderData.html",
    "title": "Property InstanceProviderData | Nitrox",
    "keywords": "Property InstanceProviderData Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll InstanceProviderData public ObjectInitializationData InstanceProviderData { get; set; } Property Value ObjectInitializationData"
  },
  "api/AddressablesTools.Catalog.ContentCatalogData.InternalIdPrefixes.html": {
    "href": "api/AddressablesTools.Catalog.ContentCatalogData.InternalIdPrefixes.html",
    "title": "Property InternalIdPrefixes | Nitrox",
    "keywords": "Property InternalIdPrefixes Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll InternalIdPrefixes public string[] InternalIdPrefixes { get; set; } Property Value string[]"
  },
  "api/AddressablesTools.Catalog.ContentCatalogData.InternalIds.html": {
    "href": "api/AddressablesTools.Catalog.ContentCatalogData.InternalIds.html",
    "title": "Property InternalIds | Nitrox",
    "keywords": "Property InternalIds Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll InternalIds public string[] InternalIds { get; set; } Property Value string[]"
  },
  "api/AddressablesTools.Catalog.ContentCatalogData.LocatorId.html": {
    "href": "api/AddressablesTools.Catalog.ContentCatalogData.LocatorId.html",
    "title": "Property LocatorId | Nitrox",
    "keywords": "Property LocatorId Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll LocatorId public string LocatorId { get; set; } Property Value string"
  },
  "api/AddressablesTools.Catalog.ContentCatalogData.ProviderIds.html": {
    "href": "api/AddressablesTools.Catalog.ContentCatalogData.ProviderIds.html",
    "title": "Property ProviderIds | Nitrox",
    "keywords": "Property ProviderIds Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll ProviderIds public string[] ProviderIds { get; set; } Property Value string[]"
  },
  "api/AddressablesTools.Catalog.ContentCatalogData.ResourceProviderData.html": {
    "href": "api/AddressablesTools.Catalog.ContentCatalogData.ResourceProviderData.html",
    "title": "Property ResourceProviderData | Nitrox",
    "keywords": "Property ResourceProviderData Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll ResourceProviderData public ObjectInitializationData[] ResourceProviderData { get; set; } Property Value ObjectInitializationData[]"
  },
  "api/AddressablesTools.Catalog.ContentCatalogData.ResourceTypes.html": {
    "href": "api/AddressablesTools.Catalog.ContentCatalogData.ResourceTypes.html",
    "title": "Property ResourceTypes | Nitrox",
    "keywords": "Property ResourceTypes Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll ResourceTypes public SerializedType[] ResourceTypes { get; set; } Property Value SerializedType[]"
  },
  "api/AddressablesTools.Catalog.ContentCatalogData.Resources.html": {
    "href": "api/AddressablesTools.Catalog.ContentCatalogData.Resources.html",
    "title": "Property Resources | Nitrox",
    "keywords": "Property Resources Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll Resources public Dictionary<object, List<ResourceLocation>> Resources { get; set; } Property Value Dictionary<object, List<ResourceLocation>>"
  },
  "api/AddressablesTools.Catalog.ContentCatalogData.SceneProviderData.html": {
    "href": "api/AddressablesTools.Catalog.ContentCatalogData.SceneProviderData.html",
    "title": "Property SceneProviderData | Nitrox",
    "keywords": "Property SceneProviderData Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll SceneProviderData public ObjectInitializationData SceneProviderData { get; set; } Property Value ObjectInitializationData"
  },
  "api/AddressablesTools.Catalog.ContentCatalogData.html": {
    "href": "api/AddressablesTools.Catalog.ContentCatalogData.html",
    "title": "Class ContentCatalogData | Nitrox",
    "keywords": "Class ContentCatalogData Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll public class ContentCatalogData Inheritance object ContentCatalogData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties InstanceProviderData InternalIdPrefixes InternalIds LocatorId ProviderIds ResourceProviderData ResourceTypes Resources SceneProviderData"
  },
  "api/AddressablesTools.Catalog.ObjectInitializationData.Data.html": {
    "href": "api/AddressablesTools.Catalog.ObjectInitializationData.Data.html",
    "title": "Property Data | Nitrox",
    "keywords": "Property Data Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll Data public string Data { get; set; } Property Value string"
  },
  "api/AddressablesTools.Catalog.ObjectInitializationData.Id.html": {
    "href": "api/AddressablesTools.Catalog.ObjectInitializationData.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll Id public string Id { get; set; } Property Value string"
  },
  "api/AddressablesTools.Catalog.ObjectInitializationData.ObjectType.html": {
    "href": "api/AddressablesTools.Catalog.ObjectInitializationData.ObjectType.html",
    "title": "Property ObjectType | Nitrox",
    "keywords": "Property ObjectType Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll ObjectType public SerializedType ObjectType { get; set; } Property Value SerializedType"
  },
  "api/AddressablesTools.Catalog.ObjectInitializationData.html": {
    "href": "api/AddressablesTools.Catalog.ObjectInitializationData.html",
    "title": "Class ObjectInitializationData | Nitrox",
    "keywords": "Class ObjectInitializationData Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll public class ObjectInitializationData Inheritance object ObjectInitializationData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Data Id ObjectType"
  },
  "api/AddressablesTools.Catalog.ResourceLocation.Data.html": {
    "href": "api/AddressablesTools.Catalog.ResourceLocation.Data.html",
    "title": "Property Data | Nitrox",
    "keywords": "Property Data Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll Data public object Data { get; set; } Property Value object"
  },
  "api/AddressablesTools.Catalog.ResourceLocation.Dependency.html": {
    "href": "api/AddressablesTools.Catalog.ResourceLocation.Dependency.html",
    "title": "Property Dependency | Nitrox",
    "keywords": "Property Dependency Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll Dependency public object Dependency { get; set; } Property Value object"
  },
  "api/AddressablesTools.Catalog.ResourceLocation.DependencyHashCode.html": {
    "href": "api/AddressablesTools.Catalog.ResourceLocation.DependencyHashCode.html",
    "title": "Property DependencyHashCode | Nitrox",
    "keywords": "Property DependencyHashCode Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll DependencyHashCode public int DependencyHashCode { get; set; } Property Value int"
  },
  "api/AddressablesTools.Catalog.ResourceLocation.HashCode.html": {
    "href": "api/AddressablesTools.Catalog.ResourceLocation.HashCode.html",
    "title": "Property HashCode | Nitrox",
    "keywords": "Property HashCode Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll HashCode public int HashCode { get; set; } Property Value int"
  },
  "api/AddressablesTools.Catalog.ResourceLocation.InternalId.html": {
    "href": "api/AddressablesTools.Catalog.ResourceLocation.InternalId.html",
    "title": "Property InternalId | Nitrox",
    "keywords": "Property InternalId Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll InternalId public string InternalId { get; set; } Property Value string"
  },
  "api/AddressablesTools.Catalog.ResourceLocation.PrimaryKey.html": {
    "href": "api/AddressablesTools.Catalog.ResourceLocation.PrimaryKey.html",
    "title": "Property PrimaryKey | Nitrox",
    "keywords": "Property PrimaryKey Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll PrimaryKey public string PrimaryKey { get; set; } Property Value string"
  },
  "api/AddressablesTools.Catalog.ResourceLocation.ProviderId.html": {
    "href": "api/AddressablesTools.Catalog.ResourceLocation.ProviderId.html",
    "title": "Property ProviderId | Nitrox",
    "keywords": "Property ProviderId Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll ProviderId public string ProviderId { get; set; } Property Value string"
  },
  "api/AddressablesTools.Catalog.ResourceLocation.Type.html": {
    "href": "api/AddressablesTools.Catalog.ResourceLocation.Type.html",
    "title": "Property Type | Nitrox",
    "keywords": "Property Type Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll Type public SerializedType Type { get; set; } Property Value SerializedType"
  },
  "api/AddressablesTools.Catalog.ResourceLocation.html": {
    "href": "api/AddressablesTools.Catalog.ResourceLocation.html",
    "title": "Class ResourceLocation | Nitrox",
    "keywords": "Class ResourceLocation Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll public class ResourceLocation Inheritance object ResourceLocation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Data Dependency DependencyHashCode HashCode InternalId PrimaryKey ProviderId Type"
  },
  "api/AddressablesTools.Catalog.SerializedType.AssemblyName.html": {
    "href": "api/AddressablesTools.Catalog.SerializedType.AssemblyName.html",
    "title": "Property AssemblyName | Nitrox",
    "keywords": "Property AssemblyName Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll AssemblyName public string AssemblyName { get; set; } Property Value string"
  },
  "api/AddressablesTools.Catalog.SerializedType.ClassName.html": {
    "href": "api/AddressablesTools.Catalog.SerializedType.ClassName.html",
    "title": "Property ClassName | Nitrox",
    "keywords": "Property ClassName Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll ClassName public string ClassName { get; set; } Property Value string"
  },
  "api/AddressablesTools.Catalog.SerializedType.html": {
    "href": "api/AddressablesTools.Catalog.SerializedType.html",
    "title": "Class SerializedType | Nitrox",
    "keywords": "Class SerializedType Namespace AddressablesTools.Catalog Assembly NitroxServer-Subnautica.dll public class SerializedType Inheritance object SerializedType Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties AssemblyName ClassName"
  },
  "api/AddressablesTools.Catalog.html": {
    "href": "api/AddressablesTools.Catalog.html",
    "title": "Namespace AddressablesTools.Catalog | Nitrox",
    "keywords": "Namespace AddressablesTools.Catalog Classes ContentCatalogData ObjectInitializationData ResourceLocation SerializedType"
  },
  "api/AddressablesTools.html": {
    "href": "api/AddressablesTools.html",
    "title": "Namespace AddressablesTools | Nitrox",
    "keywords": "Namespace AddressablesTools Namespaces AddressablesTools.Catalog Classes AddressablesJsonParser"
  },
  "api/Nitrox.BuildTool.Program.GeneratedOutputDir.html": {
    "href": "api/Nitrox.BuildTool.Program.GeneratedOutputDir.html",
    "title": "Property GeneratedOutputDir | Nitrox",
    "keywords": "Property GeneratedOutputDir Namespace Nitrox.BuildTool Assembly Nitrox.BuildTool.dll GeneratedOutputDir public static string GeneratedOutputDir { get; } Property Value string"
  },
  "api/Nitrox.BuildTool.Program.Main.html": {
    "href": "api/Nitrox.BuildTool.Program.Main.html",
    "title": "Method Main | Nitrox",
    "keywords": "Method Main Namespace Nitrox.BuildTool Assembly Nitrox.BuildTool.dll Main(string[]) public static Task Main(string[] args) Parameters args string[] Returns Task"
  },
  "api/Nitrox.BuildTool.Program.ProcessDir.html": {
    "href": "api/Nitrox.BuildTool.Program.ProcessDir.html",
    "title": "Property ProcessDir | Nitrox",
    "keywords": "Property ProcessDir Namespace Nitrox.BuildTool Assembly Nitrox.BuildTool.dll ProcessDir public static string ProcessDir { get; } Property Value string"
  },
  "api/Nitrox.BuildTool.Program.html": {
    "href": "api/Nitrox.BuildTool.Program.html",
    "title": "Class Program | Nitrox",
    "keywords": "Class Program Namespace Nitrox.BuildTool Assembly Nitrox.BuildTool.dll Entry point of the build automation project. Search for Subnautica install. Publicize the .NET dlls and persist for subsequent Nitrox builds. public static class Program Inheritance object Program Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties GeneratedOutputDir ProcessDir Methods Main(string[])"
  },
  "api/Nitrox.BuildTool.Publicizer.LogReceived.html": {
    "href": "api/Nitrox.BuildTool.Publicizer.LogReceived.html",
    "title": "Event LogReceived | Nitrox",
    "keywords": "Event LogReceived Namespace Nitrox.BuildTool Assembly Nitrox.BuildTool.dll public static event EventHandler<string> LogReceived Returns EventHandler<string>"
  },
  "api/Nitrox.BuildTool.Publicizer.PublicizeAsync.html": {
    "href": "api/Nitrox.BuildTool.Publicizer.PublicizeAsync.html",
    "title": "Method PublicizeAsync | Nitrox",
    "keywords": "Method PublicizeAsync Namespace Nitrox.BuildTool Assembly Nitrox.BuildTool.dll PublicizeAsync(IEnumerable<string>, string, string) public static Task PublicizeAsync(IEnumerable<string> files, string outputSuffix = \"\", string outputPath = null) Parameters files IEnumerable<string> outputSuffix string outputPath string Returns Task"
  },
  "api/Nitrox.BuildTool.Publicizer.html": {
    "href": "api/Nitrox.BuildTool.Publicizer.html",
    "title": "Class Publicizer | Nitrox",
    "keywords": "Class Publicizer Namespace Nitrox.BuildTool Assembly Nitrox.BuildTool.dll public static class Publicizer Inheritance object Publicizer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods PublicizeAsync(IEnumerable<string>, string, string) Events LogReceived"
  },
  "api/Nitrox.BuildTool.html": {
    "href": "api/Nitrox.BuildTool.html",
    "title": "Namespace Nitrox.BuildTool | Nitrox",
    "keywords": "Namespace Nitrox.BuildTool Classes Program Entry point of the build automation project. Search for Subnautica install. Publicize the .NET dlls and persist for subsequent Nitrox builds. Publicizer"
  },
  "api/Nitrox.Test.Client.Communication.TestNonActionPacket.-ctor.html": {
    "href": "api/Nitrox.Test.Client.Communication.TestNonActionPacket.-ctor.html",
    "title": "Constructor TestNonActionPacket | Nitrox",
    "keywords": "Constructor TestNonActionPacket Namespace Nitrox.Test.Client.Communication Assembly Nitrox.Test.dll TestNonActionPacket(ushort) public TestNonActionPacket(ushort playerId) Parameters playerId ushort"
  },
  "api/Nitrox.Test.Client.Communication.TestNonActionPacket.PlayerId.html": {
    "href": "api/Nitrox.Test.Client.Communication.TestNonActionPacket.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace Nitrox.Test.Client.Communication Assembly Nitrox.Test.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/Nitrox.Test.Client.Communication.TestNonActionPacket.html": {
    "href": "api/Nitrox.Test.Client.Communication.TestNonActionPacket.html",
    "title": "Class TestNonActionPacket | Nitrox",
    "keywords": "Class TestNonActionPacket Namespace Nitrox.Test.Client.Communication Assembly Nitrox.Test.dll [Serializable] public class TestNonActionPacket : Packet Inheritance object Packet TestNonActionPacket Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TestNonActionPacket(ushort) Properties PlayerId"
  },
  "api/Nitrox.Test.Client.Communication.html": {
    "href": "api/Nitrox.Test.Client.Communication.html",
    "title": "Namespace Nitrox.Test.Client.Communication | Nitrox",
    "keywords": "Namespace Nitrox.Test.Client.Communication Classes TestNonActionPacket"
  },
  "api/Nitrox.Test.Helper.AssertHelper.IsDictionaryEqual.html": {
    "href": "api/Nitrox.Test.Helper.AssertHelper.IsDictionaryEqual.html",
    "title": "Method IsDictionaryEqual | Nitrox",
    "keywords": "Method IsDictionaryEqual Namespace Nitrox.Test.Helper Assembly Nitrox.Test.dll IsDictionaryEqual<TKey, TValue>(IDictionary<TKey, TValue>, IDictionary<TKey, TValue>) public static void IsDictionaryEqual<TKey, TValue>(IDictionary<TKey, TValue> first, IDictionary<TKey, TValue> second) Parameters first IDictionary<TKey, TValue> second IDictionary<TKey, TValue> Type Parameters TKey TValue IsDictionaryEqual<TKey, TValue>(IDictionary<TKey, TValue>, IDictionary<TKey, TValue>, Action<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>) public static void IsDictionaryEqual<TKey, TValue>(IDictionary<TKey, TValue> first, IDictionary<TKey, TValue> second, Action<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>> assertComparer) Parameters first IDictionary<TKey, TValue> second IDictionary<TKey, TValue> assertComparer Action<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>> Type Parameters TKey TValue"
  },
  "api/Nitrox.Test.Helper.AssertHelper.IsListEqual.html": {
    "href": "api/Nitrox.Test.Helper.AssertHelper.IsListEqual.html",
    "title": "Method IsListEqual | Nitrox",
    "keywords": "Method IsListEqual Namespace Nitrox.Test.Helper Assembly Nitrox.Test.dll IsListEqual<TSource>(IOrderedEnumerable<TSource>, IOrderedEnumerable<TSource>, Action<TSource, TSource>) public static void IsListEqual<TSource>(IOrderedEnumerable<TSource> first, IOrderedEnumerable<TSource> second, Action<TSource, TSource> assertComparer) Parameters first IOrderedEnumerable<TSource> second IOrderedEnumerable<TSource> assertComparer Action<TSource, TSource> Type Parameters TSource"
  },
  "api/Nitrox.Test.Helper.AssertHelper.html": {
    "href": "api/Nitrox.Test.Helper.AssertHelper.html",
    "title": "Class AssertHelper | Nitrox",
    "keywords": "Class AssertHelper Namespace Nitrox.Test.Helper Assembly Nitrox.Test.dll public static class AssertHelper Inheritance object AssertHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods IsDictionaryEqual<TKey, TValue>(IDictionary<TKey, TValue>, IDictionary<TKey, TValue>) IsDictionaryEqual<TKey, TValue>(IDictionary<TKey, TValue>, IDictionary<TKey, TValue>, Action<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>) IsListEqual<TSource>(IOrderedEnumerable<TSource>, IOrderedEnumerable<TSource>, Action<TSource, TSource>)"
  },
  "api/Nitrox.Test.Helper.Faker.INitroxFaker.GenerateUnsafe.html": {
    "href": "api/Nitrox.Test.Helper.Faker.INitroxFaker.GenerateUnsafe.html",
    "title": "Method GenerateUnsafe | Nitrox",
    "keywords": "Method GenerateUnsafe Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GenerateUnsafe(HashSet<Type>) object GenerateUnsafe(HashSet<Type> typeTree) Parameters typeTree HashSet<Type> Returns object"
  },
  "api/Nitrox.Test.Helper.Faker.INitroxFaker.GetSubFakers.html": {
    "href": "api/Nitrox.Test.Helper.Faker.INitroxFaker.GetSubFakers.html",
    "title": "Method GetSubFakers | Nitrox",
    "keywords": "Method GetSubFakers Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GetSubFakers() INitroxFaker[] GetSubFakers() Returns INitroxFaker[]"
  },
  "api/Nitrox.Test.Helper.Faker.INitroxFaker.OutputType.html": {
    "href": "api/Nitrox.Test.Helper.Faker.INitroxFaker.OutputType.html",
    "title": "Property OutputType | Nitrox",
    "keywords": "Property OutputType Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll OutputType Type OutputType { get; } Property Value Type"
  },
  "api/Nitrox.Test.Helper.Faker.INitroxFaker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.INitroxFaker.html",
    "title": "Interface INitroxFaker | Nitrox",
    "keywords": "Interface INitroxFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public interface INitroxFaker Properties OutputType Methods GenerateUnsafe(HashSet<Type>) GetSubFakers()"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxAbstractFaker.-ctor.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxAbstractFaker.-ctor.html",
    "title": "Constructor NitroxAbstractFaker | Nitrox",
    "keywords": "Constructor NitroxAbstractFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll NitroxAbstractFaker(Type) public NitroxAbstractFaker(Type type) Parameters type Type"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxAbstractFaker.AssignableTypesCount.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxAbstractFaker.AssignableTypesCount.html",
    "title": "Field AssignableTypesCount | Nitrox",
    "keywords": "Field AssignableTypesCount Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public readonly int AssignableTypesCount Returns int"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxAbstractFaker.GenerateUnsafe.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxAbstractFaker.GenerateUnsafe.html",
    "title": "Method GenerateUnsafe | Nitrox",
    "keywords": "Method GenerateUnsafe Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GenerateUnsafe(HashSet<Type>) Selects an implementing type in a round-robin fashion of the abstract type of this faker. Then creates an instance of it. public object GenerateUnsafe(HashSet<Type> typeTree) Parameters typeTree HashSet<Type> Returns object"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxAbstractFaker.GetSubFakers.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxAbstractFaker.GetSubFakers.html",
    "title": "Method GetSubFakers | Nitrox",
    "keywords": "Method GetSubFakers Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GetSubFakers() public INitroxFaker[] GetSubFakers() Returns INitroxFaker[]"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxAbstractFaker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxAbstractFaker.html",
    "title": "Class NitroxAbstractFaker | Nitrox",
    "keywords": "Class NitroxAbstractFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public class NitroxAbstractFaker : NitroxFaker, INitroxFaker Inheritance object NitroxFaker NitroxAbstractFaker Implements INitroxFaker Inherited Members NitroxFaker.OutputType NitroxFaker.Faker NitroxFaker.FakerByType NitroxFaker.GetOrCreateFaker(Type) NitroxFaker.CreateFaker(Type) NitroxFaker.IsValidType(Type) NitroxFaker.CastMethodBase NitroxFaker.Cast<T>(object) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxAbstractFaker(Type) Fields AssignableTypesCount Methods GenerateUnsafe(HashSet<Type>) Selects an implementing type in a round-robin fashion of the abstract type of this faker. Then creates an instance of it. GetSubFakers()"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxActionFaker.-ctor.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxActionFaker.-ctor.html",
    "title": "Constructor NitroxActionFaker | Nitrox",
    "keywords": "Constructor NitroxActionFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll NitroxActionFaker(Type, Func<Faker, object>) public NitroxActionFaker(Type type, Func<Faker, object> action) Parameters type Type action Func<Faker, object>"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxActionFaker.GenerateUnsafe.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxActionFaker.GenerateUnsafe.html",
    "title": "Method GenerateUnsafe | Nitrox",
    "keywords": "Method GenerateUnsafe Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GenerateUnsafe(HashSet<Type>) public object GenerateUnsafe(HashSet<Type> _) Parameters _ HashSet<Type> Returns object"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxActionFaker.GetSubFakers.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxActionFaker.GetSubFakers.html",
    "title": "Method GetSubFakers | Nitrox",
    "keywords": "Method GetSubFakers Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GetSubFakers() public INitroxFaker[] GetSubFakers() Returns INitroxFaker[]"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxActionFaker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxActionFaker.html",
    "title": "Class NitroxActionFaker | Nitrox",
    "keywords": "Class NitroxActionFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public class NitroxActionFaker : NitroxFaker, INitroxFaker Inheritance object NitroxFaker NitroxActionFaker Implements INitroxFaker Inherited Members NitroxFaker.OutputType NitroxFaker.Faker NitroxFaker.FakerByType NitroxFaker.GetOrCreateFaker(Type) NitroxFaker.CreateFaker(Type) NitroxFaker.IsValidType(Type) NitroxFaker.CastMethodBase NitroxFaker.Cast<T>(object) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxActionFaker(Type, Func<Faker, object>) Methods GenerateUnsafe(HashSet<Type>) GetSubFakers()"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxAutoFaker-1.-ctor.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxAutoFaker-1.-ctor.html",
    "title": "Constructor NitroxAutoFaker | Nitrox",
    "keywords": "Constructor NitroxAutoFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll NitroxAutoFaker() public NitroxAutoFaker()"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxAutoFaker-1.Generate.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxAutoFaker-1.Generate.html",
    "title": "Method Generate | Nitrox",
    "keywords": "Method Generate Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll Generate() public T Generate() Returns T"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxAutoFaker-1.GenerateUnsafe.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxAutoFaker-1.GenerateUnsafe.html",
    "title": "Method GenerateUnsafe | Nitrox",
    "keywords": "Method GenerateUnsafe Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GenerateUnsafe(HashSet<Type>) public object GenerateUnsafe(HashSet<Type> typeTree) Parameters typeTree HashSet<Type> Returns object"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxAutoFaker-1.GetSubFakers.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxAutoFaker-1.GetSubFakers.html",
    "title": "Method GetSubFakers | Nitrox",
    "keywords": "Method GetSubFakers Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GetSubFakers() public INitroxFaker[] GetSubFakers() Returns INitroxFaker[]"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxAutoFaker-1.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxAutoFaker-1.html",
    "title": "Class NitroxAutoFaker<T> | Nitrox",
    "keywords": "Class NitroxAutoFaker<T> Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public class NitroxAutoFaker<T> : NitroxFaker, INitroxFaker Type Parameters T Inheritance object NitroxFaker NitroxAutoFaker<T> Implements INitroxFaker Inherited Members NitroxFaker.OutputType NitroxFaker.Faker NitroxFaker.FakerByType NitroxFaker.GetOrCreateFaker(Type) NitroxFaker.CreateFaker(Type) NitroxFaker.IsValidType(Type) NitroxFaker.CastMethodBase NitroxFaker.Cast<T>(object) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxAutoFaker() Methods Generate() GenerateUnsafe(HashSet<Type>) GetSubFakers()"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.-ctor.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.-ctor.html",
    "title": "Constructor NitroxCollectionFaker | Nitrox",
    "keywords": "Constructor NitroxCollectionFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll NitroxCollectionFaker(Type, CollectionType) public NitroxCollectionFaker(Type type, NitroxCollectionFaker.CollectionType collectionType) Parameters type Type collectionType NitroxCollectionFaker.CollectionType"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.CollectionType.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.CollectionType.html",
    "title": "Enum NitroxCollectionFaker.CollectionType | Nitrox",
    "keywords": "Enum NitroxCollectionFaker.CollectionType Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public enum NitroxCollectionFaker.CollectionType Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields ARRAY = 1 DICTIONARY = 3 LIST = 2 NONE = 0 SET = 4"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.GenerateSize.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.GenerateSize.html",
    "title": "Field GenerateSize | Nitrox",
    "keywords": "Field GenerateSize Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public int GenerateSize Returns int"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.GenerateUnsafe.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.GenerateUnsafe.html",
    "title": "Method GenerateUnsafe | Nitrox",
    "keywords": "Method GenerateUnsafe Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GenerateUnsafe(HashSet<Type>) public object GenerateUnsafe(HashSet<Type> typeTree) Parameters typeTree HashSet<Type> Returns object"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.GetSubFakers.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.GetSubFakers.html",
    "title": "Method GetSubFakers | Nitrox",
    "keywords": "Method GetSubFakers Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GetSubFakers() public INitroxFaker[] GetSubFakers() Returns INitroxFaker[]"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.IsCollection.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.IsCollection.html",
    "title": "Method IsCollection | Nitrox",
    "keywords": "Method IsCollection Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll IsCollection(Type, out CollectionType) public static bool IsCollection(Type t, out NitroxCollectionFaker.CollectionType collectionType) Parameters t Type collectionType NitroxCollectionFaker.CollectionType Returns bool"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.OutputCollectionType.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.OutputCollectionType.html",
    "title": "Field OutputCollectionType | Nitrox",
    "keywords": "Field OutputCollectionType Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public Type OutputCollectionType Returns Type"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.TryGetCollectionTypes.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.TryGetCollectionTypes.html",
    "title": "Method TryGetCollectionTypes | Nitrox",
    "keywords": "Method TryGetCollectionTypes Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll TryGetCollectionTypes(Type, out Type[]) public static bool TryGetCollectionTypes(Type type, out Type[] types) Parameters type Type types Type[] Returns bool"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxCollectionFaker.html",
    "title": "Class NitroxCollectionFaker | Nitrox",
    "keywords": "Class NitroxCollectionFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public class NitroxCollectionFaker : NitroxFaker, INitroxFaker Inheritance object NitroxFaker NitroxCollectionFaker Implements INitroxFaker Inherited Members NitroxFaker.OutputType NitroxFaker.Faker NitroxFaker.FakerByType NitroxFaker.GetOrCreateFaker(Type) NitroxFaker.CreateFaker(Type) NitroxFaker.IsValidType(Type) NitroxFaker.CastMethodBase NitroxFaker.Cast<T>(object) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxCollectionFaker(Type, CollectionType) Fields GenerateSize OutputCollectionType Methods GenerateUnsafe(HashSet<Type>) GetSubFakers() IsCollection(Type, out CollectionType) TryGetCollectionTypes(Type, out Type[])"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxFaker.Cast.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxFaker.Cast.html",
    "title": "Method Cast | Nitrox",
    "keywords": "Method Cast Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll Cast<T>(object) protected static T Cast<T>(object o) Parameters o object Returns T Type Parameters T"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxFaker.CastMethodBase.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxFaker.CastMethodBase.html",
    "title": "Field CastMethodBase | Nitrox",
    "keywords": "Field CastMethodBase Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll protected static readonly MethodInfo CastMethodBase Returns MethodInfo"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxFaker.CreateFaker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxFaker.CreateFaker.html",
    "title": "Method CreateFaker | Nitrox",
    "keywords": "Method CreateFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll CreateFaker(Type) protected static INitroxFaker CreateFaker(Type type) Parameters type Type Returns INitroxFaker"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxFaker.Faker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxFaker.Faker.html",
    "title": "Field Faker | Nitrox",
    "keywords": "Field Faker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll protected static readonly Faker Faker Returns Faker"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxFaker.FakerByType.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxFaker.FakerByType.html",
    "title": "Field FakerByType | Nitrox",
    "keywords": "Field FakerByType Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll protected static readonly Dictionary<Type, INitroxFaker> FakerByType Returns Dictionary<Type, INitroxFaker>"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxFaker.GetOrCreateFaker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxFaker.GetOrCreateFaker.html",
    "title": "Method GetOrCreateFaker | Nitrox",
    "keywords": "Method GetOrCreateFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GetOrCreateFaker(Type) public static INitroxFaker GetOrCreateFaker(Type t) Parameters t Type Returns INitroxFaker"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxFaker.IsValidType.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxFaker.IsValidType.html",
    "title": "Method IsValidType | Nitrox",
    "keywords": "Method IsValidType Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll IsValidType(Type) protected static bool IsValidType(Type type) Parameters type Type Returns bool"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxFaker.OutputType.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxFaker.OutputType.html",
    "title": "Property OutputType | Nitrox",
    "keywords": "Property OutputType Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll OutputType public Type OutputType { get; protected init; } Property Value Type"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxFaker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxFaker.html",
    "title": "Class NitroxFaker | Nitrox",
    "keywords": "Class NitroxFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public abstract class NitroxFaker Inheritance object NitroxFaker Derived NitroxAbstractFaker NitroxActionFaker NitroxAutoFaker<T> NitroxCollectionFaker NitroxNullableFaker NitroxOptionalFaker Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields CastMethodBase Faker FakerByType Properties OutputType Methods Cast<T>(object) CreateFaker(Type) GetOrCreateFaker(Type) IsValidType(Type)"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxNullableFaker.-ctor.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxNullableFaker.-ctor.html",
    "title": "Constructor NitroxNullableFaker | Nitrox",
    "keywords": "Constructor NitroxNullableFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll NitroxNullableFaker(Type) public NitroxNullableFaker(Type type) Parameters type Type"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxNullableFaker.GenerateUnsafe.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxNullableFaker.GenerateUnsafe.html",
    "title": "Method GenerateUnsafe | Nitrox",
    "keywords": "Method GenerateUnsafe Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GenerateUnsafe(HashSet<Type>) public object GenerateUnsafe(HashSet<Type> typeTree) Parameters typeTree HashSet<Type> Returns object"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxNullableFaker.GetSubFakers.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxNullableFaker.GetSubFakers.html",
    "title": "Method GetSubFakers | Nitrox",
    "keywords": "Method GetSubFakers Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GetSubFakers() public INitroxFaker[] GetSubFakers() Returns INitroxFaker[]"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxNullableFaker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxNullableFaker.html",
    "title": "Class NitroxNullableFaker | Nitrox",
    "keywords": "Class NitroxNullableFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public class NitroxNullableFaker : NitroxFaker, INitroxFaker Inheritance object NitroxFaker NitroxNullableFaker Implements INitroxFaker Inherited Members NitroxFaker.OutputType NitroxFaker.Faker NitroxFaker.FakerByType NitroxFaker.GetOrCreateFaker(Type) NitroxFaker.CreateFaker(Type) NitroxFaker.IsValidType(Type) NitroxFaker.CastMethodBase NitroxFaker.Cast<T>(object) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxNullableFaker(Type) Methods GenerateUnsafe(HashSet<Type>) GetSubFakers()"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxOptionalFaker.-ctor.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxOptionalFaker.-ctor.html",
    "title": "Constructor NitroxOptionalFaker | Nitrox",
    "keywords": "Constructor NitroxOptionalFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll NitroxOptionalFaker(Type) public NitroxOptionalFaker(Type type) Parameters type Type"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxOptionalFaker.GenerateUnsafe.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxOptionalFaker.GenerateUnsafe.html",
    "title": "Method GenerateUnsafe | Nitrox",
    "keywords": "Method GenerateUnsafe Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GenerateUnsafe(HashSet<Type>) public object GenerateUnsafe(HashSet<Type> typeTree) Parameters typeTree HashSet<Type> Returns object"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxOptionalFaker.GetSubFakers.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxOptionalFaker.GetSubFakers.html",
    "title": "Method GetSubFakers | Nitrox",
    "keywords": "Method GetSubFakers Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll GetSubFakers() public INitroxFaker[] GetSubFakers() Returns INitroxFaker[]"
  },
  "api/Nitrox.Test.Helper.Faker.NitroxOptionalFaker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.NitroxOptionalFaker.html",
    "title": "Class NitroxOptionalFaker | Nitrox",
    "keywords": "Class NitroxOptionalFaker Namespace Nitrox.Test.Helper.Faker Assembly Nitrox.Test.dll public class NitroxOptionalFaker : NitroxFaker, INitroxFaker Inheritance object NitroxFaker NitroxOptionalFaker Implements INitroxFaker Inherited Members NitroxFaker.OutputType NitroxFaker.Faker NitroxFaker.FakerByType NitroxFaker.GetOrCreateFaker(Type) NitroxFaker.CreateFaker(Type) NitroxFaker.IsValidType(Type) NitroxFaker.CastMethodBase NitroxFaker.Cast<T>(object) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxOptionalFaker(Type) Methods GenerateUnsafe(HashSet<Type>) GetSubFakers()"
  },
  "api/Nitrox.Test.Helper.Faker.html": {
    "href": "api/Nitrox.Test.Helper.Faker.html",
    "title": "Namespace Nitrox.Test.Helper.Faker | Nitrox",
    "keywords": "Namespace Nitrox.Test.Helper.Faker Classes NitroxAbstractFaker NitroxActionFaker NitroxAutoFaker<T> NitroxCollectionFaker NitroxFaker NitroxNullableFaker NitroxOptionalFaker Interfaces INitroxFaker Enums NitroxCollectionFaker.CollectionType"
  },
  "api/Nitrox.Test.Helper.TypeExtension.IsAssignableToGenericType.html": {
    "href": "api/Nitrox.Test.Helper.TypeExtension.IsAssignableToGenericType.html",
    "title": "Method IsAssignableToGenericType | Nitrox",
    "keywords": "Method IsAssignableToGenericType Namespace Nitrox.Test.Helper Assembly Nitrox.Test.dll IsAssignableToGenericType(Type, Type) public static bool IsAssignableToGenericType(this Type givenType, Type genericType) Parameters givenType Type genericType Type Returns bool"
  },
  "api/Nitrox.Test.Helper.TypeExtension.html": {
    "href": "api/Nitrox.Test.Helper.TypeExtension.html",
    "title": "Class TypeExtension | Nitrox",
    "keywords": "Class TypeExtension Namespace Nitrox.Test.Helper Assembly Nitrox.Test.dll public static class TypeExtension Inheritance object TypeExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods IsAssignableToGenericType(Type, Type)"
  },
  "api/Nitrox.Test.Helper.html": {
    "href": "api/Nitrox.Test.Helper.html",
    "title": "Namespace Nitrox.Test.Helper | Nitrox",
    "keywords": "Namespace Nitrox.Test.Helper Namespaces Nitrox.Test.Helper.Faker Classes AssertHelper TypeExtension"
  },
  "api/Nitrox.Test.SetupAssemblyInitializer.AssemblyInit.html": {
    "href": "api/Nitrox.Test.SetupAssemblyInitializer.AssemblyInit.html",
    "title": "Method AssemblyInit | Nitrox",
    "keywords": "Method AssemblyInit Namespace Nitrox.Test Assembly Nitrox.Test.dll AssemblyInit(TestContext) [AssemblyInitialize] public static void AssemblyInit(TestContext context) Parameters context TestContext"
  },
  "api/Nitrox.Test.SetupAssemblyInitializer.html": {
    "href": "api/Nitrox.Test.SetupAssemblyInitializer.html",
    "title": "Class SetupAssemblyInitializer | Nitrox",
    "keywords": "Class SetupAssemblyInitializer Namespace Nitrox.Test Assembly Nitrox.Test.dll [TestClass] public class SetupAssemblyInitializer Inheritance object SetupAssemblyInitializer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AssemblyInit(TestContext)"
  },
  "api/Nitrox.Test.TestAutoFacRegistrar.RegisterDependencies.html": {
    "href": "api/Nitrox.Test.TestAutoFacRegistrar.RegisterDependencies.html",
    "title": "Method RegisterDependencies | Nitrox",
    "keywords": "Method RegisterDependencies Namespace Nitrox.Test Assembly Nitrox.Test.dll RegisterDependencies(ContainerBuilder) public void RegisterDependencies(ContainerBuilder containerBuilder) Parameters containerBuilder ContainerBuilder"
  },
  "api/Nitrox.Test.TestAutoFacRegistrar.html": {
    "href": "api/Nitrox.Test.TestAutoFacRegistrar.html",
    "title": "Class TestAutoFacRegistrar | Nitrox",
    "keywords": "Class TestAutoFacRegistrar Namespace Nitrox.Test Assembly Nitrox.Test.dll public class TestAutoFacRegistrar : IAutoFacRegistrar Inheritance object TestAutoFacRegistrar Implements IAutoFacRegistrar Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods RegisterDependencies(ContainerBuilder)"
  },
  "api/Nitrox.Test.html": {
    "href": "api/Nitrox.Test.html",
    "title": "Namespace Nitrox.Test | Nitrox",
    "keywords": "Namespace Nitrox.Test Namespaces Nitrox.Test.Client.Communication Nitrox.Test.Helper Classes SetupAssemblyInitializer TestAutoFacRegistrar"
  },
  "api/Nitrox.html": {
    "href": "api/Nitrox.html",
    "title": "Namespace Nitrox | Nitrox",
    "keywords": "Namespace Nitrox Namespaces Nitrox.BuildTool Nitrox.Test"
  },
  "api/NitroxClient.ClientAutoFacRegistrar.-ctor.html": {
    "href": "api/NitroxClient.ClientAutoFacRegistrar.-ctor.html",
    "title": "Constructor ClientAutoFacRegistrar | Nitrox",
    "keywords": "Constructor ClientAutoFacRegistrar Namespace NitroxClient Assembly NitroxClient.dll ClientAutoFacRegistrar(params IModule[]) public ClientAutoFacRegistrar(params IModule[] modules) Parameters modules IModule[]"
  },
  "api/NitroxClient.ClientAutoFacRegistrar.RegisterDependencies.html": {
    "href": "api/NitroxClient.ClientAutoFacRegistrar.RegisterDependencies.html",
    "title": "Method RegisterDependencies | Nitrox",
    "keywords": "Method RegisterDependencies Namespace NitroxClient Assembly NitroxClient.dll RegisterDependencies(ContainerBuilder) public void RegisterDependencies(ContainerBuilder containerBuilder) Parameters containerBuilder ContainerBuilder"
  },
  "api/NitroxClient.ClientAutoFacRegistrar.html": {
    "href": "api/NitroxClient.ClientAutoFacRegistrar.html",
    "title": "Class ClientAutoFacRegistrar | Nitrox",
    "keywords": "Class ClientAutoFacRegistrar Namespace NitroxClient Assembly NitroxClient.dll public class ClientAutoFacRegistrar : IAutoFacRegistrar Inheritance object ClientAutoFacRegistrar Implements IAutoFacRegistrar Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ClientAutoFacRegistrar(params IModule[]) Methods RegisterDependencies(ContainerBuilder)"
  },
  "api/NitroxClient.Communication.Abstract.IClient.IsConnected.html": {
    "href": "api/NitroxClient.Communication.Abstract.IClient.IsConnected.html",
    "title": "Property IsConnected | Nitrox",
    "keywords": "Property IsConnected Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll IsConnected bool IsConnected { get; } Property Value bool"
  },
  "api/NitroxClient.Communication.Abstract.IClient.PollEvents.html": {
    "href": "api/NitroxClient.Communication.Abstract.IClient.PollEvents.html",
    "title": "Method PollEvents | Nitrox",
    "keywords": "Method PollEvents Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll PollEvents() void PollEvents()"
  },
  "api/NitroxClient.Communication.Abstract.IClient.Send.html": {
    "href": "api/NitroxClient.Communication.Abstract.IClient.Send.html",
    "title": "Method Send | Nitrox",
    "keywords": "Method Send Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll Send(Packet) void Send(Packet packet) Parameters packet Packet"
  },
  "api/NitroxClient.Communication.Abstract.IClient.StartAsync.html": {
    "href": "api/NitroxClient.Communication.Abstract.IClient.StartAsync.html",
    "title": "Method StartAsync | Nitrox",
    "keywords": "Method StartAsync Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll StartAsync(string, int) Task StartAsync(string ipAddress, int serverPort) Parameters ipAddress string serverPort int Returns Task"
  },
  "api/NitroxClient.Communication.Abstract.IClient.Stop.html": {
    "href": "api/NitroxClient.Communication.Abstract.IClient.Stop.html",
    "title": "Method Stop | Nitrox",
    "keywords": "Method Stop Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll Stop() void Stop()"
  },
  "api/NitroxClient.Communication.Abstract.IClient.html": {
    "href": "api/NitroxClient.Communication.Abstract.IClient.html",
    "title": "Interface IClient | Nitrox",
    "keywords": "Interface IClient Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll Abstracted IClient in order to give us options in the underlying protocol that we use to communicate with the server. Ex: We may want to also roll a UDP client in the future to handle packets where we don't necessarily care about transmission order or error recovery. public interface IClient Properties IsConnected Methods PollEvents() Send(Packet) StartAsync(string, int) Stop()"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSession.ConnectAsync.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSession.ConnectAsync.html",
    "title": "Method ConnectAsync | Nitrox",
    "keywords": "Method ConnectAsync Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll ConnectAsync(string, int) Task ConnectAsync(string ipAddress, int port) Parameters ipAddress string port int Returns Task"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSession.ConnectionStateChanged.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSession.ConnectionStateChanged.html",
    "title": "Event ConnectionStateChanged | Nitrox",
    "keywords": "Event ConnectionStateChanged Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll event MultiplayerSessionConnectionStateChangedEventHandler ConnectionStateChanged Returns MultiplayerSessionConnectionStateChangedEventHandler"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSession.CurrentState.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSession.CurrentState.html",
    "title": "Property CurrentState | Nitrox",
    "keywords": "Property CurrentState Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll CurrentState IMultiplayerSessionConnectionState CurrentState { get; } Property Value IMultiplayerSessionConnectionState"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSession.Disconnect.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSession.Disconnect.html",
    "title": "Method Disconnect | Nitrox",
    "keywords": "Method Disconnect Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll Disconnect() void Disconnect()"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSession.JoinSession.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSession.JoinSession.html",
    "title": "Method JoinSession | Nitrox",
    "keywords": "Method JoinSession Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll JoinSession() void JoinSession()"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSession.ProcessReservationResponsePacket.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSession.ProcessReservationResponsePacket.html",
    "title": "Method ProcessReservationResponsePacket | Nitrox",
    "keywords": "Method ProcessReservationResponsePacket Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll ProcessReservationResponsePacket(MultiplayerSessionReservation) void ProcessReservationResponsePacket(MultiplayerSessionReservation reservation) Parameters reservation MultiplayerSessionReservation"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSession.ProcessSessionPolicy.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSession.ProcessSessionPolicy.html",
    "title": "Method ProcessSessionPolicy | Nitrox",
    "keywords": "Method ProcessSessionPolicy Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll ProcessSessionPolicy(MultiplayerSessionPolicy) void ProcessSessionPolicy(MultiplayerSessionPolicy policy) Parameters policy MultiplayerSessionPolicy"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSession.RequestSessionReservation.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSession.RequestSessionReservation.html",
    "title": "Method RequestSessionReservation | Nitrox",
    "keywords": "Method RequestSessionReservation Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll RequestSessionReservation(PlayerSettings, AuthenticationContext) void RequestSessionReservation(PlayerSettings playerSettings, AuthenticationContext authenticationContext) Parameters playerSettings PlayerSettings authenticationContext AuthenticationContext"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSession.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSession.html",
    "title": "Interface IMultiplayerSession | Nitrox",
    "keywords": "Interface IMultiplayerSession Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll public interface IMultiplayerSession : IPacketSender, IMultiplayerSessionState Inherited Members IPacketSender.Send<T>(T) IMultiplayerSessionState.Client IMultiplayerSessionState.IpAddress IMultiplayerSessionState.ServerPort IMultiplayerSessionState.SessionPolicy IMultiplayerSessionState.PlayerSettings IMultiplayerSessionState.AuthenticationContext IMultiplayerSessionState.Reservation Properties CurrentState Methods ConnectAsync(string, int) Disconnect() JoinSession() ProcessReservationResponsePacket(MultiplayerSessionReservation) ProcessSessionPolicy(MultiplayerSessionPolicy) RequestSessionReservation(PlayerSettings, AuthenticationContext) Events ConnectionStateChanged"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionContext.ClearSessionState.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionContext.ClearSessionState.html",
    "title": "Method ClearSessionState | Nitrox",
    "keywords": "Method ClearSessionState Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll ClearSessionState() void ClearSessionState()"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionContext.UpdateConnectionState.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionContext.UpdateConnectionState.html",
    "title": "Method UpdateConnectionState | Nitrox",
    "keywords": "Method UpdateConnectionState Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll UpdateConnectionState(IMultiplayerSessionConnectionState) void UpdateConnectionState(IMultiplayerSessionConnectionState sessionConnectionState) Parameters sessionConnectionState IMultiplayerSessionConnectionState"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionContext.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionContext.html",
    "title": "Interface IMultiplayerSessionConnectionContext | Nitrox",
    "keywords": "Interface IMultiplayerSessionConnectionContext Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll public interface IMultiplayerSessionConnectionContext : IMultiplayerSessionState Inherited Members IMultiplayerSessionState.Client IMultiplayerSessionState.IpAddress IMultiplayerSessionState.ServerPort IMultiplayerSessionState.SessionPolicy IMultiplayerSessionState.PlayerSettings IMultiplayerSessionState.AuthenticationContext IMultiplayerSessionState.Reservation Methods ClearSessionState() UpdateConnectionState(IMultiplayerSessionConnectionState)"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionState.CurrentStage.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionState.CurrentStage.html",
    "title": "Property CurrentStage | Nitrox",
    "keywords": "Property CurrentStage Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll CurrentStage MultiplayerSessionConnectionStage CurrentStage { get; } Property Value MultiplayerSessionConnectionStage"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionState.Disconnect.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionState.Disconnect.html",
    "title": "Method Disconnect | Nitrox",
    "keywords": "Method Disconnect Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll Disconnect(IMultiplayerSessionConnectionContext) void Disconnect(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionState.JoinSession.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionState.JoinSession.html",
    "title": "Method JoinSession | Nitrox",
    "keywords": "Method JoinSession Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll JoinSession(IMultiplayerSessionConnectionContext) void JoinSession(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionState.NegotiateReservationAsync.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionState.NegotiateReservationAsync.html",
    "title": "Method NegotiateReservationAsync | Nitrox",
    "keywords": "Method NegotiateReservationAsync Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll NegotiateReservationAsync(IMultiplayerSessionConnectionContext) Task NegotiateReservationAsync(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext Returns Task"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionState.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionConnectionState.html",
    "title": "Interface IMultiplayerSessionConnectionState | Nitrox",
    "keywords": "Interface IMultiplayerSessionConnectionState Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll public interface IMultiplayerSessionConnectionState Properties CurrentStage Methods Disconnect(IMultiplayerSessionConnectionContext) JoinSession(IMultiplayerSessionConnectionContext) NegotiateReservationAsync(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.AuthenticationContext.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.AuthenticationContext.html",
    "title": "Property AuthenticationContext | Nitrox",
    "keywords": "Property AuthenticationContext Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll AuthenticationContext AuthenticationContext AuthenticationContext { get; } Property Value AuthenticationContext"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.Client.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.Client.html",
    "title": "Property Client | Nitrox",
    "keywords": "Property Client Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll Client IClient Client { get; } Property Value IClient"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.IpAddress.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.IpAddress.html",
    "title": "Property IpAddress | Nitrox",
    "keywords": "Property IpAddress Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll IpAddress string IpAddress { get; } Property Value string"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.PlayerSettings.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.PlayerSettings.html",
    "title": "Property PlayerSettings | Nitrox",
    "keywords": "Property PlayerSettings Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll PlayerSettings PlayerSettings PlayerSettings { get; } Property Value PlayerSettings"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.Reservation.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.Reservation.html",
    "title": "Property Reservation | Nitrox",
    "keywords": "Property Reservation Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll Reservation MultiplayerSessionReservation Reservation { get; } Property Value MultiplayerSessionReservation"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.ServerPort.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.ServerPort.html",
    "title": "Property ServerPort | Nitrox",
    "keywords": "Property ServerPort Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll ServerPort int ServerPort { get; } Property Value int"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.SessionPolicy.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.SessionPolicy.html",
    "title": "Property SessionPolicy | Nitrox",
    "keywords": "Property SessionPolicy Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll SessionPolicy MultiplayerSessionPolicy SessionPolicy { get; } Property Value MultiplayerSessionPolicy"
  },
  "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.html": {
    "href": "api/NitroxClient.Communication.Abstract.IMultiplayerSessionState.html",
    "title": "Interface IMultiplayerSessionState | Nitrox",
    "keywords": "Interface IMultiplayerSessionState Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll public interface IMultiplayerSessionState Properties AuthenticationContext Client IpAddress PlayerSettings Reservation ServerPort SessionPolicy"
  },
  "api/NitroxClient.Communication.Abstract.IPacketSender.Send.html": {
    "href": "api/NitroxClient.Communication.Abstract.IPacketSender.Send.html",
    "title": "Method Send | Nitrox",
    "keywords": "Method Send Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll Send<T>(T) Sends the packet. Returns true if packet was not suppressed. bool Send<T>(T packet) where T : Packet Parameters packet T The packet to send. Returns bool True if not suppressed and actually sent. Type Parameters T"
  },
  "api/NitroxClient.Communication.Abstract.IPacketSender.html": {
    "href": "api/NitroxClient.Communication.Abstract.IPacketSender.html",
    "title": "Interface IPacketSender | Nitrox",
    "keywords": "Interface IPacketSender Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll public interface IPacketSender Methods Send<T>(T) Sends the packet. Returns true if packet was not suppressed."
  },
  "api/NitroxClient.Communication.Abstract.MultiplayerSessionConnectionStateChangedEventHandler.html": {
    "href": "api/NitroxClient.Communication.Abstract.MultiplayerSessionConnectionStateChangedEventHandler.html",
    "title": "Delegate MultiplayerSessionConnectionStateChangedEventHandler | Nitrox",
    "keywords": "Delegate MultiplayerSessionConnectionStateChangedEventHandler Namespace NitroxClient.Communication.Abstract Assembly NitroxClient.dll public delegate void MultiplayerSessionConnectionStateChangedEventHandler(IMultiplayerSessionConnectionState newState) Parameters newState IMultiplayerSessionConnectionState"
  },
  "api/NitroxClient.Communication.Abstract.html": {
    "href": "api/NitroxClient.Communication.Abstract.html",
    "title": "Namespace NitroxClient.Communication.Abstract | Nitrox",
    "keywords": "Namespace NitroxClient.Communication.Abstract Interfaces IClient Abstracted IClient in order to give us options in the underlying protocol that we use to communicate with the server. Ex: We may want to also roll a UDP client in the future to handle packets where we don't necessarily care about transmission order or error recovery. IMultiplayerSession IMultiplayerSessionConnectionContext IMultiplayerSessionConnectionState IMultiplayerSessionState IPacketSender Delegates MultiplayerSessionConnectionStateChangedEventHandler"
  },
  "api/NitroxClient.Communication.DeferredPacketReceiverTest.NonActionPacket.html": {
    "href": "api/NitroxClient.Communication.DeferredPacketReceiverTest.NonActionPacket.html",
    "title": "Method NonActionPacket | Nitrox",
    "keywords": "Method NonActionPacket Namespace NitroxClient.Communication Assembly Nitrox.Test.dll NonActionPacket() [TestMethod] public void NonActionPacket()"
  },
  "api/NitroxClient.Communication.DeferredPacketReceiverTest.TestInitialize.html": {
    "href": "api/NitroxClient.Communication.DeferredPacketReceiverTest.TestInitialize.html",
    "title": "Method TestInitialize | Nitrox",
    "keywords": "Method TestInitialize Namespace NitroxClient.Communication Assembly Nitrox.Test.dll TestInitialize() [TestInitialize] public void TestInitialize()"
  },
  "api/NitroxClient.Communication.DeferredPacketReceiverTest.html": {
    "href": "api/NitroxClient.Communication.DeferredPacketReceiverTest.html",
    "title": "Class DeferredPacketReceiverTest | Nitrox",
    "keywords": "Class DeferredPacketReceiverTest Namespace NitroxClient.Communication Assembly Nitrox.Test.dll [TestClass] public class DeferredPacketReceiverTest Inheritance object DeferredPacketReceiverTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods NonActionPacket() TestInitialize()"
  },
  "api/NitroxClient.Communication.Exceptions.ClientConnectionFailedException.-ctor.html": {
    "href": "api/NitroxClient.Communication.Exceptions.ClientConnectionFailedException.-ctor.html",
    "title": "Constructor ClientConnectionFailedException | Nitrox",
    "keywords": "Constructor ClientConnectionFailedException Namespace NitroxClient.Communication.Exceptions Assembly NitroxClient.dll ClientConnectionFailedException(string) public ClientConnectionFailedException(string message) Parameters message string ClientConnectionFailedException(string, Exception) public ClientConnectionFailedException(string message, Exception innerException) Parameters message string innerException Exception"
  },
  "api/NitroxClient.Communication.Exceptions.ClientConnectionFailedException.html": {
    "href": "api/NitroxClient.Communication.Exceptions.ClientConnectionFailedException.html",
    "title": "Class ClientConnectionFailedException | Nitrox",
    "keywords": "Class ClientConnectionFailedException Namespace NitroxClient.Communication.Exceptions Assembly NitroxClient.dll public class ClientConnectionFailedException : Exception, ISerializable, _Exception Inheritance object Exception ClientConnectionFailedException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Extension Methods Extensions.GetFirstNonAggregateMessage(Exception) Constructors ClientConnectionFailedException(string) ClientConnectionFailedException(string, Exception)"
  },
  "api/NitroxClient.Communication.Exceptions.html": {
    "href": "api/NitroxClient.Communication.Exceptions.html",
    "title": "Namespace NitroxClient.Communication.Exceptions | Nitrox",
    "keywords": "Namespace NitroxClient.Communication.Exceptions Classes ClientConnectionFailedException"
  },
  "api/NitroxClient.Communication.LANBroadcastClient.SearchAsync.html": {
    "href": "api/NitroxClient.Communication.LANBroadcastClient.SearchAsync.html",
    "title": "Method SearchAsync | Nitrox",
    "keywords": "Method SearchAsync Namespace NitroxClient.Communication Assembly NitroxClient.dll SearchAsync(bool, CancellationToken) public static Task<IEnumerable<IPEndPoint>> SearchAsync(bool force = false, CancellationToken cancellationToken = default) Parameters force bool cancellationToken CancellationToken Returns Task<IEnumerable<IPEndPoint>>"
  },
  "api/NitroxClient.Communication.LANBroadcastClient.ServerFound.html": {
    "href": "api/NitroxClient.Communication.LANBroadcastClient.ServerFound.html",
    "title": "Event ServerFound | Nitrox",
    "keywords": "Event ServerFound Namespace NitroxClient.Communication Assembly NitroxClient.dll public static event Action<IPEndPoint> ServerFound Returns Action<IPEndPoint>"
  },
  "api/NitroxClient.Communication.LANBroadcastClient.html": {
    "href": "api/NitroxClient.Communication.LANBroadcastClient.html",
    "title": "Class LANBroadcastClient | Nitrox",
    "keywords": "Class LANBroadcastClient Namespace NitroxClient.Communication Assembly NitroxClient.dll public static class LANBroadcastClient Inheritance object LANBroadcastClient Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SearchAsync(bool, CancellationToken) Events ServerFound"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentials.CurrentStage.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentials.CurrentStage.html",
    "title": "Property CurrentStage | Nitrox",
    "keywords": "Property CurrentStage Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll CurrentStage public override MultiplayerSessionConnectionStage CurrentStage { get; } Property Value MultiplayerSessionConnectionStage"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentials.NegotiateReservationAsync.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentials.NegotiateReservationAsync.html",
    "title": "Method NegotiateReservationAsync | Nitrox",
    "keywords": "Method NegotiateReservationAsync Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll NegotiateReservationAsync(IMultiplayerSessionConnectionContext) public override Task NegotiateReservationAsync(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext Returns Task"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentials.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentials.html",
    "title": "Class AwaitingReservationCredentials | Nitrox",
    "keywords": "Class AwaitingReservationCredentials Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll public class AwaitingReservationCredentials : ConnectionNegotiatingState, IMultiplayerSessionConnectionState Inheritance object CommunicatingState ConnectionNegotiatingState AwaitingReservationCredentials Implements IMultiplayerSessionConnectionState Inherited Members ConnectionNegotiatingState.JoinSession(IMultiplayerSessionConnectionContext) CommunicatingState.Disconnect(IMultiplayerSessionConnectionContext) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CurrentStage Methods NegotiateReservationAsync(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldResetTheConnectionContext.html",
    "title": "Method DisconnectShouldResetTheConnectionContext | Nitrox",
    "keywords": "Method DisconnectShouldResetTheConnectionContext Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldResetTheConnectionContext() [TestMethod] public void DisconnectShouldResetTheConnectionContext()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldStopTheClient.html",
    "title": "Method DisconnectShouldStopTheClient | Nitrox",
    "keywords": "Method DisconnectShouldStopTheClient Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldStopTheClient() [TestMethod] public void DisconnectShouldStopTheClient()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.DisconnectShouldTransitionToDisconnectedState.html",
    "title": "Method DisconnectShouldTransitionToDisconnectedState | Nitrox",
    "keywords": "Method DisconnectShouldTransitionToDisconnectedState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldTransitionToDisconnectedState() [TestMethod] public void DisconnectShouldTransitionToDisconnectedState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.JoinSessionShouldThrowInvalidOperationException.html",
    "title": "Method JoinSessionShouldThrowInvalidOperationException | Nitrox",
    "keywords": "Method JoinSessionShouldThrowInvalidOperationException Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll JoinSessionShouldThrowInvalidOperationException() [TestMethod] public void JoinSessionShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldSendServerAuthorityReservationRequest.html",
    "title": "Method NegotiateShouldSendServerAuthorityReservationRequest | Nitrox",
    "keywords": "Method NegotiateShouldSendServerAuthorityReservationRequest Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldSendServerAuthorityReservationRequest() [TestMethod] public void NegotiateShouldSendServerAuthorityReservationRequest()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull.html",
    "title": "Method NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull | Nitrox",
    "keywords": "Method NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull() [TestMethod] public void NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull.html",
    "title": "Method NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull | Nitrox",
    "keywords": "Method NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull() [TestMethod] public void NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.NegotiateShouldTransitionToAwaitingSessionReservationState.html",
    "title": "Method NegotiateShouldTransitionToAwaitingSessionReservationState | Nitrox",
    "keywords": "Method NegotiateShouldTransitionToAwaitingSessionReservationState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldTransitionToAwaitingSessionReservationState() [TestMethod] public void NegotiateShouldTransitionToAwaitingSessionReservationState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingReservationCredentialsStateTests.html",
    "title": "Class AwaitingReservationCredentialsStateTests | Nitrox",
    "keywords": "Class AwaitingReservationCredentialsStateTests Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll [TestClass] public class AwaitingReservationCredentialsStateTests Inheritance object AwaitingReservationCredentialsStateTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DisconnectShouldResetTheConnectionContext() DisconnectShouldStopTheClient() DisconnectShouldTransitionToDisconnectedState() JoinSessionShouldThrowInvalidOperationException() NegotiateShouldSendServerAuthorityReservationRequest() NegotiateShouldThrowInvalidOperationExceptionWhenAuthenticationContextIsNull() NegotiateShouldThrowInvalidOperationExceptionWhenPlayerSettingsIsNull() NegotiateShouldTransitionToAwaitingSessionReservationState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservation.-ctor.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservation.-ctor.html",
    "title": "Constructor AwaitingSessionReservation | Nitrox",
    "keywords": "Constructor AwaitingSessionReservation Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll AwaitingSessionReservation(string) public AwaitingSessionReservation(string reservationCorrelationId) Parameters reservationCorrelationId string"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservation.CurrentStage.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservation.CurrentStage.html",
    "title": "Property CurrentStage | Nitrox",
    "keywords": "Property CurrentStage Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll CurrentStage public override MultiplayerSessionConnectionStage CurrentStage { get; } Property Value MultiplayerSessionConnectionStage"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservation.NegotiateReservationAsync.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservation.NegotiateReservationAsync.html",
    "title": "Method NegotiateReservationAsync | Nitrox",
    "keywords": "Method NegotiateReservationAsync Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll NegotiateReservationAsync(IMultiplayerSessionConnectionContext) public override Task NegotiateReservationAsync(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext Returns Task"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservation.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservation.html",
    "title": "Class AwaitingSessionReservation | Nitrox",
    "keywords": "Class AwaitingSessionReservation Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll public class AwaitingSessionReservation : ConnectionNegotiatingState, IMultiplayerSessionConnectionState Inheritance object CommunicatingState ConnectionNegotiatingState AwaitingSessionReservation Implements IMultiplayerSessionConnectionState Inherited Members ConnectionNegotiatingState.JoinSession(IMultiplayerSessionConnectionContext) CommunicatingState.Disconnect(IMultiplayerSessionConnectionContext) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AwaitingSessionReservation(string) Properties CurrentStage Methods NegotiateReservationAsync(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.16abd57a-db20-4bea-805d-72697867c4b4.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.16abd57a-db20-4bea-805d-72697867c4b4.html",
    "title": "Method NegotiateShouldTransitionToSessionReservationRejectedAfterReceivingRejectedReservation | Nitrox",
    "keywords": "Method NegotiateShouldTransitionToSessionReservationRejectedAfterReceivingRejectedReservation Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldTransitionToSessionReservationRejectedAfterReceivingRejectedReservation() [TestMethod] public void NegotiateShouldTransitionToSessionReservationRejectedAfterReceivingRejectedReservation()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.8336c827-c738-4aba-b840-9a254c78b00a.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.8336c827-c738-4aba-b840-9a254c78b00a.html",
    "title": "Method NegotiateShouldThrowUncorrelatedPacketExceptionWhenTheReservationHasTheWrongCorrelationId | Nitrox",
    "keywords": "Method NegotiateShouldThrowUncorrelatedPacketExceptionWhenTheReservationHasTheWrongCorrelationId Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowUncorrelatedPacketExceptionWhenTheReservationHasTheWrongCorrelationId() [TestMethod] public void NegotiateShouldThrowUncorrelatedPacketExceptionWhenTheReservationHasTheWrongCorrelationId()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.DisconnectShouldResetTheConnectionContext.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.DisconnectShouldResetTheConnectionContext.html",
    "title": "Method DisconnectShouldResetTheConnectionContext | Nitrox",
    "keywords": "Method DisconnectShouldResetTheConnectionContext Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldResetTheConnectionContext() [TestMethod] public void DisconnectShouldResetTheConnectionContext()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.DisconnectShouldStopTheClient.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.DisconnectShouldStopTheClient.html",
    "title": "Method DisconnectShouldStopTheClient | Nitrox",
    "keywords": "Method DisconnectShouldStopTheClient Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldStopTheClient() [TestMethod] public void DisconnectShouldStopTheClient()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.DisconnectShouldTransitionToDisconnectedState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.DisconnectShouldTransitionToDisconnectedState.html",
    "title": "Method DisconnectShouldTransitionToDisconnectedState | Nitrox",
    "keywords": "Method DisconnectShouldTransitionToDisconnectedState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldTransitionToDisconnectedState() [TestMethod] public void DisconnectShouldTransitionToDisconnectedState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.JoinSessionShouldThrowInvalidOperationException.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.JoinSessionShouldThrowInvalidOperationException.html",
    "title": "Method JoinSessionShouldThrowInvalidOperationException | Nitrox",
    "keywords": "Method JoinSessionShouldThrowInvalidOperationException Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll JoinSessionShouldThrowInvalidOperationException() [TestMethod] public void JoinSessionShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenTheReservationIsNull.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenTheReservationIsNull.html",
    "title": "Method NegotiateShouldThrowInvalidOperationExceptionWhenTheReservationIsNull | Nitrox",
    "keywords": "Method NegotiateShouldThrowInvalidOperationExceptionWhenTheReservationIsNull Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowInvalidOperationExceptionWhenTheReservationIsNull() [TestMethod] public void NegotiateShouldThrowInvalidOperationExceptionWhenTheReservationIsNull()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.NegotiateShouldTransitionToSessionRevervedAfterReceivingSuccessfulReservation.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.NegotiateShouldTransitionToSessionRevervedAfterReceivingSuccessfulReservation.html",
    "title": "Method NegotiateShouldTransitionToSessionRevervedAfterReceivingSuccessfulReservation | Nitrox",
    "keywords": "Method NegotiateShouldTransitionToSessionRevervedAfterReceivingSuccessfulReservation Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldTransitionToSessionRevervedAfterReceivingSuccessfulReservation() [TestMethod] public void NegotiateShouldTransitionToSessionRevervedAfterReceivingSuccessfulReservation()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.AwaitingSessionReservationStateTests.html",
    "title": "Class AwaitingSessionReservationStateTests | Nitrox",
    "keywords": "Class AwaitingSessionReservationStateTests Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll [TestClass] public class AwaitingSessionReservationStateTests Inheritance object AwaitingSessionReservationStateTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DisconnectShouldResetTheConnectionContext() DisconnectShouldStopTheClient() DisconnectShouldTransitionToDisconnectedState() JoinSessionShouldThrowInvalidOperationException() NegotiateShouldThrowInvalidOperationExceptionWhenTheReservationIsNull() NegotiateShouldThrowUncorrelatedPacketExceptionWhenTheReservationHasTheWrongCorrelationId() NegotiateShouldTransitionToSessionReservationRejectedAfterReceivingRejectedReservation() NegotiateShouldTransitionToSessionRevervedAfterReceivingSuccessfulReservation()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.CommunicatingState.CurrentStage.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.CommunicatingState.CurrentStage.html",
    "title": "Property CurrentStage | Nitrox",
    "keywords": "Property CurrentStage Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll CurrentStage public abstract MultiplayerSessionConnectionStage CurrentStage { get; } Property Value MultiplayerSessionConnectionStage"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.CommunicatingState.Disconnect.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.CommunicatingState.Disconnect.html",
    "title": "Method Disconnect | Nitrox",
    "keywords": "Method Disconnect Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll Disconnect(IMultiplayerSessionConnectionContext) public virtual void Disconnect(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.CommunicatingState.JoinSession.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.CommunicatingState.JoinSession.html",
    "title": "Method JoinSession | Nitrox",
    "keywords": "Method JoinSession Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll JoinSession(IMultiplayerSessionConnectionContext) public abstract void JoinSession(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.CommunicatingState.NegotiateReservationAsync.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.CommunicatingState.NegotiateReservationAsync.html",
    "title": "Method NegotiateReservationAsync | Nitrox",
    "keywords": "Method NegotiateReservationAsync Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll NegotiateReservationAsync(IMultiplayerSessionConnectionContext) public abstract Task NegotiateReservationAsync(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext Returns Task"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.CommunicatingState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.CommunicatingState.html",
    "title": "Class CommunicatingState | Nitrox",
    "keywords": "Class CommunicatingState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll public abstract class CommunicatingState : IMultiplayerSessionConnectionState Inheritance object CommunicatingState Implements IMultiplayerSessionConnectionState Derived ConnectionNegotiatedState ConnectionNegotiatingState Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CurrentStage Methods Disconnect(IMultiplayerSessionConnectionContext) JoinSession(IMultiplayerSessionConnectionContext) NegotiateReservationAsync(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.ConnectionNegotiatedState.NegotiateReservationAsync.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.ConnectionNegotiatedState.NegotiateReservationAsync.html",
    "title": "Method NegotiateReservationAsync | Nitrox",
    "keywords": "Method NegotiateReservationAsync Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll NegotiateReservationAsync(IMultiplayerSessionConnectionContext) public override Task NegotiateReservationAsync(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext Returns Task"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.ConnectionNegotiatedState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.ConnectionNegotiatedState.html",
    "title": "Class ConnectionNegotiatedState | Nitrox",
    "keywords": "Class ConnectionNegotiatedState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll public abstract class ConnectionNegotiatedState : CommunicatingState, IMultiplayerSessionConnectionState Inheritance object CommunicatingState ConnectionNegotiatedState Implements IMultiplayerSessionConnectionState Derived SessionJoined SessionReservationRejected SessionReserved Inherited Members CommunicatingState.CurrentStage CommunicatingState.JoinSession(IMultiplayerSessionConnectionContext) CommunicatingState.Disconnect(IMultiplayerSessionConnectionContext) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods NegotiateReservationAsync(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.ConnectionNegotiatingState.JoinSession.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.ConnectionNegotiatingState.JoinSession.html",
    "title": "Method JoinSession | Nitrox",
    "keywords": "Method JoinSession Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll JoinSession(IMultiplayerSessionConnectionContext) public override void JoinSession(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.ConnectionNegotiatingState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.ConnectionNegotiatingState.html",
    "title": "Class ConnectionNegotiatingState | Nitrox",
    "keywords": "Class ConnectionNegotiatingState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll public abstract class ConnectionNegotiatingState : CommunicatingState, IMultiplayerSessionConnectionState Inheritance object CommunicatingState ConnectionNegotiatingState Implements IMultiplayerSessionConnectionState Derived AwaitingReservationCredentials AwaitingSessionReservation EstablishingSessionPolicy Inherited Members CommunicatingState.CurrentStage CommunicatingState.NegotiateReservationAsync(IMultiplayerSessionConnectionContext) CommunicatingState.Disconnect(IMultiplayerSessionConnectionContext) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods JoinSession(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.Disconnected.CurrentStage.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.Disconnected.CurrentStage.html",
    "title": "Property CurrentStage | Nitrox",
    "keywords": "Property CurrentStage Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll CurrentStage public MultiplayerSessionConnectionStage CurrentStage { get; } Property Value MultiplayerSessionConnectionStage"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.Disconnected.Disconnect.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.Disconnected.Disconnect.html",
    "title": "Method Disconnect | Nitrox",
    "keywords": "Method Disconnect Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll Disconnect(IMultiplayerSessionConnectionContext) public void Disconnect(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.Disconnected.JoinSession.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.Disconnected.JoinSession.html",
    "title": "Method JoinSession | Nitrox",
    "keywords": "Method JoinSession Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll JoinSession(IMultiplayerSessionConnectionContext) public void JoinSession(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.Disconnected.NegotiateReservationAsync.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.Disconnected.NegotiateReservationAsync.html",
    "title": "Method NegotiateReservationAsync | Nitrox",
    "keywords": "Method NegotiateReservationAsync Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll NegotiateReservationAsync(IMultiplayerSessionConnectionContext) public Task NegotiateReservationAsync(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext Returns Task"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.Disconnected.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.Disconnected.html",
    "title": "Class Disconnected | Nitrox",
    "keywords": "Class Disconnected Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll public class Disconnected : IMultiplayerSessionConnectionState Inheritance object Disconnected Implements IMultiplayerSessionConnectionState Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CurrentStage Methods Disconnect(IMultiplayerSessionConnectionContext) JoinSession(IMultiplayerSessionConnectionContext) NegotiateReservationAsync(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.DisconnectShouldThrowInvalidOperationException.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.DisconnectShouldThrowInvalidOperationException.html",
    "title": "Method DisconnectShouldThrowInvalidOperationException | Nitrox",
    "keywords": "Method DisconnectShouldThrowInvalidOperationException Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldThrowInvalidOperationException() [TestMethod] public void DisconnectShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.JoinSessionShouldThrowInvalidOperationException.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.JoinSessionShouldThrowInvalidOperationException.html",
    "title": "Method JoinSessionShouldThrowInvalidOperationException | Nitrox",
    "keywords": "Method JoinSessionShouldThrowInvalidOperationException Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll JoinSessionShouldThrowInvalidOperationException() [TestMethod] public void JoinSessionShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.NegotiateShouldSendMultiplayerSessionPolicyRequestPacketToClient.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.NegotiateShouldSendMultiplayerSessionPolicyRequestPacketToClient.html",
    "title": "Method NegotiateShouldSendMultiplayerSessionPolicyRequestPacketToClient | Nitrox",
    "keywords": "Method NegotiateShouldSendMultiplayerSessionPolicyRequestPacketToClient Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldSendMultiplayerSessionPolicyRequestPacketToClient() [TestMethod] public void NegotiateShouldSendMultiplayerSessionPolicyRequestPacketToClient()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.NegotiateShouldStartTheClientOnTheContext.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.NegotiateShouldStartTheClientOnTheContext.html",
    "title": "Method NegotiateShouldStartTheClientOnTheContext | Nitrox",
    "keywords": "Method NegotiateShouldStartTheClientOnTheContext Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldStartTheClientOnTheContext() [TestMethod] public void NegotiateShouldStartTheClientOnTheContext()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenClientIsNull.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenClientIsNull.html",
    "title": "Method NegotiateShouldThrowInvalidOperationExceptionWhenClientIsNull | Nitrox",
    "keywords": "Method NegotiateShouldThrowInvalidOperationExceptionWhenClientIsNull Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowInvalidOperationExceptionWhenClientIsNull() [TestMethod] public Task NegotiateShouldThrowInvalidOperationExceptionWhenClientIsNull() Returns Task"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenIpAddressIsNull.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.NegotiateShouldThrowInvalidOperationExceptionWhenIpAddressIsNull.html",
    "title": "Method NegotiateShouldThrowInvalidOperationExceptionWhenIpAddressIsNull | Nitrox",
    "keywords": "Method NegotiateShouldThrowInvalidOperationExceptionWhenIpAddressIsNull Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowInvalidOperationExceptionWhenIpAddressIsNull() [TestMethod] public Task NegotiateShouldThrowInvalidOperationExceptionWhenIpAddressIsNull() Returns Task"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.NegotiateShouldTransitionToEstablishingSessionPolicyState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.NegotiateShouldTransitionToEstablishingSessionPolicyState.html",
    "title": "Method NegotiateShouldTransitionToEstablishingSessionPolicyState | Nitrox",
    "keywords": "Method NegotiateShouldTransitionToEstablishingSessionPolicyState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldTransitionToEstablishingSessionPolicyState() [TestMethod] public void NegotiateShouldTransitionToEstablishingSessionPolicyState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.DisconnectedStateTests.html",
    "title": "Class DisconnectedStateTests | Nitrox",
    "keywords": "Class DisconnectedStateTests Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll [TestClass] public class DisconnectedStateTests Inheritance object DisconnectedStateTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DisconnectShouldThrowInvalidOperationException() JoinSessionShouldThrowInvalidOperationException() NegotiateShouldSendMultiplayerSessionPolicyRequestPacketToClient() NegotiateShouldStartTheClientOnTheContext() NegotiateShouldThrowInvalidOperationExceptionWhenClientIsNull() NegotiateShouldThrowInvalidOperationExceptionWhenIpAddressIsNull() NegotiateShouldTransitionToEstablishingSessionPolicyState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicy.-ctor.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicy.-ctor.html",
    "title": "Constructor EstablishingSessionPolicy | Nitrox",
    "keywords": "Constructor EstablishingSessionPolicy Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll EstablishingSessionPolicy(string) public EstablishingSessionPolicy(string policyRequestCorrelationId) Parameters policyRequestCorrelationId string"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicy.CurrentStage.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicy.CurrentStage.html",
    "title": "Property CurrentStage | Nitrox",
    "keywords": "Property CurrentStage Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll CurrentStage public override MultiplayerSessionConnectionStage CurrentStage { get; } Property Value MultiplayerSessionConnectionStage"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicy.NegotiateReservationAsync.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicy.NegotiateReservationAsync.html",
    "title": "Method NegotiateReservationAsync | Nitrox",
    "keywords": "Method NegotiateReservationAsync Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll NegotiateReservationAsync(IMultiplayerSessionConnectionContext) public override Task NegotiateReservationAsync(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext Returns Task"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicy.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicy.html",
    "title": "Class EstablishingSessionPolicy | Nitrox",
    "keywords": "Class EstablishingSessionPolicy Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll public class EstablishingSessionPolicy : ConnectionNegotiatingState, IMultiplayerSessionConnectionState Inheritance object CommunicatingState ConnectionNegotiatingState EstablishingSessionPolicy Implements IMultiplayerSessionConnectionState Inherited Members ConnectionNegotiatingState.JoinSession(IMultiplayerSessionConnectionContext) CommunicatingState.Disconnect(IMultiplayerSessionConnectionContext) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EstablishingSessionPolicy(string) Properties CurrentStage Methods NegotiateReservationAsync(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.89d622cd-fff4-485d-85cb-26a809a14c90.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.89d622cd-fff4-485d-85cb-26a809a14c90.html",
    "title": "Method NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId | Nitrox",
    "keywords": "Method NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId() [TestMethod] public void NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldResetTheConnectionContext.html",
    "title": "Method DisconnectShouldResetTheConnectionContext | Nitrox",
    "keywords": "Method DisconnectShouldResetTheConnectionContext Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldResetTheConnectionContext() [TestMethod] public void DisconnectShouldResetTheConnectionContext()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldStopTheClient.html",
    "title": "Method DisconnectShouldStopTheClient | Nitrox",
    "keywords": "Method DisconnectShouldStopTheClient Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldStopTheClient() [TestMethod] public void DisconnectShouldStopTheClient()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.DisconnectShouldTransitionToDisconnectedState.html",
    "title": "Method DisconnectShouldTransitionToDisconnectedState | Nitrox",
    "keywords": "Method DisconnectShouldTransitionToDisconnectedState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldTransitionToDisconnectedState() [TestMethod] public void DisconnectShouldTransitionToDisconnectedState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.JoinSessionShouldThrowInvalidOperationException.html",
    "title": "Method JoinSessionShouldThrowInvalidOperationException | Nitrox",
    "keywords": "Method JoinSessionShouldThrowInvalidOperationException Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll JoinSessionShouldThrowInvalidOperationException() [TestMethod] public void JoinSessionShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull.html",
    "title": "Method NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull | Nitrox",
    "keywords": "Method NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull() [TestMethod] public void NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsState.html",
    "title": "Method NegotiateShouldTransitionToAwaitingReservationCredentialsState | Nitrox",
    "keywords": "Method NegotiateShouldTransitionToAwaitingReservationCredentialsState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldTransitionToAwaitingReservationCredentialsState() [TestMethod] public void NegotiateShouldTransitionToAwaitingReservationCredentialsState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword.html",
    "title": "Method NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword | Nitrox",
    "keywords": "Method NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword() [TestMethod] public void NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.EstablishingSessionPolicyStateTests.html",
    "title": "Class EstablishingSessionPolicyStateTests | Nitrox",
    "keywords": "Class EstablishingSessionPolicyStateTests Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll [TestClass] public class EstablishingSessionPolicyStateTests Inheritance object EstablishingSessionPolicyStateTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DisconnectShouldResetTheConnectionContext() DisconnectShouldStopTheClient() DisconnectShouldTransitionToDisconnectedState() JoinSessionShouldThrowInvalidOperationException() NegotiateShouldThrowInvalidOperationExceptionIfTheSessionPolicyIsNull() NegotiateShouldThrowUncorrelatedPacketExceptionWhenThePolicyHasTheWrongCorrelationId() NegotiateShouldTransitionToAwaitingReservationCredentialsState() NegotiateShouldTransitionToAwaitingReservationCredentialsStateWithPassword()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoined.CurrentStage.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoined.CurrentStage.html",
    "title": "Property CurrentStage | Nitrox",
    "keywords": "Property CurrentStage Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll CurrentStage public override MultiplayerSessionConnectionStage CurrentStage { get; } Property Value MultiplayerSessionConnectionStage"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoined.JoinSession.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoined.JoinSession.html",
    "title": "Method JoinSession | Nitrox",
    "keywords": "Method JoinSession Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll JoinSession(IMultiplayerSessionConnectionContext) public override void JoinSession(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoined.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoined.html",
    "title": "Class SessionJoined | Nitrox",
    "keywords": "Class SessionJoined Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll public class SessionJoined : ConnectionNegotiatedState, IMultiplayerSessionConnectionState Inheritance object CommunicatingState ConnectionNegotiatedState SessionJoined Implements IMultiplayerSessionConnectionState Inherited Members ConnectionNegotiatedState.NegotiateReservationAsync(IMultiplayerSessionConnectionContext) CommunicatingState.Disconnect(IMultiplayerSessionConnectionContext) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CurrentStage Methods JoinSession(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.DisconnectShouldResetTheConnectionContext.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.DisconnectShouldResetTheConnectionContext.html",
    "title": "Method DisconnectShouldResetTheConnectionContext | Nitrox",
    "keywords": "Method DisconnectShouldResetTheConnectionContext Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldResetTheConnectionContext() [TestMethod] public void DisconnectShouldResetTheConnectionContext()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.DisconnectShouldStopTheClient.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.DisconnectShouldStopTheClient.html",
    "title": "Method DisconnectShouldStopTheClient | Nitrox",
    "keywords": "Method DisconnectShouldStopTheClient Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldStopTheClient() [TestMethod] public void DisconnectShouldStopTheClient()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.DisconnectShouldTransitionToDisconnectedState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.DisconnectShouldTransitionToDisconnectedState.html",
    "title": "Method DisconnectShouldTransitionToDisconnectedState | Nitrox",
    "keywords": "Method DisconnectShouldTransitionToDisconnectedState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldTransitionToDisconnectedState() [TestMethod] public void DisconnectShouldTransitionToDisconnectedState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.JoinSessionShouldThrowInvalidOperationExcepion.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.JoinSessionShouldThrowInvalidOperationExcepion.html",
    "title": "Method JoinSessionShouldThrowInvalidOperationExcepion | Nitrox",
    "keywords": "Method JoinSessionShouldThrowInvalidOperationExcepion Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll JoinSessionShouldThrowInvalidOperationExcepion() [TestMethod] public void JoinSessionShouldThrowInvalidOperationExcepion()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.NegotiateShouldThrowInvalidOperationException.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.NegotiateShouldThrowInvalidOperationException.html",
    "title": "Method NegotiateShouldThrowInvalidOperationException | Nitrox",
    "keywords": "Method NegotiateShouldThrowInvalidOperationException Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowInvalidOperationException() [TestMethod] public void NegotiateShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionJoinedStateTests.html",
    "title": "Class SessionJoinedStateTests | Nitrox",
    "keywords": "Class SessionJoinedStateTests Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll [TestClass] public class SessionJoinedStateTests Inheritance object SessionJoinedStateTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DisconnectShouldResetTheConnectionContext() DisconnectShouldStopTheClient() DisconnectShouldTransitionToDisconnectedState() JoinSessionShouldThrowInvalidOperationExcepion() NegotiateShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejected.CurrentStage.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejected.CurrentStage.html",
    "title": "Property CurrentStage | Nitrox",
    "keywords": "Property CurrentStage Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll CurrentStage public override MultiplayerSessionConnectionStage CurrentStage { get; } Property Value MultiplayerSessionConnectionStage"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejected.JoinSession.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejected.JoinSession.html",
    "title": "Method JoinSession | Nitrox",
    "keywords": "Method JoinSession Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll JoinSession(IMultiplayerSessionConnectionContext) public override void JoinSession(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejected.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejected.html",
    "title": "Class SessionReservationRejected | Nitrox",
    "keywords": "Class SessionReservationRejected Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll public class SessionReservationRejected : ConnectionNegotiatedState, IMultiplayerSessionConnectionState Inheritance object CommunicatingState ConnectionNegotiatedState SessionReservationRejected Implements IMultiplayerSessionConnectionState Inherited Members ConnectionNegotiatedState.NegotiateReservationAsync(IMultiplayerSessionConnectionContext) CommunicatingState.Disconnect(IMultiplayerSessionConnectionContext) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CurrentStage Methods JoinSession(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.DisconnectShouldResetTheConnectionContext.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.DisconnectShouldResetTheConnectionContext.html",
    "title": "Method DisconnectShouldResetTheConnectionContext | Nitrox",
    "keywords": "Method DisconnectShouldResetTheConnectionContext Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldResetTheConnectionContext() [TestMethod] public void DisconnectShouldResetTheConnectionContext()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.DisconnectShouldStopTheClient.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.DisconnectShouldStopTheClient.html",
    "title": "Method DisconnectShouldStopTheClient | Nitrox",
    "keywords": "Method DisconnectShouldStopTheClient Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldStopTheClient() [TestMethod] public void DisconnectShouldStopTheClient()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.DisconnectShouldTransitionToDisconnectedState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.DisconnectShouldTransitionToDisconnectedState.html",
    "title": "Method DisconnectShouldTransitionToDisconnectedState | Nitrox",
    "keywords": "Method DisconnectShouldTransitionToDisconnectedState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldTransitionToDisconnectedState() [TestMethod] public void DisconnectShouldTransitionToDisconnectedState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.JoinSessionShouldThrowInvalidOperationExcepion.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.JoinSessionShouldThrowInvalidOperationExcepion.html",
    "title": "Method JoinSessionShouldThrowInvalidOperationExcepion | Nitrox",
    "keywords": "Method JoinSessionShouldThrowInvalidOperationExcepion Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll JoinSessionShouldThrowInvalidOperationExcepion() [TestMethod] public void JoinSessionShouldThrowInvalidOperationExcepion()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.NegotiateShouldThrowInvalidOperationException.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.NegotiateShouldThrowInvalidOperationException.html",
    "title": "Method NegotiateShouldThrowInvalidOperationException | Nitrox",
    "keywords": "Method NegotiateShouldThrowInvalidOperationException Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowInvalidOperationException() [TestMethod] public void NegotiateShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservationRejectedStateTests.html",
    "title": "Class SessionReservationRejectedStateTests | Nitrox",
    "keywords": "Class SessionReservationRejectedStateTests Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll [TestClass] public class SessionReservationRejectedStateTests Inheritance object SessionReservationRejectedStateTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DisconnectShouldResetTheConnectionContext() DisconnectShouldStopTheClient() DisconnectShouldTransitionToDisconnectedState() JoinSessionShouldThrowInvalidOperationExcepion() NegotiateShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReserved.CurrentStage.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReserved.CurrentStage.html",
    "title": "Property CurrentStage | Nitrox",
    "keywords": "Property CurrentStage Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll CurrentStage public override MultiplayerSessionConnectionStage CurrentStage { get; } Property Value MultiplayerSessionConnectionStage"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReserved.JoinSession.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReserved.JoinSession.html",
    "title": "Method JoinSession | Nitrox",
    "keywords": "Method JoinSession Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll JoinSession(IMultiplayerSessionConnectionContext) public override void JoinSession(IMultiplayerSessionConnectionContext sessionConnectionContext) Parameters sessionConnectionContext IMultiplayerSessionConnectionContext"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReserved.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReserved.html",
    "title": "Class SessionReserved | Nitrox",
    "keywords": "Class SessionReserved Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly NitroxClient.dll public class SessionReserved : ConnectionNegotiatedState, IMultiplayerSessionConnectionState Inheritance object CommunicatingState ConnectionNegotiatedState SessionReserved Implements IMultiplayerSessionConnectionState Inherited Members ConnectionNegotiatedState.NegotiateReservationAsync(IMultiplayerSessionConnectionContext) CommunicatingState.Disconnect(IMultiplayerSessionConnectionContext) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CurrentStage Methods JoinSession(IMultiplayerSessionConnectionContext)"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.DisconnectShouldResetTheConnectionContext.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.DisconnectShouldResetTheConnectionContext.html",
    "title": "Method DisconnectShouldResetTheConnectionContext | Nitrox",
    "keywords": "Method DisconnectShouldResetTheConnectionContext Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldResetTheConnectionContext() [TestMethod] public void DisconnectShouldResetTheConnectionContext()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.DisconnectShouldStopTheClient.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.DisconnectShouldStopTheClient.html",
    "title": "Method DisconnectShouldStopTheClient | Nitrox",
    "keywords": "Method DisconnectShouldStopTheClient Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldStopTheClient() [TestMethod] public void DisconnectShouldStopTheClient()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.DisconnectShouldTransitionToDisconnectedState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.DisconnectShouldTransitionToDisconnectedState.html",
    "title": "Method DisconnectShouldTransitionToDisconnectedState | Nitrox",
    "keywords": "Method DisconnectShouldTransitionToDisconnectedState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll DisconnectShouldTransitionToDisconnectedState() [TestMethod] public void DisconnectShouldTransitionToDisconnectedState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.JoinSessionShouldSendPlayerJoiningMultiplayerSessionPacket.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.JoinSessionShouldSendPlayerJoiningMultiplayerSessionPacket.html",
    "title": "Method JoinSessionShouldSendPlayerJoiningMultiplayerSessionPacket | Nitrox",
    "keywords": "Method JoinSessionShouldSendPlayerJoiningMultiplayerSessionPacket Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll JoinSessionShouldSendPlayerJoiningMultiplayerSessionPacket() [TestMethod] public void JoinSessionShouldSendPlayerJoiningMultiplayerSessionPacket()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.JoinSessionShouldTransitionToSessionJoinedState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.JoinSessionShouldTransitionToSessionJoinedState.html",
    "title": "Method JoinSessionShouldTransitionToSessionJoinedState | Nitrox",
    "keywords": "Method JoinSessionShouldTransitionToSessionJoinedState Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll JoinSessionShouldTransitionToSessionJoinedState() [TestMethod] public void JoinSessionShouldTransitionToSessionJoinedState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.NegotiateShouldThrowInvalidOperationException.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.NegotiateShouldThrowInvalidOperationException.html",
    "title": "Method NegotiateShouldThrowInvalidOperationException | Nitrox",
    "keywords": "Method NegotiateShouldThrowInvalidOperationException Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll NegotiateShouldThrowInvalidOperationException() [TestMethod] public void NegotiateShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.SessionReservedStateTests.html",
    "title": "Class SessionReservedStateTests | Nitrox",
    "keywords": "Class SessionReservedStateTests Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Assembly Nitrox.Test.dll [TestClass] public class SessionReservedStateTests Inheritance object SessionReservedStateTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DisconnectShouldResetTheConnectionContext() DisconnectShouldStopTheClient() DisconnectShouldTransitionToDisconnectedState() JoinSessionShouldSendPlayerJoiningMultiplayerSessionPacket() JoinSessionShouldTransitionToSessionJoinedState() NegotiateShouldThrowInvalidOperationException()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.ConnectionState.html",
    "title": "Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState | Nitrox",
    "keywords": "Namespace NitroxClient.Communication.MultiplayerSession.ConnectionState Classes AwaitingReservationCredentials AwaitingReservationCredentialsStateTests AwaitingSessionReservation AwaitingSessionReservationStateTests CommunicatingState ConnectionNegotiatedState ConnectionNegotiatingState Disconnected DisconnectedStateTests EstablishingSessionPolicy EstablishingSessionPolicyStateTests SessionJoined SessionJoinedStateTests SessionReservationRejected SessionReservationRejectedStateTests SessionReserved SessionReservedStateTests"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionConnectionStage.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionConnectionStage.html",
    "title": "Enum MultiplayerSessionConnectionStage | Nitrox",
    "keywords": "Enum MultiplayerSessionConnectionStage Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll public enum MultiplayerSessionConnectionStage Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields AWAITING_RESERVATION_CREDENTIALS = 2 AWAITING_SESSION_RESERVATION = 3 DISCONNECTED = 0 ESTABLISHING_SERVER_POLICY = 1 SESSION_JOINED = 6 SESSION_RESERVATION_REJECTED = 5 SESSION_RESERVED = 4"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.-ctor.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.-ctor.html",
    "title": "Constructor MultiplayerSessionManager | Nitrox",
    "keywords": "Constructor MultiplayerSessionManager Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll MultiplayerSessionManager(IClient) public MultiplayerSessionManager(IClient client) Parameters client IClient"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.AuthenticationContext.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.AuthenticationContext.html",
    "title": "Property AuthenticationContext | Nitrox",
    "keywords": "Property AuthenticationContext Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll AuthenticationContext public AuthenticationContext AuthenticationContext { get; } Property Value AuthenticationContext"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ClearSessionState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ClearSessionState.html",
    "title": "Method ClearSessionState | Nitrox",
    "keywords": "Method ClearSessionState Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll ClearSessionState() public void ClearSessionState()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.Client.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.Client.html",
    "title": "Property Client | Nitrox",
    "keywords": "Property Client Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll Client public IClient Client { get; } Property Value IClient"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ConnectAsync.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ConnectAsync.html",
    "title": "Method ConnectAsync | Nitrox",
    "keywords": "Method ConnectAsync Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll ConnectAsync(string, int) public Task ConnectAsync(string ipAddress, int port) Parameters ipAddress string port int Returns Task"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ConnectionStateChanged.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ConnectionStateChanged.html",
    "title": "Event ConnectionStateChanged | Nitrox",
    "keywords": "Event ConnectionStateChanged Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll public event MultiplayerSessionConnectionStateChangedEventHandler ConnectionStateChanged Returns MultiplayerSessionConnectionStateChangedEventHandler Implements ConnectionStateChanged"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.CurrentState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.CurrentState.html",
    "title": "Property CurrentState | Nitrox",
    "keywords": "Property CurrentState Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll CurrentState public IMultiplayerSessionConnectionState CurrentState { get; } Property Value IMultiplayerSessionConnectionState"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.Disconnect.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.Disconnect.html",
    "title": "Method Disconnect | Nitrox",
    "keywords": "Method Disconnect Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll Disconnect() public void Disconnect()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.IpAddress.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.IpAddress.html",
    "title": "Property IpAddress | Nitrox",
    "keywords": "Property IpAddress Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll IpAddress public string IpAddress { get; } Property Value string"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.JoinSession.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.JoinSession.html",
    "title": "Method JoinSession | Nitrox",
    "keywords": "Method JoinSession Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll JoinSession() public void JoinSession()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.PlayerSettings.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.PlayerSettings.html",
    "title": "Property PlayerSettings | Nitrox",
    "keywords": "Property PlayerSettings Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll PlayerSettings public PlayerSettings PlayerSettings { get; } Property Value PlayerSettings"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ProcessReservationResponsePacket.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ProcessReservationResponsePacket.html",
    "title": "Method ProcessReservationResponsePacket | Nitrox",
    "keywords": "Method ProcessReservationResponsePacket Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll ProcessReservationResponsePacket(MultiplayerSessionReservation) public void ProcessReservationResponsePacket(MultiplayerSessionReservation reservation) Parameters reservation MultiplayerSessionReservation"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ProcessSessionPolicy.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ProcessSessionPolicy.html",
    "title": "Method ProcessSessionPolicy | Nitrox",
    "keywords": "Method ProcessSessionPolicy Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll ProcessSessionPolicy(MultiplayerSessionPolicy) public void ProcessSessionPolicy(MultiplayerSessionPolicy policy) Parameters policy MultiplayerSessionPolicy"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.RequestSessionReservation.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.RequestSessionReservation.html",
    "title": "Method RequestSessionReservation | Nitrox",
    "keywords": "Method RequestSessionReservation Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll RequestSessionReservation(PlayerSettings, AuthenticationContext) public void RequestSessionReservation(PlayerSettings playerSettings, AuthenticationContext authenticationContext) Parameters playerSettings PlayerSettings authenticationContext AuthenticationContext"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.Reservation.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.Reservation.html",
    "title": "Property Reservation | Nitrox",
    "keywords": "Property Reservation Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll Reservation public MultiplayerSessionReservation Reservation { get; } Property Value MultiplayerSessionReservation"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.Send.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.Send.html",
    "title": "Method Send | Nitrox",
    "keywords": "Method Send Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll Send<T>(T) Sends the packet. Returns true if packet was not suppressed. public bool Send<T>(T packet) where T : Packet Parameters packet T The packet to send. Returns bool True if not suppressed and actually sent. Type Parameters T"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ServerPort.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.ServerPort.html",
    "title": "Property ServerPort | Nitrox",
    "keywords": "Property ServerPort Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll ServerPort public int ServerPort { get; } Property Value int"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.SessionPolicy.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.SessionPolicy.html",
    "title": "Property SessionPolicy | Nitrox",
    "keywords": "Property SessionPolicy Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll SessionPolicy public MultiplayerSessionPolicy SessionPolicy { get; } Property Value MultiplayerSessionPolicy"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.UpdateConnectionState.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.UpdateConnectionState.html",
    "title": "Method UpdateConnectionState | Nitrox",
    "keywords": "Method UpdateConnectionState Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll UpdateConnectionState(IMultiplayerSessionConnectionState) public void UpdateConnectionState(IMultiplayerSessionConnectionState sessionConnectionState) Parameters sessionConnectionState IMultiplayerSessionConnectionState"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionManager.html",
    "title": "Class MultiplayerSessionManager | Nitrox",
    "keywords": "Class MultiplayerSessionManager Namespace NitroxClient.Communication.MultiplayerSession Assembly NitroxClient.dll public class MultiplayerSessionManager : IMultiplayerSession, IPacketSender, IMultiplayerSessionConnectionContext, IMultiplayerSessionState Inheritance object MultiplayerSessionManager Implements IMultiplayerSession IPacketSender IMultiplayerSessionConnectionContext IMultiplayerSessionState Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MultiplayerSessionManager(IClient) Properties AuthenticationContext Client CurrentState IpAddress PlayerSettings Reservation ServerPort SessionPolicy Methods ClearSessionState() ConnectAsync(string, int) Disconnect() JoinSession() ProcessReservationResponsePacket(MultiplayerSessionReservation) ProcessSessionPolicy(MultiplayerSessionPolicy) RequestSessionReservation(PlayerSettings, AuthenticationContext) Send<T>(T) Sends the packet. Returns true if packet was not suppressed. UpdateConnectionState(IMultiplayerSessionConnectionState) Events ConnectionStateChanged"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.ConnectShouldSetIpAddress.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.ConnectShouldSetIpAddress.html",
    "title": "Method ConnectShouldSetIpAddress | Nitrox",
    "keywords": "Method ConnectShouldSetIpAddress Namespace NitroxClient.Communication.MultiplayerSession Assembly Nitrox.Test.dll ConnectShouldSetIpAddress() [TestMethod] public void ConnectShouldSetIpAddress()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.ManagerShouldInitializeInDisconnectedStage.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.ManagerShouldInitializeInDisconnectedStage.html",
    "title": "Method ManagerShouldInitializeInDisconnectedStage | Nitrox",
    "keywords": "Method ManagerShouldInitializeInDisconnectedStage Namespace NitroxClient.Communication.MultiplayerSession Assembly Nitrox.Test.dll ManagerShouldInitializeInDisconnectedStage() [TestMethod] public void ManagerShouldInitializeInDisconnectedStage()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.ManagerShouldInitializeWithClient.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.ManagerShouldInitializeWithClient.html",
    "title": "Method ManagerShouldInitializeWithClient | Nitrox",
    "keywords": "Method ManagerShouldInitializeWithClient Namespace NitroxClient.Communication.MultiplayerSession Assembly Nitrox.Test.dll ManagerShouldInitializeWithClient() [TestMethod] public void ManagerShouldInitializeWithClient()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.ProcessReservationResponsePacketShouldSetTheReservation.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.ProcessReservationResponsePacketShouldSetTheReservation.html",
    "title": "Method ProcessReservationResponsePacketShouldSetTheReservation | Nitrox",
    "keywords": "Method ProcessReservationResponsePacketShouldSetTheReservation Namespace NitroxClient.Communication.MultiplayerSession Assembly Nitrox.Test.dll ProcessReservationResponsePacketShouldSetTheReservation() [TestMethod] public void ProcessReservationResponsePacketShouldSetTheReservation()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.ProcessSessionPolicyShouldSetThePolicy.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.ProcessSessionPolicyShouldSetThePolicy.html",
    "title": "Method ProcessSessionPolicyShouldSetThePolicy | Nitrox",
    "keywords": "Method ProcessSessionPolicyShouldSetThePolicy Namespace NitroxClient.Communication.MultiplayerSession Assembly Nitrox.Test.dll ProcessSessionPolicyShouldSetThePolicy() [TestMethod] public void ProcessSessionPolicyShouldSetThePolicy()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.RequestSessionReservationShouldSetSettingsAndAuthContext.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.RequestSessionReservationShouldSetSettingsAndAuthContext.html",
    "title": "Method RequestSessionReservationShouldSetSettingsAndAuthContext | Nitrox",
    "keywords": "Method RequestSessionReservationShouldSetSettingsAndAuthContext Namespace NitroxClient.Communication.MultiplayerSession Assembly Nitrox.Test.dll RequestSessionReservationShouldSetSettingsAndAuthContext() [TestMethod] public void RequestSessionReservationShouldSetSettingsAndAuthContext()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.UpdateStateShouldRaiseEvent.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.UpdateStateShouldRaiseEvent.html",
    "title": "Method UpdateStateShouldRaiseEvent | Nitrox",
    "keywords": "Method UpdateStateShouldRaiseEvent Namespace NitroxClient.Communication.MultiplayerSession Assembly Nitrox.Test.dll UpdateStateShouldRaiseEvent() [TestMethod] public void UpdateStateShouldRaiseEvent()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.MultiplayerSessionMangerTests.html",
    "title": "Class MultiplayerSessionMangerTests | Nitrox",
    "keywords": "Class MultiplayerSessionMangerTests Namespace NitroxClient.Communication.MultiplayerSession Assembly Nitrox.Test.dll [TestClass] public class MultiplayerSessionMangerTests Inheritance object MultiplayerSessionMangerTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ConnectShouldSetIpAddress() ManagerShouldInitializeInDisconnectedStage() ManagerShouldInitializeWithClient() ProcessReservationResponsePacketShouldSetTheReservation() ProcessSessionPolicyShouldSetThePolicy() RequestSessionReservationShouldSetSettingsAndAuthContext() UpdateStateShouldRaiseEvent()"
  },
  "api/NitroxClient.Communication.MultiplayerSession.html": {
    "href": "api/NitroxClient.Communication.MultiplayerSession.html",
    "title": "Namespace NitroxClient.Communication.MultiplayerSession | Nitrox",
    "keywords": "Namespace NitroxClient.Communication.MultiplayerSession Namespaces NitroxClient.Communication.MultiplayerSession.ConnectionState Classes MultiplayerSessionManager MultiplayerSessionMangerTests Enums MultiplayerSessionConnectionStage"
  },
  "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.-ctor.html": {
    "href": "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.-ctor.html",
    "title": "Constructor LiteNetLibClient | Nitrox",
    "keywords": "Constructor LiteNetLibClient Namespace NitroxClient.Communication.NetworkingLayer.LiteNetLib Assembly NitroxClient.dll LiteNetLibClient(PacketReceiver, INetworkDebugger) public LiteNetLibClient(PacketReceiver packetReceiver, INetworkDebugger networkDebugger = null) Parameters packetReceiver PacketReceiver networkDebugger INetworkDebugger"
  },
  "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.IsConnected.html": {
    "href": "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.IsConnected.html",
    "title": "Property IsConnected | Nitrox",
    "keywords": "Property IsConnected Namespace NitroxClient.Communication.NetworkingLayer.LiteNetLib Assembly NitroxClient.dll IsConnected public bool IsConnected { get; } Property Value bool"
  },
  "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.PollEvents.html": {
    "href": "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.PollEvents.html",
    "title": "Method PollEvents | Nitrox",
    "keywords": "Method PollEvents Namespace NitroxClient.Communication.NetworkingLayer.LiteNetLib Assembly NitroxClient.dll PollEvents() This should be called once each game tick public void PollEvents()"
  },
  "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.Send.html": {
    "href": "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.Send.html",
    "title": "Method Send | Nitrox",
    "keywords": "Method Send Namespace NitroxClient.Communication.NetworkingLayer.LiteNetLib Assembly NitroxClient.dll Send(Packet) public void Send(Packet packet) Parameters packet Packet"
  },
  "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.StartAsync.html": {
    "href": "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.StartAsync.html",
    "title": "Method StartAsync | Nitrox",
    "keywords": "Method StartAsync Namespace NitroxClient.Communication.NetworkingLayer.LiteNetLib Assembly NitroxClient.dll StartAsync(string, int) public Task StartAsync(string ipAddress, int serverPort) Parameters ipAddress string serverPort int Returns Task"
  },
  "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.Stop.html": {
    "href": "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.Stop.html",
    "title": "Method Stop | Nitrox",
    "keywords": "Method Stop Namespace NitroxClient.Communication.NetworkingLayer.LiteNetLib Assembly NitroxClient.dll Stop() public void Stop()"
  },
  "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.html": {
    "href": "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.LiteNetLibClient.html",
    "title": "Class LiteNetLibClient | Nitrox",
    "keywords": "Class LiteNetLibClient Namespace NitroxClient.Communication.NetworkingLayer.LiteNetLib Assembly NitroxClient.dll public class LiteNetLibClient : IClient Inheritance object LiteNetLibClient Implements IClient Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LiteNetLibClient(PacketReceiver, INetworkDebugger) Properties IsConnected Methods PollEvents() This should be called once each game tick Send(Packet) StartAsync(string, int) Stop()"
  },
  "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.html": {
    "href": "api/NitroxClient.Communication.NetworkingLayer.LiteNetLib.html",
    "title": "Namespace NitroxClient.Communication.NetworkingLayer.LiteNetLib | Nitrox",
    "keywords": "Namespace NitroxClient.Communication.NetworkingLayer.LiteNetLib Classes LiteNetLibClient"
  },
  "api/NitroxClient.Communication.PacketReceiver.Add.html": {
    "href": "api/NitroxClient.Communication.PacketReceiver.Add.html",
    "title": "Method Add | Nitrox",
    "keywords": "Method Add Namespace NitroxClient.Communication Assembly NitroxClient.dll Add(Packet) public void Add(Packet packet) Parameters packet Packet"
  },
  "api/NitroxClient.Communication.PacketReceiver.ConsumePackets.html": {
    "href": "api/NitroxClient.Communication.PacketReceiver.ConsumePackets.html",
    "title": "Method ConsumePackets | Nitrox",
    "keywords": "Method ConsumePackets Namespace NitroxClient.Communication Assembly NitroxClient.dll ConsumePackets<TExtra>(Action<Packet, TExtra>, TExtra) Applies an operation on each packet waiting to be processed and removes it from the queue. public void ConsumePackets<TExtra>(Action<Packet, TExtra> consumer, TExtra extraParameter) Parameters consumer Action<Packet, TExtra> extraParameter TExtra Type Parameters TExtra"
  },
  "api/NitroxClient.Communication.PacketReceiver.GetNextPacket.html": {
    "href": "api/NitroxClient.Communication.PacketReceiver.GetNextPacket.html",
    "title": "Method GetNextPacket | Nitrox",
    "keywords": "Method GetNextPacket Namespace NitroxClient.Communication Assembly NitroxClient.dll GetNextPacket() public Packet GetNextPacket() Returns Packet"
  },
  "api/NitroxClient.Communication.PacketReceiver.html": {
    "href": "api/NitroxClient.Communication.PacketReceiver.html",
    "title": "Class PacketReceiver | Nitrox",
    "keywords": "Class PacketReceiver Namespace NitroxClient.Communication Assembly NitroxClient.dll public class PacketReceiver Inheritance object PacketReceiver Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Add(Packet) ConsumePackets<TExtra>(Action<Packet, TExtra>, TExtra) Applies an operation on each packet waiting to be processed and removes it from the queue. GetNextPacket()"
  },
  "api/NitroxClient.Communication.PacketSuppressor-1.Dispose.html": {
    "href": "api/NitroxClient.Communication.PacketSuppressor-1.Dispose.html",
    "title": "Method Dispose | Nitrox",
    "keywords": "Method Dispose Namespace NitroxClient.Communication Assembly NitroxClient.dll Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/NitroxClient.Communication.PacketSuppressor-1.IsSuppressed.html": {
    "href": "api/NitroxClient.Communication.PacketSuppressor-1.IsSuppressed.html",
    "title": "Property IsSuppressed | Nitrox",
    "keywords": "Property IsSuppressed Namespace NitroxClient.Communication Assembly NitroxClient.dll IsSuppressed public static bool IsSuppressed { get; } Property Value bool"
  },
  "api/NitroxClient.Communication.PacketSuppressor-1.Suppress.html": {
    "href": "api/NitroxClient.Communication.PacketSuppressor-1.Suppress.html",
    "title": "Method Suppress | Nitrox",
    "keywords": "Method Suppress Namespace NitroxClient.Communication Assembly NitroxClient.dll Suppress() public static PacketSuppressor<T> Suppress() Returns PacketSuppressor<T>"
  },
  "api/NitroxClient.Communication.PacketSuppressor-1.html": {
    "href": "api/NitroxClient.Communication.PacketSuppressor-1.html",
    "title": "Struct PacketSuppressor<T> | Nitrox",
    "keywords": "Struct PacketSuppressor<T> Namespace NitroxClient.Communication Assembly NitroxClient.dll Suppresses the given packet type from being sent. Disables the suppression when disposed. public readonly struct PacketSuppressor<T> : IDisposable where T : Packet Type Parameters T The packet type to suppress. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Properties IsSuppressed Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Suppress()"
  },
  "api/NitroxClient.Communication.Packets.Processors.Abstract.ClientPacketProcessor-1.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.Abstract.ClientPacketProcessor-1.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors.Abstract Assembly NitroxClient.dll Process(T) public abstract void Process(T packet) Parameters packet T"
  },
  "api/NitroxClient.Communication.Packets.Processors.Abstract.ClientPacketProcessor-1.ProcessPacket.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.Abstract.ClientPacketProcessor-1.ProcessPacket.html",
    "title": "Method ProcessPacket | Nitrox",
    "keywords": "Method ProcessPacket Namespace NitroxClient.Communication.Packets.Processors.Abstract Assembly NitroxClient.dll ProcessPacket(Packet, IProcessorContext) public override void ProcessPacket(Packet packet, IProcessorContext context) Parameters packet Packet context IProcessorContext"
  },
  "api/NitroxClient.Communication.Packets.Processors.Abstract.ClientPacketProcessor-1.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.Abstract.ClientPacketProcessor-1.html",
    "title": "Class ClientPacketProcessor<T> | Nitrox",
    "keywords": "Class ClientPacketProcessor<T> Namespace NitroxClient.Communication.Packets.Processors.Abstract Assembly NitroxClient.dll public abstract class ClientPacketProcessor<T> : PacketProcessor where T : Packet Type Parameters T Inheritance object PacketProcessor ClientPacketProcessor<T> Derived AnimationProcessor AuroraAndTimeUpdateProcessor BuildProcessor<T> BuildingDesyncWarningProcessor BuildingResyncProcessor CreatureActionChangedProcessor CyclopsDamagePointHealthChangedProcessor CyclopsDamageProcessor CyclopsFireCreatedProcessor CyclopsFireSuppressionProcessor DeconstructionBeginProcessor DiscordRequestIPProcessor EntityDestroyedProcessor EntityMetadataUpdateProcessor EntityReparentedProcessor EntityTransformUpdatesProcessor EscapePodChangedProcessor ExosuitArmActionProcessor FireDousedProcessor GameModeChangedProcessor InitialPlayerSyncProcessor KnownTechEntryProcessorAdd MedicalCabinetClickedProcessor MultiplayerSessionPolicyProcessor MultiplayerSessionReservationProcessor MutePlayerProcessor OpenableStateChangedProcessor PDAEncyclopediaEntryAddProcessor PDALogEntryAddProcessor PDAScanFinishedProcessor PermsChangedProcessor PingRenamedProcessor PlayFMODAssetProcessor PlayFMODCustomEmitterProcessor PlayFMODCustomLoopingEmitterProcessor PlayFMODStudioEventEmitterProcessor PlaySunbeamEventProcessor PlayerCinematicControllerCallProcessor PlayerDeathProcessor PlayerHeldItemChangedProcessor PlayerJoinedMultiplayerSessionProcessor PlayerMovementProcessor PlayerStatsProcessor PlayerTeleportedProcessor RadioPlayPendingMessageProcessor RocketLaunchProcessor ScheduleProcessor SeamothModuleActionProcessor ServerStoppedProcessor SimulationOwnershipChangeProcessor SimulationOwnershipResponseProcessor SpawnEntitiesProcessor StoryGoalExecutedClientProcessor SubRootChangedProcessor TimeChangeProcessor UserKickedProcessor VehicleDockingProcessor VehicleMovementProcessor VehicleOnPilotModeChangedProcessor VehicleUndockingProcessor Inherited Members PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(T) ProcessPacket(Packet, IProcessorContext)"
  },
  "api/NitroxClient.Communication.Packets.Processors.Abstract.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.Abstract.html",
    "title": "Namespace NitroxClient.Communication.Packets.Processors.Abstract | Nitrox",
    "keywords": "Namespace NitroxClient.Communication.Packets.Processors.Abstract Classes ClientPacketProcessor<T>"
  },
  "api/NitroxClient.Communication.Packets.Processors.AnimationProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.AnimationProcessor.-ctor.html",
    "title": "Constructor AnimationProcessor | Nitrox",
    "keywords": "Constructor AnimationProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll AnimationProcessor(PlayerManager) public AnimationProcessor(PlayerManager remotePlayerManager) Parameters remotePlayerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.AnimationProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.AnimationProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(AnimationChangeEvent) public override void Process(AnimationChangeEvent animEvent) Parameters animEvent AnimationChangeEvent"
  },
  "api/NitroxClient.Communication.Packets.Processors.AnimationProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.AnimationProcessor.html",
    "title": "Class AnimationProcessor | Nitrox",
    "keywords": "Class AnimationProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class AnimationProcessor : ClientPacketProcessor<AnimationChangeEvent> Inheritance object PacketProcessor ClientPacketProcessor<AnimationChangeEvent> AnimationProcessor Inherited Members ClientPacketProcessor<AnimationChangeEvent>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AnimationProcessor(PlayerManager) Methods Process(AnimationChangeEvent)"
  },
  "api/NitroxClient.Communication.Packets.Processors.AuroraAndTimeUpdateProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.AuroraAndTimeUpdateProcessor.-ctor.html",
    "title": "Constructor AuroraAndTimeUpdateProcessor | Nitrox",
    "keywords": "Constructor AuroraAndTimeUpdateProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll AuroraAndTimeUpdateProcessor(TimeManager) public AuroraAndTimeUpdateProcessor(TimeManager timeManager) Parameters timeManager TimeManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.AuroraAndTimeUpdateProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.AuroraAndTimeUpdateProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(AuroraAndTimeUpdate) public override void Process(AuroraAndTimeUpdate packet) Parameters packet AuroraAndTimeUpdate"
  },
  "api/NitroxClient.Communication.Packets.Processors.AuroraAndTimeUpdateProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.AuroraAndTimeUpdateProcessor.html",
    "title": "Class AuroraAndTimeUpdateProcessor | Nitrox",
    "keywords": "Class AuroraAndTimeUpdateProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class AuroraAndTimeUpdateProcessor : ClientPacketProcessor<AuroraAndTimeUpdate> Inheritance object PacketProcessor ClientPacketProcessor<AuroraAndTimeUpdate> AuroraAndTimeUpdateProcessor Inherited Members ClientPacketProcessor<AuroraAndTimeUpdate>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AuroraAndTimeUpdateProcessor(TimeManager) Methods Process(AuroraAndTimeUpdate)"
  },
  "api/NitroxClient.Communication.Packets.Processors.BaseDeconstructedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BaseDeconstructedProcessor.html",
    "title": "Class BaseDeconstructedProcessor | Nitrox",
    "keywords": "Class BaseDeconstructedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class BaseDeconstructedProcessor : BuildProcessor<BaseDeconstructed> Inheritance object PacketProcessor ClientPacketProcessor<BaseDeconstructed> BuildProcessor<BaseDeconstructed> BaseDeconstructedProcessor Inherited Members BuildProcessor<BaseDeconstructed>.Process(BaseDeconstructed) ClientPacketProcessor<BaseDeconstructed>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildProcessor-1.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildProcessor-1.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(T) public override void Process(T packet) Parameters packet T"
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildProcessor-1.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildProcessor-1.html",
    "title": "Class BuildProcessor<T> | Nitrox",
    "keywords": "Class BuildProcessor<T> Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public abstract class BuildProcessor<T> : ClientPacketProcessor<T> where T : Packet Type Parameters T Inheritance object PacketProcessor ClientPacketProcessor<T> BuildProcessor<T> Derived BaseDeconstructedProcessor ModifyConstructedAmountProcessor PieceDeconstructedProcessor PlaceBaseProcessor PlaceGhostProcessor PlaceModuleProcessor UpdateBaseProcessor WaterParkDeconstructedProcessor Inherited Members ClientPacketProcessor<T>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(T)"
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildingDesyncWarningProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildingDesyncWarningProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(BuildingDesyncWarning) public override void Process(BuildingDesyncWarning packet) Parameters packet BuildingDesyncWarning"
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildingDesyncWarningProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildingDesyncWarningProcessor.html",
    "title": "Class BuildingDesyncWarningProcessor | Nitrox",
    "keywords": "Class BuildingDesyncWarningProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class BuildingDesyncWarningProcessor : ClientPacketProcessor<BuildingDesyncWarning> Inheritance object PacketProcessor ClientPacketProcessor<BuildingDesyncWarning> BuildingDesyncWarningProcessor Inherited Members ClientPacketProcessor<BuildingDesyncWarning>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(BuildingDesyncWarning)"
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.-ctor.html",
    "title": "Constructor BuildingResyncProcessor | Nitrox",
    "keywords": "Constructor BuildingResyncProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll BuildingResyncProcessor(Entities) public BuildingResyncProcessor(Entities entities) Parameters entities Entities"
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.ClearBaseChildren.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.ClearBaseChildren.html",
    "title": "Method ClearBaseChildren | Nitrox",
    "keywords": "Method ClearBaseChildren Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll ClearBaseChildren(Base) Destroys manually ghosts, modules, interior pieces and vehicles of a base public static void ClearBaseChildren(Base @base) Parameters base Base Remarks This is the destructive way of clearing the base, if the base isn't modified consequently, IBaseModuleGeometry under the base cells may start spamming errors."
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.OverwriteBase.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.OverwriteBase.html",
    "title": "Method OverwriteBase | Nitrox",
    "keywords": "Method OverwriteBase Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll OverwriteBase(Base, BuildEntity) public IEnumerator OverwriteBase(Base @base, BuildEntity buildEntity) Parameters base Base buildEntity BuildEntity Returns IEnumerator"
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.OverwriteModule.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.OverwriteModule.html",
    "title": "Method OverwriteModule | Nitrox",
    "keywords": "Method OverwriteModule Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll OverwriteModule(Constructable, ModuleEntity) public IEnumerator OverwriteModule(Constructable constructable, ModuleEntity moduleEntity) Parameters constructable Constructable moduleEntity ModuleEntity Returns IEnumerator"
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(BuildingResync) public override void Process(BuildingResync packet) Parameters packet BuildingResync"
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.ResyncBuildingEntities.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.ResyncBuildingEntities.html",
    "title": "Method ResyncBuildingEntities | Nitrox",
    "keywords": "Method ResyncBuildingEntities Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll ResyncBuildingEntities(Dictionary<BuildEntity, int>, Dictionary<ModuleEntity, int>) public IEnumerator ResyncBuildingEntities(Dictionary<BuildEntity, int> buildEntities, Dictionary<ModuleEntity, int> moduleEntities) Parameters buildEntities Dictionary<BuildEntity, int> moduleEntities Dictionary<ModuleEntity, int> Returns IEnumerator"
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.UpdateEntities.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.UpdateEntities.html",
    "title": "Method UpdateEntities | Nitrox",
    "keywords": "Method UpdateEntities Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll UpdateEntities<C, E>(List<E>, Func<C, E, IEnumerator>, Func<E, C, bool>) Tries to overwrite components of the provided type found in GlobalRoot's hierarchy by the provided list of entities to update. If no component is found to be corresponding to a provided entity, the entity will be spawned independently. Other components of the provided type which weren't updated shall be destroyed. public IEnumerator UpdateEntities<C, E>(List<E> entitiesToUpdate, Func<C, E, IEnumerator> overwrite, Func<E, C, bool> correspondingPredicate) where C : Component where E : GlobalRootEntity Parameters entitiesToUpdate List<E> overwrite Func<C, E, IEnumerator> A function to overwrite a given component by a given entity correspondingPredicate Func<E, C, bool> Predicate to determine if an entity can overwrite the GameObject of the provided component. Returns IEnumerator Type Parameters C The Unity component to be looked for E The GlobalRootEntity type which will be updated Remarks The provided list is modified by the function. Make sure it's not used somewhere else."
  },
  "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.BuildingResyncProcessor.html",
    "title": "Class BuildingResyncProcessor | Nitrox",
    "keywords": "Class BuildingResyncProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class BuildingResyncProcessor : ClientPacketProcessor<BuildingResync> Inheritance object PacketProcessor ClientPacketProcessor<BuildingResync> BuildingResyncProcessor Inherited Members ClientPacketProcessor<BuildingResync>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BuildingResyncProcessor(Entities) Methods ClearBaseChildren(Base) Destroys manually ghosts, modules, interior pieces and vehicles of a base OverwriteBase(Base, BuildEntity) OverwriteModule(Constructable, ModuleEntity) Process(BuildingResync) ResyncBuildingEntities(Dictionary<BuildEntity, int>, Dictionary<ModuleEntity, int>) UpdateEntities<C, E>(List<E>, Func<C, E, IEnumerator>, Func<E, C, bool>) Tries to overwrite components of the provided type found in GlobalRoot's hierarchy by the provided list of entities to update. If no component is found to be corresponding to a provided entity, the entity will be spawned independently. Other components of the provided type which weren't updated shall be destroyed."
  },
  "api/NitroxClient.Communication.Packets.Processors.CreatureActionChangedProcessor.ActionByCreatureId.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CreatureActionChangedProcessor.ActionByCreatureId.html",
    "title": "Field ActionByCreatureId | Nitrox",
    "keywords": "Field ActionByCreatureId Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public static readonly Dictionary<NitroxId, CreatureAction> ActionByCreatureId Returns Dictionary<NitroxId, CreatureAction>"
  },
  "api/NitroxClient.Communication.Packets.Processors.CreatureActionChangedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CreatureActionChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(CreatureActionChanged) public override void Process(CreatureActionChanged packet) Parameters packet CreatureActionChanged"
  },
  "api/NitroxClient.Communication.Packets.Processors.CreatureActionChangedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CreatureActionChangedProcessor.html",
    "title": "Class CreatureActionChangedProcessor | Nitrox",
    "keywords": "Class CreatureActionChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class CreatureActionChangedProcessor : ClientPacketProcessor<CreatureActionChanged> Inheritance object PacketProcessor ClientPacketProcessor<CreatureActionChanged> CreatureActionChangedProcessor Inherited Members ClientPacketProcessor<CreatureActionChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields ActionByCreatureId Methods Process(CreatureActionChanged)"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsDamagePointHealthChangedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsDamagePointHealthChangedProcessor.-ctor.html",
    "title": "Constructor CyclopsDamagePointHealthChangedProcessor | Nitrox",
    "keywords": "Constructor CyclopsDamagePointHealthChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll CyclopsDamagePointHealthChangedProcessor(IPacketSender) public CyclopsDamagePointHealthChangedProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsDamagePointHealthChangedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsDamagePointHealthChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(CyclopsDamagePointRepaired) public override void Process(CyclopsDamagePointRepaired packet) Parameters packet CyclopsDamagePointRepaired"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsDamagePointHealthChangedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsDamagePointHealthChangedProcessor.html",
    "title": "Class CyclopsDamagePointHealthChangedProcessor | Nitrox",
    "keywords": "Class CyclopsDamagePointHealthChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class CyclopsDamagePointHealthChangedProcessor : ClientPacketProcessor<CyclopsDamagePointRepaired> Inheritance object PacketProcessor ClientPacketProcessor<CyclopsDamagePointRepaired> CyclopsDamagePointHealthChangedProcessor Inherited Members ClientPacketProcessor<CyclopsDamagePointRepaired>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsDamagePointHealthChangedProcessor(IPacketSender) Methods Process(CyclopsDamagePointRepaired)"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsDamageProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsDamageProcessor.-ctor.html",
    "title": "Constructor CyclopsDamageProcessor | Nitrox",
    "keywords": "Constructor CyclopsDamageProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll CyclopsDamageProcessor(IPacketSender, Fires) public CyclopsDamageProcessor(IPacketSender packetSender, Fires fires) Parameters packetSender IPacketSender fires Fires"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsDamageProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsDamageProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(CyclopsDamage) public override void Process(CyclopsDamage packet) Parameters packet CyclopsDamage"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsDamageProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsDamageProcessor.html",
    "title": "Class CyclopsDamageProcessor | Nitrox",
    "keywords": "Class CyclopsDamageProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Add/remove CyclopsDamagePoints and Fires to match the CyclopsDamage packet received public class CyclopsDamageProcessor : ClientPacketProcessor<CyclopsDamage> Inheritance object PacketProcessor ClientPacketProcessor<CyclopsDamage> CyclopsDamageProcessor Inherited Members ClientPacketProcessor<CyclopsDamage>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsDamageProcessor(IPacketSender, Fires) Methods Process(CyclopsDamage)"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsFireCreatedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsFireCreatedProcessor.-ctor.html",
    "title": "Constructor CyclopsFireCreatedProcessor | Nitrox",
    "keywords": "Constructor CyclopsFireCreatedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll CyclopsFireCreatedProcessor(IPacketSender, Fires) public CyclopsFireCreatedProcessor(IPacketSender packetSender, Fires fires) Parameters packetSender IPacketSender fires Fires"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsFireCreatedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsFireCreatedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(CyclopsFireCreated) public override void Process(CyclopsFireCreated packet) Parameters packet CyclopsFireCreated"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsFireCreatedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsFireCreatedProcessor.html",
    "title": "Class CyclopsFireCreatedProcessor | Nitrox",
    "keywords": "Class CyclopsFireCreatedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class CyclopsFireCreatedProcessor : ClientPacketProcessor<CyclopsFireCreated> Inheritance object PacketProcessor ClientPacketProcessor<CyclopsFireCreated> CyclopsFireCreatedProcessor Inherited Members ClientPacketProcessor<CyclopsFireCreated>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsFireCreatedProcessor(IPacketSender, Fires) Methods Process(CyclopsFireCreated)"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsFireSuppressionProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsFireSuppressionProcessor.-ctor.html",
    "title": "Constructor CyclopsFireSuppressionProcessor | Nitrox",
    "keywords": "Constructor CyclopsFireSuppressionProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll CyclopsFireSuppressionProcessor(IPacketSender, Cyclops) public CyclopsFireSuppressionProcessor(IPacketSender packetSender, Cyclops cyclops) Parameters packetSender IPacketSender cyclops Cyclops"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsFireSuppressionProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsFireSuppressionProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(CyclopsFireSuppression) public override void Process(CyclopsFireSuppression fireSuppressionPacket) Parameters fireSuppressionPacket CyclopsFireSuppression"
  },
  "api/NitroxClient.Communication.Packets.Processors.CyclopsFireSuppressionProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.CyclopsFireSuppressionProcessor.html",
    "title": "Class CyclopsFireSuppressionProcessor | Nitrox",
    "keywords": "Class CyclopsFireSuppressionProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class CyclopsFireSuppressionProcessor : ClientPacketProcessor<CyclopsFireSuppression> Inheritance object PacketProcessor ClientPacketProcessor<CyclopsFireSuppression> CyclopsFireSuppressionProcessor Inherited Members ClientPacketProcessor<CyclopsFireSuppression>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsFireSuppressionProcessor(IPacketSender, Cyclops) Methods Process(CyclopsFireSuppression)"
  },
  "api/NitroxClient.Communication.Packets.Processors.DeconstructionBeginProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.DeconstructionBeginProcessor.-ctor.html",
    "title": "Constructor DeconstructionBeginProcessor | Nitrox",
    "keywords": "Constructor DeconstructionBeginProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll DeconstructionBeginProcessor(IPacketSender) public DeconstructionBeginProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.DeconstructionBeginProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.DeconstructionBeginProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(DeconstructionBegin) public override void Process(DeconstructionBegin packet) Parameters packet DeconstructionBegin"
  },
  "api/NitroxClient.Communication.Packets.Processors.DeconstructionBeginProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.DeconstructionBeginProcessor.html",
    "title": "Class DeconstructionBeginProcessor | Nitrox",
    "keywords": "Class DeconstructionBeginProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class DeconstructionBeginProcessor : ClientPacketProcessor<DeconstructionBegin> Inheritance object PacketProcessor ClientPacketProcessor<DeconstructionBegin> DeconstructionBeginProcessor Inherited Members ClientPacketProcessor<DeconstructionBegin>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DeconstructionBeginProcessor(IPacketSender) Methods Process(DeconstructionBegin)"
  },
  "api/NitroxClient.Communication.Packets.Processors.DiscordRequestIPProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.DiscordRequestIPProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(DiscordRequestIP) public override void Process(DiscordRequestIP packet) Parameters packet DiscordRequestIP"
  },
  "api/NitroxClient.Communication.Packets.Processors.DiscordRequestIPProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.DiscordRequestIPProcessor.html",
    "title": "Class DiscordRequestIPProcessor | Nitrox",
    "keywords": "Class DiscordRequestIPProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class DiscordRequestIPProcessor : ClientPacketProcessor<DiscordRequestIP> Inheritance object PacketProcessor ClientPacketProcessor<DiscordRequestIP> DiscordRequestIPProcessor Inherited Members ClientPacketProcessor<DiscordRequestIP>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(DiscordRequestIP)"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityDestroyedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityDestroyedProcessor.-ctor.html",
    "title": "Constructor EntityDestroyedProcessor | Nitrox",
    "keywords": "Constructor EntityDestroyedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll EntityDestroyedProcessor(Entities) public EntityDestroyedProcessor(Entities entities) Parameters entities Entities"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityDestroyedProcessor.DAMAGE_TYPE_RUN_ORIGINAL.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityDestroyedProcessor.DAMAGE_TYPE_RUN_ORIGINAL.html",
    "title": "Field DAMAGE_TYPE_RUN_ORIGINAL | Nitrox",
    "keywords": "Field DAMAGE_TYPE_RUN_ORIGINAL Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public const DamageType DAMAGE_TYPE_RUN_ORIGINAL = (DamageType)100 Returns DamageType"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityDestroyedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityDestroyedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(EntityDestroyed) public override void Process(EntityDestroyed packet) Parameters packet EntityDestroyed"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityDestroyedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityDestroyedProcessor.html",
    "title": "Class EntityDestroyedProcessor | Nitrox",
    "keywords": "Class EntityDestroyedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class EntityDestroyedProcessor : ClientPacketProcessor<EntityDestroyed> Inheritance object PacketProcessor ClientPacketProcessor<EntityDestroyed> EntityDestroyedProcessor Inherited Members ClientPacketProcessor<EntityDestroyed>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityDestroyedProcessor(Entities) Fields DAMAGE_TYPE_RUN_ORIGINAL Methods Process(EntityDestroyed)"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityMetadataUpdateProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityMetadataUpdateProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(EntityMetadataUpdate) public override void Process(EntityMetadataUpdate update) Parameters update EntityMetadataUpdate"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityMetadataUpdateProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityMetadataUpdateProcessor.html",
    "title": "Class EntityMetadataUpdateProcessor | Nitrox",
    "keywords": "Class EntityMetadataUpdateProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class EntityMetadataUpdateProcessor : ClientPacketProcessor<EntityMetadataUpdate> Inheritance object PacketProcessor ClientPacketProcessor<EntityMetadataUpdate> EntityMetadataUpdateProcessor Inherited Members ClientPacketProcessor<EntityMetadataUpdate>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(EntityMetadataUpdate)"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityReparentedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityReparentedProcessor.-ctor.html",
    "title": "Constructor EntityReparentedProcessor | Nitrox",
    "keywords": "Constructor EntityReparentedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll EntityReparentedProcessor(Entities) public EntityReparentedProcessor(Entities entities) Parameters entities Entities"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityReparentedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityReparentedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(EntityReparented) public override void Process(EntityReparented packet) Parameters packet EntityReparented"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityReparentedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityReparentedProcessor.html",
    "title": "Class EntityReparentedProcessor | Nitrox",
    "keywords": "Class EntityReparentedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class EntityReparentedProcessor : ClientPacketProcessor<EntityReparented> Inheritance object PacketProcessor ClientPacketProcessor<EntityReparented> EntityReparentedProcessor Inherited Members ClientPacketProcessor<EntityReparented>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityReparentedProcessor(Entities) Methods Process(EntityReparented)"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityTransformUpdatesProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityTransformUpdatesProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(EntityTransformUpdates) public override void Process(EntityTransformUpdates packet) Parameters packet EntityTransformUpdates"
  },
  "api/NitroxClient.Communication.Packets.Processors.EntityTransformUpdatesProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EntityTransformUpdatesProcessor.html",
    "title": "Class EntityTransformUpdatesProcessor | Nitrox",
    "keywords": "Class EntityTransformUpdatesProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class EntityTransformUpdatesProcessor : ClientPacketProcessor<EntityTransformUpdates> Inheritance object PacketProcessor ClientPacketProcessor<EntityTransformUpdates> EntityTransformUpdatesProcessor Inherited Members ClientPacketProcessor<EntityTransformUpdates>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(EntityTransformUpdates)"
  },
  "api/NitroxClient.Communication.Packets.Processors.EscapePodChangedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EscapePodChangedProcessor.-ctor.html",
    "title": "Constructor EscapePodChangedProcessor | Nitrox",
    "keywords": "Constructor EscapePodChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll EscapePodChangedProcessor(PlayerManager) public EscapePodChangedProcessor(PlayerManager remotePlayerManager) Parameters remotePlayerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.EscapePodChangedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EscapePodChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(EscapePodChanged) public override void Process(EscapePodChanged packet) Parameters packet EscapePodChanged"
  },
  "api/NitroxClient.Communication.Packets.Processors.EscapePodChangedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.EscapePodChangedProcessor.html",
    "title": "Class EscapePodChangedProcessor | Nitrox",
    "keywords": "Class EscapePodChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class EscapePodChangedProcessor : ClientPacketProcessor<EscapePodChanged> Inheritance object PacketProcessor ClientPacketProcessor<EscapePodChanged> EscapePodChangedProcessor Inherited Members ClientPacketProcessor<EscapePodChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EscapePodChangedProcessor(PlayerManager) Methods Process(EscapePodChanged)"
  },
  "api/NitroxClient.Communication.Packets.Processors.ExosuitArmActionProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.ExosuitArmActionProcessor.-ctor.html",
    "title": "Constructor ExosuitArmActionProcessor | Nitrox",
    "keywords": "Constructor ExosuitArmActionProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll ExosuitArmActionProcessor(IPacketSender, ExosuitModuleEvent) public ExosuitArmActionProcessor(IPacketSender packetSender, ExosuitModuleEvent exosuitModuleEvent) Parameters packetSender IPacketSender exosuitModuleEvent ExosuitModuleEvent"
  },
  "api/NitroxClient.Communication.Packets.Processors.ExosuitArmActionProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.ExosuitArmActionProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(ExosuitArmActionPacket) public override void Process(ExosuitArmActionPacket packet) Parameters packet ExosuitArmActionPacket"
  },
  "api/NitroxClient.Communication.Packets.Processors.ExosuitArmActionProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.ExosuitArmActionProcessor.html",
    "title": "Class ExosuitArmActionProcessor | Nitrox",
    "keywords": "Class ExosuitArmActionProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class ExosuitArmActionProcessor : ClientPacketProcessor<ExosuitArmActionPacket> Inheritance object PacketProcessor ClientPacketProcessor<ExosuitArmActionPacket> ExosuitArmActionProcessor Inherited Members ClientPacketProcessor<ExosuitArmActionPacket>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ExosuitArmActionProcessor(IPacketSender, ExosuitModuleEvent) Methods Process(ExosuitArmActionPacket)"
  },
  "api/NitroxClient.Communication.Packets.Processors.FireDousedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.FireDousedProcessor.-ctor.html",
    "title": "Constructor FireDousedProcessor | Nitrox",
    "keywords": "Constructor FireDousedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll FireDousedProcessor(IPacketSender) public FireDousedProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.FireDousedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.FireDousedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(FireDoused) Finds and executes Douse(float). If the fire is extinguished, it will pass a large float to trigger the private Fire.Extinguish() method. public override void Process(FireDoused packet) Parameters packet FireDoused"
  },
  "api/NitroxClient.Communication.Packets.Processors.FireDousedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.FireDousedProcessor.html",
    "title": "Class FireDousedProcessor | Nitrox",
    "keywords": "Class FireDousedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class FireDousedProcessor : ClientPacketProcessor<FireDoused> Inheritance object PacketProcessor ClientPacketProcessor<FireDoused> FireDousedProcessor Inherited Members ClientPacketProcessor<FireDoused>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FireDousedProcessor(IPacketSender) Methods Process(FireDoused) Finds and executes Douse(float). If the fire is extinguished, it will pass a large float to trigger the private Fire.Extinguish() method."
  },
  "api/NitroxClient.Communication.Packets.Processors.GameModeChangedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.GameModeChangedProcessor.-ctor.html",
    "title": "Constructor GameModeChangedProcessor | Nitrox",
    "keywords": "Constructor GameModeChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll GameModeChangedProcessor(LocalPlayer, PlayerManager) public GameModeChangedProcessor(LocalPlayer localPlayer, PlayerManager playerManager) Parameters localPlayer LocalPlayer playerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.GameModeChangedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.GameModeChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(GameModeChanged) public override void Process(GameModeChanged packet) Parameters packet GameModeChanged"
  },
  "api/NitroxClient.Communication.Packets.Processors.GameModeChangedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.GameModeChangedProcessor.html",
    "title": "Class GameModeChangedProcessor | Nitrox",
    "keywords": "Class GameModeChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class GameModeChangedProcessor : ClientPacketProcessor<GameModeChanged> Inheritance object PacketProcessor ClientPacketProcessor<GameModeChanged> GameModeChangedProcessor Inherited Members ClientPacketProcessor<GameModeChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GameModeChangedProcessor(LocalPlayer, PlayerManager) Methods Process(GameModeChanged)"
  },
  "api/NitroxClient.Communication.Packets.Processors.InitialPlayerSyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.InitialPlayerSyncProcessor.-ctor.html",
    "title": "Constructor InitialPlayerSyncProcessor | Nitrox",
    "keywords": "Constructor InitialPlayerSyncProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll InitialPlayerSyncProcessor(IPacketSender, IEnumerable<IInitialSyncProcessor>) public InitialPlayerSyncProcessor(IPacketSender packetSender, IEnumerable<IInitialSyncProcessor> processors) Parameters packetSender IPacketSender processors IEnumerable<IInitialSyncProcessor>"
  },
  "api/NitroxClient.Communication.Packets.Processors.InitialPlayerSyncProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.InitialPlayerSyncProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(InitialPlayerSync) public override void Process(InitialPlayerSync packet) Parameters packet InitialPlayerSync"
  },
  "api/NitroxClient.Communication.Packets.Processors.InitialPlayerSyncProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.InitialPlayerSyncProcessor.html",
    "title": "Class InitialPlayerSyncProcessor | Nitrox",
    "keywords": "Class InitialPlayerSyncProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class InitialPlayerSyncProcessor : ClientPacketProcessor<InitialPlayerSync> Inheritance object PacketProcessor ClientPacketProcessor<InitialPlayerSync> InitialPlayerSyncProcessor Inherited Members ClientPacketProcessor<InitialPlayerSync>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InitialPlayerSyncProcessor(IPacketSender, IEnumerable<IInitialSyncProcessor>) Methods Process(InitialPlayerSync)"
  },
  "api/NitroxClient.Communication.Packets.Processors.KnownTechEntryProcessorAdd.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.KnownTechEntryProcessorAdd.-ctor.html",
    "title": "Constructor KnownTechEntryProcessorAdd | Nitrox",
    "keywords": "Constructor KnownTechEntryProcessorAdd Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll KnownTechEntryProcessorAdd(IPacketSender) public KnownTechEntryProcessorAdd(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.KnownTechEntryProcessorAdd.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.KnownTechEntryProcessorAdd.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(KnownTechEntryAdd) public override void Process(KnownTechEntryAdd packet) Parameters packet KnownTechEntryAdd"
  },
  "api/NitroxClient.Communication.Packets.Processors.KnownTechEntryProcessorAdd.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.KnownTechEntryProcessorAdd.html",
    "title": "Class KnownTechEntryProcessorAdd | Nitrox",
    "keywords": "Class KnownTechEntryProcessorAdd Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class KnownTechEntryProcessorAdd : ClientPacketProcessor<KnownTechEntryAdd> Inheritance object PacketProcessor ClientPacketProcessor<KnownTechEntryAdd> KnownTechEntryProcessorAdd Inherited Members ClientPacketProcessor<KnownTechEntryAdd>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KnownTechEntryProcessorAdd(IPacketSender) Methods Process(KnownTechEntryAdd)"
  },
  "api/NitroxClient.Communication.Packets.Processors.MedicalCabinetClickedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MedicalCabinetClickedProcessor.-ctor.html",
    "title": "Constructor MedicalCabinetClickedProcessor | Nitrox",
    "keywords": "Constructor MedicalCabinetClickedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll MedicalCabinetClickedProcessor(IPacketSender) public MedicalCabinetClickedProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.MedicalCabinetClickedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MedicalCabinetClickedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(MedicalCabinetClicked) public override void Process(MedicalCabinetClicked packet) Parameters packet MedicalCabinetClicked"
  },
  "api/NitroxClient.Communication.Packets.Processors.MedicalCabinetClickedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MedicalCabinetClickedProcessor.html",
    "title": "Class MedicalCabinetClickedProcessor | Nitrox",
    "keywords": "Class MedicalCabinetClickedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class MedicalCabinetClickedProcessor : ClientPacketProcessor<MedicalCabinetClicked> Inheritance object PacketProcessor ClientPacketProcessor<MedicalCabinetClicked> MedicalCabinetClickedProcessor Inherited Members ClientPacketProcessor<MedicalCabinetClicked>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MedicalCabinetClickedProcessor(IPacketSender) Methods Process(MedicalCabinetClicked)"
  },
  "api/NitroxClient.Communication.Packets.Processors.ModifyConstructedAmountProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.ModifyConstructedAmountProcessor.html",
    "title": "Class ModifyConstructedAmountProcessor | Nitrox",
    "keywords": "Class ModifyConstructedAmountProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class ModifyConstructedAmountProcessor : BuildProcessor<ModifyConstructedAmount> Inheritance object PacketProcessor ClientPacketProcessor<ModifyConstructedAmount> BuildProcessor<ModifyConstructedAmount> ModifyConstructedAmountProcessor Inherited Members BuildProcessor<ModifyConstructedAmount>.Process(ModifyConstructedAmount) ClientPacketProcessor<ModifyConstructedAmount>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionPolicyProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionPolicyProcessor.-ctor.html",
    "title": "Constructor MultiplayerSessionPolicyProcessor | Nitrox",
    "keywords": "Constructor MultiplayerSessionPolicyProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll MultiplayerSessionPolicyProcessor(IMultiplayerSession) public MultiplayerSessionPolicyProcessor(IMultiplayerSession multiplayerSession) Parameters multiplayerSession IMultiplayerSession"
  },
  "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionPolicyProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionPolicyProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(MultiplayerSessionPolicy) public override void Process(MultiplayerSessionPolicy packet) Parameters packet MultiplayerSessionPolicy"
  },
  "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionPolicyProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionPolicyProcessor.html",
    "title": "Class MultiplayerSessionPolicyProcessor | Nitrox",
    "keywords": "Class MultiplayerSessionPolicyProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class MultiplayerSessionPolicyProcessor : ClientPacketProcessor<MultiplayerSessionPolicy> Inheritance object PacketProcessor ClientPacketProcessor<MultiplayerSessionPolicy> MultiplayerSessionPolicyProcessor Inherited Members ClientPacketProcessor<MultiplayerSessionPolicy>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MultiplayerSessionPolicyProcessor(IMultiplayerSession) Methods Process(MultiplayerSessionPolicy)"
  },
  "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionReservationProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionReservationProcessor.-ctor.html",
    "title": "Constructor MultiplayerSessionReservationProcessor | Nitrox",
    "keywords": "Constructor MultiplayerSessionReservationProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll MultiplayerSessionReservationProcessor(IMultiplayerSession) public MultiplayerSessionReservationProcessor(IMultiplayerSession multiplayerSession) Parameters multiplayerSession IMultiplayerSession"
  },
  "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionReservationProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionReservationProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(MultiplayerSessionReservation) public override void Process(MultiplayerSessionReservation packet) Parameters packet MultiplayerSessionReservation"
  },
  "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionReservationProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MultiplayerSessionReservationProcessor.html",
    "title": "Class MultiplayerSessionReservationProcessor | Nitrox",
    "keywords": "Class MultiplayerSessionReservationProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class MultiplayerSessionReservationProcessor : ClientPacketProcessor<MultiplayerSessionReservation> Inheritance object PacketProcessor ClientPacketProcessor<MultiplayerSessionReservation> MultiplayerSessionReservationProcessor Inherited Members ClientPacketProcessor<MultiplayerSessionReservation>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MultiplayerSessionReservationProcessor(IMultiplayerSession) Methods Process(MultiplayerSessionReservation)"
  },
  "api/NitroxClient.Communication.Packets.Processors.MutePlayerProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MutePlayerProcessor.-ctor.html",
    "title": "Constructor MutePlayerProcessor | Nitrox",
    "keywords": "Constructor MutePlayerProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll MutePlayerProcessor(PlayerManager) public MutePlayerProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.MutePlayerProcessor.OnPlayerMuted.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MutePlayerProcessor.OnPlayerMuted.html",
    "title": "Field OnPlayerMuted | Nitrox",
    "keywords": "Field OnPlayerMuted Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public MutePlayerProcessor.PlayerMuted OnPlayerMuted Returns MutePlayerProcessor.PlayerMuted"
  },
  "api/NitroxClient.Communication.Packets.Processors.MutePlayerProcessor.PlayerMuted.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MutePlayerProcessor.PlayerMuted.html",
    "title": "Delegate MutePlayerProcessor.PlayerMuted | Nitrox",
    "keywords": "Delegate MutePlayerProcessor.PlayerMuted Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public delegate void MutePlayerProcessor.PlayerMuted(ushort playerId, bool muted) Parameters playerId ushort muted bool"
  },
  "api/NitroxClient.Communication.Packets.Processors.MutePlayerProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MutePlayerProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(MutePlayer) public override void Process(MutePlayer packet) Parameters packet MutePlayer"
  },
  "api/NitroxClient.Communication.Packets.Processors.MutePlayerProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.MutePlayerProcessor.html",
    "title": "Class MutePlayerProcessor | Nitrox",
    "keywords": "Class MutePlayerProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class MutePlayerProcessor : ClientPacketProcessor<MutePlayer> Inheritance object PacketProcessor ClientPacketProcessor<MutePlayer> MutePlayerProcessor Inherited Members ClientPacketProcessor<MutePlayer>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MutePlayerProcessor(PlayerManager) Fields OnPlayerMuted Methods Process(MutePlayer)"
  },
  "api/NitroxClient.Communication.Packets.Processors.OpenableStateChangedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.OpenableStateChangedProcessor.-ctor.html",
    "title": "Constructor OpenableStateChangedProcessor | Nitrox",
    "keywords": "Constructor OpenableStateChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll OpenableStateChangedProcessor(IPacketSender) public OpenableStateChangedProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.OpenableStateChangedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.OpenableStateChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(OpenableStateChanged) public override void Process(OpenableStateChanged packet) Parameters packet OpenableStateChanged"
  },
  "api/NitroxClient.Communication.Packets.Processors.OpenableStateChangedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.OpenableStateChangedProcessor.html",
    "title": "Class OpenableStateChangedProcessor | Nitrox",
    "keywords": "Class OpenableStateChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class OpenableStateChangedProcessor : ClientPacketProcessor<OpenableStateChanged> Inheritance object PacketProcessor ClientPacketProcessor<OpenableStateChanged> OpenableStateChangedProcessor Inherited Members ClientPacketProcessor<OpenableStateChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors OpenableStateChangedProcessor(IPacketSender) Methods Process(OpenableStateChanged)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.-ctor.html",
    "title": "Constructor PDAEncyclopediaEntryAddProcessor | Nitrox",
    "keywords": "Constructor PDAEncyclopediaEntryAddProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PDAEncyclopediaEntryAddProcessor(IPacketSender) public PDAEncyclopediaEntryAddProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PDAEncyclopediaEntryAdd) public override void Process(PDAEncyclopediaEntryAdd packet) Parameters packet PDAEncyclopediaEntryAdd"
  },
  "api/NitroxClient.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.html",
    "title": "Class PDAEncyclopediaEntryAddProcessor | Nitrox",
    "keywords": "Class PDAEncyclopediaEntryAddProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PDAEncyclopediaEntryAddProcessor : ClientPacketProcessor<PDAEncyclopediaEntryAdd> Inheritance object PacketProcessor ClientPacketProcessor<PDAEncyclopediaEntryAdd> PDAEncyclopediaEntryAddProcessor Inherited Members ClientPacketProcessor<PDAEncyclopediaEntryAdd>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PDAEncyclopediaEntryAddProcessor(IPacketSender) Methods Process(PDAEncyclopediaEntryAdd)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PDALogEntryAddProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PDALogEntryAddProcessor.-ctor.html",
    "title": "Constructor PDALogEntryAddProcessor | Nitrox",
    "keywords": "Constructor PDALogEntryAddProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PDALogEntryAddProcessor(IPacketSender) public PDALogEntryAddProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.PDALogEntryAddProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PDALogEntryAddProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PDALogEntryAdd) public override void Process(PDALogEntryAdd packet) Parameters packet PDALogEntryAdd"
  },
  "api/NitroxClient.Communication.Packets.Processors.PDALogEntryAddProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PDALogEntryAddProcessor.html",
    "title": "Class PDALogEntryAddProcessor | Nitrox",
    "keywords": "Class PDALogEntryAddProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PDALogEntryAddProcessor : ClientPacketProcessor<PDALogEntryAdd> Inheritance object PacketProcessor ClientPacketProcessor<PDALogEntryAdd> PDALogEntryAddProcessor Inherited Members ClientPacketProcessor<PDALogEntryAdd>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PDALogEntryAddProcessor(IPacketSender) Methods Process(PDALogEntryAdd)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PDAScanFinishedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PDAScanFinishedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PDAScanFinished) public override void Process(PDAScanFinished packet) Parameters packet PDAScanFinished"
  },
  "api/NitroxClient.Communication.Packets.Processors.PDAScanFinishedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PDAScanFinishedProcessor.html",
    "title": "Class PDAScanFinishedProcessor | Nitrox",
    "keywords": "Class PDAScanFinishedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PDAScanFinishedProcessor : ClientPacketProcessor<PDAScanFinished> Inheritance object PacketProcessor ClientPacketProcessor<PDAScanFinished> PDAScanFinishedProcessor Inherited Members ClientPacketProcessor<PDAScanFinished>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(PDAScanFinished)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PermsChangedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PermsChangedProcessor.-ctor.html",
    "title": "Constructor PermsChangedProcessor | Nitrox",
    "keywords": "Constructor PermsChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PermsChangedProcessor(LocalPlayer) public PermsChangedProcessor(LocalPlayer localPlayer) Parameters localPlayer LocalPlayer"
  },
  "api/NitroxClient.Communication.Packets.Processors.PermsChangedProcessor.OnPermissionsChanged.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PermsChangedProcessor.OnPermissionsChanged.html",
    "title": "Field OnPermissionsChanged | Nitrox",
    "keywords": "Field OnPermissionsChanged Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public PermsChangedProcessor.PermissionsChanged OnPermissionsChanged Returns PermsChangedProcessor.PermissionsChanged"
  },
  "api/NitroxClient.Communication.Packets.Processors.PermsChangedProcessor.PermissionsChanged.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PermsChangedProcessor.PermissionsChanged.html",
    "title": "Delegate PermsChangedProcessor.PermissionsChanged | Nitrox",
    "keywords": "Delegate PermsChangedProcessor.PermissionsChanged Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public delegate void PermsChangedProcessor.PermissionsChanged(Perms perms) Parameters perms Perms"
  },
  "api/NitroxClient.Communication.Packets.Processors.PermsChangedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PermsChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PermsChanged) public override void Process(PermsChanged packet) Parameters packet PermsChanged"
  },
  "api/NitroxClient.Communication.Packets.Processors.PermsChangedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PermsChangedProcessor.html",
    "title": "Class PermsChangedProcessor | Nitrox",
    "keywords": "Class PermsChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PermsChangedProcessor : ClientPacketProcessor<PermsChanged> Inheritance object PacketProcessor ClientPacketProcessor<PermsChanged> PermsChangedProcessor Inherited Members ClientPacketProcessor<PermsChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PermsChangedProcessor(LocalPlayer) Fields OnPermissionsChanged Methods Process(PermsChanged)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PieceDeconstructedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PieceDeconstructedProcessor.html",
    "title": "Class PieceDeconstructedProcessor | Nitrox",
    "keywords": "Class PieceDeconstructedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PieceDeconstructedProcessor : BuildProcessor<PieceDeconstructed> Inheritance object PacketProcessor ClientPacketProcessor<PieceDeconstructed> BuildProcessor<PieceDeconstructed> PieceDeconstructedProcessor Inherited Members BuildProcessor<PieceDeconstructed>.Process(PieceDeconstructed) ClientPacketProcessor<PieceDeconstructed>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxClient.Communication.Packets.Processors.PingRenamedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PingRenamedProcessor.-ctor.html",
    "title": "Constructor PingRenamedProcessor | Nitrox",
    "keywords": "Constructor PingRenamedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PingRenamedProcessor(IPacketSender) public PingRenamedProcessor(IPacketSender sender) Parameters sender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.PingRenamedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PingRenamedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PingRenamed) public override void Process(PingRenamed packet) Parameters packet PingRenamed"
  },
  "api/NitroxClient.Communication.Packets.Processors.PingRenamedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PingRenamedProcessor.html",
    "title": "Class PingRenamedProcessor | Nitrox",
    "keywords": "Class PingRenamedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Only syncs pings from beacons for now. public class PingRenamedProcessor : ClientPacketProcessor<PingRenamed> Inheritance object PacketProcessor ClientPacketProcessor<PingRenamed> PingRenamedProcessor Inherited Members ClientPacketProcessor<PingRenamed>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PingRenamedProcessor(IPacketSender) Methods Process(PingRenamed)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlaceBaseProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlaceBaseProcessor.html",
    "title": "Class PlaceBaseProcessor | Nitrox",
    "keywords": "Class PlaceBaseProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlaceBaseProcessor : BuildProcessor<PlaceBase> Inheritance object PacketProcessor ClientPacketProcessor<PlaceBase> BuildProcessor<PlaceBase> PlaceBaseProcessor Inherited Members BuildProcessor<PlaceBase>.Process(PlaceBase) ClientPacketProcessor<PlaceBase>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlaceGhostProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlaceGhostProcessor.html",
    "title": "Class PlaceGhostProcessor | Nitrox",
    "keywords": "Class PlaceGhostProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlaceGhostProcessor : BuildProcessor<PlaceGhost> Inheritance object PacketProcessor ClientPacketProcessor<PlaceGhost> BuildProcessor<PlaceGhost> PlaceGhostProcessor Inherited Members BuildProcessor<PlaceGhost>.Process(PlaceGhost) ClientPacketProcessor<PlaceGhost>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlaceModuleProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlaceModuleProcessor.html",
    "title": "Class PlaceModuleProcessor | Nitrox",
    "keywords": "Class PlaceModuleProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlaceModuleProcessor : BuildProcessor<PlaceModule> Inheritance object PacketProcessor ClientPacketProcessor<PlaceModule> BuildProcessor<PlaceModule> PlaceModuleProcessor Inherited Members BuildProcessor<PlaceModule>.Process(PlaceModule) ClientPacketProcessor<PlaceModule>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayFMODAssetProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayFMODAssetProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayFMODAsset) public override void Process(PlayFMODAsset packet) Parameters packet PlayFMODAsset"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayFMODAssetProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayFMODAssetProcessor.html",
    "title": "Class PlayFMODAssetProcessor | Nitrox",
    "keywords": "Class PlayFMODAssetProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayFMODAssetProcessor : ClientPacketProcessor<PlayFMODAsset> Inheritance object PacketProcessor ClientPacketProcessor<PlayFMODAsset> PlayFMODAssetProcessor Inherited Members ClientPacketProcessor<PlayFMODAsset>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(PlayFMODAsset)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayFMODCustomEmitterProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayFMODCustomEmitterProcessor.-ctor.html",
    "title": "Constructor PlayFMODCustomEmitterProcessor | Nitrox",
    "keywords": "Constructor PlayFMODCustomEmitterProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PlayFMODCustomEmitterProcessor(IPacketSender) public PlayFMODCustomEmitterProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayFMODCustomEmitterProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayFMODCustomEmitterProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayFMODCustomEmitter) public override void Process(PlayFMODCustomEmitter packet) Parameters packet PlayFMODCustomEmitter"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayFMODCustomEmitterProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayFMODCustomEmitterProcessor.html",
    "title": "Class PlayFMODCustomEmitterProcessor | Nitrox",
    "keywords": "Class PlayFMODCustomEmitterProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayFMODCustomEmitterProcessor : ClientPacketProcessor<PlayFMODCustomEmitter> Inheritance object PacketProcessor ClientPacketProcessor<PlayFMODCustomEmitter> PlayFMODCustomEmitterProcessor Inherited Members ClientPacketProcessor<PlayFMODCustomEmitter>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayFMODCustomEmitterProcessor(IPacketSender) Methods Process(PlayFMODCustomEmitter)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayFMODCustomLoopingEmitterProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayFMODCustomLoopingEmitterProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayFMODCustomLoopingEmitter) public override void Process(PlayFMODCustomLoopingEmitter packet) Parameters packet PlayFMODCustomLoopingEmitter"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayFMODCustomLoopingEmitterProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayFMODCustomLoopingEmitterProcessor.html",
    "title": "Class PlayFMODCustomLoopingEmitterProcessor | Nitrox",
    "keywords": "Class PlayFMODCustomLoopingEmitterProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayFMODCustomLoopingEmitterProcessor : ClientPacketProcessor<PlayFMODCustomLoopingEmitter> Inheritance object PacketProcessor ClientPacketProcessor<PlayFMODCustomLoopingEmitter> PlayFMODCustomLoopingEmitterProcessor Inherited Members ClientPacketProcessor<PlayFMODCustomLoopingEmitter>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(PlayFMODCustomLoopingEmitter)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayFMODStudioEventEmitterProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayFMODStudioEventEmitterProcessor.-ctor.html",
    "title": "Constructor PlayFMODStudioEventEmitterProcessor | Nitrox",
    "keywords": "Constructor PlayFMODStudioEventEmitterProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PlayFMODStudioEventEmitterProcessor(IPacketSender) public PlayFMODStudioEventEmitterProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayFMODStudioEventEmitterProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayFMODStudioEventEmitterProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayFMODStudioEmitter) public override void Process(PlayFMODStudioEmitter packet) Parameters packet PlayFMODStudioEmitter"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayFMODStudioEventEmitterProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayFMODStudioEventEmitterProcessor.html",
    "title": "Class PlayFMODStudioEventEmitterProcessor | Nitrox",
    "keywords": "Class PlayFMODStudioEventEmitterProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayFMODStudioEventEmitterProcessor : ClientPacketProcessor<PlayFMODStudioEmitter> Inheritance object PacketProcessor ClientPacketProcessor<PlayFMODStudioEmitter> PlayFMODStudioEventEmitterProcessor Inherited Members ClientPacketProcessor<PlayFMODStudioEmitter>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayFMODStudioEventEmitterProcessor(IPacketSender) Methods Process(PlayFMODStudioEmitter)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlaySunbeamEventProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlaySunbeamEventProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlaySunbeamEvent) public override void Process(PlaySunbeamEvent packet) Parameters packet PlaySunbeamEvent"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlaySunbeamEventProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlaySunbeamEventProcessor.html",
    "title": "Class PlaySunbeamEventProcessor | Nitrox",
    "keywords": "Class PlaySunbeamEventProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlaySunbeamEventProcessor : ClientPacketProcessor<PlaySunbeamEvent> Inheritance object PacketProcessor ClientPacketProcessor<PlaySunbeamEvent> PlaySunbeamEventProcessor Inherited Members ClientPacketProcessor<PlaySunbeamEvent>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(PlaySunbeamEvent)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerCinematicControllerCallProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerCinematicControllerCallProcessor.-ctor.html",
    "title": "Constructor PlayerCinematicControllerCallProcessor | Nitrox",
    "keywords": "Constructor PlayerCinematicControllerCallProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PlayerCinematicControllerCallProcessor(PlayerManager) public PlayerCinematicControllerCallProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerCinematicControllerCallProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerCinematicControllerCallProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayerCinematicControllerCall) public override void Process(PlayerCinematicControllerCall packet) Parameters packet PlayerCinematicControllerCall"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerCinematicControllerCallProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerCinematicControllerCallProcessor.html",
    "title": "Class PlayerCinematicControllerCallProcessor | Nitrox",
    "keywords": "Class PlayerCinematicControllerCallProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayerCinematicControllerCallProcessor : ClientPacketProcessor<PlayerCinematicControllerCall> Inheritance object PacketProcessor ClientPacketProcessor<PlayerCinematicControllerCall> PlayerCinematicControllerCallProcessor Inherited Members ClientPacketProcessor<PlayerCinematicControllerCall>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerCinematicControllerCallProcessor(PlayerManager) Methods Process(PlayerCinematicControllerCall)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerDeathProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerDeathProcessor.-ctor.html",
    "title": "Constructor PlayerDeathProcessor | Nitrox",
    "keywords": "Constructor PlayerDeathProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PlayerDeathProcessor(PlayerManager) public PlayerDeathProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerDeathProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerDeathProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayerDeathEvent) public override void Process(PlayerDeathEvent playerDeath) Parameters playerDeath PlayerDeathEvent"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerDeathProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerDeathProcessor.html",
    "title": "Class PlayerDeathProcessor | Nitrox",
    "keywords": "Class PlayerDeathProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayerDeathProcessor : ClientPacketProcessor<PlayerDeathEvent> Inheritance object PacketProcessor ClientPacketProcessor<PlayerDeathEvent> PlayerDeathProcessor Inherited Members ClientPacketProcessor<PlayerDeathEvent>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerDeathProcessor(PlayerManager) Methods Process(PlayerDeathEvent)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.-ctor.html",
    "title": "Constructor PlayerHeldItemChangedProcessor | Nitrox",
    "keywords": "Constructor PlayerHeldItemChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PlayerHeldItemChangedProcessor(PlayerManager) public PlayerHeldItemChangedProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayerHeldItemChanged) public override void Process(PlayerHeldItemChanged packet) Parameters packet PlayerHeldItemChanged"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.html",
    "title": "Class PlayerHeldItemChangedProcessor | Nitrox",
    "keywords": "Class PlayerHeldItemChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayerHeldItemChangedProcessor : ClientPacketProcessor<PlayerHeldItemChanged> Inheritance object PacketProcessor ClientPacketProcessor<PlayerHeldItemChanged> PlayerHeldItemChangedProcessor Inherited Members ClientPacketProcessor<PlayerHeldItemChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerHeldItemChangedProcessor(PlayerManager) Methods Process(PlayerHeldItemChanged)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerJoinedMultiplayerSessionProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerJoinedMultiplayerSessionProcessor.-ctor.html",
    "title": "Constructor PlayerJoinedMultiplayerSessionProcessor | Nitrox",
    "keywords": "Constructor PlayerJoinedMultiplayerSessionProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PlayerJoinedMultiplayerSessionProcessor(PlayerManager) public PlayerJoinedMultiplayerSessionProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerJoinedMultiplayerSessionProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerJoinedMultiplayerSessionProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayerJoinedMultiplayerSession) public override void Process(PlayerJoinedMultiplayerSession packet) Parameters packet PlayerJoinedMultiplayerSession"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerJoinedMultiplayerSessionProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerJoinedMultiplayerSessionProcessor.html",
    "title": "Class PlayerJoinedMultiplayerSessionProcessor | Nitrox",
    "keywords": "Class PlayerJoinedMultiplayerSessionProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayerJoinedMultiplayerSessionProcessor : ClientPacketProcessor<PlayerJoinedMultiplayerSession> Inheritance object PacketProcessor ClientPacketProcessor<PlayerJoinedMultiplayerSession> PlayerJoinedMultiplayerSessionProcessor Inherited Members ClientPacketProcessor<PlayerJoinedMultiplayerSession>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerJoinedMultiplayerSessionProcessor(PlayerManager) Methods Process(PlayerJoinedMultiplayerSession)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerMovementProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerMovementProcessor.-ctor.html",
    "title": "Constructor PlayerMovementProcessor | Nitrox",
    "keywords": "Constructor PlayerMovementProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PlayerMovementProcessor(PlayerManager) public PlayerMovementProcessor(PlayerManager remotePlayerManager) Parameters remotePlayerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerMovementProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerMovementProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayerMovement) public override void Process(PlayerMovement movement) Parameters movement PlayerMovement"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerMovementProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerMovementProcessor.html",
    "title": "Class PlayerMovementProcessor | Nitrox",
    "keywords": "Class PlayerMovementProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayerMovementProcessor : ClientPacketProcessor<PlayerMovement> Inheritance object PacketProcessor ClientPacketProcessor<PlayerMovement> PlayerMovementProcessor Inherited Members ClientPacketProcessor<PlayerMovement>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerMovementProcessor(PlayerManager) Methods Process(PlayerMovement)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerStatsProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerStatsProcessor.-ctor.html",
    "title": "Constructor PlayerStatsProcessor | Nitrox",
    "keywords": "Constructor PlayerStatsProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll PlayerStatsProcessor(PlayerVitalsManager) public PlayerStatsProcessor(PlayerVitalsManager vitalsManager) Parameters vitalsManager PlayerVitalsManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerStatsProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerStatsProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayerStats) public override void Process(PlayerStats playerStats) Parameters playerStats PlayerStats"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerStatsProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerStatsProcessor.html",
    "title": "Class PlayerStatsProcessor | Nitrox",
    "keywords": "Class PlayerStatsProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayerStatsProcessor : ClientPacketProcessor<PlayerStats> Inheritance object PacketProcessor ClientPacketProcessor<PlayerStats> PlayerStatsProcessor Inherited Members ClientPacketProcessor<PlayerStats>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerStatsProcessor(PlayerVitalsManager) Methods Process(PlayerStats)"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerTeleportedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerTeleportedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayerTeleported) public override void Process(PlayerTeleported packet) Parameters packet PlayerTeleported"
  },
  "api/NitroxClient.Communication.Packets.Processors.PlayerTeleportedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.PlayerTeleportedProcessor.html",
    "title": "Class PlayerTeleportedProcessor | Nitrox",
    "keywords": "Class PlayerTeleportedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class PlayerTeleportedProcessor : ClientPacketProcessor<PlayerTeleported> Inheritance object PacketProcessor ClientPacketProcessor<PlayerTeleported> PlayerTeleportedProcessor Inherited Members ClientPacketProcessor<PlayerTeleported>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(PlayerTeleported)"
  },
  "api/NitroxClient.Communication.Packets.Processors.RadioPlayPendingMessageProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.RadioPlayPendingMessageProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(RadioPlayPendingMessage) public override void Process(RadioPlayPendingMessage packet) Parameters packet RadioPlayPendingMessage"
  },
  "api/NitroxClient.Communication.Packets.Processors.RadioPlayPendingMessageProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.RadioPlayPendingMessageProcessor.html",
    "title": "Class RadioPlayPendingMessageProcessor | Nitrox",
    "keywords": "Class RadioPlayPendingMessageProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class RadioPlayPendingMessageProcessor : ClientPacketProcessor<RadioPlayPendingMessage> Inheritance object PacketProcessor ClientPacketProcessor<RadioPlayPendingMessage> RadioPlayPendingMessageProcessor Inherited Members ClientPacketProcessor<RadioPlayPendingMessage>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(RadioPlayPendingMessage)"
  },
  "api/NitroxClient.Communication.Packets.Processors.RocketLaunchProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.RocketLaunchProcessor.-ctor.html",
    "title": "Constructor RocketLaunchProcessor | Nitrox",
    "keywords": "Constructor RocketLaunchProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll RocketLaunchProcessor(Rockets) public RocketLaunchProcessor(Rockets rockets) Parameters rockets Rockets"
  },
  "api/NitroxClient.Communication.Packets.Processors.RocketLaunchProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.RocketLaunchProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(RocketLaunch) public override void Process(RocketLaunch rocketLaunch) Parameters rocketLaunch RocketLaunch"
  },
  "api/NitroxClient.Communication.Packets.Processors.RocketLaunchProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.RocketLaunchProcessor.html",
    "title": "Class RocketLaunchProcessor | Nitrox",
    "keywords": "Class RocketLaunchProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class RocketLaunchProcessor : ClientPacketProcessor<RocketLaunch> Inheritance object PacketProcessor ClientPacketProcessor<RocketLaunch> RocketLaunchProcessor Inherited Members ClientPacketProcessor<RocketLaunch>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RocketLaunchProcessor(Rockets) Methods Process(RocketLaunch)"
  },
  "api/NitroxClient.Communication.Packets.Processors.ScheduleProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.ScheduleProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(Schedule) public override void Process(Schedule schedulePacket) Parameters schedulePacket Schedule"
  },
  "api/NitroxClient.Communication.Packets.Processors.ScheduleProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.ScheduleProcessor.html",
    "title": "Class ScheduleProcessor | Nitrox",
    "keywords": "Class ScheduleProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class ScheduleProcessor : ClientPacketProcessor<Schedule> Inheritance object PacketProcessor ClientPacketProcessor<Schedule> ScheduleProcessor Inherited Members ClientPacketProcessor<Schedule>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(Schedule)"
  },
  "api/NitroxClient.Communication.Packets.Processors.SeamothModuleActionProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SeamothModuleActionProcessor.-ctor.html",
    "title": "Constructor SeamothModuleActionProcessor | Nitrox",
    "keywords": "Constructor SeamothModuleActionProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll SeamothModuleActionProcessor(IPacketSender) public SeamothModuleActionProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.SeamothModuleActionProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SeamothModuleActionProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(SeamothModulesAction) public override void Process(SeamothModulesAction packet) Parameters packet SeamothModulesAction"
  },
  "api/NitroxClient.Communication.Packets.Processors.SeamothModuleActionProcessor.TorpedoShot.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SeamothModuleActionProcessor.TorpedoShot.html",
    "title": "Method TorpedoShot | Nitrox",
    "keywords": "Method TorpedoShot Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll TorpedoShot(ItemsContainer, TorpedoType, Transform, Vector3, Quaternion) public static bool TorpedoShot(ItemsContainer container, TorpedoType torpedoType, Transform muzzle, Vector3 forward, Quaternion rotation) Parameters container ItemsContainer torpedoType TorpedoType muzzle Transform forward Vector3 rotation Quaternion Returns bool"
  },
  "api/NitroxClient.Communication.Packets.Processors.SeamothModuleActionProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SeamothModuleActionProcessor.html",
    "title": "Class SeamothModuleActionProcessor | Nitrox",
    "keywords": "Class SeamothModuleActionProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class SeamothModuleActionProcessor : ClientPacketProcessor<SeamothModulesAction> Inheritance object PacketProcessor ClientPacketProcessor<SeamothModulesAction> SeamothModuleActionProcessor Inherited Members ClientPacketProcessor<SeamothModulesAction>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SeamothModuleActionProcessor(IPacketSender) Methods Process(SeamothModulesAction) TorpedoShot(ItemsContainer, TorpedoType, Transform, Vector3, Quaternion)"
  },
  "api/NitroxClient.Communication.Packets.Processors.ServerStoppedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.ServerStoppedProcessor.-ctor.html",
    "title": "Constructor ServerStoppedProcessor | Nitrox",
    "keywords": "Constructor ServerStoppedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll ServerStoppedProcessor(IClient) public ServerStoppedProcessor(IClient client) Parameters client IClient"
  },
  "api/NitroxClient.Communication.Packets.Processors.ServerStoppedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.ServerStoppedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(ServerStopped) public override void Process(ServerStopped packet) Parameters packet ServerStopped"
  },
  "api/NitroxClient.Communication.Packets.Processors.ServerStoppedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.ServerStoppedProcessor.html",
    "title": "Class ServerStoppedProcessor | Nitrox",
    "keywords": "Class ServerStoppedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class ServerStoppedProcessor : ClientPacketProcessor<ServerStopped> Inheritance object PacketProcessor ClientPacketProcessor<ServerStopped> ServerStoppedProcessor Inherited Members ClientPacketProcessor<ServerStopped>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerStoppedProcessor(IClient) Methods Process(ServerStopped)"
  },
  "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipChangeProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipChangeProcessor.-ctor.html",
    "title": "Constructor SimulationOwnershipChangeProcessor | Nitrox",
    "keywords": "Constructor SimulationOwnershipChangeProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll SimulationOwnershipChangeProcessor(IMultiplayerSession, SimulationOwnership) public SimulationOwnershipChangeProcessor(IMultiplayerSession multiplayerSession, SimulationOwnership simulationOwnershipManager) Parameters multiplayerSession IMultiplayerSession simulationOwnershipManager SimulationOwnership"
  },
  "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipChangeProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipChangeProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(SimulationOwnershipChange) public override void Process(SimulationOwnershipChange simulationOwnershipChange) Parameters simulationOwnershipChange SimulationOwnershipChange"
  },
  "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipChangeProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipChangeProcessor.html",
    "title": "Class SimulationOwnershipChangeProcessor | Nitrox",
    "keywords": "Class SimulationOwnershipChangeProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class SimulationOwnershipChangeProcessor : ClientPacketProcessor<SimulationOwnershipChange> Inheritance object PacketProcessor ClientPacketProcessor<SimulationOwnershipChange> SimulationOwnershipChangeProcessor Inherited Members ClientPacketProcessor<SimulationOwnershipChange>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SimulationOwnershipChangeProcessor(IMultiplayerSession, SimulationOwnership) Methods Process(SimulationOwnershipChange)"
  },
  "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipResponseProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipResponseProcessor.-ctor.html",
    "title": "Constructor SimulationOwnershipResponseProcessor | Nitrox",
    "keywords": "Constructor SimulationOwnershipResponseProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll SimulationOwnershipResponseProcessor(IMultiplayerSession, SimulationOwnership) public SimulationOwnershipResponseProcessor(IMultiplayerSession multiplayerSession, SimulationOwnership simulationOwnershipManager) Parameters multiplayerSession IMultiplayerSession simulationOwnershipManager SimulationOwnership"
  },
  "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipResponseProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipResponseProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(SimulationOwnershipResponse) public override void Process(SimulationOwnershipResponse response) Parameters response SimulationOwnershipResponse"
  },
  "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipResponseProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SimulationOwnershipResponseProcessor.html",
    "title": "Class SimulationOwnershipResponseProcessor | Nitrox",
    "keywords": "Class SimulationOwnershipResponseProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class SimulationOwnershipResponseProcessor : ClientPacketProcessor<SimulationOwnershipResponse> Inheritance object PacketProcessor ClientPacketProcessor<SimulationOwnershipResponse> SimulationOwnershipResponseProcessor Inherited Members ClientPacketProcessor<SimulationOwnershipResponse>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SimulationOwnershipResponseProcessor(IMultiplayerSession, SimulationOwnership) Methods Process(SimulationOwnershipResponse)"
  },
  "api/NitroxClient.Communication.Packets.Processors.SpawnEntitiesProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SpawnEntitiesProcessor.-ctor.html",
    "title": "Constructor SpawnEntitiesProcessor | Nitrox",
    "keywords": "Constructor SpawnEntitiesProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll SpawnEntitiesProcessor(Entities) public SpawnEntitiesProcessor(Entities entities) Parameters entities Entities"
  },
  "api/NitroxClient.Communication.Packets.Processors.SpawnEntitiesProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SpawnEntitiesProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(SpawnEntities) public override void Process(SpawnEntities packet) Parameters packet SpawnEntities"
  },
  "api/NitroxClient.Communication.Packets.Processors.SpawnEntitiesProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SpawnEntitiesProcessor.html",
    "title": "Class SpawnEntitiesProcessor | Nitrox",
    "keywords": "Class SpawnEntitiesProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class SpawnEntitiesProcessor : ClientPacketProcessor<SpawnEntities> Inheritance object PacketProcessor ClientPacketProcessor<SpawnEntities> SpawnEntitiesProcessor Inherited Members ClientPacketProcessor<SpawnEntities>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SpawnEntitiesProcessor(Entities) Methods Process(SpawnEntities)"
  },
  "api/NitroxClient.Communication.Packets.Processors.StoryGoalExecutedClientProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.StoryGoalExecutedClientProcessor.-ctor.html",
    "title": "Constructor StoryGoalExecutedClientProcessor | Nitrox",
    "keywords": "Constructor StoryGoalExecutedClientProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll StoryGoalExecutedClientProcessor(IPacketSender) public StoryGoalExecutedClientProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Communication.Packets.Processors.StoryGoalExecutedClientProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.StoryGoalExecutedClientProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(StoryGoalExecuted) public override void Process(StoryGoalExecuted packet) Parameters packet StoryGoalExecuted"
  },
  "api/NitroxClient.Communication.Packets.Processors.StoryGoalExecutedClientProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.StoryGoalExecutedClientProcessor.html",
    "title": "Class StoryGoalExecutedClientProcessor | Nitrox",
    "keywords": "Class StoryGoalExecutedClientProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class StoryGoalExecutedClientProcessor : ClientPacketProcessor<StoryGoalExecuted> Inheritance object PacketProcessor ClientPacketProcessor<StoryGoalExecuted> StoryGoalExecutedClientProcessor Inherited Members ClientPacketProcessor<StoryGoalExecuted>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StoryGoalExecutedClientProcessor(IPacketSender) Methods Process(StoryGoalExecuted)"
  },
  "api/NitroxClient.Communication.Packets.Processors.SubRootChangedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SubRootChangedProcessor.-ctor.html",
    "title": "Constructor SubRootChangedProcessor | Nitrox",
    "keywords": "Constructor SubRootChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll SubRootChangedProcessor(PlayerManager) public SubRootChangedProcessor(PlayerManager remotePlayerManager) Parameters remotePlayerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.SubRootChangedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SubRootChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(SubRootChanged) public override void Process(SubRootChanged packet) Parameters packet SubRootChanged"
  },
  "api/NitroxClient.Communication.Packets.Processors.SubRootChangedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.SubRootChangedProcessor.html",
    "title": "Class SubRootChangedProcessor | Nitrox",
    "keywords": "Class SubRootChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class SubRootChangedProcessor : ClientPacketProcessor<SubRootChanged> Inheritance object PacketProcessor ClientPacketProcessor<SubRootChanged> SubRootChangedProcessor Inherited Members ClientPacketProcessor<SubRootChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SubRootChangedProcessor(PlayerManager) Methods Process(SubRootChanged)"
  },
  "api/NitroxClient.Communication.Packets.Processors.TimeChangeProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.TimeChangeProcessor.-ctor.html",
    "title": "Constructor TimeChangeProcessor | Nitrox",
    "keywords": "Constructor TimeChangeProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll TimeChangeProcessor(TimeManager) public TimeChangeProcessor(TimeManager timeManager) Parameters timeManager TimeManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.TimeChangeProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.TimeChangeProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(TimeChange) public override void Process(TimeChange timeChangePacket) Parameters timeChangePacket TimeChange"
  },
  "api/NitroxClient.Communication.Packets.Processors.TimeChangeProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.TimeChangeProcessor.html",
    "title": "Class TimeChangeProcessor | Nitrox",
    "keywords": "Class TimeChangeProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class TimeChangeProcessor : ClientPacketProcessor<TimeChange> Inheritance object PacketProcessor ClientPacketProcessor<TimeChange> TimeChangeProcessor Inherited Members ClientPacketProcessor<TimeChange>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeChangeProcessor(TimeManager) Methods Process(TimeChange)"
  },
  "api/NitroxClient.Communication.Packets.Processors.UpdateBaseProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.UpdateBaseProcessor.html",
    "title": "Class UpdateBaseProcessor | Nitrox",
    "keywords": "Class UpdateBaseProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class UpdateBaseProcessor : BuildProcessor<UpdateBase> Inheritance object PacketProcessor ClientPacketProcessor<UpdateBase> BuildProcessor<UpdateBase> UpdateBaseProcessor Inherited Members BuildProcessor<UpdateBase>.Process(UpdateBase) ClientPacketProcessor<UpdateBase>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxClient.Communication.Packets.Processors.UserKickedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.UserKickedProcessor.-ctor.html",
    "title": "Constructor UserKickedProcessor | Nitrox",
    "keywords": "Constructor UserKickedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll UserKickedProcessor(IMultiplayerSession) public UserKickedProcessor(IMultiplayerSession session) Parameters session IMultiplayerSession"
  },
  "api/NitroxClient.Communication.Packets.Processors.UserKickedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.UserKickedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(PlayerKicked) public override void Process(PlayerKicked packet) Parameters packet PlayerKicked"
  },
  "api/NitroxClient.Communication.Packets.Processors.UserKickedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.UserKickedProcessor.html",
    "title": "Class UserKickedProcessor | Nitrox",
    "keywords": "Class UserKickedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class UserKickedProcessor : ClientPacketProcessor<PlayerKicked> Inheritance object PacketProcessor ClientPacketProcessor<PlayerKicked> UserKickedProcessor Inherited Members ClientPacketProcessor<PlayerKicked>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UserKickedProcessor(IMultiplayerSession) Methods Process(PlayerKicked)"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleDockingProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleDockingProcessor.-ctor.html",
    "title": "Constructor VehicleDockingProcessor | Nitrox",
    "keywords": "Constructor VehicleDockingProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll VehicleDockingProcessor(IPacketSender, Vehicles) public VehicleDockingProcessor(IPacketSender packetSender, Vehicles vehicles) Parameters packetSender IPacketSender vehicles Vehicles"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleDockingProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleDockingProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(VehicleDocking) public override void Process(VehicleDocking packet) Parameters packet VehicleDocking"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleDockingProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleDockingProcessor.html",
    "title": "Class VehicleDockingProcessor | Nitrox",
    "keywords": "Class VehicleDockingProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class VehicleDockingProcessor : ClientPacketProcessor<VehicleDocking> Inheritance object PacketProcessor ClientPacketProcessor<VehicleDocking> VehicleDockingProcessor Inherited Members ClientPacketProcessor<VehicleDocking>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleDockingProcessor(IPacketSender, Vehicles) Methods Process(VehicleDocking)"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleMovementProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleMovementProcessor.-ctor.html",
    "title": "Constructor VehicleMovementProcessor | Nitrox",
    "keywords": "Constructor VehicleMovementProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll VehicleMovementProcessor(PlayerManager, Vehicles) public VehicleMovementProcessor(PlayerManager remotePlayerManager, Vehicles vehicles) Parameters remotePlayerManager PlayerManager vehicles Vehicles"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleMovementProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleMovementProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(VehicleMovement) public override void Process(VehicleMovement vehicleMovement) Parameters vehicleMovement VehicleMovement"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleMovementProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleMovementProcessor.html",
    "title": "Class VehicleMovementProcessor | Nitrox",
    "keywords": "Class VehicleMovementProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class VehicleMovementProcessor : ClientPacketProcessor<VehicleMovement> Inheritance object PacketProcessor ClientPacketProcessor<VehicleMovement> VehicleMovementProcessor Inherited Members ClientPacketProcessor<VehicleMovement>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleMovementProcessor(PlayerManager, Vehicles) Methods Process(VehicleMovement)"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleOnPilotModeChangedProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleOnPilotModeChangedProcessor.-ctor.html",
    "title": "Constructor VehicleOnPilotModeChangedProcessor | Nitrox",
    "keywords": "Constructor VehicleOnPilotModeChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll VehicleOnPilotModeChangedProcessor(IPacketSender, Vehicles) public VehicleOnPilotModeChangedProcessor(IPacketSender packetSender, Vehicles vehicles) Parameters packetSender IPacketSender vehicles Vehicles"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleOnPilotModeChangedProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleOnPilotModeChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(VehicleOnPilotModeChanged) public override void Process(VehicleOnPilotModeChanged packet) Parameters packet VehicleOnPilotModeChanged"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleOnPilotModeChangedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleOnPilotModeChangedProcessor.html",
    "title": "Class VehicleOnPilotModeChangedProcessor | Nitrox",
    "keywords": "Class VehicleOnPilotModeChangedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class VehicleOnPilotModeChangedProcessor : ClientPacketProcessor<VehicleOnPilotModeChanged> Inheritance object PacketProcessor ClientPacketProcessor<VehicleOnPilotModeChanged> VehicleOnPilotModeChangedProcessor Inherited Members ClientPacketProcessor<VehicleOnPilotModeChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleOnPilotModeChangedProcessor(IPacketSender, Vehicles) Methods Process(VehicleOnPilotModeChanged)"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleUndockingProcessor.-ctor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleUndockingProcessor.-ctor.html",
    "title": "Constructor VehicleUndockingProcessor | Nitrox",
    "keywords": "Constructor VehicleUndockingProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll VehicleUndockingProcessor(IPacketSender, Vehicles, PlayerManager) public VehicleUndockingProcessor(IPacketSender packetSender, Vehicles vehicles, PlayerManager playerManager) Parameters packetSender IPacketSender vehicles Vehicles playerManager PlayerManager"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleUndockingProcessor.Process.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleUndockingProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll Process(VehicleUndocking) public override void Process(VehicleUndocking packet) Parameters packet VehicleUndocking"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleUndockingProcessor.StartUndockingAnimation.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleUndockingProcessor.StartUndockingAnimation.html",
    "title": "Method StartUndockingAnimation | Nitrox",
    "keywords": "Method StartUndockingAnimation Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll StartUndockingAnimation(VehicleDockingBay) public IEnumerator StartUndockingAnimation(VehicleDockingBay vehicleDockingBay) Parameters vehicleDockingBay VehicleDockingBay Returns IEnumerator"
  },
  "api/NitroxClient.Communication.Packets.Processors.VehicleUndockingProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.VehicleUndockingProcessor.html",
    "title": "Class VehicleUndockingProcessor | Nitrox",
    "keywords": "Class VehicleUndockingProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class VehicleUndockingProcessor : ClientPacketProcessor<VehicleUndocking> Inheritance object PacketProcessor ClientPacketProcessor<VehicleUndocking> VehicleUndockingProcessor Inherited Members ClientPacketProcessor<VehicleUndocking>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleUndockingProcessor(IPacketSender, Vehicles, PlayerManager) Methods Process(VehicleUndocking) StartUndockingAnimation(VehicleDockingBay)"
  },
  "api/NitroxClient.Communication.Packets.Processors.WaterParkDeconstructedProcessor.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.WaterParkDeconstructedProcessor.html",
    "title": "Class WaterParkDeconstructedProcessor | Nitrox",
    "keywords": "Class WaterParkDeconstructedProcessor Namespace NitroxClient.Communication.Packets.Processors Assembly NitroxClient.dll public class WaterParkDeconstructedProcessor : BuildProcessor<WaterParkDeconstructed> Inheritance object PacketProcessor ClientPacketProcessor<WaterParkDeconstructed> BuildProcessor<WaterParkDeconstructed> WaterParkDeconstructedProcessor Inherited Members BuildProcessor<WaterParkDeconstructed>.Process(WaterParkDeconstructed) ClientPacketProcessor<WaterParkDeconstructed>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxClient.Communication.Packets.Processors.html": {
    "href": "api/NitroxClient.Communication.Packets.Processors.html",
    "title": "Namespace NitroxClient.Communication.Packets.Processors | Nitrox",
    "keywords": "Namespace NitroxClient.Communication.Packets.Processors Namespaces NitroxClient.Communication.Packets.Processors.Abstract Classes AnimationProcessor AuroraAndTimeUpdateProcessor BaseDeconstructedProcessor BuildProcessor<T> BuildingDesyncWarningProcessor BuildingResyncProcessor CreatureActionChangedProcessor CyclopsDamagePointHealthChangedProcessor CyclopsDamageProcessor Add/remove CyclopsDamagePoints and Fires to match the CyclopsDamage packet received CyclopsFireCreatedProcessor CyclopsFireSuppressionProcessor DeconstructionBeginProcessor DiscordRequestIPProcessor EntityDestroyedProcessor EntityMetadataUpdateProcessor EntityReparentedProcessor EntityTransformUpdatesProcessor EscapePodChangedProcessor ExosuitArmActionProcessor FireDousedProcessor GameModeChangedProcessor InitialPlayerSyncProcessor KnownTechEntryProcessorAdd MedicalCabinetClickedProcessor ModifyConstructedAmountProcessor MultiplayerSessionPolicyProcessor MultiplayerSessionReservationProcessor MutePlayerProcessor OpenableStateChangedProcessor PDAEncyclopediaEntryAddProcessor PDALogEntryAddProcessor PDAScanFinishedProcessor PermsChangedProcessor PieceDeconstructedProcessor PingRenamedProcessor Only syncs pings from beacons for now. PlaceBaseProcessor PlaceGhostProcessor PlaceModuleProcessor PlayFMODAssetProcessor PlayFMODCustomEmitterProcessor PlayFMODCustomLoopingEmitterProcessor PlayFMODStudioEventEmitterProcessor PlaySunbeamEventProcessor PlayerCinematicControllerCallProcessor PlayerDeathProcessor PlayerHeldItemChangedProcessor PlayerJoinedMultiplayerSessionProcessor PlayerMovementProcessor PlayerStatsProcessor PlayerTeleportedProcessor RadioPlayPendingMessageProcessor RocketLaunchProcessor ScheduleProcessor SeamothModuleActionProcessor ServerStoppedProcessor SimulationOwnershipChangeProcessor SimulationOwnershipResponseProcessor SpawnEntitiesProcessor StoryGoalExecutedClientProcessor SubRootChangedProcessor TimeChangeProcessor UpdateBaseProcessor UserKickedProcessor VehicleDockingProcessor VehicleMovementProcessor VehicleOnPilotModeChangedProcessor VehicleUndockingProcessor WaterParkDeconstructedProcessor Delegates MutePlayerProcessor.PlayerMuted PermsChangedProcessor.PermissionsChanged"
  },
  "api/NitroxClient.Communication.html": {
    "href": "api/NitroxClient.Communication.html",
    "title": "Namespace NitroxClient.Communication | Nitrox",
    "keywords": "Namespace NitroxClient.Communication Namespaces NitroxClient.Communication.Abstract NitroxClient.Communication.Exceptions NitroxClient.Communication.MultiplayerSession NitroxClient.Communication.NetworkingLayer.LiteNetLib NitroxClient.Communication.Packets.Processors Classes DeferredPacketReceiverTest LANBroadcastClient PacketReceiver Structs PacketSuppressor<T> Suppresses the given packet type from being sent. Disables the suppression when disposed."
  },
  "api/NitroxClient.Debuggers.BaseDebugger.-ctor.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.-ctor.html",
    "title": "Constructor BaseDebugger | Nitrox",
    "keywords": "Constructor BaseDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll BaseDebugger(float, string, KeyCode, bool, bool, bool, GUISkinCreationOptions, float) protected BaseDebugger(float desiredWidth, string debuggerName = null, KeyCode hotkey = KeyCode.None, bool control = false, bool shift = false, bool alt = false, BaseDebugger.GUISkinCreationOptions skinOptions = GUISkinCreationOptions.DEFAULT, float maxHeight = 1000) Parameters desiredWidth float debuggerName string hotkey KeyCode control bool shift bool alt bool skinOptions BaseDebugger.GUISkinCreationOptions maxHeight float"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.ActiveTab.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.ActiveTab.html",
    "title": "Field ActiveTab | Nitrox",
    "keywords": "Field ActiveTab Namespace NitroxClient.Debuggers Assembly NitroxClient.dll Currently active tab. This is the index used with tabs. public BaseDebugger.DebuggerTab ActiveTab Returns BaseDebugger.DebuggerTab"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.AddTab.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.AddTab.html",
    "title": "Method AddTab | Nitrox",
    "keywords": "Method AddTab Namespace NitroxClient.Debuggers Assembly NitroxClient.dll AddTab(string, Action) protected BaseDebugger.DebuggerTab AddTab(string name, Action render) Parameters name string render Action Returns BaseDebugger.DebuggerTab"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.CanDragWindow.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.CanDragWindow.html",
    "title": "Field CanDragWindow | Nitrox",
    "keywords": "Field CanDragWindow Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public bool CanDragWindow Returns bool"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.DebuggerName.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.DebuggerName.html",
    "title": "Field DebuggerName | Nitrox",
    "keywords": "Field DebuggerName Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public readonly string DebuggerName Returns string"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.DebuggerTab.-ctor.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.DebuggerTab.-ctor.html",
    "title": "Constructor DebuggerTab | Nitrox",
    "keywords": "Constructor DebuggerTab Namespace NitroxClient.Debuggers Assembly NitroxClient.dll DebuggerTab(string, Action) public DebuggerTab(string name, Action render) Parameters name string render Action"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.DebuggerTab.Name.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.DebuggerTab.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxClient.Debuggers Assembly NitroxClient.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.DebuggerTab.Render.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.DebuggerTab.Render.html",
    "title": "Property Render | Nitrox",
    "keywords": "Property Render Namespace NitroxClient.Debuggers Assembly NitroxClient.dll Render public Action Render { get; } Property Value Action"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.DebuggerTab.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.DebuggerTab.html",
    "title": "Class BaseDebugger.DebuggerTab | Nitrox",
    "keywords": "Class BaseDebugger.DebuggerTab Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public class BaseDebugger.DebuggerTab Inheritance object BaseDebugger.DebuggerTab Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DebuggerTab(string, Action) Properties Name Render"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.Enabled.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.Enabled.html",
    "title": "Property Enabled | Nitrox",
    "keywords": "Property Enabled Namespace NitroxClient.Debuggers Assembly NitroxClient.dll Enabled public virtual bool Enabled { get; set; } Property Value bool"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.GUISkinCreationOptions.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.GUISkinCreationOptions.html",
    "title": "Enum BaseDebugger.GUISkinCreationOptions | Nitrox",
    "keywords": "Enum BaseDebugger.GUISkinCreationOptions Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public enum BaseDebugger.GUISkinCreationOptions Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields DEFAULT = 0 Uses the NitroxDebug skin. DERIVEDCOPY = 2 Creates a copy based on the NitroxDebug skin and sets the copied skin as render skin. UNITYCOPY = 1 Creates a copy of the default Unity IMGUI skin and sets the copied skin as render skin."
  },
  "api/NitroxClient.Debuggers.BaseDebugger.GetTab.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.GetTab.html",
    "title": "Method GetTab | Nitrox",
    "keywords": "Method GetTab Namespace NitroxClient.Debuggers Assembly NitroxClient.dll GetTab(string) protected Optional<BaseDebugger.DebuggerTab> GetTab(string name) Parameters name string Returns Optional<BaseDebugger.DebuggerTab>"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.Hotkey.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.Hotkey.html",
    "title": "Field Hotkey | Nitrox",
    "keywords": "Field Hotkey Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public readonly KeyCode Hotkey Returns KeyCode"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.HotkeyAltRequired.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.HotkeyAltRequired.html",
    "title": "Field HotkeyAltRequired | Nitrox",
    "keywords": "Field HotkeyAltRequired Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public readonly bool HotkeyAltRequired Returns bool"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.HotkeyControlRequired.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.HotkeyControlRequired.html",
    "title": "Field HotkeyControlRequired | Nitrox",
    "keywords": "Field HotkeyControlRequired Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public readonly bool HotkeyControlRequired Returns bool"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.HotkeyShiftRequired.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.HotkeyShiftRequired.html",
    "title": "Field HotkeyShiftRequired | Nitrox",
    "keywords": "Field HotkeyShiftRequired Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public readonly bool HotkeyShiftRequired Returns bool"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.HotkeyString.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.HotkeyString.html",
    "title": "Field HotkeyString | Nitrox",
    "keywords": "Field HotkeyString Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public readonly string HotkeyString Returns string"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.OnGUI.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.OnGUI.html",
    "title": "Method OnGUI | Nitrox",
    "keywords": "Method OnGUI Namespace NitroxClient.Debuggers Assembly NitroxClient.dll OnGUI() Call this inside a MonoBehaviour.OnGUI method. public virtual void OnGUI()"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.OnSetSkin.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.OnSetSkin.html",
    "title": "Method OnSetSkin | Nitrox",
    "keywords": "Method OnSetSkin Namespace NitroxClient.Debuggers Assembly NitroxClient.dll OnSetSkin(GUISkin) Optionally adjust the skin that is used during render. protected virtual void OnSetSkin(GUISkin skin) Parameters skin GUISkin Skin that is being used during Render(int). Remarks Set SkinCreationOptions on UNITYCOPY or DERIVEDCOPY in constructor before using this method."
  },
  "api/NitroxClient.Debuggers.BaseDebugger.Render.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.Render.html",
    "title": "Method Render | Nitrox",
    "keywords": "Method Render Namespace NitroxClient.Debuggers Assembly NitroxClient.dll Render() Optionally use a custom render solution for the debugger by overriding this method. protected virtual void Render()"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.ResetWindowPosition.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.ResetWindowPosition.html",
    "title": "Method ResetWindowPosition | Nitrox",
    "keywords": "Method ResetWindowPosition Namespace NitroxClient.Debuggers Assembly NitroxClient.dll ResetWindowPosition() public virtual void ResetWindowPosition()"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.SkinCreationOptions.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.SkinCreationOptions.html",
    "title": "Field SkinCreationOptions | Nitrox",
    "keywords": "Field SkinCreationOptions Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public readonly BaseDebugger.GUISkinCreationOptions SkinCreationOptions Returns BaseDebugger.GUISkinCreationOptions"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.Update.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxClient.Debuggers Assembly NitroxClient.dll Update() public virtual void Update()"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.WindowRect.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.WindowRect.html",
    "title": "Field WindowRect | Nitrox",
    "keywords": "Field WindowRect Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public Rect WindowRect Returns Rect"
  },
  "api/NitroxClient.Debuggers.BaseDebugger.html": {
    "href": "api/NitroxClient.Debuggers.BaseDebugger.html",
    "title": "Class BaseDebugger | Nitrox",
    "keywords": "Class BaseDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public abstract class BaseDebugger Inheritance object BaseDebugger Derived EntityDebugger NetworkDebugger SceneDebugger SceneExtraDebugger SoundDebugger Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BaseDebugger(float, string, KeyCode, bool, bool, bool, GUISkinCreationOptions, float) Fields ActiveTab Currently active tab. This is the index used with tabs. CanDragWindow DebuggerName Hotkey HotkeyAltRequired HotkeyControlRequired HotkeyShiftRequired HotkeyString SkinCreationOptions WindowRect Properties Enabled Methods AddTab(string, Action) GetTab(string) OnGUI() Call this inside a MonoBehaviour.OnGUI method. OnSetSkin(GUISkin) Optionally adjust the skin that is used during render. Render() Optionally use a custom render solution for the debugger by overriding this method. ResetWindowPosition() Update()"
  },
  "api/NitroxClient.Debuggers.Drawer.IDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.IDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll ApplicableTypes Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.IDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.IDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll Draw(object) void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.IDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.IDrawer.html",
    "title": "Interface IDrawer | Nitrox",
    "keywords": "Interface IDrawer Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll public interface IDrawer Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.IStructDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.IStructDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll ApplicableTypes Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.IStructDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.IStructDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll Draw(object) object Draw(object target) Parameters target object Returns object"
  },
  "api/NitroxClient.Debuggers.Drawer.IStructDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.IStructDrawer.html",
    "title": "Interface IStructDrawer | Nitrox",
    "keywords": "Interface IStructDrawer Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll public interface IStructDrawer Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.Nitrox.NitroxEntityDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Nitrox.NitroxEntityDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.Nitrox Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.Nitrox.NitroxEntityDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Nitrox.NitroxEntityDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.Nitrox Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.Nitrox.NitroxEntityDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Nitrox.NitroxEntityDrawer.html",
    "title": "Class NitroxEntityDrawer | Nitrox",
    "keywords": "Class NitroxEntityDrawer Namespace NitroxClient.Debuggers.Drawer.Nitrox Assembly NitroxClient.dll public class NitroxEntityDrawer : IDrawer Inheritance object NitroxEntityDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.Nitrox.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Nitrox.html",
    "title": "Namespace NitroxClient.Debuggers.Drawer.Nitrox | Nitrox",
    "keywords": "Namespace NitroxClient.Debuggers.Drawer.Nitrox Classes NitroxEntityDrawer"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.BackgroundColorScope.-ctor.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.BackgroundColorScope.-ctor.html",
    "title": "Constructor BackgroundColorScope | Nitrox",
    "keywords": "Constructor BackgroundColorScope Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll BackgroundColorScope(Color) public BackgroundColorScope(Color newColor) Parameters newColor Color"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.BackgroundColorScope.Dispose.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.BackgroundColorScope.Dispose.html",
    "title": "Method Dispose | Nitrox",
    "keywords": "Method Dispose Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.BackgroundColorScope.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.BackgroundColorScope.html",
    "title": "Struct NitroxGUILayout.BackgroundColorScope | Nitrox",
    "keywords": "Struct NitroxGUILayout.BackgroundColorScope Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll public struct NitroxGUILayout.BackgroundColorScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors BackgroundColorScope(Color) Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources."
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.BoolField.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.BoolField.html",
    "title": "Method BoolField | Nitrox",
    "keywords": "Method BoolField Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll BoolField(bool, float) public static bool BoolField(bool value, float valueWidth = 175) Parameters value bool valueWidth float Returns bool BoolField(bool, string, float) public static bool BoolField(bool value, string name, float valueWidth = 175) Parameters value bool name string valueWidth float Returns bool"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.ConvertibleField.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.ConvertibleField.html",
    "title": "Method ConvertibleField | Nitrox",
    "keywords": "Method ConvertibleField Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll ConvertibleField(IConvertible, float) public static IConvertible ConvertibleField(IConvertible value, float valueWidth = 175) Parameters value IConvertible valueWidth float Returns IConvertible"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.DEFAULT_LABEL_WIDTH.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.DEFAULT_LABEL_WIDTH.html",
    "title": "Field DEFAULT_LABEL_WIDTH | Nitrox",
    "keywords": "Field DEFAULT_LABEL_WIDTH Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll public const float DEFAULT_LABEL_WIDTH = 200 Returns float"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.DEFAULT_SPACE.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.DEFAULT_SPACE.html",
    "title": "Field DEFAULT_SPACE | Nitrox",
    "keywords": "Field DEFAULT_SPACE Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll public const float DEFAULT_SPACE = 10 Returns float"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.DrawerLabel.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.DrawerLabel.html",
    "title": "Field DrawerLabel | Nitrox",
    "keywords": "Field DrawerLabel Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll public static readonly GUIStyle DrawerLabel Returns GUIStyle"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.EnumPopup.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.EnumPopup.html",
    "title": "Method EnumPopup | Nitrox",
    "keywords": "Method EnumPopup Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll EnumPopup(Enum, float) Displays an enum of an unknown type. public static Enum EnumPopup(Enum selected, float buttonWidth = 175) Parameters selected Enum The selected enum value. buttonWidth float The button width Returns Enum The newly selected enum value. EnumPopup<T>(T, float) public static T EnumPopup<T>(T selected, float buttonWidth = 175) where T : Enum Parameters selected T buttonWidth float Returns T Type Parameters T"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.FloatField.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.FloatField.html",
    "title": "Method FloatField | Nitrox",
    "keywords": "Method FloatField Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll FloatField(float, float) public static float FloatField(float value, float valueWidth = 175) Parameters value float valueWidth float Returns float"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.IntField.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.IntField.html",
    "title": "Method IntField | Nitrox",
    "keywords": "Method IntField Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll IntField(int, float) public static int IntField(int value, float valueWidth = 175) Parameters value int valueWidth float Returns int"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.Separator.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.Separator.html",
    "title": "Method Separator | Nitrox",
    "keywords": "Method Separator Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll Separator() public static void Separator()"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.SliderField.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.SliderField.html",
    "title": "Method SliderField | Nitrox",
    "keywords": "Method SliderField Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll SliderField(int, int, int, float) public static int SliderField(int value, int minValue, int maxValue, float valueWidth = 175) Parameters value int minValue int maxValue int valueWidth float Returns int SliderField(float, float, float, float) public static float SliderField(float value, float minValue, float maxValue, float valueWidth = 175) Parameters value float minValue float maxValue float valueWidth float Returns float"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.VALUE_WIDTH.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.VALUE_WIDTH.html",
    "title": "Field VALUE_WIDTH | Nitrox",
    "keywords": "Field VALUE_WIDTH Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll public const float VALUE_WIDTH = 175 Returns float"
  },
  "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.NitroxGUILayout.html",
    "title": "Class NitroxGUILayout | Nitrox",
    "keywords": "Class NitroxGUILayout Namespace NitroxClient.Debuggers.Drawer Assembly NitroxClient.dll public static class NitroxGUILayout Inheritance object NitroxGUILayout Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields DEFAULT_LABEL_WIDTH DEFAULT_SPACE DrawerLabel VALUE_WIDTH Methods BoolField(bool, float) BoolField(bool, string, float) ConvertibleField(IConvertible, float) EnumPopup(Enum, float) Displays an enum of an unknown type. EnumPopup<T>(T, float) FloatField(float, float) IntField(int, float) Separator() SliderField(int, int, int, float) SliderField(float, float, float, float)"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.ColorDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.ColorDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.ColorDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.ColorDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll Draw(object) public object Draw(object target) Parameters target object Returns object Draw(Color) public static Color Draw(Color color) Parameters color Color Returns Color"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.ColorDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.ColorDrawer.html",
    "title": "Class ColorDrawer | Nitrox",
    "keywords": "Class ColorDrawer Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll public class ColorDrawer : IStructDrawer Inheritance object ColorDrawer Implements IStructDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object) Draw(Color)"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.MaterialDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.MaterialDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.MaterialDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.MaterialDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object Draw(Material) public static Material Draw(Material material) Parameters material Material Returns Material"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.MaterialDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.MaterialDrawer.html",
    "title": "Class MaterialDrawer | Nitrox",
    "keywords": "Class MaterialDrawer Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll public class MaterialDrawer : IDrawer Inheritance object MaterialDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object) Draw(Material)"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.RectDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.RectDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.RectDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.RectDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll Draw(object) public object Draw(object target) Parameters target object Returns object"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.RectDrawer.DrawRect.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.RectDrawer.DrawRect.html",
    "title": "Method DrawRect | Nitrox",
    "keywords": "Method DrawRect Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll DrawRect(Rect, float, float) public static Rect DrawRect(Rect rect, float valueWidth = 100, float maxWidth = 215) Parameters rect Rect valueWidth float maxWidth float Returns Rect"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.RectDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.RectDrawer.html",
    "title": "Class RectDrawer | Nitrox",
    "keywords": "Class RectDrawer Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll public class RectDrawer : IStructDrawer Inheritance object RectDrawer Implements IStructDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object) DrawRect(Rect, float, float)"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.RigidbodyDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.RigidbodyDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.RigidbodyDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.RigidbodyDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.RigidbodyDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.RigidbodyDrawer.html",
    "title": "Class RigidbodyDrawer | Nitrox",
    "keywords": "Class RigidbodyDrawer Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll Draws a Rigidbody component on the gameobjects in the SceneDebugger public class RigidbodyDrawer : IDrawer Inheritance object RigidbodyDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.TransformDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.TransformDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.TransformDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.TransformDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.TransformDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.TransformDrawer.html",
    "title": "Class TransformDrawer | Nitrox",
    "keywords": "Class TransformDrawer Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll public class TransformDrawer : IDrawer Inheritance object TransformDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.DrawUnityEvent.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.DrawUnityEvent.html",
    "title": "Method DrawUnityEvent | Nitrox",
    "keywords": "Method DrawUnityEvent Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll DrawUnityEvent(UnityEvent, string) public static void DrawUnityEvent(UnityEvent unityEvent, string name = \"NoName\") Parameters unityEvent UnityEvent name string"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.DrawUnityEventBase.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.DrawUnityEventBase.html",
    "title": "Method DrawUnityEventBase | Nitrox",
    "keywords": "Method DrawUnityEventBase Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll DrawUnityEventBase(UnityEventBase) public static void DrawUnityEventBase(UnityEventBase unityEventBase) Parameters unityEventBase UnityEventBase"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.DrawUnityEventBool.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.DrawUnityEventBool.html",
    "title": "Method DrawUnityEventBool | Nitrox",
    "keywords": "Method DrawUnityEventBool Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll DrawUnityEventBool(UnityEvent<bool>, string) public static void DrawUnityEventBool(UnityEvent<bool> unityEvent, string name = \"NoName\") Parameters unityEvent UnityEvent<bool> name string"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.UnityEventDrawer.html",
    "title": "Class UnityEventDrawer | Nitrox",
    "keywords": "Class UnityEventDrawer Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll public class UnityEventDrawer : IDrawer Inheritance object UnityEventDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object) DrawUnityEvent(UnityEvent, string) DrawUnityEventBase(UnityEventBase) DrawUnityEventBool(UnityEvent<bool>, string)"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll Draw(object) public object Draw(object target) Parameters target object Returns object"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawInt3.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawInt3.html",
    "title": "Method DrawInt3 | Nitrox",
    "keywords": "Method DrawInt3 Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll DrawInt3(Int3, float) public static Int3 DrawInt3(Int3 int3, float maxWidth = 400) Parameters int3 Int3 maxWidth float Returns Int3"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawInt4.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawInt4.html",
    "title": "Method DrawInt4 | Nitrox",
    "keywords": "Method DrawInt4 Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll DrawInt4(int, int, int, int, float) public static Tuple<int, int, int, int> DrawInt4(int item1, int item2, int item3, int item4, float maxWidth = 400) Parameters item1 int item2 int item3 int item4 int maxWidth float Returns Tuple<int, int, int, int>"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawQuaternion.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawQuaternion.html",
    "title": "Method DrawQuaternion | Nitrox",
    "keywords": "Method DrawQuaternion Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll DrawQuaternion(Quaternion, float) public static Quaternion DrawQuaternion(Quaternion quaternion, float maxWidth = 400) Parameters quaternion Quaternion maxWidth float Returns Quaternion"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawVector2.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawVector2.html",
    "title": "Method DrawVector2 | Nitrox",
    "keywords": "Method DrawVector2 Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll DrawVector2(Vector2, float) public static Vector2 DrawVector2(Vector2 vector2, float maxWidth = 400) Parameters vector2 Vector2 maxWidth float Returns Vector2"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawVector3.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawVector3.html",
    "title": "Method DrawVector3 | Nitrox",
    "keywords": "Method DrawVector3 Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll DrawVector3(Vector3, float) public static Vector3 DrawVector3(Vector3 vector3, float maxWidth = 400) Parameters vector3 Vector3 maxWidth float Returns Vector3"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawVector4.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.DrawVector4.html",
    "title": "Method DrawVector4 | Nitrox",
    "keywords": "Method DrawVector4 Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll DrawVector4(Vector4, float) public static Vector4 DrawVector4(Vector4 vector4, float maxWidth = 400) Parameters vector4 Vector4 maxWidth float Returns Vector4"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.VectorDrawer.html",
    "title": "Class VectorDrawer | Nitrox",
    "keywords": "Class VectorDrawer Namespace NitroxClient.Debuggers.Drawer.Unity Assembly NitroxClient.dll public class VectorDrawer : IStructDrawer Inheritance object VectorDrawer Implements IStructDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object) DrawInt3(Int3, float) DrawInt4(int, int, int, int, float) DrawQuaternion(Quaternion, float) DrawVector2(Vector2, float) DrawVector3(Vector3, float) DrawVector4(Vector4, float)"
  },
  "api/NitroxClient.Debuggers.Drawer.Unity.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.Unity.html",
    "title": "Namespace NitroxClient.Debuggers.Drawer.Unity | Nitrox",
    "keywords": "Namespace NitroxClient.Debuggers.Drawer.Unity Classes ColorDrawer MaterialDrawer RectDrawer RigidbodyDrawer Draws a Rigidbody component on the gameobjects in the SceneDebugger TransformDrawer UnityEventDrawer VectorDrawer"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.AspectRatioFitterDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.AspectRatioFitterDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.AspectRatioFitterDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.AspectRatioFitterDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.AspectRatioFitterDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.AspectRatioFitterDrawer.html",
    "title": "Class AspectRatioFitterDrawer | Nitrox",
    "keywords": "Class AspectRatioFitterDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class AspectRatioFitterDrawer : IDrawer Inheritance object AspectRatioFitterDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ButtonDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ButtonDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ButtonDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ButtonDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ButtonDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ButtonDrawer.html",
    "title": "Class ButtonDrawer | Nitrox",
    "keywords": "Class ButtonDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class ButtonDrawer : IDrawer Inheritance object ButtonDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasDrawer.html",
    "title": "Class CanvasDrawer | Nitrox",
    "keywords": "Class CanvasDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class CanvasDrawer : IDrawer Inheritance object CanvasDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasGroupDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasGroupDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasGroupDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasGroupDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasGroupDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasGroupDrawer.html",
    "title": "Class CanvasGroupDrawer | Nitrox",
    "keywords": "Class CanvasGroupDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class CanvasGroupDrawer : IDrawer Inheritance object CanvasGroupDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasRendererDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasRendererDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasRendererDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasRendererDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasRendererDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasRendererDrawer.html",
    "title": "Class CanvasRendererDrawer | Nitrox",
    "keywords": "Class CanvasRendererDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class CanvasRendererDrawer : IDrawer Inheritance object CanvasRendererDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasScalerDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasScalerDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasScalerDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasScalerDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasScalerDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.CanvasScalerDrawer.html",
    "title": "Class CanvasScalerDrawer | Nitrox",
    "keywords": "Class CanvasScalerDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class CanvasScalerDrawer : IDrawer Inheritance object CanvasScalerDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ContentSizeFitterDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ContentSizeFitterDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ContentSizeFitterDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ContentSizeFitterDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ContentSizeFitterDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ContentSizeFitterDrawer.html",
    "title": "Class ContentSizeFitterDrawer | Nitrox",
    "keywords": "Class ContentSizeFitterDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class ContentSizeFitterDrawer : IDrawer Inheritance object ContentSizeFitterDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.DropdownDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.DropdownDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.DropdownDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.DropdownDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.DropdownDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.DropdownDrawer.html",
    "title": "Class DropdownDrawer | Nitrox",
    "keywords": "Class DropdownDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class DropdownDrawer : IDrawer Inheritance object DropdownDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.GraphicRaycasterDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.GraphicRaycasterDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.GraphicRaycasterDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.GraphicRaycasterDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.GraphicRaycasterDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.GraphicRaycasterDrawer.html",
    "title": "Class GraphicRaycasterDrawer | Nitrox",
    "keywords": "Class GraphicRaycasterDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class GraphicRaycasterDrawer : IDrawer Inheritance object GraphicRaycasterDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.GridLayoutGroupDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.GridLayoutGroupDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.GridLayoutGroupDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.GridLayoutGroupDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.GridLayoutGroupDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.GridLayoutGroupDrawer.html",
    "title": "Class GridLayoutGroupDrawer | Nitrox",
    "keywords": "Class GridLayoutGroupDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class GridLayoutGroupDrawer : IDrawer Inheritance object GridLayoutGroupDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.HorizontalOrVerticalLayoutGroupDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.HorizontalOrVerticalLayoutGroupDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.HorizontalOrVerticalLayoutGroupDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.HorizontalOrVerticalLayoutGroupDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.HorizontalOrVerticalLayoutGroupDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.HorizontalOrVerticalLayoutGroupDrawer.html",
    "title": "Class HorizontalOrVerticalLayoutGroupDrawer | Nitrox",
    "keywords": "Class HorizontalOrVerticalLayoutGroupDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class HorizontalOrVerticalLayoutGroupDrawer : IDrawer Inheritance object HorizontalOrVerticalLayoutGroupDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ImageDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ImageDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ImageDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ImageDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ImageDrawer.DrawTexture.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ImageDrawer.DrawTexture.html",
    "title": "Method DrawTexture | Nitrox",
    "keywords": "Method DrawTexture Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll DrawTexture(Texture) public static void DrawTexture(Texture texture) Parameters texture Texture"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ImageDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ImageDrawer.html",
    "title": "Class ImageDrawer | Nitrox",
    "keywords": "Class ImageDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class ImageDrawer : IDrawer Inheritance object ImageDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object) DrawTexture(Texture)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.InputFieldDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.InputFieldDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.InputFieldDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.InputFieldDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.InputFieldDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.InputFieldDrawer.html",
    "title": "Class InputFieldDrawer | Nitrox",
    "keywords": "Class InputFieldDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class InputFieldDrawer : IDrawer Inheritance object InputFieldDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.LayoutElementDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.LayoutElementDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.LayoutElementDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.LayoutElementDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.LayoutElementDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.LayoutElementDrawer.html",
    "title": "Class LayoutElementDrawer | Nitrox",
    "keywords": "Class LayoutElementDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class LayoutElementDrawer : IDrawer Inheritance object LayoutElementDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.MaskDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.MaskDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.MaskDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.MaskDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.MaskDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.MaskDrawer.html",
    "title": "Class MaskDrawer | Nitrox",
    "keywords": "Class MaskDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class MaskDrawer : IDrawer Inheritance object MaskDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.RectTransformDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.RectTransformDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.RectTransformDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.RectTransformDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.RectTransformDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.RectTransformDrawer.html",
    "title": "Class RectTransformDrawer | Nitrox",
    "keywords": "Class RectTransformDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class RectTransformDrawer : IDrawer Inheritance object RectTransformDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollRectDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollRectDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollRectDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollRectDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollRectDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollRectDrawer.html",
    "title": "Class ScrollRectDrawer | Nitrox",
    "keywords": "Class ScrollRectDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class ScrollRectDrawer : IDrawer Inheritance object ScrollRectDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollbarDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollbarDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollbarDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollbarDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollbarDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ScrollbarDrawer.html",
    "title": "Class ScrollbarDrawer | Nitrox",
    "keywords": "Class ScrollbarDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class ScrollbarDrawer : IDrawer Inheritance object ScrollbarDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.SelectableDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.SelectableDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.SelectableDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.SelectableDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.SelectableDrawer.DrawSelectable.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.SelectableDrawer.DrawSelectable.html",
    "title": "Method DrawSelectable | Nitrox",
    "keywords": "Method DrawSelectable Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll DrawSelectable(Selectable) public static void DrawSelectable(Selectable selectable) Parameters selectable Selectable"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.SelectableDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.SelectableDrawer.html",
    "title": "Class SelectableDrawer | Nitrox",
    "keywords": "Class SelectableDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class SelectableDrawer : IDrawer Inheritance object SelectableDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object) DrawSelectable(Selectable)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.SliderDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.SliderDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.SliderDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.SliderDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.SliderDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.SliderDrawer.html",
    "title": "Class SliderDrawer | Nitrox",
    "keywords": "Class SliderDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class SliderDrawer : IDrawer Inheritance object SliderDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.TextDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.TextDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.TextDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.TextDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.TextDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.TextDrawer.html",
    "title": "Class TextDrawer | Nitrox",
    "keywords": "Class TextDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class TextDrawer : IDrawer Inheritance object TextDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleDrawer.html",
    "title": "Class ToggleDrawer | Nitrox",
    "keywords": "Class ToggleDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class ToggleDrawer : IDrawer Inheritance object ToggleDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleGroupDrawer.ApplicableTypes.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleGroupDrawer.ApplicableTypes.html",
    "title": "Property ApplicableTypes | Nitrox",
    "keywords": "Property ApplicableTypes Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll ApplicableTypes public Type[] ApplicableTypes { get; } Property Value Type[]"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleGroupDrawer.Draw.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleGroupDrawer.Draw.html",
    "title": "Method Draw | Nitrox",
    "keywords": "Method Draw Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll Draw(object) public void Draw(object target) Parameters target object"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleGroupDrawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.ToggleGroupDrawer.html",
    "title": "Class ToggleGroupDrawer | Nitrox",
    "keywords": "Class ToggleGroupDrawer Namespace NitroxClient.Debuggers.Drawer.UnityUI Assembly NitroxClient.dll public class ToggleGroupDrawer : IDrawer Inheritance object ToggleGroupDrawer Implements IDrawer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableTypes Methods Draw(object)"
  },
  "api/NitroxClient.Debuggers.Drawer.UnityUI.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.UnityUI.html",
    "title": "Namespace NitroxClient.Debuggers.Drawer.UnityUI | Nitrox",
    "keywords": "Namespace NitroxClient.Debuggers.Drawer.UnityUI Classes AspectRatioFitterDrawer ButtonDrawer CanvasDrawer CanvasGroupDrawer CanvasRendererDrawer CanvasScalerDrawer ContentSizeFitterDrawer DropdownDrawer GraphicRaycasterDrawer GridLayoutGroupDrawer HorizontalOrVerticalLayoutGroupDrawer ImageDrawer InputFieldDrawer LayoutElementDrawer MaskDrawer RectTransformDrawer ScrollRectDrawer ScrollbarDrawer SelectableDrawer SliderDrawer TextDrawer ToggleDrawer ToggleGroupDrawer"
  },
  "api/NitroxClient.Debuggers.Drawer.html": {
    "href": "api/NitroxClient.Debuggers.Drawer.html",
    "title": "Namespace NitroxClient.Debuggers.Drawer | Nitrox",
    "keywords": "Namespace NitroxClient.Debuggers.Drawer Namespaces NitroxClient.Debuggers.Drawer.Nitrox NitroxClient.Debuggers.Drawer.Unity NitroxClient.Debuggers.Drawer.UnityUI Classes NitroxGUILayout Structs NitroxGUILayout.BackgroundColorScope Interfaces IDrawer IStructDrawer"
  },
  "api/NitroxClient.Debuggers.EntityDebugger.-ctor.html": {
    "href": "api/NitroxClient.Debuggers.EntityDebugger.-ctor.html",
    "title": "Constructor EntityDebugger | Nitrox",
    "keywords": "Constructor EntityDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll EntityDebugger() public EntityDebugger()"
  },
  "api/NitroxClient.Debuggers.EntityDebugger.OnGUI.html": {
    "href": "api/NitroxClient.Debuggers.EntityDebugger.OnGUI.html",
    "title": "Method OnGUI | Nitrox",
    "keywords": "Method OnGUI Namespace NitroxClient.Debuggers Assembly NitroxClient.dll OnGUI() Call this inside a MonoBehaviour.OnGUI method. public override void OnGUI()"
  },
  "api/NitroxClient.Debuggers.EntityDebugger.html": {
    "href": "api/NitroxClient.Debuggers.EntityDebugger.html",
    "title": "Class EntityDebugger | Nitrox",
    "keywords": "Class EntityDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public class EntityDebugger : BaseDebugger Inheritance object BaseDebugger EntityDebugger Inherited Members BaseDebugger.DebuggerName BaseDebugger.Hotkey BaseDebugger.HotkeyAltRequired BaseDebugger.HotkeyControlRequired BaseDebugger.HotkeyShiftRequired BaseDebugger.HotkeyString BaseDebugger.SkinCreationOptions BaseDebugger.ActiveTab BaseDebugger.CanDragWindow BaseDebugger.Enabled BaseDebugger.WindowRect BaseDebugger.AddTab(string, Action) BaseDebugger.GetTab(string) BaseDebugger.Update() BaseDebugger.OnSetSkin(GUISkin) BaseDebugger.Render() BaseDebugger.ResetWindowPosition() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityDebugger() Methods OnGUI() Call this inside a MonoBehaviour.OnGUI method."
  },
  "api/NitroxClient.Debuggers.INetworkDebugger.PacketReceived.html": {
    "href": "api/NitroxClient.Debuggers.INetworkDebugger.PacketReceived.html",
    "title": "Method PacketReceived | Nitrox",
    "keywords": "Method PacketReceived Namespace NitroxClient.Debuggers Assembly NitroxClient.dll PacketReceived(Packet, int) void PacketReceived(Packet packet, int size) Parameters packet Packet size int"
  },
  "api/NitroxClient.Debuggers.INetworkDebugger.PacketSent.html": {
    "href": "api/NitroxClient.Debuggers.INetworkDebugger.PacketSent.html",
    "title": "Method PacketSent | Nitrox",
    "keywords": "Method PacketSent Namespace NitroxClient.Debuggers Assembly NitroxClient.dll PacketSent(Packet, int) void PacketSent(Packet packet, int size) Parameters packet Packet size int"
  },
  "api/NitroxClient.Debuggers.INetworkDebugger.html": {
    "href": "api/NitroxClient.Debuggers.INetworkDebugger.html",
    "title": "Interface INetworkDebugger | Nitrox",
    "keywords": "Interface INetworkDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public interface INetworkDebugger Methods PacketReceived(Packet, int) PacketSent(Packet, int)"
  },
  "api/NitroxClient.Debuggers.NetworkDebugger.-ctor.html": {
    "href": "api/NitroxClient.Debuggers.NetworkDebugger.-ctor.html",
    "title": "Constructor NetworkDebugger | Nitrox",
    "keywords": "Constructor NetworkDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll NetworkDebugger() public NetworkDebugger()"
  },
  "api/NitroxClient.Debuggers.NetworkDebugger.OnSetSkin.html": {
    "href": "api/NitroxClient.Debuggers.NetworkDebugger.OnSetSkin.html",
    "title": "Method OnSetSkin | Nitrox",
    "keywords": "Method OnSetSkin Namespace NitroxClient.Debuggers Assembly NitroxClient.dll OnSetSkin(GUISkin) Optionally adjust the skin that is used during render. protected override void OnSetSkin(GUISkin skin) Parameters skin GUISkin Skin that is being used during Render(int). Remarks Set SkinCreationOptions on UNITYCOPY or DERIVEDCOPY in constructor before using this method."
  },
  "api/NitroxClient.Debuggers.NetworkDebugger.PacketReceived.html": {
    "href": "api/NitroxClient.Debuggers.NetworkDebugger.PacketReceived.html",
    "title": "Method PacketReceived | Nitrox",
    "keywords": "Method PacketReceived Namespace NitroxClient.Debuggers Assembly NitroxClient.dll PacketReceived(Packet, int) public void PacketReceived(Packet packet, int byteSize) Parameters packet Packet byteSize int"
  },
  "api/NitroxClient.Debuggers.NetworkDebugger.PacketSent.html": {
    "href": "api/NitroxClient.Debuggers.NetworkDebugger.PacketSent.html",
    "title": "Method PacketSent | Nitrox",
    "keywords": "Method PacketSent Namespace NitroxClient.Debuggers Assembly NitroxClient.dll PacketSent(Packet, int) public void PacketSent(Packet packet, int byteSize) Parameters packet Packet byteSize int"
  },
  "api/NitroxClient.Debuggers.NetworkDebugger.html": {
    "href": "api/NitroxClient.Debuggers.NetworkDebugger.html",
    "title": "Class NetworkDebugger | Nitrox",
    "keywords": "Class NetworkDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public class NetworkDebugger : BaseDebugger, INetworkDebugger Inheritance object BaseDebugger NetworkDebugger Implements INetworkDebugger Inherited Members BaseDebugger.DebuggerName BaseDebugger.Hotkey BaseDebugger.HotkeyAltRequired BaseDebugger.HotkeyControlRequired BaseDebugger.HotkeyShiftRequired BaseDebugger.HotkeyString BaseDebugger.SkinCreationOptions BaseDebugger.ActiveTab BaseDebugger.CanDragWindow BaseDebugger.Enabled BaseDebugger.WindowRect BaseDebugger.AddTab(string, Action) BaseDebugger.GetTab(string) BaseDebugger.Update() BaseDebugger.OnGUI() BaseDebugger.Render() BaseDebugger.ResetWindowPosition() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NetworkDebugger() Methods OnSetSkin(GUISkin) Optionally adjust the skin that is used during render. PacketReceived(Packet, int) PacketSent(Packet, int)"
  },
  "api/NitroxClient.Debuggers.SceneDebugger.-ctor.html": {
    "href": "api/NitroxClient.Debuggers.SceneDebugger.-ctor.html",
    "title": "Constructor SceneDebugger | Nitrox",
    "keywords": "Constructor SceneDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll SceneDebugger(IEnumerable<IDrawer>, IEnumerable<IStructDrawer>) public SceneDebugger(IEnumerable<IDrawer> drawers, IEnumerable<IStructDrawer> structDrawers) Parameters drawers IEnumerable<IDrawer> structDrawers IEnumerable<IStructDrawer>"
  },
  "api/NitroxClient.Debuggers.SceneDebugger.JumpToComponent.html": {
    "href": "api/NitroxClient.Debuggers.SceneDebugger.JumpToComponent.html",
    "title": "Method JumpToComponent | Nitrox",
    "keywords": "Method JumpToComponent Namespace NitroxClient.Debuggers Assembly NitroxClient.dll JumpToComponent(Component) public void JumpToComponent(Component item) Parameters item Component"
  },
  "api/NitroxClient.Debuggers.SceneDebugger.OnSetSkin.html": {
    "href": "api/NitroxClient.Debuggers.SceneDebugger.OnSetSkin.html",
    "title": "Method OnSetSkin | Nitrox",
    "keywords": "Method OnSetSkin Namespace NitroxClient.Debuggers Assembly NitroxClient.dll OnSetSkin(GUISkin) Optionally adjust the skin that is used during render. protected override void OnSetSkin(GUISkin skin) Parameters skin GUISkin Skin that is being used during Render(int). Remarks Set SkinCreationOptions on UNITYCOPY or DERIVEDCOPY in constructor before using this method."
  },
  "api/NitroxClient.Debuggers.SceneDebugger.SelectedObject.html": {
    "href": "api/NitroxClient.Debuggers.SceneDebugger.SelectedObject.html",
    "title": "Property SelectedObject | Nitrox",
    "keywords": "Property SelectedObject Namespace NitroxClient.Debuggers Assembly NitroxClient.dll SelectedObject public GameObject SelectedObject { get; } Property Value GameObject"
  },
  "api/NitroxClient.Debuggers.SceneDebugger.UpdateSelectedObject.html": {
    "href": "api/NitroxClient.Debuggers.SceneDebugger.UpdateSelectedObject.html",
    "title": "Method UpdateSelectedObject | Nitrox",
    "keywords": "Method UpdateSelectedObject Namespace NitroxClient.Debuggers Assembly NitroxClient.dll UpdateSelectedObject(GameObject) public void UpdateSelectedObject(GameObject item) Parameters item GameObject"
  },
  "api/NitroxClient.Debuggers.SceneDebugger.html": {
    "href": "api/NitroxClient.Debuggers.SceneDebugger.html",
    "title": "Class SceneDebugger | Nitrox",
    "keywords": "Class SceneDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public class SceneDebugger : BaseDebugger Inheritance object BaseDebugger SceneDebugger Inherited Members BaseDebugger.DebuggerName BaseDebugger.Hotkey BaseDebugger.HotkeyAltRequired BaseDebugger.HotkeyControlRequired BaseDebugger.HotkeyShiftRequired BaseDebugger.HotkeyString BaseDebugger.SkinCreationOptions BaseDebugger.ActiveTab BaseDebugger.CanDragWindow BaseDebugger.Enabled BaseDebugger.WindowRect BaseDebugger.AddTab(string, Action) BaseDebugger.GetTab(string) BaseDebugger.Update() BaseDebugger.OnGUI() BaseDebugger.Render() BaseDebugger.ResetWindowPosition() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SceneDebugger(IEnumerable<IDrawer>, IEnumerable<IStructDrawer>) Properties SelectedObject Methods JumpToComponent(Component) OnSetSkin(GUISkin) Optionally adjust the skin that is used during render. UpdateSelectedObject(GameObject)"
  },
  "api/NitroxClient.Debuggers.SceneExtraDebugger.-ctor.html": {
    "href": "api/NitroxClient.Debuggers.SceneExtraDebugger.-ctor.html",
    "title": "Constructor SceneExtraDebugger | Nitrox",
    "keywords": "Constructor SceneExtraDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll SceneExtraDebugger(SceneDebugger, IMap) public SceneExtraDebugger(SceneDebugger sceneDebugger, IMap map) Parameters sceneDebugger SceneDebugger map IMap"
  },
  "api/NitroxClient.Debuggers.SceneExtraDebugger.Enabled.html": {
    "href": "api/NitroxClient.Debuggers.SceneExtraDebugger.Enabled.html",
    "title": "Property Enabled | Nitrox",
    "keywords": "Property Enabled Namespace NitroxClient.Debuggers Assembly NitroxClient.dll Enabled public override bool Enabled { get; set; } Property Value bool"
  },
  "api/NitroxClient.Debuggers.SceneExtraDebugger.OnGUI.html": {
    "href": "api/NitroxClient.Debuggers.SceneExtraDebugger.OnGUI.html",
    "title": "Method OnGUI | Nitrox",
    "keywords": "Method OnGUI Namespace NitroxClient.Debuggers Assembly NitroxClient.dll OnGUI() Call this inside a MonoBehaviour.OnGUI method. public override void OnGUI()"
  },
  "api/NitroxClient.Debuggers.SceneExtraDebugger.OnSetSkin.html": {
    "href": "api/NitroxClient.Debuggers.SceneExtraDebugger.OnSetSkin.html",
    "title": "Method OnSetSkin | Nitrox",
    "keywords": "Method OnSetSkin Namespace NitroxClient.Debuggers Assembly NitroxClient.dll OnSetSkin(GUISkin) Optionally adjust the skin that is used during render. protected override void OnSetSkin(GUISkin skin) Parameters skin GUISkin Skin that is being used during Render(int). Remarks Set SkinCreationOptions on UNITYCOPY or DERIVEDCOPY in constructor before using this method."
  },
  "api/NitroxClient.Debuggers.SceneExtraDebugger.ResetWindowPosition.html": {
    "href": "api/NitroxClient.Debuggers.SceneExtraDebugger.ResetWindowPosition.html",
    "title": "Method ResetWindowPosition | Nitrox",
    "keywords": "Method ResetWindowPosition Namespace NitroxClient.Debuggers Assembly NitroxClient.dll ResetWindowPosition() public override void ResetWindowPosition()"
  },
  "api/NitroxClient.Debuggers.SceneExtraDebugger.html": {
    "href": "api/NitroxClient.Debuggers.SceneExtraDebugger.html",
    "title": "Class SceneExtraDebugger | Nitrox",
    "keywords": "Class SceneExtraDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public sealed class SceneExtraDebugger : BaseDebugger Inheritance object BaseDebugger SceneExtraDebugger Inherited Members BaseDebugger.DebuggerName BaseDebugger.Hotkey BaseDebugger.HotkeyAltRequired BaseDebugger.HotkeyControlRequired BaseDebugger.HotkeyShiftRequired BaseDebugger.HotkeyString BaseDebugger.SkinCreationOptions BaseDebugger.ActiveTab BaseDebugger.CanDragWindow BaseDebugger.WindowRect BaseDebugger.Update() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SceneExtraDebugger(SceneDebugger, IMap) Properties Enabled Methods OnGUI() Call this inside a MonoBehaviour.OnGUI method. OnSetSkin(GUISkin) Optionally adjust the skin that is used during render. ResetWindowPosition()"
  },
  "api/NitroxClient.Debuggers.SoundDebugger.-ctor.html": {
    "href": "api/NitroxClient.Debuggers.SoundDebugger.-ctor.html",
    "title": "Constructor SoundDebugger | Nitrox",
    "keywords": "Constructor SoundDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll SoundDebugger(FMODSystem) public SoundDebugger(FMODSystem fmodSystem) Parameters fmodSystem FMODSystem"
  },
  "api/NitroxClient.Debuggers.SoundDebugger.OnSetSkin.html": {
    "href": "api/NitroxClient.Debuggers.SoundDebugger.OnSetSkin.html",
    "title": "Method OnSetSkin | Nitrox",
    "keywords": "Method OnSetSkin Namespace NitroxClient.Debuggers Assembly NitroxClient.dll OnSetSkin(GUISkin) Optionally adjust the skin that is used during render. protected override void OnSetSkin(GUISkin skin) Parameters skin GUISkin Skin that is being used during Render(int). Remarks Set SkinCreationOptions on UNITYCOPY or DERIVEDCOPY in constructor before using this method."
  },
  "api/NitroxClient.Debuggers.SoundDebugger.html": {
    "href": "api/NitroxClient.Debuggers.SoundDebugger.html",
    "title": "Class SoundDebugger | Nitrox",
    "keywords": "Class SoundDebugger Namespace NitroxClient.Debuggers Assembly NitroxClient.dll public class SoundDebugger : BaseDebugger Inheritance object BaseDebugger SoundDebugger Inherited Members BaseDebugger.DebuggerName BaseDebugger.Hotkey BaseDebugger.HotkeyAltRequired BaseDebugger.HotkeyControlRequired BaseDebugger.HotkeyShiftRequired BaseDebugger.HotkeyString BaseDebugger.SkinCreationOptions BaseDebugger.ActiveTab BaseDebugger.CanDragWindow BaseDebugger.Enabled BaseDebugger.WindowRect BaseDebugger.AddTab(string, Action) BaseDebugger.GetTab(string) BaseDebugger.Update() BaseDebugger.OnGUI() BaseDebugger.Render() BaseDebugger.ResetWindowPosition() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SoundDebugger(FMODSystem) Methods OnSetSkin(GUISkin) Optionally adjust the skin that is used during render."
  },
  "api/NitroxClient.Debuggers.html": {
    "href": "api/NitroxClient.Debuggers.html",
    "title": "Namespace NitroxClient.Debuggers | Nitrox",
    "keywords": "Namespace NitroxClient.Debuggers Namespaces NitroxClient.Debuggers.Drawer Classes BaseDebugger BaseDebugger.DebuggerTab EntityDebugger NetworkDebugger SceneDebugger SceneExtraDebugger SoundDebugger Interfaces INetworkDebugger Enums BaseDebugger.GUISkinCreationOptions"
  },
  "api/NitroxClient.GameLogic.AI.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.AI.-ctor.html",
    "title": "Constructor AI | Nitrox",
    "keywords": "Constructor AI Namespace NitroxClient.GameLogic Assembly NitroxClient.dll AI(IPacketSender) public AI(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.AI.CreatureActionChanged.html": {
    "href": "api/NitroxClient.GameLogic.AI.CreatureActionChanged.html",
    "title": "Method CreatureActionChanged | Nitrox",
    "keywords": "Method CreatureActionChanged Namespace NitroxClient.GameLogic Assembly NitroxClient.dll CreatureActionChanged(NitroxId, CreatureAction) public void CreatureActionChanged(NitroxId id, CreatureAction newAction) Parameters id NitroxId newAction CreatureAction"
  },
  "api/NitroxClient.GameLogic.AI.html": {
    "href": "api/NitroxClient.GameLogic.AI.html",
    "title": "Class AI | Nitrox",
    "keywords": "Class AI Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class AI Inheritance object AI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AI(IPacketSender) Methods CreatureActionChanged(NitroxId, CreatureAction)"
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.AliveOrNull.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.AliveOrNull.html",
    "title": "Method AliveOrNull | Nitrox",
    "keywords": "Method AliveOrNull Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll AliveOrNull(IBaseModule) public static Component AliveOrNull(this IBaseModule baseModule) Parameters baseModule IBaseModule Returns Component"
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.CreateMapRoomEntityFrom.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.CreateMapRoomEntityFrom.html",
    "title": "Method CreateMapRoomEntityFrom | Nitrox",
    "keywords": "Method CreateMapRoomEntityFrom Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll CreateMapRoomEntityFrom(MapRoomFunctionality, Base, NitroxId, NitroxId) public static MapRoomEntity CreateMapRoomEntityFrom(MapRoomFunctionality mapRoomFunctionality, Base @base, NitroxId id, NitroxId parentId) Parameters mapRoomFunctionality MapRoomFunctionality base Base id NitroxId parentId NitroxId Returns MapRoomEntity"
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.GetChildEntities.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.GetChildEntities.html",
    "title": "Method GetChildEntities | Nitrox",
    "keywords": "Method GetChildEntities Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetChildEntities(Base, NitroxId) public static List<Entity> GetChildEntities(Base targetBase, NitroxId baseId) Parameters targetBase Base baseId NitroxId Returns List<Entity>"
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.GetGlobalRootChildren.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.GetGlobalRootChildren.html",
    "title": "Method GetGlobalRootChildren | Nitrox",
    "keywords": "Method GetGlobalRootChildren Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetGlobalRootChildren(Transform) public static List<GlobalRootEntity> GetGlobalRootChildren(Transform globalRoot) Parameters globalRoot Transform Returns List<GlobalRootEntity>"
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.GetIdentifier.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.GetIdentifier.html",
    "title": "Method GetIdentifier | Nitrox",
    "keywords": "Method GetIdentifier Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetIdentifier(BaseDeconstructable, BaseCell, Face?) public static BuildPieceIdentifier GetIdentifier(BaseDeconstructable baseDeconstructable, BaseCell baseCell, Base.Face? baseFace = null) Parameters baseDeconstructable BaseDeconstructable baseCell BaseCell baseFace Base.Face? Returns BuildPieceIdentifier"
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.GetMapRoomFunctionalityCell.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.GetMapRoomFunctionalityCell.html",
    "title": "Method GetMapRoomFunctionalityCell | Nitrox",
    "keywords": "Method GetMapRoomFunctionalityCell Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetMapRoomFunctionalityCell(BaseGhost) public static Int3 GetMapRoomFunctionalityCell(BaseGhost baseGhost) Parameters baseGhost BaseGhost Returns Int3"
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.IsBaseDeconstructable.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.IsBaseDeconstructable.html",
    "title": "Method IsBaseDeconstructable | Nitrox",
    "keywords": "Method IsBaseDeconstructable Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll IsBaseDeconstructable(ConstructableBase) public static bool IsBaseDeconstructable(ConstructableBase constructableBase) Parameters constructableBase ConstructableBase Returns bool Remarks The criteria to make sure that a ConstructableBase is one of a BaseDeconstructable is if it has a moduleFace because this field is only filled for the base deconstruction (BaseDeconstructable.Deconstruct(), ConstructableBase.LinkModule(Base.Face?))."
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.IsUnderBaseDeconstructable.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.IsUnderBaseDeconstructable.html",
    "title": "Method IsUnderBaseDeconstructable | Nitrox",
    "keywords": "Method IsUnderBaseDeconstructable Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll IsUnderBaseDeconstructable(BaseGhost, bool) public static bool IsUnderBaseDeconstructable(BaseGhost baseGhost, bool faceAlreadyLinked) Parameters baseGhost BaseGhost faceAlreadyLinked bool Whether ConstructableBase.moduleFace was already set or not Returns bool Remarks A BaseDeconstructable's ghost component is a simple BaseGhost so we need to identify it by the parent ConstructableBase instead."
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.TryGetGhostFace.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.TryGetGhostFace.html",
    "title": "Method TryGetGhostFace | Nitrox",
    "keywords": "Method TryGetGhostFace Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll TryGetGhostFace(BaseGhost, out Face) public static bool TryGetGhostFace(BaseGhost baseGhost, out Base.Face face) Parameters baseGhost BaseGhost face Base.Face Returns bool"
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.TryGetIdentifier.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.TryGetIdentifier.html",
    "title": "Method TryGetIdentifier | Nitrox",
    "keywords": "Method TryGetIdentifier Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll TryGetIdentifier(BaseDeconstructable, out BuildPieceIdentifier, BaseCell, Face?) public static bool TryGetIdentifier(BaseDeconstructable baseDeconstructable, out BuildPieceIdentifier identifier, BaseCell baseCell = null, Base.Face? baseFace = null) Parameters baseDeconstructable BaseDeconstructable identifier BuildPieceIdentifier baseCell BaseCell baseFace Base.Face? Returns bool"
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.TryTransferIdFromGhostToModule.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.TryTransferIdFromGhostToModule.html",
    "title": "Method TryTransferIdFromGhostToModule | Nitrox",
    "keywords": "Method TryTransferIdFromGhostToModule Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll TryTransferIdFromGhostToModule(BaseGhost, NitroxId, ConstructableBase, out GameObject) public static bool TryTransferIdFromGhostToModule(BaseGhost baseGhost, NitroxId id, ConstructableBase constructableBase, out GameObject moduleObject) Parameters baseGhost BaseGhost id NitroxId constructableBase ConstructableBase moduleObject GameObject Returns bool Whether or not the id was successfully transferred Remarks Even if the corresponding module was found, in some cases (with WaterParks notably) we don't want to transfer the id. We then return false because the GameObject may have already been marked."
  },
  "api/NitroxClient.GameLogic.Bases.BuildUtils.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildUtils.html",
    "title": "Class BuildUtils | Nitrox",
    "keywords": "Class BuildUtils Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public static class BuildUtils Inheritance object BuildUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AliveOrNull(IBaseModule) CreateMapRoomEntityFrom(MapRoomFunctionality, Base, NitroxId, NitroxId) GetChildEntities(Base, NitroxId) GetGlobalRootChildren(Transform) GetIdentifier(BaseDeconstructable, BaseCell, Face?) GetMapRoomFunctionalityCell(BaseGhost) IsBaseDeconstructable(ConstructableBase) IsUnderBaseDeconstructable(BaseGhost, bool) TryGetGhostFace(BaseGhost, out Face) TryGetIdentifier(BaseDeconstructable, out BuildPieceIdentifier, BaseCell, Face?) TryTransferIdFromGhostToModule(BaseGhost, NitroxId, ConstructableBase, out GameObject)"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.AskForResync.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.AskForResync.html",
    "title": "Method AskForResync | Nitrox",
    "keywords": "Method AskForResync Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll AskForResync() public void AskForResync()"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.BasesCooldown.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.BasesCooldown.html",
    "title": "Field BasesCooldown | Nitrox",
    "keywords": "Field BasesCooldown Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public Dictionary<NitroxId, DateTimeOffset> BasesCooldown Returns Dictionary<NitroxId, DateTimeOffset>"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.BuildBase.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.BuildBase.html",
    "title": "Method BuildBase | Nitrox",
    "keywords": "Method BuildBase Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll BuildBase(PlaceBase) public IEnumerator BuildBase(PlaceBase placeBase) Parameters placeBase PlaceBase Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.BuildGhost.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.BuildGhost.html",
    "title": "Method BuildGhost | Nitrox",
    "keywords": "Method BuildGhost Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll BuildGhost(PlaceGhost) public IEnumerator BuildGhost(PlaceGhost placeGhost) Parameters placeGhost PlaceGhost Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.BuildModule.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.BuildModule.html",
    "title": "Method BuildModule | Nitrox",
    "keywords": "Method BuildModule Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll BuildModule(PlaceModule) public IEnumerator BuildModule(PlaceModule placeModule) Parameters placeModule PlaceModule Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.BuildQueue.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.BuildQueue.html",
    "title": "Field BuildQueue | Nitrox",
    "keywords": "Field BuildQueue Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public Queue<Packet> BuildQueue Returns Queue<Packet>"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.DeconstructBase.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.DeconstructBase.html",
    "title": "Method DeconstructBase | Nitrox",
    "keywords": "Method DeconstructBase Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll DeconstructBase(BaseDeconstructed) public IEnumerator DeconstructBase(BaseDeconstructed baseDeconstructed) Parameters baseDeconstructed BaseDeconstructed Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.DeconstructPiece.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.DeconstructPiece.html",
    "title": "Method DeconstructPiece | Nitrox",
    "keywords": "Method DeconstructPiece Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll DeconstructPiece(PieceDeconstructed) public IEnumerator DeconstructPiece(PieceDeconstructed pieceDeconstructed) Parameters pieceDeconstructed PieceDeconstructed Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.EnsureTracker.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.EnsureTracker.html",
    "title": "Method EnsureTracker | Nitrox",
    "keywords": "Method EnsureTracker Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll EnsureTracker(NitroxId) public OperationTracker EnsureTracker(NitroxId baseId) Parameters baseId NitroxId Returns OperationTracker"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.FailedOperations.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.FailedOperations.html",
    "title": "Field FailedOperations | Nitrox",
    "keywords": "Field FailedOperations Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public int FailedOperations Returns int"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.GetCurrentOperationIdOrDefault.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.GetCurrentOperationIdOrDefault.html",
    "title": "Method GetCurrentOperationIdOrDefault | Nitrox",
    "keywords": "Method GetCurrentOperationIdOrDefault Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetCurrentOperationIdOrDefault(NitroxId) public int GetCurrentOperationIdOrDefault(NitroxId baseId) Parameters baseId NitroxId Returns int"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.GetParentOrGlobalRoot.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.GetParentOrGlobalRoot.html",
    "title": "Method GetParentOrGlobalRoot | Nitrox",
    "keywords": "Method GetParentOrGlobalRoot Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetParentOrGlobalRoot(NitroxId) public static Transform GetParentOrGlobalRoot(NitroxId id) Parameters id NitroxId Returns Transform"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.InitializeOperations.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.InitializeOperations.html",
    "title": "Method InitializeOperations | Nitrox",
    "keywords": "Method InitializeOperations Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll InitializeOperations(Dictionary<NitroxId, int>) public void InitializeOperations(Dictionary<NitroxId, int> operations) Parameters operations Dictionary<NitroxId, int>"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.Main.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.Main.html",
    "title": "Field Main | Nitrox",
    "keywords": "Field Main Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public static BuildingHandler Main Returns BuildingHandler"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.ProgressConstruction.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.ProgressConstruction.html",
    "title": "Method ProgressConstruction | Nitrox",
    "keywords": "Method ProgressConstruction Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll ProgressConstruction(ModifyConstructedAmount) public IEnumerator ProgressConstruction(ModifyConstructedAmount modifyConstructedAmount) Parameters modifyConstructedAmount ModifyConstructedAmount Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.Resyncing.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.Resyncing.html",
    "title": "Field Resyncing | Nitrox",
    "keywords": "Field Resyncing Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public bool Resyncing Returns bool"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.Start.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.Start.html",
    "title": "Method Start | Nitrox",
    "keywords": "Method Start Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll Start() public void Start()"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.StartResync.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.StartResync.html",
    "title": "Method StartResync | Nitrox",
    "keywords": "Method StartResync Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll StartResync<T>(Dictionary<T, int>) public void StartResync<T>(Dictionary<T, int> entities) where T : Entity Parameters entities Dictionary<T, int> Type Parameters T"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.StopResync.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.StopResync.html",
    "title": "Method StopResync | Nitrox",
    "keywords": "Method StopResync Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll StopResync() public void StopResync()"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.Temp.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.Temp.html",
    "title": "Field Temp | Nitrox",
    "keywords": "Field Temp Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll When processing deconstruction-related packets, it's required to pass part of their data to the patches so that they can work accordingly (mainly to differentiate local actions from remotely issued ones). public BuildingHandler.TemporaryBuildData Temp Returns BuildingHandler.TemporaryBuildData"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.ChildrenTransfer.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.ChildrenTransfer.html",
    "title": "Field ChildrenTransfer | Nitrox",
    "keywords": "Field ChildrenTransfer Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public (NitroxId, NitroxId) ChildrenTransfer Returns (NitroxId, NitroxId)"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.Dispose.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.Dispose.html",
    "title": "Method Dispose | Nitrox",
    "keywords": "Method Dispose Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.Fill.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.Fill.html",
    "title": "Method Fill | Nitrox",
    "keywords": "Method Fill Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll Fill(PieceDeconstructed) public BuildingHandler.TemporaryBuildData Fill(PieceDeconstructed pieceDeconstructed) Parameters pieceDeconstructed PieceDeconstructed Returns BuildingHandler.TemporaryBuildData"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.Id.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.Id.html",
    "title": "Field Id | Nitrox",
    "keywords": "Field Id Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public NitroxId Id Returns NitroxId"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.MovedChildrenIds.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.MovedChildrenIds.html",
    "title": "Field MovedChildrenIds | Nitrox",
    "keywords": "Field MovedChildrenIds Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public List<NitroxId> MovedChildrenIds Returns List<NitroxId>"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.NewWaterPark.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.NewWaterPark.html",
    "title": "Field NewWaterPark | Nitrox",
    "keywords": "Field NewWaterPark Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public InteriorPieceEntity NewWaterPark Returns InteriorPieceEntity"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.Transfer.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.Transfer.html",
    "title": "Field Transfer | Nitrox",
    "keywords": "Field Transfer Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public bool Transfer Returns bool"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.TemporaryBuildData.html",
    "title": "Class BuildingHandler.TemporaryBuildData | Nitrox",
    "keywords": "Class BuildingHandler.TemporaryBuildData Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public class BuildingHandler.TemporaryBuildData : IDisposable Inheritance object BuildingHandler.TemporaryBuildData Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields ChildrenTransfer Id MovedChildrenIds NewWaterPark Transfer Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Fill(PieceDeconstructed)"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.Update.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll Update() public void Update()"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.UpdatePlacedBase.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.UpdatePlacedBase.html",
    "title": "Method UpdatePlacedBase | Nitrox",
    "keywords": "Method UpdatePlacedBase Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll UpdatePlacedBase(UpdateBase) public IEnumerator UpdatePlacedBase(UpdateBase updateBase) Parameters updateBase UpdateBase Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Bases.BuildingHandler.html": {
    "href": "api/NitroxClient.GameLogic.Bases.BuildingHandler.html",
    "title": "Class BuildingHandler | Nitrox",
    "keywords": "Class BuildingHandler Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll Building resync-related part of BuildingHandler. public class BuildingHandler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BuildingHandler Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields BasesCooldown BuildQueue FailedOperations Main Resyncing Temp When processing deconstruction-related packets, it's required to pass part of their data to the patches so that they can work accordingly (mainly to differentiate local actions from remotely issued ones). Methods AskForResync() BuildBase(PlaceBase) BuildGhost(PlaceGhost) BuildModule(PlaceModule) DeconstructBase(BaseDeconstructed) DeconstructPiece(PieceDeconstructed) EnsureTracker(NitroxId) GetCurrentOperationIdOrDefault(NitroxId) GetParentOrGlobalRoot(NitroxId) InitializeOperations(Dictionary<NitroxId, int>) ProgressConstruction(ModifyConstructedAmount) Start() StartResync<T>(Dictionary<T, int>) StopResync() Update() UpdatePlacedBase(UpdateBase)"
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.ApplyBaseAnchoredCellMetadataTo.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.ApplyBaseAnchoredCellMetadataTo.html",
    "title": "Method ApplyBaseAnchoredCellMetadataTo | Nitrox",
    "keywords": "Method ApplyBaseAnchoredCellMetadataTo Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll ApplyBaseAnchoredCellMetadataTo(BaseAnchoredCellGhostMetadata, BaseGhost) public static void ApplyBaseAnchoredCellMetadataTo(this BaseAnchoredCellGhostMetadata ghostMetadata, BaseGhost baseGhost) Parameters ghostMetadata BaseAnchoredCellGhostMetadata baseGhost BaseGhost"
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.ApplyBaseAnchoredFaceMetadataTo.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.ApplyBaseAnchoredFaceMetadataTo.html",
    "title": "Method ApplyBaseAnchoredFaceMetadataTo | Nitrox",
    "keywords": "Method ApplyBaseAnchoredFaceMetadataTo Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll ApplyBaseAnchoredFaceMetadataTo(BaseAnchoredFaceGhostMetadata, BaseGhost) public static void ApplyBaseAnchoredFaceMetadataTo(this BaseAnchoredFaceGhostMetadata ghostMetadata, BaseGhost baseGhost) Parameters ghostMetadata BaseAnchoredFaceGhostMetadata baseGhost BaseGhost"
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.ApplyBaseDeconstructableMetadataTo.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.ApplyBaseDeconstructableMetadataTo.html",
    "title": "Method ApplyBaseDeconstructableMetadataTo | Nitrox",
    "keywords": "Method ApplyBaseDeconstructableMetadataTo Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll ApplyBaseDeconstructableMetadataTo(BaseDeconstructableGhostMetadata, BaseGhost, Base) public static IEnumerator ApplyBaseDeconstructableMetadataTo(this BaseDeconstructableGhostMetadata ghostMetadata, BaseGhost baseGhost, Base @base) Parameters ghostMetadata BaseDeconstructableGhostMetadata baseGhost BaseGhost base Base Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.ApplyBasicMetadataTo.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.ApplyBasicMetadataTo.html",
    "title": "Method ApplyBasicMetadataTo | Nitrox",
    "keywords": "Method ApplyBasicMetadataTo Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll ApplyBasicMetadataTo(GhostMetadata, BaseGhost) public static void ApplyBasicMetadataTo(this GhostMetadata ghostMetadata, BaseGhost baseGhost) Parameters ghostMetadata GhostMetadata baseGhost BaseGhost"
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.ApplyMetadataToGhost.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.ApplyMetadataToGhost.html",
    "title": "Method ApplyMetadataToGhost | Nitrox",
    "keywords": "Method ApplyMetadataToGhost Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll ApplyMetadataToGhost(BaseGhost, EntityMetadata, Base) Applies the given metadata to a ghost depending on their types. public static IEnumerator ApplyMetadataToGhost(BaseGhost baseGhost, EntityMetadata entityMetadata, Base @base) Parameters baseGhost BaseGhost entityMetadata EntityMetadata base Base Returns IEnumerator An extra instruction set to yield for BaseDeconstructable ghosts or null if unrequired."
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataApplier.html",
    "title": "Class GhostMetadataApplier | Nitrox",
    "keywords": "Class GhostMetadataApplier Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public static class GhostMetadataApplier Inheritance object GhostMetadataApplier Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyBaseAnchoredCellMetadataTo(BaseAnchoredCellGhostMetadata, BaseGhost) ApplyBaseAnchoredFaceMetadataTo(BaseAnchoredFaceGhostMetadata, BaseGhost) ApplyBaseDeconstructableMetadataTo(BaseDeconstructableGhostMetadata, BaseGhost, Base) ApplyBasicMetadataTo(GhostMetadata, BaseGhost) ApplyMetadataToGhost(BaseGhost, EntityMetadata, Base) Applies the given metadata to a ghost depending on their types."
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.GetBaseAnchoredCellMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.GetBaseAnchoredCellMetadata.html",
    "title": "Method GetBaseAnchoredCellMetadata | Nitrox",
    "keywords": "Method GetBaseAnchoredCellMetadata Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetBaseAnchoredCellMetadata(BaseGhost) public static BaseAnchoredCellGhostMetadata GetBaseAnchoredCellMetadata(this BaseGhost baseGhost) Parameters baseGhost BaseGhost Returns BaseAnchoredCellGhostMetadata"
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.GetBaseAnchoredFaceMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.GetBaseAnchoredFaceMetadata.html",
    "title": "Method GetBaseAnchoredFaceMetadata | Nitrox",
    "keywords": "Method GetBaseAnchoredFaceMetadata Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetBaseAnchoredFaceMetadata(BaseGhost) public static BaseAnchoredFaceGhostMetadata GetBaseAnchoredFaceMetadata(this BaseGhost baseGhost) Parameters baseGhost BaseGhost Returns BaseAnchoredFaceGhostMetadata"
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.GetBaseDeconstructableMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.GetBaseDeconstructableMetadata.html",
    "title": "Method GetBaseDeconstructableMetadata | Nitrox",
    "keywords": "Method GetBaseDeconstructableMetadata Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetBaseDeconstructableMetadata(BaseGhost) public static BaseDeconstructableGhostMetadata GetBaseDeconstructableMetadata(this BaseGhost baseGhost) Parameters baseGhost BaseGhost Returns BaseDeconstructableGhostMetadata"
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.GetMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.GetMetadata.html",
    "title": "Method GetMetadata | Nitrox",
    "keywords": "Method GetMetadata Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetMetadata<T>(BaseGhost) public static T GetMetadata<T>(this BaseGhost baseGhost) where T : GhostMetadata, new() Parameters baseGhost BaseGhost Returns T Type Parameters T"
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.GetMetadataForGhost.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.GetMetadataForGhost.html",
    "title": "Method GetMetadataForGhost | Nitrox",
    "keywords": "Method GetMetadataForGhost Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll GetMetadataForGhost(BaseGhost) public static GhostMetadata GetMetadataForGhost(BaseGhost baseGhost) Parameters baseGhost BaseGhost Returns GhostMetadata"
  },
  "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.html": {
    "href": "api/NitroxClient.GameLogic.Bases.GhostMetadataRetriever.html",
    "title": "Class GhostMetadataRetriever | Nitrox",
    "keywords": "Class GhostMetadataRetriever Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll Because of the multiple possible types for Ghost components, the retrieving of their metadata is inappropriate for the MetadataExtractor system public static class GhostMetadataRetriever Inheritance object GhostMetadataRetriever Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetBaseAnchoredCellMetadata(BaseGhost) GetBaseAnchoredFaceMetadata(BaseGhost) GetBaseDeconstructableMetadata(BaseGhost) GetMetadataForGhost(BaseGhost) GetMetadata<T>(BaseGhost)"
  },
  "api/NitroxClient.GameLogic.Bases.OperationTracker.FailedOperations.html": {
    "href": "api/NitroxClient.GameLogic.Bases.OperationTracker.FailedOperations.html",
    "title": "Field FailedOperations | Nitrox",
    "keywords": "Field FailedOperations Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll Number of detected issues when trying to apply actions remotely public int FailedOperations Returns int"
  },
  "api/NitroxClient.GameLogic.Bases.OperationTracker.IsDesynced.html": {
    "href": "api/NitroxClient.GameLogic.Bases.OperationTracker.IsDesynced.html",
    "title": "Method IsDesynced | Nitrox",
    "keywords": "Method IsDesynced Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll IsDesynced() public bool IsDesynced() Returns bool"
  },
  "api/NitroxClient.GameLogic.Bases.OperationTracker.LastOperationId.html": {
    "href": "api/NitroxClient.GameLogic.Bases.OperationTracker.LastOperationId.html",
    "title": "Field LastOperationId | Nitrox",
    "keywords": "Field LastOperationId Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public int LastOperationId Returns int"
  },
  "api/NitroxClient.GameLogic.Bases.OperationTracker.LocalOperations.html": {
    "href": "api/NitroxClient.GameLogic.Bases.OperationTracker.LocalOperations.html",
    "title": "Field LocalOperations | Nitrox",
    "keywords": "Field LocalOperations Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll Accounts for locally-issued build actions public int LocalOperations Returns int"
  },
  "api/NitroxClient.GameLogic.Bases.OperationTracker.MissedOperations.html": {
    "href": "api/NitroxClient.GameLogic.Bases.OperationTracker.MissedOperations.html",
    "title": "Field MissedOperations | Nitrox",
    "keywords": "Field MissedOperations Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll Calculated number of missed build actions public int MissedOperations Returns int"
  },
  "api/NitroxClient.GameLogic.Bases.OperationTracker.RegisterOperation.html": {
    "href": "api/NitroxClient.GameLogic.Bases.OperationTracker.RegisterOperation.html",
    "title": "Method RegisterOperation | Nitrox",
    "keywords": "Method RegisterOperation Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll RegisterOperation(int) public void RegisterOperation(int newOperationId) Parameters newOperationId int"
  },
  "api/NitroxClient.GameLogic.Bases.OperationTracker.ResetToId.html": {
    "href": "api/NitroxClient.GameLogic.Bases.OperationTracker.ResetToId.html",
    "title": "Method ResetToId | Nitrox",
    "keywords": "Method ResetToId Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll ResetToId(int) public void ResetToId(int operationId = 0) Parameters operationId int"
  },
  "api/NitroxClient.GameLogic.Bases.OperationTracker.html": {
    "href": "api/NitroxClient.GameLogic.Bases.OperationTracker.html",
    "title": "Class OperationTracker | Nitrox",
    "keywords": "Class OperationTracker Namespace NitroxClient.GameLogic.Bases Assembly NitroxClient.dll public class OperationTracker Inheritance object OperationTracker Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields FailedOperations Number of detected issues when trying to apply actions remotely LastOperationId LocalOperations Accounts for locally-issued build actions MissedOperations Calculated number of missed build actions Methods IsDesynced() RegisterOperation(int) ResetToId(int)"
  },
  "api/NitroxClient.GameLogic.Bases.html": {
    "href": "api/NitroxClient.GameLogic.Bases.html",
    "title": "Namespace NitroxClient.GameLogic.Bases | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Bases Classes BuildUtils BuildingHandler Building resync-related part of BuildingHandler. BuildingHandler.TemporaryBuildData GhostMetadataApplier GhostMetadataRetriever Because of the multiple possible types for Ghost components, the retrieving of their metadata is inappropriate for the MetadataExtractor system OperationTracker"
  },
  "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.-ctor.html",
    "title": "Constructor ChatLogEntry | Nitrox",
    "keywords": "Constructor ChatLogEntry Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll ChatLogEntry(string, string, Color32) public ChatLogEntry(string playerName, string messageText, Color32 playerColor) Parameters playerName string messageText string playerColor Color32"
  },
  "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.EntryObject.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.EntryObject.html",
    "title": "Property EntryObject | Nitrox",
    "keywords": "Property EntryObject Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll EntryObject public GameObject EntryObject { get; set; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.MessageText.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.MessageText.html",
    "title": "Property MessageText | Nitrox",
    "keywords": "Property MessageText Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll MessageText public string MessageText { get; set; } Property Value string"
  },
  "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.PlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.PlayerColor.html",
    "title": "Property PlayerColor | Nitrox",
    "keywords": "Property PlayerColor Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll PlayerColor public Color32 PlayerColor { get; } Property Value Color32"
  },
  "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.PlayerName.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.PlayerName.html",
    "title": "Property PlayerName | Nitrox",
    "keywords": "Property PlayerName Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll PlayerName public string PlayerName { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.Time.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.Time.html",
    "title": "Property Time | Nitrox",
    "keywords": "Property Time Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll Time public string Time { get; set; } Property Value string"
  },
  "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.UpdateTime.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.UpdateTime.html",
    "title": "Method UpdateTime | Nitrox",
    "keywords": "Method UpdateTime Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll UpdateTime() public void UpdateTime()"
  },
  "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.ChatLogEntry.html",
    "title": "Class ChatLogEntry | Nitrox",
    "keywords": "Class ChatLogEntry Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll public class ChatLogEntry Inheritance object ChatLogEntry Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ChatLogEntry(string, string, Color32) Properties EntryObject MessageText PlayerColor PlayerName Time Methods UpdateTime()"
  },
  "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.-ctor.html",
    "title": "Constructor PlayerChatManager | Nitrox",
    "keywords": "Constructor PlayerChatManager Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll PlayerChatManager(IMultiplayerSession) public PlayerChatManager(IMultiplayerSession multiplayerSession) Parameters multiplayerSession IMultiplayerSession"
  },
  "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.AddMessage.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.AddMessage.html",
    "title": "Method AddMessage | Nitrox",
    "keywords": "Method AddMessage Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll AddMessage(string, string, Color) public void AddMessage(string playerName, string message, Color color) Parameters playerName string message string color Color"
  },
  "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.HideChat.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.HideChat.html",
    "title": "Method HideChat | Nitrox",
    "keywords": "Method HideChat Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll HideChat() public void HideChat()"
  },
  "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.IsChatSelected.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.IsChatSelected.html",
    "title": "Property IsChatSelected | Nitrox",
    "keywords": "Property IsChatSelected Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll IsChatSelected public bool IsChatSelected { get; } Property Value bool"
  },
  "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.LoadChatKeyHint.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.LoadChatKeyHint.html",
    "title": "Method LoadChatKeyHint | Nitrox",
    "keywords": "Method LoadChatKeyHint Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll LoadChatKeyHint() public IEnumerator LoadChatKeyHint() Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.PlayerChaTransform.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.PlayerChaTransform.html",
    "title": "Property PlayerChaTransform | Nitrox",
    "keywords": "Property PlayerChaTransform Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll PlayerChaTransform public Transform PlayerChaTransform { get; } Property Value Transform"
  },
  "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.SelectChat.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.SelectChat.html",
    "title": "Method SelectChat | Nitrox",
    "keywords": "Method SelectChat Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll SelectChat() public void SelectChat()"
  },
  "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.SendMessage.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.SendMessage.html",
    "title": "Method SendMessage | Nitrox",
    "keywords": "Method SendMessage Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll SendMessage() public void SendMessage()"
  },
  "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.ShowChat.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.ShowChat.html",
    "title": "Method ShowChat | Nitrox",
    "keywords": "Method ShowChat Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll ShowChat() public void ShowChat()"
  },
  "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.PlayerChatManager.html",
    "title": "Class PlayerChatManager | Nitrox",
    "keywords": "Class PlayerChatManager Namespace NitroxClient.GameLogic.ChatUI Assembly NitroxClient.dll public class PlayerChatManager Inheritance object PlayerChatManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerChatManager(IMultiplayerSession) Properties IsChatSelected PlayerChaTransform Methods AddMessage(string, string, Color) HideChat() LoadChatKeyHint() SelectChat() SendMessage() ShowChat()"
  },
  "api/NitroxClient.GameLogic.ChatUI.html": {
    "href": "api/NitroxClient.GameLogic.ChatUI.html",
    "title": "Namespace NitroxClient.GameLogic.ChatUI | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.ChatUI Classes ChatLogEntry PlayerChatManager"
  },
  "api/NitroxClient.GameLogic.Containers.ContainerAddItemPostProcessor.ApplicableComponents.html": {
    "href": "api/NitroxClient.GameLogic.Containers.ContainerAddItemPostProcessor.ApplicableComponents.html",
    "title": "Property ApplicableComponents | Nitrox",
    "keywords": "Property ApplicableComponents Namespace NitroxClient.GameLogic.Containers Assembly NitroxClient.dll ApplicableComponents public abstract Type[] ApplicableComponents { get; } Property Value Type[]"
  },
  "api/NitroxClient.GameLogic.Containers.ContainerAddItemPostProcessor.From.html": {
    "href": "api/NitroxClient.GameLogic.Containers.ContainerAddItemPostProcessor.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxClient.GameLogic.Containers Assembly NitroxClient.dll From(GameObject) public static ContainerAddItemPostProcessor From(GameObject item) Parameters item GameObject Returns ContainerAddItemPostProcessor"
  },
  "api/NitroxClient.GameLogic.Containers.ContainerAddItemPostProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Containers.ContainerAddItemPostProcessor.html",
    "title": "Class ContainerAddItemPostProcessor | Nitrox",
    "keywords": "Class ContainerAddItemPostProcessor Namespace NitroxClient.GameLogic.Containers Assembly NitroxClient.dll public abstract class ContainerAddItemPostProcessor Inheritance object ContainerAddItemPostProcessor Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ApplicableComponents Methods From(GameObject) process(GameObject, ItemData)"
  },
  "api/NitroxClient.GameLogic.Containers.ContainerAddItemPostProcessor.process.html": {
    "href": "api/NitroxClient.GameLogic.Containers.ContainerAddItemPostProcessor.process.html",
    "title": "Method process | Nitrox",
    "keywords": "Method process Namespace NitroxClient.GameLogic.Containers Assembly NitroxClient.dll process(GameObject, ItemData) public abstract void process(GameObject item, ItemData itemData) Parameters item GameObject itemData ItemData"
  },
  "api/NitroxClient.GameLogic.Containers.html": {
    "href": "api/NitroxClient.GameLogic.Containers.html",
    "title": "Namespace NitroxClient.GameLogic.Containers | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Containers Classes ContainerAddItemPostProcessor"
  },
  "api/NitroxClient.GameLogic.Cyclops.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Cyclops.-ctor.html",
    "title": "Constructor Cyclops | Nitrox",
    "keywords": "Constructor Cyclops Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Cyclops(IPacketSender, Vehicles, Entities) public Cyclops(IPacketSender packetSender, Vehicles vehicles, Entities entities) Parameters packetSender IPacketSender vehicles Vehicles entities Entities"
  },
  "api/NitroxClient.GameLogic.Cyclops.BroadcastActivateFireSuppression.html": {
    "href": "api/NitroxClient.GameLogic.Cyclops.BroadcastActivateFireSuppression.html",
    "title": "Method BroadcastActivateFireSuppression | Nitrox",
    "keywords": "Method BroadcastActivateFireSuppression Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastActivateFireSuppression(NitroxId) public void BroadcastActivateFireSuppression(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxClient.GameLogic.Cyclops.BroadcastLaunchDecoy.html": {
    "href": "api/NitroxClient.GameLogic.Cyclops.BroadcastLaunchDecoy.html",
    "title": "Method BroadcastLaunchDecoy | Nitrox",
    "keywords": "Method BroadcastLaunchDecoy Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastLaunchDecoy(NitroxId) public void BroadcastLaunchDecoy(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxClient.GameLogic.Cyclops.BroadcastMetadataChange.html": {
    "href": "api/NitroxClient.GameLogic.Cyclops.BroadcastMetadataChange.html",
    "title": "Method BroadcastMetadataChange | Nitrox",
    "keywords": "Method BroadcastMetadataChange Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastMetadataChange(NitroxId) public void BroadcastMetadataChange(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxClient.GameLogic.Cyclops.LaunchDecoy.html": {
    "href": "api/NitroxClient.GameLogic.Cyclops.LaunchDecoy.html",
    "title": "Method LaunchDecoy | Nitrox",
    "keywords": "Method LaunchDecoy Namespace NitroxClient.GameLogic Assembly NitroxClient.dll LaunchDecoy(NitroxId) public void LaunchDecoy(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxClient.GameLogic.Cyclops.OnCreateDamagePoint.html": {
    "href": "api/NitroxClient.GameLogic.Cyclops.OnCreateDamagePoint.html",
    "title": "Method OnCreateDamagePoint | Nitrox",
    "keywords": "Method OnCreateDamagePoint Namespace NitroxClient.GameLogic Assembly NitroxClient.dll OnCreateDamagePoint(SubRoot) Triggers a CyclopsDamage packet public void OnCreateDamagePoint(SubRoot subRoot) Parameters subRoot SubRoot"
  },
  "api/NitroxClient.GameLogic.Cyclops.OnDamagePointRepaired.html": {
    "href": "api/NitroxClient.GameLogic.Cyclops.OnDamagePointRepaired.html",
    "title": "Method OnDamagePointRepaired | Nitrox",
    "keywords": "Method OnDamagePointRepaired Namespace NitroxClient.GameLogic Assembly NitroxClient.dll OnDamagePointRepaired(SubRoot, CyclopsDamagePoint, float) Called when the player repairs a CyclopsDamagePoint. Right now it's not possible to partially repair because it would be difficult to implement. CyclopsDamagePoints are coupled with LiveMixin, which is used with just about anything that has health. I would need to hook onto AddHealth(float), or maybe the repair gun event to catch when something repairs a damage point, which I don't believe is worth the effort. A CyclopsDamagePoint is already fully repaired in a little over a second. This can trigger sending CyclopsDamagePointRepaired and CyclopsDamage packets public void OnDamagePointRepaired(SubRoot subRoot, CyclopsDamagePoint damagePoint, float repairAmount) Parameters subRoot SubRoot damagePoint CyclopsDamagePoint repairAmount float"
  },
  "api/NitroxClient.GameLogic.Cyclops.StartFireSuppression.html": {
    "href": "api/NitroxClient.GameLogic.Cyclops.StartFireSuppression.html",
    "title": "Method StartFireSuppression | Nitrox",
    "keywords": "Method StartFireSuppression Namespace NitroxClient.GameLogic Assembly NitroxClient.dll StartFireSuppression(NitroxId) public void StartFireSuppression(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxClient.GameLogic.Cyclops.html": {
    "href": "api/NitroxClient.GameLogic.Cyclops.html",
    "title": "Class Cyclops | Nitrox",
    "keywords": "Class Cyclops Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class Cyclops Inheritance object Cyclops Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Cyclops(IPacketSender, Vehicles, Entities) Methods BroadcastActivateFireSuppression(NitroxId) BroadcastLaunchDecoy(NitroxId) BroadcastMetadataChange(NitroxId) LaunchDecoy(NitroxId) OnCreateDamagePoint(SubRoot) Triggers a CyclopsDamage packet OnDamagePointRepaired(SubRoot, CyclopsDamagePoint, float) Called when the player repairs a CyclopsDamagePoint. Right now it's not possible to partially repair because it would be difficult to implement. CyclopsDamagePoints are coupled with LiveMixin, which is used with just about anything that has health. I would need to hook onto AddHealth(float), or maybe the repair gun event to catch when something repairs a damage point, which I don't believe is worth the effort. A CyclopsDamagePoint is already fully repaired in a little over a second. This can trigger sending CyclopsDamagePointRepaired and CyclopsDamage packets StartFireSuppression(NitroxId)"
  },
  "api/NitroxClient.GameLogic.Entities.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Entities.-ctor.html",
    "title": "Constructor Entities | Nitrox",
    "keywords": "Constructor Entities Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Entities(IPacketSender, ThrottledPacketSender, PlayerManager, ILocalNitroxPlayer) public Entities(IPacketSender packetSender, ThrottledPacketSender throttledPacketSender, PlayerManager playerManager, ILocalNitroxPlayer localPlayer) Parameters packetSender IPacketSender throttledPacketSender ThrottledPacketSender playerManager PlayerManager localPlayer ILocalNitroxPlayer"
  },
  "api/NitroxClient.GameLogic.Entities.BroadcastEntitySpawnedByClient.html": {
    "href": "api/NitroxClient.GameLogic.Entities.BroadcastEntitySpawnedByClient.html",
    "title": "Method BroadcastEntitySpawnedByClient | Nitrox",
    "keywords": "Method BroadcastEntitySpawnedByClient Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastEntitySpawnedByClient(WorldEntity) public void BroadcastEntitySpawnedByClient(WorldEntity entity) Parameters entity WorldEntity"
  },
  "api/NitroxClient.GameLogic.Entities.BroadcastMetadataUpdate.html": {
    "href": "api/NitroxClient.GameLogic.Entities.BroadcastMetadataUpdate.html",
    "title": "Method BroadcastMetadataUpdate | Nitrox",
    "keywords": "Method BroadcastMetadataUpdate Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastMetadataUpdate(NitroxId, EntityMetadata) public void BroadcastMetadataUpdate(NitroxId id, EntityMetadata metadata) Parameters id NitroxId metadata EntityMetadata"
  },
  "api/NitroxClient.GameLogic.Entities.BroadcastMetadataUpdateThrottled.html": {
    "href": "api/NitroxClient.GameLogic.Entities.BroadcastMetadataUpdateThrottled.html",
    "title": "Method BroadcastMetadataUpdateThrottled | Nitrox",
    "keywords": "Method BroadcastMetadataUpdateThrottled Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastMetadataUpdateThrottled(NitroxId, EntityMetadata) public void BroadcastMetadataUpdateThrottled(NitroxId id, EntityMetadata metadata) Parameters id NitroxId metadata EntityMetadata"
  },
  "api/NitroxClient.GameLogic.Entities.CleanupExistingEntities.html": {
    "href": "api/NitroxClient.GameLogic.Entities.CleanupExistingEntities.html",
    "title": "Method CleanupExistingEntities | Nitrox",
    "keywords": "Method CleanupExistingEntities Namespace NitroxClient.GameLogic Assembly NitroxClient.dll CleanupExistingEntities(List<Entity>) public void CleanupExistingEntities(List<Entity> dirtyEntities) Parameters dirtyEntities List<Entity>"
  },
  "api/NitroxClient.GameLogic.Entities.EnqueueEntitiesToSpawn.html": {
    "href": "api/NitroxClient.GameLogic.Entities.EnqueueEntitiesToSpawn.html",
    "title": "Method EnqueueEntitiesToSpawn | Nitrox",
    "keywords": "Method EnqueueEntitiesToSpawn Namespace NitroxClient.GameLogic Assembly NitroxClient.dll EnqueueEntitiesToSpawn(List<Entity>) public void EnqueueEntitiesToSpawn(List<Entity> entitiesToEnqueue) Parameters entitiesToEnqueue List<Entity>"
  },
  "api/NitroxClient.GameLogic.Entities.EntitiesToSpawn.html": {
    "href": "api/NitroxClient.GameLogic.Entities.EntitiesToSpawn.html",
    "title": "Property EntitiesToSpawn | Nitrox",
    "keywords": "Property EntitiesToSpawn Namespace NitroxClient.GameLogic Assembly NitroxClient.dll EntitiesToSpawn public List<Entity> EntitiesToSpawn { get; } Property Value List<Entity>"
  },
  "api/NitroxClient.GameLogic.Entities.EntityMetadataChanged.html": {
    "href": "api/NitroxClient.GameLogic.Entities.EntityMetadataChanged.html",
    "title": "Method EntityMetadataChanged | Nitrox",
    "keywords": "Method EntityMetadataChanged Namespace NitroxClient.GameLogic Assembly NitroxClient.dll EntityMetadataChanged(object, NitroxId) public void EntityMetadataChanged(object o, NitroxId id) Parameters o object id NitroxId"
  },
  "api/NitroxClient.GameLogic.Entities.EntityMetadataChangedThrottled.html": {
    "href": "api/NitroxClient.GameLogic.Entities.EntityMetadataChangedThrottled.html",
    "title": "Method EntityMetadataChangedThrottled | Nitrox",
    "keywords": "Method EntityMetadataChangedThrottled Namespace NitroxClient.GameLogic Assembly NitroxClient.dll EntityMetadataChangedThrottled(object, NitroxId) public void EntityMetadataChangedThrottled(object o, NitroxId id) Parameters o object id NitroxId"
  },
  "api/NitroxClient.GameLogic.Entities.IsKnownEntity.html": {
    "href": "api/NitroxClient.GameLogic.Entities.IsKnownEntity.html",
    "title": "Method IsKnownEntity | Nitrox",
    "keywords": "Method IsKnownEntity Namespace NitroxClient.GameLogic Assembly NitroxClient.dll IsKnownEntity(NitroxId) public bool IsKnownEntity(NitroxId id) Parameters id NitroxId Returns bool"
  },
  "api/NitroxClient.GameLogic.Entities.IsParentReady.html": {
    "href": "api/NitroxClient.GameLogic.Entities.IsParentReady.html",
    "title": "Method IsParentReady | Nitrox",
    "keywords": "Method IsParentReady Namespace NitroxClient.GameLogic Assembly NitroxClient.dll IsParentReady(NitroxId) public bool IsParentReady(NitroxId id) Parameters id NitroxId Returns bool"
  },
  "api/NitroxClient.GameLogic.Entities.MarkAsSpawned.html": {
    "href": "api/NitroxClient.GameLogic.Entities.MarkAsSpawned.html",
    "title": "Method MarkAsSpawned | Nitrox",
    "keywords": "Method MarkAsSpawned Namespace NitroxClient.GameLogic Assembly NitroxClient.dll MarkAsSpawned(Entity) public void MarkAsSpawned(Entity entity) Parameters entity Entity"
  },
  "api/NitroxClient.GameLogic.Entities.RemoveEntity.html": {
    "href": "api/NitroxClient.GameLogic.Entities.RemoveEntity.html",
    "title": "Method RemoveEntity | Nitrox",
    "keywords": "Method RemoveEntity Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RemoveEntity(NitroxId) public bool RemoveEntity(NitroxId id) Parameters id NitroxId Returns bool"
  },
  "api/NitroxClient.GameLogic.Entities.RemoveEntityHierarchy.html": {
    "href": "api/NitroxClient.GameLogic.Entities.RemoveEntityHierarchy.html",
    "title": "Method RemoveEntityHierarchy | Nitrox",
    "keywords": "Method RemoveEntityHierarchy Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RemoveEntityHierarchy(Entity) Allows the ability to respawn an entity and its entire hierarchy. Callers are responsible for ensuring the entity is no longer in the world. public void RemoveEntityHierarchy(Entity entity) Parameters entity Entity"
  },
  "api/NitroxClient.GameLogic.Entities.RequireEntityType.html": {
    "href": "api/NitroxClient.GameLogic.Entities.RequireEntityType.html",
    "title": "Method RequireEntityType | Nitrox",
    "keywords": "Method RequireEntityType Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RequireEntityType(NitroxId) public Type RequireEntityType(NitroxId id) Parameters id NitroxId Returns Type"
  },
  "api/NitroxClient.GameLogic.Entities.SpawnBatchAsync.html": {
    "href": "api/NitroxClient.GameLogic.Entities.SpawnBatchAsync.html",
    "title": "Method SpawnBatchAsync | Nitrox",
    "keywords": "Method SpawnBatchAsync Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SpawnBatchAsync(List<Entity>, bool, bool) public IEnumerator SpawnBatchAsync(List<Entity> batch, bool forceRespawn = false, bool skipFrames = true) Parameters batch List<Entity> forceRespawn bool Should children be spawned even if already marked as spawned skipFrames bool Returns IEnumerator Remarks Yield returning takes too much time (at least once per IEnumerator branch) and it quickly gets out of hand with long function call hierarchies so we want to reduce the amount of yield operations and only skip to the next frame when required (to maintain the FPS). Also saves resources by using the IOut instances"
  },
  "api/NitroxClient.GameLogic.Entities.SpawnEntityAsync.html": {
    "href": "api/NitroxClient.GameLogic.Entities.SpawnEntityAsync.html",
    "title": "Method SpawnEntityAsync | Nitrox",
    "keywords": "Method SpawnEntityAsync Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SpawnEntityAsync(Entity, bool) public IEnumerator SpawnEntityAsync(Entity entity, bool forceRespawn = false) Parameters entity Entity forceRespawn bool Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Entities.WasAlreadySpawned.html": {
    "href": "api/NitroxClient.GameLogic.Entities.WasAlreadySpawned.html",
    "title": "Method WasAlreadySpawned | Nitrox",
    "keywords": "Method WasAlreadySpawned Namespace NitroxClient.GameLogic Assembly NitroxClient.dll WasAlreadySpawned(Entity) public bool WasAlreadySpawned(Entity entity) Parameters entity Entity Returns bool"
  },
  "api/NitroxClient.GameLogic.Entities.WasParentSpawned.html": {
    "href": "api/NitroxClient.GameLogic.Entities.WasParentSpawned.html",
    "title": "Method WasParentSpawned | Nitrox",
    "keywords": "Method WasParentSpawned Namespace NitroxClient.GameLogic Assembly NitroxClient.dll WasParentSpawned(NitroxId) public bool WasParentSpawned(NitroxId id) Parameters id NitroxId Returns bool"
  },
  "api/NitroxClient.GameLogic.Entities.html": {
    "href": "api/NitroxClient.GameLogic.Entities.html",
    "title": "Class Entities | Nitrox",
    "keywords": "Class Entities Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class Entities Inheritance object Entities Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Entities(IPacketSender, ThrottledPacketSender, PlayerManager, ILocalNitroxPlayer) Properties EntitiesToSpawn Methods BroadcastEntitySpawnedByClient(WorldEntity) BroadcastMetadataUpdate(NitroxId, EntityMetadata) BroadcastMetadataUpdateThrottled(NitroxId, EntityMetadata) CleanupExistingEntities(List<Entity>) EnqueueEntitiesToSpawn(List<Entity>) EntityMetadataChanged(object, NitroxId) EntityMetadataChangedThrottled(object, NitroxId) IsKnownEntity(NitroxId) IsParentReady(NitroxId) MarkAsSpawned(Entity) RemoveEntity(NitroxId) RemoveEntityHierarchy(Entity) Allows the ability to respawn an entity and its entire hierarchy. Callers are responsible for ensuring the entity is no longer in the world. RequireEntityType(NitroxId) SpawnBatchAsync(List<Entity>, bool, bool) SpawnEntityAsync(Entity, bool) WasAlreadySpawned(Entity) WasParentSpawned(NitroxId)"
  },
  "api/NitroxClient.GameLogic.EquipmentSlots.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.EquipmentSlots.-ctor.html",
    "title": "Constructor EquipmentSlots | Nitrox",
    "keywords": "Constructor EquipmentSlots Namespace NitroxClient.GameLogic Assembly NitroxClient.dll EquipmentSlots(IPacketSender, Entities) public EquipmentSlots(IPacketSender packetSender, Entities entities) Parameters packetSender IPacketSender entities Entities"
  },
  "api/NitroxClient.GameLogic.EquipmentSlots.BroadcastEquip.html": {
    "href": "api/NitroxClient.GameLogic.EquipmentSlots.BroadcastEquip.html",
    "title": "Method BroadcastEquip | Nitrox",
    "keywords": "Method BroadcastEquip Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastEquip(Pickupable, GameObject, string) public void BroadcastEquip(Pickupable pickupable, GameObject owner, string slot) Parameters pickupable Pickupable owner GameObject slot string"
  },
  "api/NitroxClient.GameLogic.EquipmentSlots.BroadcastUnequip.html": {
    "href": "api/NitroxClient.GameLogic.EquipmentSlots.BroadcastUnequip.html",
    "title": "Method BroadcastUnequip | Nitrox",
    "keywords": "Method BroadcastUnequip Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastUnequip(Pickupable, GameObject, string) public void BroadcastUnequip(Pickupable pickupable, GameObject owner, string slot) Parameters pickupable Pickupable owner GameObject slot string"
  },
  "api/NitroxClient.GameLogic.EquipmentSlots.html": {
    "href": "api/NitroxClient.GameLogic.EquipmentSlots.html",
    "title": "Class EquipmentSlots | Nitrox",
    "keywords": "Class EquipmentSlots Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class EquipmentSlots Inheritance object EquipmentSlots Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EquipmentSlots(IPacketSender, Entities) Methods BroadcastEquip(Pickupable, GameObject, string) BroadcastUnequip(Pickupable, GameObject, string)"
  },
  "api/NitroxClient.GameLogic.ExosuitModuleEvent.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.ExosuitModuleEvent.-ctor.html",
    "title": "Constructor ExosuitModuleEvent | Nitrox",
    "keywords": "Constructor ExosuitModuleEvent Namespace NitroxClient.GameLogic Assembly NitroxClient.dll ExosuitModuleEvent(IPacketSender) public ExosuitModuleEvent(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.ExosuitModuleEvent.BroadcastArmAction.html": {
    "href": "api/NitroxClient.GameLogic.ExosuitModuleEvent.BroadcastArmAction.html",
    "title": "Method BroadcastArmAction | Nitrox",
    "keywords": "Method BroadcastArmAction Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastArmAction(TechType, IExosuitArm, ExosuitArmAction, Vector3?, Quaternion?) public void BroadcastArmAction(TechType techType, IExosuitArm exosuitArm, ExosuitArmAction armAction, Vector3? opVector, Quaternion? opRotation) Parameters techType TechType exosuitArm IExosuitArm armAction ExosuitArmAction opVector Vector3? opRotation Quaternion? BroadcastArmAction(TechType, IExosuitArm, ExosuitArmAction) public void BroadcastArmAction(TechType techType, IExosuitArm exosuitArm, ExosuitArmAction armAction) Parameters techType TechType exosuitArm IExosuitArm armAction ExosuitArmAction"
  },
  "api/NitroxClient.GameLogic.ExosuitModuleEvent.BroadcastClawUse.html": {
    "href": "api/NitroxClient.GameLogic.ExosuitModuleEvent.BroadcastClawUse.html",
    "title": "Method BroadcastClawUse | Nitrox",
    "keywords": "Method BroadcastClawUse Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastClawUse(ExosuitClawArm, float) public void BroadcastClawUse(ExosuitClawArm clawArm, float cooldown) Parameters clawArm ExosuitClawArm cooldown float"
  },
  "api/NitroxClient.GameLogic.ExosuitModuleEvent.UseClaw.html": {
    "href": "api/NitroxClient.GameLogic.ExosuitModuleEvent.UseClaw.html",
    "title": "Method UseClaw | Nitrox",
    "keywords": "Method UseClaw Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UseClaw(ExosuitClawArm, ExosuitArmAction) public void UseClaw(ExosuitClawArm clawArm, ExosuitArmAction armAction) Parameters clawArm ExosuitClawArm armAction ExosuitArmAction"
  },
  "api/NitroxClient.GameLogic.ExosuitModuleEvent.UseDrill.html": {
    "href": "api/NitroxClient.GameLogic.ExosuitModuleEvent.UseDrill.html",
    "title": "Method UseDrill | Nitrox",
    "keywords": "Method UseDrill Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UseDrill(ExosuitDrillArm, ExosuitArmAction) public void UseDrill(ExosuitDrillArm drillArm, ExosuitArmAction armAction) Parameters drillArm ExosuitDrillArm armAction ExosuitArmAction"
  },
  "api/NitroxClient.GameLogic.ExosuitModuleEvent.UseGrappling.html": {
    "href": "api/NitroxClient.GameLogic.ExosuitModuleEvent.UseGrappling.html",
    "title": "Method UseGrappling | Nitrox",
    "keywords": "Method UseGrappling Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UseGrappling(ExosuitGrapplingArm, ExosuitArmAction, Vector3?) public void UseGrappling(ExosuitGrapplingArm grapplingArm, ExosuitArmAction armAction, Vector3? opHitVector) Parameters grapplingArm ExosuitGrapplingArm armAction ExosuitArmAction opHitVector Vector3?"
  },
  "api/NitroxClient.GameLogic.ExosuitModuleEvent.UseTorpedo.html": {
    "href": "api/NitroxClient.GameLogic.ExosuitModuleEvent.UseTorpedo.html",
    "title": "Method UseTorpedo | Nitrox",
    "keywords": "Method UseTorpedo Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UseTorpedo(ExosuitTorpedoArm, ExosuitArmAction, Vector3?, Quaternion?) public void UseTorpedo(ExosuitTorpedoArm torpedoArm, ExosuitArmAction armAction, Vector3? opVector, Quaternion? opRotation) Parameters torpedoArm ExosuitTorpedoArm armAction ExosuitArmAction opVector Vector3? opRotation Quaternion?"
  },
  "api/NitroxClient.GameLogic.ExosuitModuleEvent.html": {
    "href": "api/NitroxClient.GameLogic.ExosuitModuleEvent.html",
    "title": "Class ExosuitModuleEvent | Nitrox",
    "keywords": "Class ExosuitModuleEvent Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class ExosuitModuleEvent Inheritance object ExosuitModuleEvent Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ExosuitModuleEvent(IPacketSender) Methods BroadcastArmAction(TechType, IExosuitArm, ExosuitArmAction) BroadcastArmAction(TechType, IExosuitArm, ExosuitArmAction, Vector3?, Quaternion?) BroadcastClawUse(ExosuitClawArm, float) UseClaw(ExosuitClawArm, ExosuitArmAction) UseDrill(ExosuitDrillArm, ExosuitArmAction) UseGrappling(ExosuitGrapplingArm, ExosuitArmAction, Vector3?) UseTorpedo(ExosuitTorpedoArm, ExosuitArmAction, Vector3?, Quaternion?)"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSuppressor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSuppressor.-ctor.html",
    "title": "Constructor FMODSuppressor | Nitrox",
    "keywords": "Constructor FMODSuppressor Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll FMODSuppressor() public FMODSuppressor()"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSuppressor.Dispose.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSuppressor.Dispose.html",
    "title": "Method Dispose | Nitrox",
    "keywords": "Method Dispose Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSuppressor.SuppressFMODEvents.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSuppressor.SuppressFMODEvents.html",
    "title": "Field SuppressFMODEvents | Nitrox",
    "keywords": "Field SuppressFMODEvents Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll public static bool SuppressFMODEvents Returns bool"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSuppressor.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSuppressor.html",
    "title": "Class FMODSuppressor | Nitrox",
    "keywords": "Class FMODSuppressor Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll public class FMODSuppressor : IDisposable Inheritance object FMODSuppressor Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FMODSuppressor() Fields SuppressFMODEvents Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources."
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSystem.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSystem.-ctor.html",
    "title": "Constructor FMODSystem | Nitrox",
    "keywords": "Constructor FMODSystem Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll FMODSystem(IPacketSender) public FMODSystem(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSystem.IsWhitelisted.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSystem.IsWhitelisted.html",
    "title": "Method IsWhitelisted | Nitrox",
    "keywords": "Method IsWhitelisted Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll IsWhitelisted(string) public bool IsWhitelisted(string path) Parameters path string Returns bool IsWhitelisted(string, out bool, out float) public bool IsWhitelisted(string path, out bool isGlobal, out float radius) Parameters path string isGlobal bool radius float Returns bool"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSystem.PlayAsset.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSystem.PlayAsset.html",
    "title": "Method PlayAsset | Nitrox",
    "keywords": "Method PlayAsset Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll PlayAsset(string, NitroxVector3, float, float, bool) public void PlayAsset(string path, NitroxVector3 position, float volume, float radius, bool isGlobal) Parameters path string position NitroxVector3 volume float radius float isGlobal bool"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSystem.PlayCustomEmitter.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSystem.PlayCustomEmitter.html",
    "title": "Method PlayCustomEmitter | Nitrox",
    "keywords": "Method PlayCustomEmitter Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll PlayCustomEmitter(NitroxId, string, bool) public void PlayCustomEmitter(NitroxId id, string assetPath, bool play) Parameters id NitroxId assetPath string play bool"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSystem.PlayCustomLoopingEmitter.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSystem.PlayCustomLoopingEmitter.html",
    "title": "Method PlayCustomLoopingEmitter | Nitrox",
    "keywords": "Method PlayCustomLoopingEmitter Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll PlayCustomLoopingEmitter(NitroxId, string) public void PlayCustomLoopingEmitter(NitroxId id, string assetPath) Parameters id NitroxId assetPath string"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSystem.PlayStudioEmitter.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSystem.PlayStudioEmitter.html",
    "title": "Method PlayStudioEmitter | Nitrox",
    "keywords": "Method PlayStudioEmitter Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll PlayStudioEmitter(NitroxId, string, bool, bool) public void PlayStudioEmitter(NitroxId id, string assetPath, bool play, bool allowFadeout) Parameters id NitroxId assetPath string play bool allowFadeout bool"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSystem.SoundDataList.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSystem.SoundDataList.html",
    "title": "Property SoundDataList | Nitrox",
    "keywords": "Property SoundDataList Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll SoundDataList public Dictionary<string, SoundData> SoundDataList { get; } Property Value Dictionary<string, SoundData>"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSystem.SuppressSounds.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSystem.SuppressSounds.html",
    "title": "Method SuppressSounds | Nitrox",
    "keywords": "Method SuppressSounds Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll SuppressSounds() public static FMODSuppressor SuppressSounds() Returns FMODSuppressor"
  },
  "api/NitroxClient.GameLogic.FMOD.FMODSystem.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.FMODSystem.html",
    "title": "Class FMODSystem | Nitrox",
    "keywords": "Class FMODSystem Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll public class FMODSystem Inheritance object FMODSystem Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FMODSystem(IPacketSender) Properties SoundDataList Methods IsWhitelisted(string) IsWhitelisted(string, out bool, out float) PlayAsset(string, NitroxVector3, float, float, bool) PlayCustomEmitter(NitroxId, string, bool) PlayCustomLoopingEmitter(NitroxId, string) PlayStudioEmitter(NitroxId, string, bool, bool) SuppressSounds()"
  },
  "api/NitroxClient.GameLogic.FMOD.SoundData.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.SoundData.-ctor.html",
    "title": "Constructor SoundData | Nitrox",
    "keywords": "Constructor SoundData Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll SoundData(bool, bool, float) public SoundData(bool isWhitelisted, bool isGlobal, float soundRadius) Parameters isWhitelisted bool isGlobal bool soundRadius float"
  },
  "api/NitroxClient.GameLogic.FMOD.SoundData.IsGlobal.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.SoundData.IsGlobal.html",
    "title": "Property IsGlobal | Nitrox",
    "keywords": "Property IsGlobal Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll IsGlobal public bool IsGlobal { get; } Property Value bool"
  },
  "api/NitroxClient.GameLogic.FMOD.SoundData.IsWhitelisted.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.SoundData.IsWhitelisted.html",
    "title": "Property IsWhitelisted | Nitrox",
    "keywords": "Property IsWhitelisted Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll IsWhitelisted public bool IsWhitelisted { get; } Property Value bool"
  },
  "api/NitroxClient.GameLogic.FMOD.SoundData.SoundRadius.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.SoundData.SoundRadius.html",
    "title": "Property SoundRadius | Nitrox",
    "keywords": "Property SoundRadius Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll SoundRadius public float SoundRadius { get; } Property Value float"
  },
  "api/NitroxClient.GameLogic.FMOD.SoundData.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.SoundData.html",
    "title": "Struct SoundData | Nitrox",
    "keywords": "Struct SoundData Namespace NitroxClient.GameLogic.FMOD Assembly NitroxClient.dll public readonly struct SoundData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SoundData(bool, bool, float) Properties IsGlobal IsWhitelisted SoundRadius"
  },
  "api/NitroxClient.GameLogic.FMOD.html": {
    "href": "api/NitroxClient.GameLogic.FMOD.html",
    "title": "Namespace NitroxClient.GameLogic.FMOD | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.FMOD Classes FMODSuppressor FMODSystem Structs SoundData"
  },
  "api/NitroxClient.GameLogic.Fires.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Fires.-ctor.html",
    "title": "Constructor Fires | Nitrox",
    "keywords": "Constructor Fires Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Fires(IPacketSender) public Fires(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.Fires.Create.html": {
    "href": "api/NitroxClient.GameLogic.Fires.Create.html",
    "title": "Method Create | Nitrox",
    "keywords": "Method Create Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Create(CyclopsFireData) Create a new Fire. Majority of code copied from SubFire.CreateFire(SubFire.RoomFire). Currently does not support Fires created outside of a Cyclops public void Create(CyclopsFireData fireData) Parameters fireData CyclopsFireData"
  },
  "api/NitroxClient.GameLogic.Fires.OnCreate.html": {
    "href": "api/NitroxClient.GameLogic.Fires.OnCreate.html",
    "title": "Method OnCreate | Nitrox",
    "keywords": "Method OnCreate Namespace NitroxClient.GameLogic Assembly NitroxClient.dll OnCreate(Fire, RoomFire, int) Triggered when SubFire.CreateFire(SubFire.RoomFire) is executed. To create a new fire manually, call Create(CyclopsFireData) public void OnCreate(Fire fire, SubFire.RoomFire room, int nodeIndex) Parameters fire Fire room SubFire.RoomFire nodeIndex int"
  },
  "api/NitroxClient.GameLogic.Fires.OnDouse.html": {
    "href": "api/NitroxClient.GameLogic.Fires.OnDouse.html",
    "title": "Method OnDouse | Nitrox",
    "keywords": "Method OnDouse Namespace NitroxClient.GameLogic Assembly NitroxClient.dll OnDouse(Fire, float) Triggered when Douse(float) is executed. To Douse a fire manually, retrieve the Fire call the Douse method public void OnDouse(Fire fire, float douseAmount) Parameters fire Fire douseAmount float"
  },
  "api/NitroxClient.GameLogic.Fires.html": {
    "href": "api/NitroxClient.GameLogic.Fires.html",
    "title": "Class Fires | Nitrox",
    "keywords": "Class Fires Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Handles all of the Fires in the game. Currently, the only known Fire spawning is in SubFire.CreateFire(SubFire.RoomFire). The fires in the Aurora come loaded with the map and do not grow in size. If we want to create a Fire spawning mechanic outside of Cyclops fires, it should be added to Create(CyclopsFireData). Fire dousing goes by Id and does not need to be modified public class Fires Inheritance object Fires Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Fires(IPacketSender) Methods Create(CyclopsFireData) Create a new Fire. Majority of code copied from SubFire.CreateFire(SubFire.RoomFire). Currently does not support Fires created outside of a Cyclops OnCreate(Fire, RoomFire, int) Triggered when SubFire.CreateFire(SubFire.RoomFire) is executed. To create a new fire manually, call Create(CyclopsFireData) OnDouse(Fire, float) Triggered when Douse(float) is executed. To Douse a fire manually, retrieve the Fire call the Douse method"
  },
  "api/NitroxClient.GameLogic.HUD.Components.ButtonTooltip.GetTooltip.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.ButtonTooltip.GetTooltip.html",
    "title": "Method GetTooltip | Nitrox",
    "keywords": "Method GetTooltip Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll GetTooltip(TooltipData) public void GetTooltip(TooltipData tooltip) Parameters tooltip TooltipData"
  },
  "api/NitroxClient.GameLogic.HUD.Components.ButtonTooltip.TooltipText.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.ButtonTooltip.TooltipText.html",
    "title": "Property TooltipText | Nitrox",
    "keywords": "Property TooltipText Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll TooltipText public string TooltipText { get; set; } Property Value string"
  },
  "api/NitroxClient.GameLogic.HUD.Components.ButtonTooltip.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.ButtonTooltip.html",
    "title": "Class ButtonTooltip | Nitrox",
    "keywords": "Class ButtonTooltip Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll Shows the ToolipText when hovering the GameObject containg this component public class ButtonTooltip : MonoBehaviour, ITooltip Inheritance object Object Component Behaviour MonoBehaviour ButtonTooltip Implements ITooltip Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Properties TooltipText showTooltipOnDrag Methods GetTooltip(TooltipData)"
  },
  "api/NitroxClient.GameLogic.HUD.Components.ButtonTooltip.showTooltipOnDrag.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.ButtonTooltip.showTooltipOnDrag.html",
    "title": "Property showTooltipOnDrag | Nitrox",
    "keywords": "Property showTooltipOnDrag Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll showTooltipOnDrag public bool showTooltipOnDrag { get; } Property Value bool"
  },
  "api/NitroxClient.GameLogic.HUD.Components.DenyOwnershipHand.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.DenyOwnershipHand.html",
    "title": "Class DenyOwnershipHand | Nitrox",
    "keywords": "Class DenyOwnershipHand Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public class DenyOwnershipHand : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DenyOwnershipHand Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool)"
  },
  "api/NitroxClient.GameLogic.HUD.Components.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.html",
    "title": "Namespace NitroxClient.GameLogic.HUD.Components | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.HUD.Components Classes ButtonTooltip Shows the ToolipText when hovering the GameObject containg this component DenyOwnershipHand uGUI_PlayerPingEntry"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.Awake.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll Awake() public void Awake()"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.Initialize.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.Initialize.html",
    "title": "Method Initialize | Nitrox",
    "keywords": "Method Initialize Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll Initialize(string, string, uGUI_PlayerListTab) public void Initialize(string id, string name, uGUI_PlayerListTab parent) Parameters id string name string parent uGUI_PlayerListTab"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.IsLocalPlayer.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.IsLocalPlayer.html",
    "title": "Property IsLocalPlayer | Nitrox",
    "keywords": "Property IsLocalPlayer Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll IsLocalPlayer public bool IsLocalPlayer { get; } Property Value bool"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.KickObject.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.KickObject.html",
    "title": "Field KickObject | Nitrox",
    "keywords": "Field KickObject Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public GameObject KickObject Returns GameObject"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.KickSprite.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.KickSprite.html",
    "title": "Field KickSprite | Nitrox",
    "keywords": "Field KickSprite Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public Sprite KickSprite Returns Sprite"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.MuteObject.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.MuteObject.html",
    "title": "Field MuteObject | Nitrox",
    "keywords": "Field MuteObject Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public GameObject MuteObject Returns GameObject"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.MutedSprite.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.MutedSprite.html",
    "title": "Field MutedSprite | Nitrox",
    "keywords": "Field MutedSprite Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public Sprite MutedSprite Returns Sprite"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.OnLanguageChanged.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.OnLanguageChanged.html",
    "title": "Method OnLanguageChanged | Nitrox",
    "keywords": "Method OnLanguageChanged Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll OnLanguageChanged() public void OnLanguageChanged()"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.PlayerName.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.PlayerName.html",
    "title": "Property PlayerName | Nitrox",
    "keywords": "Property PlayerName Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll PlayerName public string PlayerName { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.ShowObject.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.ShowObject.html",
    "title": "Field ShowObject | Nitrox",
    "keywords": "Field ShowObject Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public GameObject ShowObject Returns GameObject"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.Start.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.Start.html",
    "title": "Method Start | Nitrox",
    "keywords": "Method Start Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll Start() public IEnumerator Start() Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.TeleportToMeObject.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.TeleportToMeObject.html",
    "title": "Field TeleportToMeObject | Nitrox",
    "keywords": "Field TeleportToMeObject Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public GameObject TeleportToMeObject Returns GameObject"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.TeleportToMeSprite.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.TeleportToMeSprite.html",
    "title": "Field TeleportToMeSprite | Nitrox",
    "keywords": "Field TeleportToMeSprite Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public Sprite TeleportToMeSprite Returns Sprite"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.TeleportToObject.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.TeleportToObject.html",
    "title": "Field TeleportToObject | Nitrox",
    "keywords": "Field TeleportToObject Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public GameObject TeleportToObject Returns GameObject"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.TeleportToSprite.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.TeleportToSprite.html",
    "title": "Field TeleportToSprite | Nitrox",
    "keywords": "Field TeleportToSprite Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public Sprite TeleportToSprite Returns Sprite"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.Uninitialize.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.Uninitialize.html",
    "title": "Method Uninitialize | Nitrox",
    "keywords": "Method Uninitialize Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll Uninitialize() public void Uninitialize()"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.UnmutedSprite.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.UnmutedSprite.html",
    "title": "Field UnmutedSprite | Nitrox",
    "keywords": "Field UnmutedSprite Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public Sprite UnmutedSprite Returns Sprite"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.UpdateButtonsPosition.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.UpdateButtonsPosition.html",
    "title": "Method UpdateButtonsPosition | Nitrox",
    "keywords": "Method UpdateButtonsPosition Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll UpdateButtonsPosition() public void UpdateButtonsPosition()"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.UpdateEntryForNewPlayer.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.UpdateEntryForNewPlayer.html",
    "title": "Method UpdateEntryForNewPlayer | Nitrox",
    "keywords": "Method UpdateEntryForNewPlayer Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll UpdateEntryForNewPlayer(INitroxPlayer, LocalPlayer, IPacketSender) public void UpdateEntryForNewPlayer(INitroxPlayer newPlayer, LocalPlayer localPlayer, IPacketSender packetSender) Parameters newPlayer INitroxPlayer localPlayer LocalPlayer packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.UpdateLabel.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.UpdateLabel.html",
    "title": "Method UpdateLabel | Nitrox",
    "keywords": "Method UpdateLabel Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll UpdateLabel(string) public void UpdateLabel(string text) Parameters text string"
  },
  "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.html": {
    "href": "api/NitroxClient.GameLogic.HUD.Components.uGUI_PlayerPingEntry.html",
    "title": "Class uGUI_PlayerPingEntry | Nitrox",
    "keywords": "Class uGUI_PlayerPingEntry Namespace NitroxClient.GameLogic.HUD.Components Assembly NitroxClient.dll public class uGUI_PlayerPingEntry : uGUI_PingEntry Inheritance object Object Component Behaviour MonoBehaviour uGUI_PingEntry uGUI_PlayerPingEntry Inherited Members uGUI_PingEntry.iconSize uGUI_PingEntry.visibility uGUI_PingEntry.visibilityIcon uGUI_PingEntry.icon uGUI_PingEntry.label uGUI_PingEntry.colorSelectionIndicator uGUI_PingEntry.colorSelectors uGUI_PingEntry.spriteVisible uGUI_PingEntry.spriteHidden uGUI_PingEntry._rectTransform uGUI_PingEntry.id uGUI_PingEntry.selectables uGUI_PingEntry.Initialize(string, bool, PingType, string, int) uGUI_PingEntry.SetIcon(PingType) uGUI_PingEntry.SetColor0(bool) uGUI_PingEntry.SetColor1(bool) uGUI_PingEntry.SetColor2(bool) uGUI_PingEntry.SetColor3(bool) uGUI_PingEntry.SetColor4(bool) uGUI_PingEntry.SetVisible(bool) uGUI_PingEntry.SetVisit(float) uGUI_PingEntry.UpdateLabel(PingType, string) uGUI_PingEntry.GetSelectables(List<ISelectable>) uGUI_PingEntry.OnButtonVisibilityHover() uGUI_PingEntry.OnColorToggleHover() uGUI_PingEntry.SetColor(int) uGUI_PingEntry.<GetSelectables>b__26_0(GameInput.Button) uGUI_PingEntry.rectTransform MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields KickObject KickSprite MuteObject MutedSprite ShowObject TeleportToMeObject TeleportToMeSprite TeleportToObject TeleportToSprite UnmutedSprite Properties IsLocalPlayer PlayerName Methods Awake() Initialize(string, string, uGUI_PlayerListTab) OnLanguageChanged() Start() Uninitialize() UpdateButtonsPosition() UpdateEntryForNewPlayer(INitroxPlayer, LocalPlayer, IPacketSender) UpdateLabel(string)"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATab.FallbackTabIcon.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATab.FallbackTabIcon.html",
    "title": "Property FallbackTabIcon | Nitrox",
    "keywords": "Property FallbackTabIcon Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll FallbackTabIcon Base game tab from which we will take the icon as a placeholder public abstract PDATab FallbackTabIcon { get; } Property Value PDATab"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATab.KeepPingsVisible.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATab.KeepPingsVisible.html",
    "title": "Property KeepPingsVisible | Nitrox",
    "keywords": "Property KeepPingsVisible Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll KeepPingsVisible Whether or not to render the pings images over the PDA when this PDA tab is open public abstract bool KeepPingsVisible { get; } Property Value bool"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATab.OnInitializePDA.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATab.OnInitializePDA.html",
    "title": "Method OnInitializePDA | Nitrox",
    "keywords": "Method OnInitializePDA Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll OnInitializePDA(uGUI_PDA) Create uGUI_PDATab component thanks to the now existing uGUI_PDA component public abstract void OnInitializePDA(uGUI_PDA uGUI_PDA) Parameters uGUI_PDA uGUI_PDA"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATab.PDATabId.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATab.PDATabId.html",
    "title": "Property PDATabId | Nitrox",
    "keywords": "Property PDATabId Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll PDATabId Should be a new int value that isn't currently used by default game (>7) nor by another custom tab public abstract PDATab PDATabId { get; } Property Value PDATab"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATab.TabIconAssetName.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATab.TabIconAssetName.html",
    "title": "Property TabIconAssetName | Nitrox",
    "keywords": "Property TabIconAssetName Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll TabIconAssetName Asset name for the tab's icon sprite public abstract string TabIconAssetName { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATab.ToolbarTip.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATab.ToolbarTip.html",
    "title": "Property ToolbarTip | Nitrox",
    "keywords": "Property ToolbarTip Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll ToolbarTip Text showing up when hovering the tab icon public abstract string ToolbarTip { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATab.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATab.html",
    "title": "Class NitroxPDATab | Nitrox",
    "keywords": "Class NitroxPDATab Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll public abstract class NitroxPDATab Inheritance object NitroxPDATab Derived PlayerListTab Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties FallbackTabIcon Base game tab from which we will take the icon as a placeholder KeepPingsVisible Whether or not to render the pings images over the PDA when this PDA tab is open PDATabId Should be a new int value that isn't currently used by default game (>7) nor by another custom tab TabIconAssetName Asset name for the tab's icon sprite ToolbarTip Text showing up when hovering the tab icon uGUI_PDATab The uGUI_PDATab component that will be used in-game Methods OnInitializePDA(uGUI_PDA) Create uGUI_PDATab component thanks to the now existing uGUI_PDA component"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATab.uGUI_PDATab.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATab.uGUI_PDATab.html",
    "title": "Property uGUI_PDATab | Nitrox",
    "keywords": "Property uGUI_PDATab Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll uGUI_PDATab The uGUI_PDATab component that will be used in-game public abstract uGUI_PDATab uGUI_PDATab { get; } Property Value uGUI_PDATab"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.-ctor.html",
    "title": "Constructor NitroxPDATabManager | Nitrox",
    "keywords": "Constructor NitroxPDATabManager Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll NitroxPDATabManager() public NitroxPDATabManager()"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.AddTabSprite.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.AddTabSprite.html",
    "title": "Method AddTabSprite | Nitrox",
    "keywords": "Method AddTabSprite Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll AddTabSprite(string, Sprite) public void AddTabSprite(string spriteName, Atlas.Sprite sprite) Parameters spriteName string sprite Atlas.Sprite"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.CustomTabs.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.CustomTabs.html",
    "title": "Field CustomTabs | Nitrox",
    "keywords": "Field CustomTabs Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll public readonly Dictionary<PDATab, NitroxPDATab> CustomTabs Returns Dictionary<PDATab, NitroxPDATab>"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.SetSpriteLoadedCallback.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.SetSpriteLoadedCallback.html",
    "title": "Method SetSpriteLoadedCallback | Nitrox",
    "keywords": "Method SetSpriteLoadedCallback Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll SetSpriteLoadedCallback(string, TabSpriteLoadedEvent) public void SetSpriteLoadedCallback(string tabName, NitroxPDATabManager.TabSpriteLoadedEvent callback) Parameters tabName string callback NitroxPDATabManager.TabSpriteLoadedEvent"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.TabSpriteLoadedEvent.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.TabSpriteLoadedEvent.html",
    "title": "Delegate NitroxPDATabManager.TabSpriteLoadedEvent | Nitrox",
    "keywords": "Delegate NitroxPDATabManager.TabSpriteLoadedEvent Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll public delegate void NitroxPDATabManager.TabSpriteLoadedEvent(Atlas.Sprite sprite) Parameters sprite Atlas.Sprite"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.TryGetTabSprite.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.TryGetTabSprite.html",
    "title": "Method TryGetTabSprite | Nitrox",
    "keywords": "Method TryGetTabSprite Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll TryGetTabSprite(string, out Sprite) public bool TryGetTabSprite(string spriteName, out Atlas.Sprite sprite) Parameters spriteName string sprite Atlas.Sprite Returns bool"
  },
  "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.html": {
    "href": "api/NitroxClient.GameLogic.HUD.NitroxPDATabManager.html",
    "title": "Class NitroxPDATabManager | Nitrox",
    "keywords": "Class NitroxPDATabManager Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll public class NitroxPDATabManager Inheritance object NitroxPDATabManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxPDATabManager() Fields CustomTabs Methods AddTabSprite(string, Sprite) SetSpriteLoadedCallback(string, TabSpriteLoadedEvent) TryGetTabSprite(string, out Sprite)"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.html",
    "title": "Namespace NitroxClient.GameLogic.HUD.PdaTabs | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.HUD.PdaTabs Classes uGUI_PlayerListTab The component containing a new PDA tab based on ping manager tab"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.Awake.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll Awake() public override void Awake()"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.FinishedLoadingAssets.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.FinishedLoadingAssets.html",
    "title": "Property FinishedLoadingAssets | Nitrox",
    "keywords": "Property FinishedLoadingAssets Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll FinishedLoadingAssets public bool FinishedLoadingAssets { get; } Property Value bool"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.GetEntry.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.GetEntry.html",
    "title": "Method GetEntry | Nitrox",
    "keywords": "Method GetEntry Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll GetEntry() public uGUI_PlayerPingEntry GetEntry() Returns uGUI_PlayerPingEntry"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.GetSprite.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.GetSprite.html",
    "title": "Method GetSprite | Nitrox",
    "keywords": "Method GetSprite Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll GetSprite(string) public Sprite GetSprite(string assetName) Parameters assetName string Returns Sprite"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.MakePrefab.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.MakePrefab.html",
    "title": "Method MakePrefab | Nitrox",
    "keywords": "Method MakePrefab Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll MakePrefab(GameObject) public void MakePrefab(GameObject basePrefab) Parameters basePrefab GameObject"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.OnDestroy.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.OnDestroy.html",
    "title": "Method OnDestroy | Nitrox",
    "keywords": "Method OnDestroy Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll OnDestroy() public void OnDestroy()"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.OnEnable.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.OnEnable.html",
    "title": "Method OnEnable | Nitrox",
    "keywords": "Method OnEnable Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll OnEnable() public void OnEnable()"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.OnLanguageChanged.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.OnLanguageChanged.html",
    "title": "Method OnLanguageChanged | Nitrox",
    "keywords": "Method OnLanguageChanged Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll OnLanguageChanged() public override void OnLanguageChanged()"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.OnLateUpdate.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.OnLateUpdate.html",
    "title": "Method OnLateUpdate | Nitrox",
    "keywords": "Method OnLateUpdate Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll OnLateUpdate(bool) public override void OnLateUpdate(bool _) Parameters _ bool"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.Start.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.Start.html",
    "title": "Method Start | Nitrox",
    "keywords": "Method Start Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll Start() public IEnumerator Start() Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.UpdateEntries.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.UpdateEntries.html",
    "title": "Method UpdateEntries | Nitrox",
    "keywords": "Method UpdateEntries Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll UpdateEntries() public void UpdateEntries()"
  },
  "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PdaTabs.uGUI_PlayerListTab.html",
    "title": "Class uGUI_PlayerListTab | Nitrox",
    "keywords": "Class uGUI_PlayerListTab Namespace NitroxClient.GameLogic.HUD.PdaTabs Assembly NitroxClient.dll The component containing a new PDA tab based on ping manager tab public class uGUI_PlayerListTab : uGUI_PingTab, uGUI_INavigableIconGrid Inheritance object Object Component Behaviour MonoBehaviour uGUI_PDATab uGUI_PingTab uGUI_PlayerListTab Implements uGUI_INavigableIconGrid Inherited Members uGUI_PingTab.pingManagerLabelKey uGUI_PingTab.pingManagerLabel uGUI_PingTab.visibilityToggle uGUI_PingTab.visibilityToggleIndicator uGUI_PingTab.content uGUI_PingTab.pingCanvas uGUI_PingTab.scrollRect uGUI_PingTab.prefabEntry uGUI_PingTab.spriteShowAll uGUI_PingTab.spriteHideAll uGUI_PingTab._isDirty uGUI_PingTab.entries uGUI_PingTab.tempSort uGUI_PingTab.poolPings uGUI_PingTab.selectableVisibilityToggle uGUI_PingTab.Open() uGUI_PingTab.Close() uGUI_PingTab.GetInitialGrid() uGUI_PingTab.SetEntriesVisibility(bool) uGUI_PingTab.OnHoverButtonAll() uGUI_PingTab.PlayHoverSound() uGUI_PingTab.OnAdd(PingInstance) uGUI_PingTab.OnRemove(string) uGUI_PingTab.OnRename(PingInstance) uGUI_PingTab.OnIconChange(PingInstance) uGUI_PingTab.OnVisit(PingInstance, float) uGUI_PingTab.uGUI_INavigableIconGrid.GetSelectedItem() uGUI_PingTab.uGUI_INavigableIconGrid.GetSelectedIcon() uGUI_PingTab.uGUI_INavigableIconGrid.SelectItem(object) uGUI_PingTab.uGUI_INavigableIconGrid.DeselectItem() uGUI_PingTab.uGUI_INavigableIconGrid.SelectFirstItem() uGUI_PingTab.uGUI_INavigableIconGrid.SelectItemClosestToPosition(Vector3) uGUI_PingTab.uGUI_INavigableIconGrid.SelectItemInDirection(int, int) uGUI_PingTab.uGUI_INavigableIconGrid.GetNavigableGridInDirection(int, int) uGUI_PingTab.<Awake>b__18_0(GameInput.Button) uGUI_PingTab.notificationsCount uGUI_PingTab.uGUI_INavigableIconGrid.ShowSelector uGUI_PingTab.uGUI_INavigableIconGrid.EmulateRaycast uGUI_PDATab.pda uGUI_PDATab.Register(uGUI_PDA) uGUI_PDATab.OnOpenPDA(PDATab, bool) uGUI_PDATab.OnClosePDA() uGUI_PDATab.OnWarmUp() uGUI_PDATab.OnUpdate(bool) uGUI_PDATab.OnButtonDown(GameInput.Button) uGUI_PDATab.ClosePDA() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Properties FinishedLoadingAssets Methods Awake() GetEntry() GetSprite(string) MakePrefab(GameObject) OnDestroy() OnEnable() OnLanguageChanged() OnLateUpdate(bool) Start() UpdateEntries()"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerListTab.FallbackTabIcon.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerListTab.FallbackTabIcon.html",
    "title": "Property FallbackTabIcon | Nitrox",
    "keywords": "Property FallbackTabIcon Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll FallbackTabIcon Base game tab from which we will take the icon as a placeholder public override PDATab FallbackTabIcon { get; } Property Value PDATab"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerListTab.KeepPingsVisible.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerListTab.KeepPingsVisible.html",
    "title": "Property KeepPingsVisible | Nitrox",
    "keywords": "Property KeepPingsVisible Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll KeepPingsVisible Whether or not to render the pings images over the PDA when this PDA tab is open public override bool KeepPingsVisible { get; } Property Value bool"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerListTab.OnInitializePDA.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerListTab.OnInitializePDA.html",
    "title": "Method OnInitializePDA | Nitrox",
    "keywords": "Method OnInitializePDA Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll OnInitializePDA(uGUI_PDA) Create uGUI_PDATab component thanks to the now existing uGUI_PDA component public override void OnInitializePDA(uGUI_PDA uGUI_PDA) Parameters uGUI_PDA uGUI_PDA"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerListTab.PDATabId.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerListTab.PDATabId.html",
    "title": "Property PDATabId | Nitrox",
    "keywords": "Property PDATabId Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll PDATabId Should be a new int value that isn't currently used by default game (>7) nor by another custom tab public override PDATab PDATabId { get; } Property Value PDATab"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerListTab.TabIconAssetName.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerListTab.TabIconAssetName.html",
    "title": "Property TabIconAssetName | Nitrox",
    "keywords": "Property TabIconAssetName Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll TabIconAssetName Asset name for the tab's icon sprite public override string TabIconAssetName { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerListTab.ToolbarTip.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerListTab.ToolbarTip.html",
    "title": "Property ToolbarTip | Nitrox",
    "keywords": "Property ToolbarTip Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll ToolbarTip Text showing up when hovering the tab icon public override string ToolbarTip { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerListTab.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerListTab.html",
    "title": "Class PlayerListTab | Nitrox",
    "keywords": "Class PlayerListTab Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll public class PlayerListTab : NitroxPDATab Inheritance object NitroxPDATab PlayerListTab Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties FallbackTabIcon Base game tab from which we will take the icon as a placeholder KeepPingsVisible Whether or not to render the pings images over the PDA when this PDA tab is open PDATabId Should be a new int value that isn't currently used by default game (>7) nor by another custom tab TabIconAssetName Asset name for the tab's icon sprite ToolbarTip Text showing up when hovering the tab icon uGUI_PDATab The uGUI_PDATab component that will be used in-game Methods OnInitializePDA(uGUI_PDA) Create uGUI_PDATab component thanks to the now existing uGUI_PDA component"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerListTab.uGUI_PDATab.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerListTab.uGUI_PDATab.html",
    "title": "Property uGUI_PDATab | Nitrox",
    "keywords": "Property uGUI_PDATab Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll uGUI_PDATab The uGUI_PDATab component that will be used in-game public override uGUI_PDATab uGUI_PDATab { get; } Property Value uGUI_PDATab"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerVitalsManager.CreateOrFindForPlayer.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerVitalsManager.CreateOrFindForPlayer.html",
    "title": "Method CreateOrFindForPlayer | Nitrox",
    "keywords": "Method CreateOrFindForPlayer Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll CreateOrFindForPlayer(RemotePlayer) public RemotePlayerVitals CreateOrFindForPlayer(RemotePlayer remotePlayer) Parameters remotePlayer RemotePlayer Returns RemotePlayerVitals"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerVitalsManager.RemoveForPlayer.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerVitalsManager.RemoveForPlayer.html",
    "title": "Method RemoveForPlayer | Nitrox",
    "keywords": "Method RemoveForPlayer Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll RemoveForPlayer(ushort) public void RemoveForPlayer(ushort playerId) Parameters playerId ushort"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerVitalsManager.TryFindForPlayer.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerVitalsManager.TryFindForPlayer.html",
    "title": "Method TryFindForPlayer | Nitrox",
    "keywords": "Method TryFindForPlayer Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll TryFindForPlayer(ushort, out RemotePlayerVitals) public bool TryFindForPlayer(ushort playerId, out RemotePlayerVitals vitals) Parameters playerId ushort vitals RemotePlayerVitals Returns bool"
  },
  "api/NitroxClient.GameLogic.HUD.PlayerVitalsManager.html": {
    "href": "api/NitroxClient.GameLogic.HUD.PlayerVitalsManager.html",
    "title": "Class PlayerVitalsManager | Nitrox",
    "keywords": "Class PlayerVitalsManager Namespace NitroxClient.GameLogic.HUD Assembly NitroxClient.dll public class PlayerVitalsManager Inheritance object PlayerVitalsManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CreateOrFindForPlayer(RemotePlayer) RemoveForPlayer(ushort) TryFindForPlayer(ushort, out RemotePlayerVitals)"
  },
  "api/NitroxClient.GameLogic.HUD.html": {
    "href": "api/NitroxClient.GameLogic.HUD.html",
    "title": "Namespace NitroxClient.GameLogic.HUD | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.HUD Namespaces NitroxClient.GameLogic.HUD.Components NitroxClient.GameLogic.HUD.PdaTabs Classes NitroxPDATab NitroxPDATabManager PlayerListTab PlayerVitalsManager Delegates NitroxPDATabManager.TabSpriteLoadedEvent"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.CompressBytes.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.CompressBytes.html",
    "title": "Method CompressBytes | Nitrox",
    "keywords": "Method CompressBytes Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll CompressBytes(byte[]) public static byte[] CompressBytes(byte[] array) Parameters array byte[] Returns byte[]"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.CompressData.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.CompressData.html",
    "title": "Method CompressData | Nitrox",
    "keywords": "Method CompressData Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll CompressData<TInput>(TInput[], Converter<TInput, byte>) public static byte[] CompressData<TInput>(TInput[] array, Converter<TInput, byte> converter) Parameters array TInput[] converter Converter<TInput, byte> Returns byte[] Type Parameters TInput"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.CompressStream.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.CompressStream.html",
    "title": "Method CompressStream | Nitrox",
    "keywords": "Method CompressStream Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll CompressStream(Stream, byte[]) public static void CompressStream(Stream stream, byte[] array) Parameters stream Stream array byte[]"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.DecompressBytes.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.DecompressBytes.html",
    "title": "Method DecompressBytes | Nitrox",
    "keywords": "Method DecompressBytes Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll DecompressBytes(byte[], int) public static byte[] DecompressBytes(byte[] array, int size) Parameters array byte[] size int Returns byte[]"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.DecompressData.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.DecompressData.html",
    "title": "Method DecompressData | Nitrox",
    "keywords": "Method DecompressData Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll DecompressData<TInput>(byte[], int, Converter<byte, TInput>) public static TInput[] DecompressData<TInput>(byte[] array, int size, Converter<byte, TInput> converter) Parameters array byte[] size int converter Converter<byte, TInput> Returns TInput[] Type Parameters TInput"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.DecompressStream.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.DecompressStream.html",
    "title": "Method DecompressStream | Nitrox",
    "keywords": "Method DecompressStream Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll DecompressStream(Stream, int) public static byte[] DecompressStream(Stream stream, int size) Parameters stream Stream size int Returns byte[]"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelper.html",
    "title": "Class BaseSerializationHelper | Nitrox",
    "keywords": "Class BaseSerializationHelper Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll public static class BaseSerializationHelper Inheritance object BaseSerializationHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CompressBytes(byte[]) CompressData<TInput>(TInput[], Converter<TInput, byte>) CompressStream(Stream, byte[]) DecompressBytes(byte[], int) DecompressData<TInput>(byte[], int, Converter<byte, TInput>) DecompressStream(Stream, int)"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelperTest.TestAllMaxBytes.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelperTest.TestAllMaxBytes.html",
    "title": "Method TestAllMaxBytes | Nitrox",
    "keywords": "Method TestAllMaxBytes Namespace NitroxClient.GameLogic.Helper Assembly Nitrox.Test.dll TestAllMaxBytes() [TestMethod] public void TestAllMaxBytes()"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelperTest.TestAllZeroBytes.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelperTest.TestAllZeroBytes.html",
    "title": "Method TestAllZeroBytes | Nitrox",
    "keywords": "Method TestAllZeroBytes Namespace NitroxClient.GameLogic.Helper Assembly Nitrox.Test.dll TestAllZeroBytes() [TestMethod] public void TestAllZeroBytes()"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelperTest.TestBytesRestoring.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelperTest.TestBytesRestoring.html",
    "title": "Method TestBytesRestoring | Nitrox",
    "keywords": "Method TestBytesRestoring Namespace NitroxClient.GameLogic.Helper Assembly Nitrox.Test.dll TestBytesRestoring() [TestMethod] public void TestBytesRestoring()"
  },
  "api/NitroxClient.GameLogic.Helper.BaseSerializationHelperTest.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BaseSerializationHelperTest.html",
    "title": "Class BaseSerializationHelperTest | Nitrox",
    "keywords": "Class BaseSerializationHelperTest Namespace NitroxClient.GameLogic.Helper Assembly Nitrox.Test.dll [TestClass] public class BaseSerializationHelperTest Inheritance object BaseSerializationHelperTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods TestAllMaxBytes() TestAllZeroBytes() TestBytesRestoring()"
  },
  "api/NitroxClient.GameLogic.Helper.BatteryChildEntityHelper.PopulateInstalledBattery.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BatteryChildEntityHelper.PopulateInstalledBattery.html",
    "title": "Method PopulateInstalledBattery | Nitrox",
    "keywords": "Method PopulateInstalledBattery Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll PopulateInstalledBattery(EnergyMixin, List<Entity>, NitroxId) public static void PopulateInstalledBattery(EnergyMixin energyMixin, List<Entity> toPopulate, NitroxId parentId) Parameters energyMixin EnergyMixin toPopulate List<Entity> parentId NitroxId"
  },
  "api/NitroxClient.GameLogic.Helper.BatteryChildEntityHelper.TryPopulateInstalledBattery.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BatteryChildEntityHelper.TryPopulateInstalledBattery.html",
    "title": "Method TryPopulateInstalledBattery | Nitrox",
    "keywords": "Method TryPopulateInstalledBattery Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll TryPopulateInstalledBattery(GameObject, List<Entity>, NitroxId) public static void TryPopulateInstalledBattery(GameObject gameObject, List<Entity> toPopulate, NitroxId parentId) Parameters gameObject GameObject toPopulate List<Entity> parentId NitroxId"
  },
  "api/NitroxClient.GameLogic.Helper.BatteryChildEntityHelper.html": {
    "href": "api/NitroxClient.GameLogic.Helper.BatteryChildEntityHelper.html",
    "title": "Class BatteryChildEntityHelper | Nitrox",
    "keywords": "Class BatteryChildEntityHelper Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll Vehicles and items are created without a battery loaded into them. Subnautica usually spawns these in async; however, this is disabled in nitrox so we can properly tag the id. Here we create the installed battery (with a new NitroxId) and have the entity spawner take care of loading it in. public static class BatteryChildEntityHelper Inheritance object BatteryChildEntityHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods PopulateInstalledBattery(EnergyMixin, List<Entity>, NitroxId) TryPopulateInstalledBattery(GameObject, List<Entity>, NitroxId)"
  },
  "api/NitroxClient.GameLogic.Helper.EquipmentHelper.FindEquipmentComponent.html": {
    "href": "api/NitroxClient.GameLogic.Helper.EquipmentHelper.FindEquipmentComponent.html",
    "title": "Method FindEquipmentComponent | Nitrox",
    "keywords": "Method FindEquipmentComponent Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll FindEquipmentComponent(GameObject) public static Optional<Equipment> FindEquipmentComponent(GameObject owner) Parameters owner GameObject Returns Optional<Equipment>"
  },
  "api/NitroxClient.GameLogic.Helper.EquipmentHelper.html": {
    "href": "api/NitroxClient.GameLogic.Helper.EquipmentHelper.html",
    "title": "Class EquipmentHelper | Nitrox",
    "keywords": "Class EquipmentHelper Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll public class EquipmentHelper Inheritance object EquipmentHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FindEquipmentComponent(GameObject)"
  },
  "api/NitroxClient.GameLogic.Helper.InventoryContainerHelper.TryGetContainerByOwner.html": {
    "href": "api/NitroxClient.GameLogic.Helper.InventoryContainerHelper.TryGetContainerByOwner.html",
    "title": "Method TryGetContainerByOwner | Nitrox",
    "keywords": "Method TryGetContainerByOwner Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll TryGetContainerByOwner(GameObject) public static Optional<ItemsContainer> TryGetContainerByOwner(GameObject owner) Parameters owner GameObject Returns Optional<ItemsContainer>"
  },
  "api/NitroxClient.GameLogic.Helper.InventoryContainerHelper.TryGetOwnerId.html": {
    "href": "api/NitroxClient.GameLogic.Helper.InventoryContainerHelper.TryGetOwnerId.html",
    "title": "Method TryGetOwnerId | Nitrox",
    "keywords": "Method TryGetOwnerId Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll TryGetOwnerId(Transform, out NitroxId) public static bool TryGetOwnerId(Transform ownerTransform, out NitroxId ownerId) Parameters ownerTransform Transform ownerId NitroxId Returns bool"
  },
  "api/NitroxClient.GameLogic.Helper.InventoryContainerHelper.html": {
    "href": "api/NitroxClient.GameLogic.Helper.InventoryContainerHelper.html",
    "title": "Class InventoryContainerHelper | Nitrox",
    "keywords": "Class InventoryContainerHelper Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll public class InventoryContainerHelper Inheritance object InventoryContainerHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods TryGetContainerByOwner(GameObject) TryGetOwnerId(Transform, out NitroxId)"
  },
  "api/NitroxClient.GameLogic.Helper.SerializationHelper.BLOCK_HAND_PLACED_DESERIALIZATION.html": {
    "href": "api/NitroxClient.GameLogic.Helper.SerializationHelper.BLOCK_HAND_PLACED_DESERIALIZATION.html",
    "title": "Field BLOCK_HAND_PLACED_DESERIALIZATION | Nitrox",
    "keywords": "Field BLOCK_HAND_PLACED_DESERIALIZATION Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll public static bool BLOCK_HAND_PLACED_DESERIALIZATION Returns bool"
  },
  "api/NitroxClient.GameLogic.Helper.SerializationHelper.GetBytes.html": {
    "href": "api/NitroxClient.GameLogic.Helper.SerializationHelper.GetBytes.html",
    "title": "Method GetBytes | Nitrox",
    "keywords": "Method GetBytes Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll GetBytes(GameObject) public static byte[] GetBytes(GameObject gameObject) Parameters gameObject GameObject Returns byte[]"
  },
  "api/NitroxClient.GameLogic.Helper.SerializationHelper.GetGameObject.html": {
    "href": "api/NitroxClient.GameLogic.Helper.SerializationHelper.GetGameObject.html",
    "title": "Method GetGameObject | Nitrox",
    "keywords": "Method GetGameObject Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll GetGameObject(byte[]) public static GameObject GetGameObject(byte[] bytes) Parameters bytes byte[] Returns GameObject"
  },
  "api/NitroxClient.GameLogic.Helper.SerializationHelper.ID_IGNORE_KEY.html": {
    "href": "api/NitroxClient.GameLogic.Helper.SerializationHelper.ID_IGNORE_KEY.html",
    "title": "Field ID_IGNORE_KEY | Nitrox",
    "keywords": "Field ID_IGNORE_KEY Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll public const string ID_IGNORE_KEY = \"SoundsLikeNitrox\" Returns string"
  },
  "api/NitroxClient.GameLogic.Helper.SerializationHelper.html": {
    "href": "api/NitroxClient.GameLogic.Helper.SerializationHelper.html",
    "title": "Class SerializationHelper | Nitrox",
    "keywords": "Class SerializationHelper Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll public static class SerializationHelper Inheritance object SerializationHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields BLOCK_HAND_PLACED_DESERIALIZATION ID_IGNORE_KEY Methods GetBytes(GameObject) GetGameObject(byte[])"
  },
  "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.Add.html": {
    "href": "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.Add.html",
    "title": "Method Add | Nitrox",
    "keywords": "Method Add Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll Add(TransientObjectType, object) public static void Add(TransientLocalObjectManager.TransientObjectType key, object o) Parameters key TransientLocalObjectManager.TransientObjectType o object"
  },
  "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.Get.html": {
    "href": "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.Get.html",
    "title": "Method Get | Nitrox",
    "keywords": "Method Get Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll Get(TransientObjectType) public static Optional<object> Get(TransientLocalObjectManager.TransientObjectType key) Parameters key TransientLocalObjectManager.TransientObjectType Returns Optional<object>"
  },
  "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.Remove.html": {
    "href": "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.Remove.html",
    "title": "Method Remove | Nitrox",
    "keywords": "Method Remove Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll Remove(TransientObjectType) public static void Remove(TransientLocalObjectManager.TransientObjectType key) Parameters key TransientLocalObjectManager.TransientObjectType"
  },
  "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.Require.html": {
    "href": "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.Require.html",
    "title": "Method Require | Nitrox",
    "keywords": "Method Require Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll Require<T>(TransientObjectType) public static T Require<T>(TransientLocalObjectManager.TransientObjectType key) Parameters key TransientLocalObjectManager.TransientObjectType Returns T Type Parameters T"
  },
  "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.TransientObjectType.html": {
    "href": "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.TransientObjectType.html",
    "title": "Enum TransientLocalObjectManager.TransientObjectType | Nitrox",
    "keywords": "Enum TransientLocalObjectManager.TransientObjectType Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll public enum TransientLocalObjectManager.TransientObjectType Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields BASE_GHOST_NEWLY_CONSTRUCTED_BASE_GAMEOBJECT = 0 LATER_CONSTRUCTED_BASE = 3 LATER_OBJECT_LATEST_BASE = 4 LATER_OBJECT_LATEST_CELL = 5 LATEST_DECONSTRUCTED_BASE_PIECE_GHOST = 1 LATEST_DECONSTRUCTED_BASE_PIECE_GUID = 2"
  },
  "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.html": {
    "href": "api/NitroxClient.GameLogic.Helper.TransientLocalObjectManager.html",
    "title": "Class TransientLocalObjectManager | Nitrox",
    "keywords": "Class TransientLocalObjectManager Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll public static class TransientLocalObjectManager Inheritance object TransientLocalObjectManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Add(TransientObjectType, object) Get(TransientObjectType) Remove(TransientObjectType) Require<T>(TransientObjectType)"
  },
  "api/NitroxClient.GameLogic.Helper.VehicleChildEntityHelper.PopulateChildren.html": {
    "href": "api/NitroxClient.GameLogic.Helper.VehicleChildEntityHelper.PopulateChildren.html",
    "title": "Method PopulateChildren | Nitrox",
    "keywords": "Method PopulateChildren Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll PopulateChildren(NitroxId, string, List<Entity>, GameObject) public static void PopulateChildren(NitroxId vehicleId, string vehiclePath, List<Entity> toPopulate, GameObject current) Parameters vehicleId NitroxId vehiclePath string toPopulate List<Entity> current GameObject"
  },
  "api/NitroxClient.GameLogic.Helper.VehicleChildEntityHelper.html": {
    "href": "api/NitroxClient.GameLogic.Helper.VehicleChildEntityHelper.html",
    "title": "Class VehicleChildEntityHelper | Nitrox",
    "keywords": "Class VehicleChildEntityHelper Namespace NitroxClient.GameLogic.Helper Assembly NitroxClient.dll public static class VehicleChildEntityHelper Inheritance object VehicleChildEntityHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods PopulateChildren(NitroxId, string, List<Entity>, GameObject)"
  },
  "api/NitroxClient.GameLogic.Helper.html": {
    "href": "api/NitroxClient.GameLogic.Helper.html",
    "title": "Namespace NitroxClient.GameLogic.Helper | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Helper Classes BaseSerializationHelper BaseSerializationHelperTest BatteryChildEntityHelper Vehicles and items are created without a battery loaded into them. Subnautica usually spawns these in async; however, this is disabled in nitrox so we can properly tag the id. Here we create the installed battery (with a new NitroxId) and have the entity spawner take care of loading it in. EquipmentHelper InventoryContainerHelper SerializationHelper TransientLocalObjectManager VehicleChildEntityHelper Enums TransientLocalObjectManager.TransientObjectType"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.IInitialSyncProcessor-1.DependentProcessors.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.IInitialSyncProcessor-1.DependentProcessors.html",
    "title": "Property DependentProcessors | Nitrox",
    "keywords": "Property DependentProcessors Namespace NitroxClient.GameLogic.InitialSync.Abstract Assembly NitroxClient.dll DependentProcessors HashSet<Type> DependentProcessors { get; } Property Value HashSet<Type>"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.IInitialSyncProcessor-1.Process.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.IInitialSyncProcessor-1.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.GameLogic.InitialSync.Abstract Assembly NitroxClient.dll Process(TPacket, ManualWaitItem) IEnumerator Process(TPacket packet, WaitScreen.ManualWaitItem waitScreenItem) Parameters packet TPacket waitScreenItem WaitScreen.ManualWaitItem Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.IInitialSyncProcessor-1.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.IInitialSyncProcessor-1.html",
    "title": "Interface IInitialSyncProcessor<TPacket> | Nitrox",
    "keywords": "Interface IInitialSyncProcessor<TPacket> Namespace NitroxClient.GameLogic.InitialSync.Abstract Assembly NitroxClient.dll public interface IInitialSyncProcessor<in TPacket> where TPacket : Packet Type Parameters TPacket Properties DependentProcessors Methods Process(TPacket, ManualWaitItem)"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.IInitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.IInitialSyncProcessor.html",
    "title": "Interface IInitialSyncProcessor | Nitrox",
    "keywords": "Interface IInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync.Abstract Assembly NitroxClient.dll public interface IInitialSyncProcessor : IInitialSyncProcessor<InitialPlayerSync> Inherited Members IInitialSyncProcessor<InitialPlayerSync>.DependentProcessors IInitialSyncProcessor<InitialPlayerSync>.Process(InitialPlayerSync, WaitScreen.ManualWaitItem)"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.AddDependency.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.AddDependency.html",
    "title": "Method AddDependency | Nitrox",
    "keywords": "Method AddDependency Namespace NitroxClient.GameLogic.InitialSync.Abstract Assembly NitroxClient.dll AddDependency<TDependency>() public void AddDependency<TDependency>() where TDependency : IInitialSyncProcessor Type Parameters TDependency"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.AddStep.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.AddStep.html",
    "title": "Method AddStep | Nitrox",
    "keywords": "Method AddStep Namespace NitroxClient.GameLogic.InitialSync.Abstract Assembly NitroxClient.dll AddStep(Func<InitialPlayerSync, IEnumerator>) public void AddStep(Func<InitialPlayerSync, IEnumerator> step) Parameters step Func<InitialPlayerSync, IEnumerator> AddStep(Action<InitialPlayerSync>) public void AddStep(Action<InitialPlayerSync> step) Parameters step Action<InitialPlayerSync> AddStep(Func<IEnumerator>) public void AddStep(Func<IEnumerator> step) Parameters step Func<IEnumerator>"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.DependentProcessors.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.DependentProcessors.html",
    "title": "Property DependentProcessors | Nitrox",
    "keywords": "Property DependentProcessors Namespace NitroxClient.GameLogic.InitialSync.Abstract Assembly NitroxClient.dll DependentProcessors public virtual HashSet<Type> DependentProcessors { get; } Property Value HashSet<Type>"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.Process.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.GameLogic.InitialSync.Abstract Assembly NitroxClient.dll Process(InitialPlayerSync, ManualWaitItem) public virtual IEnumerator Process(InitialPlayerSync packet, WaitScreen.ManualWaitItem waitScreenItem) Parameters packet InitialPlayerSync waitScreenItem WaitScreen.ManualWaitItem Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.Steps.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.Steps.html",
    "title": "Property Steps | Nitrox",
    "keywords": "Property Steps Namespace NitroxClient.GameLogic.InitialSync.Abstract Assembly NitroxClient.dll Steps public virtual List<Func<InitialPlayerSync, IEnumerator>> Steps { get; } Property Value List<Func<InitialPlayerSync, IEnumerator>>"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.InitialSyncProcessor.html",
    "title": "Class InitialSyncProcessor | Nitrox",
    "keywords": "Class InitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync.Abstract Assembly NitroxClient.dll public abstract class InitialSyncProcessor : IInitialSyncProcessor, IInitialSyncProcessor<InitialPlayerSync> Inheritance object InitialSyncProcessor Implements IInitialSyncProcessor IInitialSyncProcessor<InitialPlayerSync> Derived EquippedItemInitialSyncProcessor GlobalRootInitialSyncProcessor PdaInitialSyncProcessor PlayerInitialSyncProcessor PlayerPositionInitialSyncProcessor PlayerPreferencesInitialSyncProcessor QuickSlotInitialSyncProcessor RemotePlayerInitialSyncProcessor StoryGoalInitialSyncProcessor Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties DependentProcessors Steps Methods AddDependency<TDependency>() AddStep(Action<InitialPlayerSync>) AddStep(Func<InitialPlayerSync, IEnumerator>) AddStep(Func<IEnumerator>) Process(InitialPlayerSync, ManualWaitItem)"
  },
  "api/NitroxClient.GameLogic.InitialSync.Abstract.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.Abstract.html",
    "title": "Namespace NitroxClient.GameLogic.InitialSync.Abstract | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.InitialSync.Abstract Classes InitialSyncProcessor Interfaces IInitialSyncProcessor IInitialSyncProcessor<TPacket>"
  },
  "api/NitroxClient.GameLogic.InitialSync.EquippedItemInitialSyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.EquippedItemInitialSyncProcessor.-ctor.html",
    "title": "Constructor EquippedItemInitialSyncProcessor | Nitrox",
    "keywords": "Constructor EquippedItemInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll EquippedItemInitialSyncProcessor(IPacketSender) public EquippedItemInitialSyncProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.InitialSync.EquippedItemInitialSyncProcessor.Process.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.EquippedItemInitialSyncProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll Process(InitialPlayerSync, ManualWaitItem) public override IEnumerator Process(InitialPlayerSync packet, WaitScreen.ManualWaitItem waitScreenItem) Parameters packet InitialPlayerSync waitScreenItem WaitScreen.ManualWaitItem Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.InitialSync.EquippedItemInitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.EquippedItemInitialSyncProcessor.html",
    "title": "Class EquippedItemInitialSyncProcessor | Nitrox",
    "keywords": "Class EquippedItemInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll public class EquippedItemInitialSyncProcessor : InitialSyncProcessor, IInitialSyncProcessor, IInitialSyncProcessor<InitialPlayerSync> Inheritance object InitialSyncProcessor EquippedItemInitialSyncProcessor Implements IInitialSyncProcessor IInitialSyncProcessor<InitialPlayerSync> Inherited Members InitialSyncProcessor.Steps InitialSyncProcessor.DependentProcessors InitialSyncProcessor.AddDependency<TDependency>() InitialSyncProcessor.AddStep(Func<InitialPlayerSync, IEnumerator>) InitialSyncProcessor.AddStep(Action<InitialPlayerSync>) InitialSyncProcessor.AddStep(Func<IEnumerator>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EquippedItemInitialSyncProcessor(IPacketSender) Methods Process(InitialPlayerSync, ManualWaitItem)"
  },
  "api/NitroxClient.GameLogic.InitialSync.GlobalRootInitialSyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.GlobalRootInitialSyncProcessor.-ctor.html",
    "title": "Constructor GlobalRootInitialSyncProcessor | Nitrox",
    "keywords": "Constructor GlobalRootInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll GlobalRootInitialSyncProcessor(Entities) public GlobalRootInitialSyncProcessor(Entities entities) Parameters entities Entities"
  },
  "api/NitroxClient.GameLogic.InitialSync.GlobalRootInitialSyncProcessor.Process.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.GlobalRootInitialSyncProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll Process(InitialPlayerSync, ManualWaitItem) public override IEnumerator Process(InitialPlayerSync packet, WaitScreen.ManualWaitItem waitScreenItem) Parameters packet InitialPlayerSync waitScreenItem WaitScreen.ManualWaitItem Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.InitialSync.GlobalRootInitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.GlobalRootInitialSyncProcessor.html",
    "title": "Class GlobalRootInitialSyncProcessor | Nitrox",
    "keywords": "Class GlobalRootInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll Makes sure players can be spawned in entities in the global root (such as vehicles/escape pod). public class GlobalRootInitialSyncProcessor : InitialSyncProcessor, IInitialSyncProcessor, IInitialSyncProcessor<InitialPlayerSync> Inheritance object InitialSyncProcessor GlobalRootInitialSyncProcessor Implements IInitialSyncProcessor IInitialSyncProcessor<InitialPlayerSync> Inherited Members InitialSyncProcessor.Steps InitialSyncProcessor.DependentProcessors InitialSyncProcessor.AddDependency<TDependency>() InitialSyncProcessor.AddStep(Func<InitialPlayerSync, IEnumerator>) InitialSyncProcessor.AddStep(Action<InitialPlayerSync>) InitialSyncProcessor.AddStep(Func<IEnumerator>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks This allows for: vehicles to use equipment Constructors GlobalRootInitialSyncProcessor(Entities) Methods Process(InitialPlayerSync, ManualWaitItem)"
  },
  "api/NitroxClient.GameLogic.InitialSync.PdaInitialSyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PdaInitialSyncProcessor.-ctor.html",
    "title": "Constructor PdaInitialSyncProcessor | Nitrox",
    "keywords": "Constructor PdaInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll PdaInitialSyncProcessor(IPacketSender) public PdaInitialSyncProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.InitialSync.PdaInitialSyncProcessor.Steps.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PdaInitialSyncProcessor.Steps.html",
    "title": "Property Steps | Nitrox",
    "keywords": "Property Steps Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll Steps public override List<Func<InitialPlayerSync, IEnumerator>> Steps { get; } Property Value List<Func<InitialPlayerSync, IEnumerator>>"
  },
  "api/NitroxClient.GameLogic.InitialSync.PdaInitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PdaInitialSyncProcessor.html",
    "title": "Class PdaInitialSyncProcessor | Nitrox",
    "keywords": "Class PdaInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll public class PdaInitialSyncProcessor : InitialSyncProcessor, IInitialSyncProcessor, IInitialSyncProcessor<InitialPlayerSync> Inheritance object InitialSyncProcessor PdaInitialSyncProcessor Implements IInitialSyncProcessor IInitialSyncProcessor<InitialPlayerSync> Inherited Members InitialSyncProcessor.DependentProcessors InitialSyncProcessor.Process(InitialPlayerSync, WaitScreen.ManualWaitItem) InitialSyncProcessor.AddDependency<TDependency>() InitialSyncProcessor.AddStep(Func<InitialPlayerSync, IEnumerator>) InitialSyncProcessor.AddStep(Action<InitialPlayerSync>) InitialSyncProcessor.AddStep(Func<IEnumerator>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PdaInitialSyncProcessor(IPacketSender) Properties Steps"
  },
  "api/NitroxClient.GameLogic.InitialSync.PlayerInitialSyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PlayerInitialSyncProcessor.-ctor.html",
    "title": "Constructor PlayerInitialSyncProcessor | Nitrox",
    "keywords": "Constructor PlayerInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll PlayerInitialSyncProcessor(Items, ItemContainers, LocalPlayer) public PlayerInitialSyncProcessor(Items item, ItemContainers itemContainers, LocalPlayer localPlayer) Parameters item Items itemContainers ItemContainers localPlayer LocalPlayer"
  },
  "api/NitroxClient.GameLogic.InitialSync.PlayerInitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PlayerInitialSyncProcessor.html",
    "title": "Class PlayerInitialSyncProcessor | Nitrox",
    "keywords": "Class PlayerInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll Makes sure the player is configured. public class PlayerInitialSyncProcessor : InitialSyncProcessor, IInitialSyncProcessor, IInitialSyncProcessor<InitialPlayerSync> Inheritance object InitialSyncProcessor PlayerInitialSyncProcessor Implements IInitialSyncProcessor IInitialSyncProcessor<InitialPlayerSync> Inherited Members InitialSyncProcessor.Steps InitialSyncProcessor.DependentProcessors InitialSyncProcessor.Process(InitialPlayerSync, WaitScreen.ManualWaitItem) InitialSyncProcessor.AddDependency<TDependency>() InitialSyncProcessor.AddStep(Func<InitialPlayerSync, IEnumerator>) InitialSyncProcessor.AddStep(Action<InitialPlayerSync>) InitialSyncProcessor.AddStep(Func<IEnumerator>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks This allows the player to: use equipment Constructors PlayerInitialSyncProcessor(Items, ItemContainers, LocalPlayer)"
  },
  "api/NitroxClient.GameLogic.InitialSync.PlayerPositionInitialSyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PlayerPositionInitialSyncProcessor.-ctor.html",
    "title": "Constructor PlayerPositionInitialSyncProcessor | Nitrox",
    "keywords": "Constructor PlayerPositionInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll PlayerPositionInitialSyncProcessor(IPacketSender) public PlayerPositionInitialSyncProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.InitialSync.PlayerPositionInitialSyncProcessor.Process.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PlayerPositionInitialSyncProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll Process(InitialPlayerSync, ManualWaitItem) public override IEnumerator Process(InitialPlayerSync packet, WaitScreen.ManualWaitItem waitScreenItem) Parameters packet InitialPlayerSync waitScreenItem WaitScreen.ManualWaitItem Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.InitialSync.PlayerPositionInitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PlayerPositionInitialSyncProcessor.html",
    "title": "Class PlayerPositionInitialSyncProcessor | Nitrox",
    "keywords": "Class PlayerPositionInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll public class PlayerPositionInitialSyncProcessor : InitialSyncProcessor, IInitialSyncProcessor, IInitialSyncProcessor<InitialPlayerSync> Inheritance object InitialSyncProcessor PlayerPositionInitialSyncProcessor Implements IInitialSyncProcessor IInitialSyncProcessor<InitialPlayerSync> Inherited Members InitialSyncProcessor.Steps InitialSyncProcessor.DependentProcessors InitialSyncProcessor.AddDependency<TDependency>() InitialSyncProcessor.AddStep(Func<InitialPlayerSync, IEnumerator>) InitialSyncProcessor.AddStep(Action<InitialPlayerSync>) InitialSyncProcessor.AddStep(Func<IEnumerator>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerPositionInitialSyncProcessor(IPacketSender) Methods Process(InitialPlayerSync, ManualWaitItem)"
  },
  "api/NitroxClient.GameLogic.InitialSync.PlayerPreferencesInitialSyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PlayerPreferencesInitialSyncProcessor.-ctor.html",
    "title": "Constructor PlayerPreferencesInitialSyncProcessor | Nitrox",
    "keywords": "Constructor PlayerPreferencesInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll PlayerPreferencesInitialSyncProcessor() public PlayerPreferencesInitialSyncProcessor()"
  },
  "api/NitroxClient.GameLogic.InitialSync.PlayerPreferencesInitialSyncProcessor.Steps.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PlayerPreferencesInitialSyncProcessor.Steps.html",
    "title": "Property Steps | Nitrox",
    "keywords": "Property Steps Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll Steps public override List<Func<InitialPlayerSync, IEnumerator>> Steps { get; } Property Value List<Func<InitialPlayerSync, IEnumerator>>"
  },
  "api/NitroxClient.GameLogic.InitialSync.PlayerPreferencesInitialSyncProcessor.TryGetKeyForPingInstance.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PlayerPreferencesInitialSyncProcessor.TryGetKeyForPingInstance.html",
    "title": "Method TryGetKeyForPingInstance | Nitrox",
    "keywords": "Method TryGetKeyForPingInstance Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll TryGetKeyForPingInstance(PingInstance, out string, out bool, Action) Retrieves the identifier of a PingInstance depending on its type and container public static bool TryGetKeyForPingInstance(PingInstance pingInstance, out string pingKey, out bool isRemotePlayerPing, Action failCallback = null) Parameters pingInstance PingInstance pingKey string isRemotePlayerPing bool failCallback Action Returns bool Remarks We need to differentiate three types of pings, the \"normal pings\" from objects that emit a signal, these objects generally contain a NitroxEntity Another type is Signal pings that are generated by the story events, they are located in the Global Root and don't contain a NitroxEntity, to be identified, they have another object: a SignalPing which contains a description key The last type possible is RemotePlayers' pings which are located in a GameObject that is 2 steps under the main object"
  },
  "api/NitroxClient.GameLogic.InitialSync.PlayerPreferencesInitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.PlayerPreferencesInitialSyncProcessor.html",
    "title": "Class PlayerPreferencesInitialSyncProcessor | Nitrox",
    "keywords": "Class PlayerPreferencesInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll public class PlayerPreferencesInitialSyncProcessor : InitialSyncProcessor, IInitialSyncProcessor, IInitialSyncProcessor<InitialPlayerSync> Inheritance object InitialSyncProcessor PlayerPreferencesInitialSyncProcessor Implements IInitialSyncProcessor IInitialSyncProcessor<InitialPlayerSync> Inherited Members InitialSyncProcessor.DependentProcessors InitialSyncProcessor.Process(InitialPlayerSync, WaitScreen.ManualWaitItem) InitialSyncProcessor.AddDependency<TDependency>() InitialSyncProcessor.AddStep(Func<InitialPlayerSync, IEnumerator>) InitialSyncProcessor.AddStep(Action<InitialPlayerSync>) InitialSyncProcessor.AddStep(Func<IEnumerator>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerPreferencesInitialSyncProcessor() Properties Steps Methods TryGetKeyForPingInstance(PingInstance, out string, out bool, Action) Retrieves the identifier of a PingInstance depending on its type and container"
  },
  "api/NitroxClient.GameLogic.InitialSync.QuickSlotInitialSyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.QuickSlotInitialSyncProcessor.-ctor.html",
    "title": "Constructor QuickSlotInitialSyncProcessor | Nitrox",
    "keywords": "Constructor QuickSlotInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll QuickSlotInitialSyncProcessor() public QuickSlotInitialSyncProcessor()"
  },
  "api/NitroxClient.GameLogic.InitialSync.QuickSlotInitialSyncProcessor.Process.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.QuickSlotInitialSyncProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll Process(InitialPlayerSync, ManualWaitItem) public override IEnumerator Process(InitialPlayerSync packet, WaitScreen.ManualWaitItem waitScreenItem) Parameters packet InitialPlayerSync waitScreenItem WaitScreen.ManualWaitItem Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.InitialSync.QuickSlotInitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.QuickSlotInitialSyncProcessor.html",
    "title": "Class QuickSlotInitialSyncProcessor | Nitrox",
    "keywords": "Class QuickSlotInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll public class QuickSlotInitialSyncProcessor : InitialSyncProcessor, IInitialSyncProcessor, IInitialSyncProcessor<InitialPlayerSync> Inheritance object InitialSyncProcessor QuickSlotInitialSyncProcessor Implements IInitialSyncProcessor IInitialSyncProcessor<InitialPlayerSync> Inherited Members InitialSyncProcessor.Steps InitialSyncProcessor.DependentProcessors InitialSyncProcessor.AddDependency<TDependency>() InitialSyncProcessor.AddStep(Func<InitialPlayerSync, IEnumerator>) InitialSyncProcessor.AddStep(Action<InitialPlayerSync>) InitialSyncProcessor.AddStep(Func<IEnumerator>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors QuickSlotInitialSyncProcessor() Methods Process(InitialPlayerSync, ManualWaitItem)"
  },
  "api/NitroxClient.GameLogic.InitialSync.RemotePlayerInitialSyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.RemotePlayerInitialSyncProcessor.-ctor.html",
    "title": "Constructor RemotePlayerInitialSyncProcessor | Nitrox",
    "keywords": "Constructor RemotePlayerInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll RemotePlayerInitialSyncProcessor(PlayerManager) public RemotePlayerInitialSyncProcessor(PlayerManager remotePlayerManager) Parameters remotePlayerManager PlayerManager"
  },
  "api/NitroxClient.GameLogic.InitialSync.RemotePlayerInitialSyncProcessor.Process.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.RemotePlayerInitialSyncProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll Process(InitialPlayerSync, ManualWaitItem) public override IEnumerator Process(InitialPlayerSync packet, WaitScreen.ManualWaitItem waitScreenItem) Parameters packet InitialPlayerSync waitScreenItem WaitScreen.ManualWaitItem Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.InitialSync.RemotePlayerInitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.RemotePlayerInitialSyncProcessor.html",
    "title": "Class RemotePlayerInitialSyncProcessor | Nitrox",
    "keywords": "Class RemotePlayerInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll Makes sure the remote player object is loaded. public class RemotePlayerInitialSyncProcessor : InitialSyncProcessor, IInitialSyncProcessor, IInitialSyncProcessor<InitialPlayerSync> Inheritance object InitialSyncProcessor RemotePlayerInitialSyncProcessor Implements IInitialSyncProcessor IInitialSyncProcessor<InitialPlayerSync> Inherited Members InitialSyncProcessor.Steps InitialSyncProcessor.DependentProcessors InitialSyncProcessor.AddDependency<TDependency>() InitialSyncProcessor.AddStep(Func<InitialPlayerSync, IEnumerator>) InitialSyncProcessor.AddStep(Action<InitialPlayerSync>) InitialSyncProcessor.AddStep(Func<IEnumerator>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks This allows for the remote player to: use equipment Constructors RemotePlayerInitialSyncProcessor(PlayerManager) Methods Process(InitialPlayerSync, ManualWaitItem)"
  },
  "api/NitroxClient.GameLogic.InitialSync.StoryGoalInitialSyncProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.StoryGoalInitialSyncProcessor.-ctor.html",
    "title": "Constructor StoryGoalInitialSyncProcessor | Nitrox",
    "keywords": "Constructor StoryGoalInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll StoryGoalInitialSyncProcessor(TimeManager) public StoryGoalInitialSyncProcessor(TimeManager timeManager) Parameters timeManager TimeManager"
  },
  "api/NitroxClient.GameLogic.InitialSync.StoryGoalInitialSyncProcessor.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.StoryGoalInitialSyncProcessor.html",
    "title": "Class StoryGoalInitialSyncProcessor | Nitrox",
    "keywords": "Class StoryGoalInitialSyncProcessor Namespace NitroxClient.GameLogic.InitialSync Assembly NitroxClient.dll public class StoryGoalInitialSyncProcessor : InitialSyncProcessor, IInitialSyncProcessor, IInitialSyncProcessor<InitialPlayerSync> Inheritance object InitialSyncProcessor StoryGoalInitialSyncProcessor Implements IInitialSyncProcessor IInitialSyncProcessor<InitialPlayerSync> Inherited Members InitialSyncProcessor.Steps InitialSyncProcessor.DependentProcessors InitialSyncProcessor.Process(InitialPlayerSync, WaitScreen.ManualWaitItem) InitialSyncProcessor.AddDependency<TDependency>() InitialSyncProcessor.AddStep(Func<InitialPlayerSync, IEnumerator>) InitialSyncProcessor.AddStep(Action<InitialPlayerSync>) InitialSyncProcessor.AddStep(Func<IEnumerator>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StoryGoalInitialSyncProcessor(TimeManager)"
  },
  "api/NitroxClient.GameLogic.InitialSync.html": {
    "href": "api/NitroxClient.GameLogic.InitialSync.html",
    "title": "Namespace NitroxClient.GameLogic.InitialSync | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.InitialSync Namespaces NitroxClient.GameLogic.InitialSync.Abstract Classes EquippedItemInitialSyncProcessor GlobalRootInitialSyncProcessor Makes sure players can be spawned in entities in the global root (such as vehicles/escape pod). PdaInitialSyncProcessor PlayerInitialSyncProcessor Makes sure the player is configured. PlayerPositionInitialSyncProcessor PlayerPreferencesInitialSyncProcessor QuickSlotInitialSyncProcessor RemotePlayerInitialSyncProcessor Makes sure the remote player object is loaded. StoryGoalInitialSyncProcessor"
  },
  "api/NitroxClient.GameLogic.Interior.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Interior.-ctor.html",
    "title": "Constructor Interior | Nitrox",
    "keywords": "Constructor Interior Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Interior(IPacketSender) public Interior(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.Interior.OpenableStateChanged.html": {
    "href": "api/NitroxClient.GameLogic.Interior.OpenableStateChanged.html",
    "title": "Method OpenableStateChanged | Nitrox",
    "keywords": "Method OpenableStateChanged Namespace NitroxClient.GameLogic Assembly NitroxClient.dll OpenableStateChanged(NitroxId, bool, float) public void OpenableStateChanged(NitroxId id, bool isOpen, float animationDuration) Parameters id NitroxId isOpen bool animationDuration float"
  },
  "api/NitroxClient.GameLogic.Interior.html": {
    "href": "api/NitroxClient.GameLogic.Interior.html",
    "title": "Class Interior | Nitrox",
    "keywords": "Class Interior Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class Interior Inheritance object Interior Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Interior(IPacketSender) Methods OpenableStateChanged(NitroxId, bool, float)"
  },
  "api/NitroxClient.GameLogic.ItemContainers.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.ItemContainers.-ctor.html",
    "title": "Constructor ItemContainers | Nitrox",
    "keywords": "Constructor ItemContainers Namespace NitroxClient.GameLogic Assembly NitroxClient.dll ItemContainers(IPacketSender) public ItemContainers(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.ItemContainers.AddItem.html": {
    "href": "api/NitroxClient.GameLogic.ItemContainers.AddItem.html",
    "title": "Method AddItem | Nitrox",
    "keywords": "Method AddItem Namespace NitroxClient.GameLogic Assembly NitroxClient.dll AddItem(GameObject, NitroxId) public void AddItem(GameObject item, NitroxId containerId) Parameters item GameObject containerId NitroxId"
  },
  "api/NitroxClient.GameLogic.ItemContainers.BroadcastBatteryAdd.html": {
    "href": "api/NitroxClient.GameLogic.ItemContainers.BroadcastBatteryAdd.html",
    "title": "Method BroadcastBatteryAdd | Nitrox",
    "keywords": "Method BroadcastBatteryAdd Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastBatteryAdd(GameObject, GameObject, TechType) public void BroadcastBatteryAdd(GameObject gameObject, GameObject parent, TechType techType) Parameters gameObject GameObject parent GameObject techType TechType"
  },
  "api/NitroxClient.GameLogic.ItemContainers.BroadcastItemAdd.html": {
    "href": "api/NitroxClient.GameLogic.ItemContainers.BroadcastItemAdd.html",
    "title": "Method BroadcastItemAdd | Nitrox",
    "keywords": "Method BroadcastItemAdd Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastItemAdd(Pickupable, Transform) public void BroadcastItemAdd(Pickupable pickupable, Transform containerTransform) Parameters pickupable Pickupable containerTransform Transform"
  },
  "api/NitroxClient.GameLogic.ItemContainers.html": {
    "href": "api/NitroxClient.GameLogic.ItemContainers.html",
    "title": "Class ItemContainers | Nitrox",
    "keywords": "Class ItemContainers Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class ItemContainers Inheritance object ItemContainers Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemContainers(IPacketSender) Methods AddItem(GameObject, NitroxId) BroadcastBatteryAdd(GameObject, GameObject, TechType) BroadcastItemAdd(Pickupable, Transform)"
  },
  "api/NitroxClient.GameLogic.Items.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Items.-ctor.html",
    "title": "Constructor Items | Nitrox",
    "keywords": "Constructor Items Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Items(IPacketSender, IMap, Entities) public Items(IPacketSender packetSender, IMap map, Entities entities) Parameters packetSender IPacketSender map IMap entities Entities"
  },
  "api/NitroxClient.GameLogic.Items.ConvertToInventoryItemEntity.html": {
    "href": "api/NitroxClient.GameLogic.Items.ConvertToInventoryItemEntity.html",
    "title": "Method ConvertToInventoryItemEntity | Nitrox",
    "keywords": "Method ConvertToInventoryItemEntity Namespace NitroxClient.GameLogic Assembly NitroxClient.dll ConvertToInventoryItemEntity(GameObject) public static InventoryItemEntity ConvertToInventoryItemEntity(GameObject gameObject) Parameters gameObject GameObject Returns InventoryItemEntity"
  },
  "api/NitroxClient.GameLogic.Items.Created.html": {
    "href": "api/NitroxClient.GameLogic.Items.Created.html",
    "title": "Method Created | Nitrox",
    "keywords": "Method Created Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Created(GameObject) public void Created(GameObject gameObject) Parameters gameObject GameObject"
  },
  "api/NitroxClient.GameLogic.Items.Dropped.html": {
    "href": "api/NitroxClient.GameLogic.Items.Dropped.html",
    "title": "Method Dropped | Nitrox",
    "keywords": "Method Dropped Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Dropped(GameObject, TechType?) Tracks the object (as dropped) and notifies the server to spawn the item for other players. public void Dropped(GameObject gameObject, TechType? techType = null) Parameters gameObject GameObject techType TechType?"
  },
  "api/NitroxClient.GameLogic.Items.GetEquipmentModuleEntities.html": {
    "href": "api/NitroxClient.GameLogic.Items.GetEquipmentModuleEntities.html",
    "title": "Method GetEquipmentModuleEntities | Nitrox",
    "keywords": "Method GetEquipmentModuleEntities Namespace NitroxClient.GameLogic Assembly NitroxClient.dll GetEquipmentModuleEntities(Equipment, NitroxId) public static List<InstalledModuleEntity> GetEquipmentModuleEntities(Equipment equipment, NitroxId equipmentId) Parameters equipment Equipment equipmentId NitroxId Returns List<InstalledModuleEntity>"
  },
  "api/NitroxClient.GameLogic.Items.GetPrefabChildren.html": {
    "href": "api/NitroxClient.GameLogic.Items.GetPrefabChildren.html",
    "title": "Method GetPrefabChildren | Nitrox",
    "keywords": "Method GetPrefabChildren Namespace NitroxClient.GameLogic Assembly NitroxClient.dll GetPrefabChildren(GameObject, NitroxId) public static IEnumerable<Entity> GetPrefabChildren(GameObject gameObject, NitroxId parentId) Parameters gameObject GameObject parentId NitroxId Returns IEnumerable<Entity>"
  },
  "api/NitroxClient.GameLogic.Items.PickedUp.html": {
    "href": "api/NitroxClient.GameLogic.Items.PickedUp.html",
    "title": "Method PickedUp | Nitrox",
    "keywords": "Method PickedUp Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PickedUp(GameObject, TechType) public void PickedUp(GameObject gameObject, TechType techType) Parameters gameObject GameObject techType TechType"
  },
  "api/NitroxClient.GameLogic.Items.UpdatePosition.html": {
    "href": "api/NitroxClient.GameLogic.Items.UpdatePosition.html",
    "title": "Method UpdatePosition | Nitrox",
    "keywords": "Method UpdatePosition Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UpdatePosition(NitroxId, Vector3, Quaternion) public void UpdatePosition(NitroxId id, Vector3 location, Quaternion rotation) Parameters id NitroxId location Vector3 rotation Quaternion"
  },
  "api/NitroxClient.GameLogic.Items.html": {
    "href": "api/NitroxClient.GameLogic.Items.html",
    "title": "Class Items | Nitrox",
    "keywords": "Class Items Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class Items Inheritance object Items Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Items(IPacketSender, IMap, Entities) Methods ConvertToInventoryItemEntity(GameObject) Created(GameObject) Dropped(GameObject, TechType?) Tracks the object (as dropped) and notifies the server to spawn the item for other players. GetEquipmentModuleEntities(Equipment, NitroxId) GetPrefabChildren(GameObject, NitroxId) PickedUp(GameObject, TechType) UpdatePosition(NitroxId, Vector3, Quaternion)"
  },
  "api/NitroxClient.GameLogic.LiveMixinManager.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.LiveMixinManager.-ctor.html",
    "title": "Constructor LiveMixinManager | Nitrox",
    "keywords": "Constructor LiveMixinManager Namespace NitroxClient.GameLogic Assembly NitroxClient.dll LiveMixinManager(SimulationOwnership) public LiveMixinManager(SimulationOwnership simulationOwnership) Parameters simulationOwnership SimulationOwnership"
  },
  "api/NitroxClient.GameLogic.LiveMixinManager.IsWhitelistedUpdateType.html": {
    "href": "api/NitroxClient.GameLogic.LiveMixinManager.IsWhitelistedUpdateType.html",
    "title": "Method IsWhitelistedUpdateType | Nitrox",
    "keywords": "Method IsWhitelistedUpdateType Namespace NitroxClient.GameLogic Assembly NitroxClient.dll IsWhitelistedUpdateType(LiveMixin) public bool IsWhitelistedUpdateType(LiveMixin entity) Parameters entity LiveMixin Returns bool"
  },
  "api/NitroxClient.GameLogic.LiveMixinManager.ShouldApplyNextHealthUpdate.html": {
    "href": "api/NitroxClient.GameLogic.LiveMixinManager.ShouldApplyNextHealthUpdate.html",
    "title": "Method ShouldApplyNextHealthUpdate | Nitrox",
    "keywords": "Method ShouldApplyNextHealthUpdate Namespace NitroxClient.GameLogic Assembly NitroxClient.dll ShouldApplyNextHealthUpdate(LiveMixin, GameObject) public bool ShouldApplyNextHealthUpdate(LiveMixin receiver, GameObject dealer = null) Parameters receiver LiveMixin dealer GameObject Returns bool"
  },
  "api/NitroxClient.GameLogic.LiveMixinManager.SyncRemoteHealth.html": {
    "href": "api/NitroxClient.GameLogic.LiveMixinManager.SyncRemoteHealth.html",
    "title": "Method SyncRemoteHealth | Nitrox",
    "keywords": "Method SyncRemoteHealth Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SyncRemoteHealth(LiveMixin, float) public void SyncRemoteHealth(LiveMixin liveMixin, float remoteHealth) Parameters liveMixin LiveMixin remoteHealth float"
  },
  "api/NitroxClient.GameLogic.LiveMixinManager.html": {
    "href": "api/NitroxClient.GameLogic.LiveMixinManager.html",
    "title": "Class LiveMixinManager | Nitrox",
    "keywords": "Class LiveMixinManager Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class LiveMixinManager Inheritance object LiveMixinManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LiveMixinManager(SimulationOwnership) Methods IsWhitelistedUpdateType(LiveMixin) ShouldApplyNextHealthUpdate(LiveMixin, GameObject) SyncRemoteHealth(LiveMixin, float)"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.-ctor.html",
    "title": "Constructor LocalPlayer | Nitrox",
    "keywords": "Constructor LocalPlayer Namespace NitroxClient.GameLogic Assembly NitroxClient.dll LocalPlayer(IMultiplayerSession, IPacketSender, ThrottledPacketSender) public LocalPlayer(IMultiplayerSession multiplayerSession, IPacketSender packetSender, ThrottledPacketSender throttledPacketSender) Parameters multiplayerSession IMultiplayerSession packetSender IPacketSender throttledPacketSender ThrottledPacketSender"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.AnimationChange.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.AnimationChange.html",
    "title": "Method AnimationChange | Nitrox",
    "keywords": "Method AnimationChange Namespace NitroxClient.GameLogic Assembly NitroxClient.dll AnimationChange(AnimChangeType, AnimChangeState) public void AnimationChange(AnimChangeType type, AnimChangeState state) Parameters type AnimChangeType state AnimChangeState"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.Body.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.Body.html",
    "title": "Property Body | Nitrox",
    "keywords": "Property Body Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Body public GameObject Body { get; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.BodyPrototype.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.BodyPrototype.html",
    "title": "Property BodyPrototype | Nitrox",
    "keywords": "Property BodyPrototype Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BodyPrototype public GameObject BodyPrototype { get; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.BroadcastDeath.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.BroadcastDeath.html",
    "title": "Method BroadcastDeath | Nitrox",
    "keywords": "Method BroadcastDeath Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastDeath(Vector3) public void BroadcastDeath(Vector3 deathPosition) Parameters deathPosition Vector3"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.BroadcastEscapePodChange.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.BroadcastEscapePodChange.html",
    "title": "Method BroadcastEscapePodChange | Nitrox",
    "keywords": "Method BroadcastEscapePodChange Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastEscapePodChange(Optional<NitroxId>) public void BroadcastEscapePodChange(Optional<NitroxId> escapePodId) Parameters escapePodId Optional<NitroxId>"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.BroadcastHeldItemChanged.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.BroadcastHeldItemChanged.html",
    "title": "Method BroadcastHeldItemChanged | Nitrox",
    "keywords": "Method BroadcastHeldItemChanged Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastHeldItemChanged(NitroxId, ChangeType, NitroxTechType) public void BroadcastHeldItemChanged(NitroxId itemId, PlayerHeldItemChanged.ChangeType techType, NitroxTechType isFirstTime) Parameters itemId NitroxId techType PlayerHeldItemChanged.ChangeType isFirstTime NitroxTechType"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.BroadcastLocation.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.BroadcastLocation.html",
    "title": "Method BroadcastLocation | Nitrox",
    "keywords": "Method BroadcastLocation Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastLocation(Vector3, Vector3, Quaternion, Quaternion, Optional<VehicleMovementData>) public void BroadcastLocation(Vector3 location, Vector3 velocity, Quaternion bodyRotation, Quaternion aimingRotation, Optional<VehicleMovementData> vehicle) Parameters location Vector3 velocity Vector3 bodyRotation Quaternion aimingRotation Quaternion vehicle Optional<VehicleMovementData>"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.BroadcastQuickSlotsBindingChanged.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.BroadcastQuickSlotsBindingChanged.html",
    "title": "Method BroadcastQuickSlotsBindingChanged | Nitrox",
    "keywords": "Method BroadcastQuickSlotsBindingChanged Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastQuickSlotsBindingChanged(Optional<NitroxId>[]) public void BroadcastQuickSlotsBindingChanged(Optional<NitroxId>[] slotItemIds) Parameters slotItemIds Optional<NitroxId>[]"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.BroadcastStats.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.BroadcastStats.html",
    "title": "Method BroadcastStats | Nitrox",
    "keywords": "Method BroadcastStats Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastStats(float, float, float, float, float, float) public void BroadcastStats(float oxygen, float maxOxygen, float health, float food, float water, float infectionAmount) Parameters oxygen float maxOxygen float health float food float water float infectionAmount float"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.BroadcastSubrootChange.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.BroadcastSubrootChange.html",
    "title": "Method BroadcastSubrootChange | Nitrox",
    "keywords": "Method BroadcastSubrootChange Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastSubrootChange(Optional<NitroxId>) public void BroadcastSubrootChange(Optional<NitroxId> subrootId) Parameters subrootId Optional<NitroxId>"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.BroadcastWeld.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.BroadcastWeld.html",
    "title": "Method BroadcastWeld | Nitrox",
    "keywords": "Method BroadcastWeld Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastWeld(NitroxId, float) public void BroadcastWeld(NitroxId id, float healthAdded) Parameters id NitroxId healthAdded float"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.Permissions.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.Permissions.html",
    "title": "Field Permissions | Nitrox",
    "keywords": "Field Permissions Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public Perms Permissions Returns Perms"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.PlayerId.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.PlayerModel.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.PlayerModel.html",
    "title": "Property PlayerModel | Nitrox",
    "keywords": "Property PlayerModel Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerModel public GameObject PlayerModel { get; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.PlayerName.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.PlayerName.html",
    "title": "Property PlayerName | Nitrox",
    "keywords": "Property PlayerName Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerName public string PlayerName { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.PlayerSettings.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.PlayerSettings.html",
    "title": "Property PlayerSettings | Nitrox",
    "keywords": "Property PlayerSettings Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerSettings public PlayerSettings PlayerSettings { get; } Property Value PlayerSettings"
  },
  "api/NitroxClient.GameLogic.LocalPlayer.html": {
    "href": "api/NitroxClient.GameLogic.LocalPlayer.html",
    "title": "Class LocalPlayer | Nitrox",
    "keywords": "Class LocalPlayer Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class LocalPlayer : ILocalNitroxPlayer, INitroxPlayer Inheritance object LocalPlayer Implements ILocalNitroxPlayer INitroxPlayer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LocalPlayer(IMultiplayerSession, IPacketSender, ThrottledPacketSender) Fields Permissions Properties Body BodyPrototype PlayerId PlayerModel PlayerName PlayerSettings Methods AnimationChange(AnimChangeType, AnimChangeState) BroadcastDeath(Vector3) BroadcastEscapePodChange(Optional<NitroxId>) BroadcastHeldItemChanged(NitroxId, ChangeType, NitroxTechType) BroadcastLocation(Vector3, Vector3, Quaternion, Quaternion, Optional<VehicleMovementData>) BroadcastQuickSlotsBindingChanged(Optional<NitroxId>[]) BroadcastStats(float, float, float, float, float, float) BroadcastSubrootChange(Optional<NitroxId>) BroadcastWeld(NitroxId, float)"
  },
  "api/NitroxClient.GameLogic.MedkitFabricator.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.MedkitFabricator.-ctor.html",
    "title": "Constructor MedkitFabricator | Nitrox",
    "keywords": "Constructor MedkitFabricator Namespace NitroxClient.GameLogic Assembly NitroxClient.dll MedkitFabricator(IPacketSender) public MedkitFabricator(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.MedkitFabricator.Clicked.html": {
    "href": "api/NitroxClient.GameLogic.MedkitFabricator.Clicked.html",
    "title": "Method Clicked | Nitrox",
    "keywords": "Method Clicked Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Clicked(MedicalCabinet) public void Clicked(MedicalCabinet medicalCabinet) Parameters medicalCabinet MedicalCabinet"
  },
  "api/NitroxClient.GameLogic.MedkitFabricator.html": {
    "href": "api/NitroxClient.GameLogic.MedkitFabricator.html",
    "title": "Class MedkitFabricator | Nitrox",
    "keywords": "Class MedkitFabricator Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class MedkitFabricator Inheritance object MedkitFabricator Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MedkitFabricator(IPacketSender) Methods Clicked(MedicalCabinet)"
  },
  "api/NitroxClient.GameLogic.MobileVehicleBay.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.MobileVehicleBay.-ctor.html",
    "title": "Constructor MobileVehicleBay | Nitrox",
    "keywords": "Constructor MobileVehicleBay Namespace NitroxClient.GameLogic Assembly NitroxClient.dll MobileVehicleBay(IPacketSender, Vehicles) public MobileVehicleBay(IPacketSender packetSender, Vehicles vehicles) Parameters packetSender IPacketSender vehicles Vehicles"
  },
  "api/NitroxClient.GameLogic.MobileVehicleBay.BeginCrafting.html": {
    "href": "api/NitroxClient.GameLogic.MobileVehicleBay.BeginCrafting.html",
    "title": "Method BeginCrafting | Nitrox",
    "keywords": "Method BeginCrafting Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BeginCrafting(ConstructorInput, GameObject, TechType, float) public void BeginCrafting(ConstructorInput constructor, GameObject constructedObject, TechType techType, float duration) Parameters constructor ConstructorInput constructedObject GameObject techType TechType duration float"
  },
  "api/NitroxClient.GameLogic.MobileVehicleBay.MostRecentlyCrafted.html": {
    "href": "api/NitroxClient.GameLogic.MobileVehicleBay.MostRecentlyCrafted.html",
    "title": "Property MostRecentlyCrafted | Nitrox",
    "keywords": "Property MostRecentlyCrafted Namespace NitroxClient.GameLogic Assembly NitroxClient.dll MostRecentlyCrafted public static GameObject MostRecentlyCrafted { get; set; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.MobileVehicleBay.TransmitLocalSpawns.html": {
    "href": "api/NitroxClient.GameLogic.MobileVehicleBay.TransmitLocalSpawns.html",
    "title": "Property TransmitLocalSpawns | Nitrox",
    "keywords": "Property TransmitLocalSpawns Namespace NitroxClient.GameLogic Assembly NitroxClient.dll TransmitLocalSpawns public static bool TransmitLocalSpawns { get; set; } Property Value bool"
  },
  "api/NitroxClient.GameLogic.MobileVehicleBay.html": {
    "href": "api/NitroxClient.GameLogic.MobileVehicleBay.html",
    "title": "Class MobileVehicleBay | Nitrox",
    "keywords": "Class MobileVehicleBay Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class MobileVehicleBay Inheritance object MobileVehicleBay Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MobileVehicleBay(IPacketSender, Vehicles) Properties MostRecentlyCrafted TransmitLocalSpawns Methods BeginCrafting(ConstructorInput, GameObject, TechType, float)"
  },
  "api/NitroxClient.GameLogic.MovementHelper.GetCorrectedAngularVelocity.html": {
    "href": "api/NitroxClient.GameLogic.MovementHelper.GetCorrectedAngularVelocity.html",
    "title": "Method GetCorrectedAngularVelocity | Nitrox",
    "keywords": "Method GetCorrectedAngularVelocity Namespace NitroxClient.GameLogic Assembly NitroxClient.dll GetCorrectedAngularVelocity(Quaternion, Vector3, GameObject, float) public static Vector3 GetCorrectedAngularVelocity(Quaternion remoteRotation, Vector3 angularVelocty, GameObject gameObject, float correctionTime) Parameters remoteRotation Quaternion angularVelocty Vector3 gameObject GameObject correctionTime float Returns Vector3"
  },
  "api/NitroxClient.GameLogic.MovementHelper.GetCorrectedVelocity.html": {
    "href": "api/NitroxClient.GameLogic.MovementHelper.GetCorrectedVelocity.html",
    "title": "Method GetCorrectedVelocity | Nitrox",
    "keywords": "Method GetCorrectedVelocity Namespace NitroxClient.GameLogic Assembly NitroxClient.dll GetCorrectedVelocity(Vector3, Vector3, GameObject, float) public static Vector3 GetCorrectedVelocity(Vector3 remotePosition, Vector3 remoteVelocity, GameObject gameObject, float correctionTime) Parameters remotePosition Vector3 remoteVelocity Vector3 gameObject GameObject correctionTime float Returns Vector3"
  },
  "api/NitroxClient.GameLogic.MovementHelper.MoveGameObject.html": {
    "href": "api/NitroxClient.GameLogic.MovementHelper.MoveGameObject.html",
    "title": "Method MoveGameObject | Nitrox",
    "keywords": "Method MoveGameObject Namespace NitroxClient.GameLogic Assembly NitroxClient.dll MoveGameObject(GameObject, Vector3, float) public static void MoveGameObject(GameObject go, Vector3 position, float time) Parameters go GameObject position Vector3 time float"
  },
  "api/NitroxClient.GameLogic.MovementHelper.MoveRotateGameObject.html": {
    "href": "api/NitroxClient.GameLogic.MovementHelper.MoveRotateGameObject.html",
    "title": "Method MoveRotateGameObject | Nitrox",
    "keywords": "Method MoveRotateGameObject Namespace NitroxClient.GameLogic Assembly NitroxClient.dll MoveRotateGameObject(GameObject, Vector3, Quaternion, float) public static void MoveRotateGameObject(GameObject go, Vector3 position, Quaternion rotation, float time) Parameters go GameObject position Vector3 rotation Quaternion time float"
  },
  "api/NitroxClient.GameLogic.MovementHelper.RotateGameObject.html": {
    "href": "api/NitroxClient.GameLogic.MovementHelper.RotateGameObject.html",
    "title": "Method RotateGameObject | Nitrox",
    "keywords": "Method RotateGameObject Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RotateGameObject(GameObject, Quaternion, float) public static void RotateGameObject(GameObject go, Quaternion rotation, float time) Parameters go GameObject rotation Quaternion time float"
  },
  "api/NitroxClient.GameLogic.MovementHelper.Stop.html": {
    "href": "api/NitroxClient.GameLogic.MovementHelper.Stop.html",
    "title": "Method Stop | Nitrox",
    "keywords": "Method Stop Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Stop(GameObject) public static void Stop(GameObject go) Parameters go GameObject"
  },
  "api/NitroxClient.GameLogic.MovementHelper.html": {
    "href": "api/NitroxClient.GameLogic.MovementHelper.html",
    "title": "Class MovementHelper | Nitrox",
    "keywords": "Class MovementHelper Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public static class MovementHelper Inheritance object MovementHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetCorrectedAngularVelocity(Quaternion, Vector3, GameObject, float) GetCorrectedVelocity(Vector3, Vector3, GameObject, float) MoveGameObject(GameObject, Vector3, float) MoveRotateGameObject(GameObject, Vector3, Quaternion, float) RotateGameObject(GameObject, Quaternion, float) Stop(GameObject)"
  },
  "api/NitroxClient.GameLogic.NitroxConsole.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.NitroxConsole.-ctor.html",
    "title": "Constructor NitroxConsole | Nitrox",
    "keywords": "Constructor NitroxConsole Namespace NitroxClient.GameLogic Assembly NitroxClient.dll NitroxConsole(IPacketSender, Items) public NitroxConsole(IPacketSender packetSender, Items item) Parameters packetSender IPacketSender item Items"
  },
  "api/NitroxClient.GameLogic.NitroxConsole.DisableConsole.html": {
    "href": "api/NitroxClient.GameLogic.NitroxConsole.DisableConsole.html",
    "title": "Property DisableConsole | Nitrox",
    "keywords": "Property DisableConsole Namespace NitroxClient.GameLogic Assembly NitroxClient.dll DisableConsole public static bool DisableConsole { get; set; } Property Value bool"
  },
  "api/NitroxClient.GameLogic.NitroxConsole.Spawn.html": {
    "href": "api/NitroxClient.GameLogic.NitroxConsole.Spawn.html",
    "title": "Method Spawn | Nitrox",
    "keywords": "Method Spawn Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Spawn(GameObject) public void Spawn(GameObject gameObject) Parameters gameObject GameObject"
  },
  "api/NitroxClient.GameLogic.NitroxConsole.html": {
    "href": "api/NitroxClient.GameLogic.NitroxConsole.html",
    "title": "Class NitroxConsole | Nitrox",
    "keywords": "Class NitroxConsole Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class NitroxConsole Inheritance object NitroxConsole Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxConsole(IPacketSender, Items) Properties DisableConsole Methods Spawn(GameObject)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerCinematics.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerCinematics.-ctor.html",
    "title": "Constructor PlayerCinematics | Nitrox",
    "keywords": "Constructor PlayerCinematics Namespace NitroxClient.GameLogic.PlayerLogic Assembly NitroxClient.dll PlayerCinematics(IPacketSender) public PlayerCinematics(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerCinematics.EndCinematicMode.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerCinematics.EndCinematicMode.html",
    "title": "Method EndCinematicMode | Nitrox",
    "keywords": "Method EndCinematicMode Namespace NitroxClient.GameLogic.PlayerLogic Assembly NitroxClient.dll EndCinematicMode(ushort, NitroxId, int, string) public void EndCinematicMode(ushort playerId, NitroxId controllerID, int controllerNameHash, string key) Parameters playerId ushort controllerID NitroxId controllerNameHash int key string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerCinematics.StartCinematicMode.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerCinematics.StartCinematicMode.html",
    "title": "Method StartCinematicMode | Nitrox",
    "keywords": "Method StartCinematicMode Namespace NitroxClient.GameLogic.PlayerLogic Assembly NitroxClient.dll StartCinematicMode(ushort, NitroxId, int, string) public void StartCinematicMode(ushort playerId, NitroxId controllerID, int controllerNameHash, string key) Parameters playerId ushort controllerID NitroxId controllerNameHash int key string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerCinematics.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerCinematics.html",
    "title": "Class PlayerCinematics | Nitrox",
    "keywords": "Class PlayerCinematics Namespace NitroxClient.GameLogic.PlayerLogic Assembly NitroxClient.dll public class PlayerCinematics Inheritance object PlayerCinematics Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerCinematics(IPacketSender) Methods EndCinematicMode(ushort, NitroxId, int, string) StartCinematicMode(ushort, NitroxId, int, string)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IColorSwapManager.html",
    "title": "Interface IColorSwapManager | Nitrox",
    "keywords": "Interface IColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll public interface IColorSwapManager Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IColorSwapStrategy.SwapColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IColorSwapStrategy.SwapColor.html",
    "title": "Method SwapColor | Nitrox",
    "keywords": "Method SwapColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll SwapColor(Color) Color SwapColor(Color originalColor) Parameters originalColor Color Returns Color"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IColorSwapStrategy.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IColorSwapStrategy.html",
    "title": "Interface IColorSwapStrategy | Nitrox",
    "keywords": "Interface IColorSwapStrategy Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll public interface IColorSwapStrategy Methods SwapColor(Color)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.ILocalNitroxPlayer.BodyPrototype.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.ILocalNitroxPlayer.BodyPrototype.html",
    "title": "Property BodyPrototype | Nitrox",
    "keywords": "Property BodyPrototype Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll BodyPrototype GameObject BodyPrototype { get; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.ILocalNitroxPlayer.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.ILocalNitroxPlayer.html",
    "title": "Interface ILocalNitroxPlayer | Nitrox",
    "keywords": "Interface ILocalNitroxPlayer Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll public interface ILocalNitroxPlayer : INitroxPlayer Inherited Members INitroxPlayer.Body INitroxPlayer.PlayerModel INitroxPlayer.PlayerName INitroxPlayer.PlayerSettings Properties BodyPrototype"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.INitroxPlayer.Body.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.INitroxPlayer.Body.html",
    "title": "Property Body | Nitrox",
    "keywords": "Property Body Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll Body GameObject Body { get; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.INitroxPlayer.PlayerModel.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.INitroxPlayer.PlayerModel.html",
    "title": "Property PlayerModel | Nitrox",
    "keywords": "Property PlayerModel Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll PlayerModel GameObject PlayerModel { get; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.INitroxPlayer.PlayerName.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.INitroxPlayer.PlayerName.html",
    "title": "Property PlayerName | Nitrox",
    "keywords": "Property PlayerName Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll PlayerName string PlayerName { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.INitroxPlayer.PlayerSettings.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.INitroxPlayer.PlayerSettings.html",
    "title": "Property PlayerSettings | Nitrox",
    "keywords": "Property PlayerSettings Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll PlayerSettings PlayerSettings PlayerSettings { get; } Property Value PlayerSettings"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.INitroxPlayer.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.INitroxPlayer.html",
    "title": "Interface INitroxPlayer | Nitrox",
    "keywords": "Interface INitroxPlayer Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll public interface INitroxPlayer Properties Body PlayerModel PlayerName PlayerSettings"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IPlayerModelBuilder.Build.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IPlayerModelBuilder.Build.html",
    "title": "Method Build | Nitrox",
    "keywords": "Method Build Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll Build(INitroxPlayer) void Build(INitroxPlayer player) Parameters player INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IPlayerModelBuilder.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.IPlayerModelBuilder.html",
    "title": "Interface IPlayerModelBuilder | Nitrox",
    "keywords": "Interface IPlayerModelBuilder Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Assembly NitroxClient.dll public interface IPlayerModelBuilder Methods Build(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract.html",
    "title": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract Interfaces IColorSwapManager IColorSwapStrategy ILocalNitroxPlayer INitroxPlayer IPlayerModelBuilder"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.-ctor.html",
    "title": "Constructor ColorSwapAsyncOperation | Nitrox",
    "keywords": "Constructor ColorSwapAsyncOperation Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ColorSwapAsyncOperation(INitroxPlayer, IEnumerable<IColorSwapManager>) public ColorSwapAsyncOperation(INitroxPlayer nitroxPlayer, IEnumerable<IColorSwapManager> colorSwapManagers) Parameters nitroxPlayer INitroxPlayer colorSwapManagers IEnumerable<IColorSwapManager>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.ApplySwappedColors.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.ApplySwappedColors.html",
    "title": "Method ApplySwappedColors | Nitrox",
    "keywords": "Method ApplySwappedColors Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplySwappedColors() public void ApplySwappedColors()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.BeginColorSwap.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.BeginColorSwap.html",
    "title": "Method BeginColorSwap | Nitrox",
    "keywords": "Method BeginColorSwap Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll BeginColorSwap() public ColorSwapAsyncOperation BeginColorSwap() Returns ColorSwapAsyncOperation"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.IsColorSwapComplete.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.IsColorSwapComplete.html",
    "title": "Method IsColorSwapComplete | Nitrox",
    "keywords": "Method IsColorSwapComplete Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll IsColorSwapComplete() public bool IsColorSwapComplete() Returns bool"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.UpdateIndex.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.UpdateIndex.html",
    "title": "Method UpdateIndex | Nitrox",
    "keywords": "Method UpdateIndex Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll UpdateIndex(string, Color[]) public void UpdateIndex(string indexKey, Color[] pixels) Parameters indexKey string pixels Color[]"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorSwapAsyncOperation.html",
    "title": "Class ColorSwapAsyncOperation | Nitrox",
    "keywords": "Class ColorSwapAsyncOperation Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class ColorSwapAsyncOperation Inheritance object ColorSwapAsyncOperation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ColorSwapAsyncOperation(INitroxPlayer, IEnumerable<IColorSwapManager>) Methods ApplySwappedColors() BeginColorSwap() IsColorSwapComplete() UpdateIndex(string, Color[])"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorValueRange.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorValueRange.-ctor.html",
    "title": "Constructor ColorValueRange | Nitrox",
    "keywords": "Constructor ColorValueRange Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ColorValueRange(float, float) public ColorValueRange(float min, float max) Parameters min float max float"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorValueRange.Covers.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorValueRange.Covers.html",
    "title": "Method Covers | Nitrox",
    "keywords": "Method Covers Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll Covers(float) public bool Covers(float targetValue) Parameters targetValue float Returns bool"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorValueRange.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ColorValueRange.html",
    "title": "Class ColorValueRange | Nitrox",
    "keywords": "Class ColorValueRange Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class ColorValueRange Inheritance object ColorValueRange Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ColorValueRange(float, float) Methods Covers(float)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.DiveSuitColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.DiveSuitColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) public void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.DiveSuitColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.DiveSuitColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) public Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.DiveSuitColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.DiveSuitColorSwapManager.html",
    "title": "Class DiveSuitColorSwapManager | Nitrox",
    "keywords": "Class DiveSuitColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class DiveSuitColorSwapManager : IColorSwapManager Inheritance object DiveSuitColorSwapManager Implements IColorSwapManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.FinColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.FinColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) public void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.FinColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.FinColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) public Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.FinColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.FinColorSwapManager.html",
    "title": "Class FinColorSwapManager | Nitrox",
    "keywords": "Class FinColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class FinColorSwapManager : IColorSwapManager Inheritance object FinColorSwapManager Implements IColorSwapManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.-ctor.html",
    "title": "Constructor HsvSwapper | Nitrox",
    "keywords": "Constructor HsvSwapper Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll HsvSwapper(IColorSwapStrategy) public HsvSwapper(IColorSwapStrategy colorSwapStrategy) Parameters colorSwapStrategy IColorSwapStrategy"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.SetAlphaRange.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.SetAlphaRange.html",
    "title": "Method SetAlphaRange | Nitrox",
    "keywords": "Method SetAlphaRange Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll SetAlphaRange(float, float) public void SetAlphaRange(float minAlpha, float maxAlpha) Parameters minAlpha float maxAlpha float"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.SetHueRange.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.SetHueRange.html",
    "title": "Method SetHueRange | Nitrox",
    "keywords": "Method SetHueRange Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll SetHueRange(float, float) public void SetHueRange(float minHue, float maxHue) Parameters minHue float maxHue float"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.SetSaturationRange.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.SetSaturationRange.html",
    "title": "Method SetSaturationRange | Nitrox",
    "keywords": "Method SetSaturationRange Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll SetSaturationRange(float, float) public void SetSaturationRange(float minSaturation, float maxSaturation) Parameters minSaturation float maxSaturation float"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.SetVibrancyRange.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.SetVibrancyRange.html",
    "title": "Method SetVibrancyRange | Nitrox",
    "keywords": "Method SetVibrancyRange Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll SetVibrancyRange(float, float) public void SetVibrancyRange(float minVibrancy, float maxVibrancy) Parameters minVibrancy float maxVibrancy float"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.SwapColors.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.SwapColors.html",
    "title": "Method SwapColors | Nitrox",
    "keywords": "Method SwapColors Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll SwapColors(Color[]) public void SwapColors(Color[] texturePixels) Parameters texturePixels Color[]"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.HsvSwapper.html",
    "title": "Class HsvSwapper | Nitrox",
    "keywords": "Class HsvSwapper Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class HsvSwapper Inheritance object HsvSwapper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HsvSwapper(IColorSwapStrategy) Methods SetAlphaRange(float, float) SetHueRange(float, float) SetSaturationRange(float, float) SetVibrancyRange(float, float) SwapColors(Color[])"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationHelmetColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationHelmetColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) public void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationHelmetColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationHelmetColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) public Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationHelmetColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationHelmetColorSwapManager.html",
    "title": "Class RadiationHelmetColorSwapManager | Nitrox",
    "keywords": "Class RadiationHelmetColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class RadiationHelmetColorSwapManager : IColorSwapManager Inheritance object RadiationHelmetColorSwapManager Implements IColorSwapManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitColorSwapManager.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitColorSwapManager.-ctor.html",
    "title": "Constructor RadiationSuitColorSwapManager | Nitrox",
    "keywords": "Constructor RadiationSuitColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll RadiationSuitColorSwapManager() public RadiationSuitColorSwapManager()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) public void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) public Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitColorSwapManager.html",
    "title": "Class RadiationSuitColorSwapManager | Nitrox",
    "keywords": "Class RadiationSuitColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class RadiationSuitColorSwapManager : IColorSwapManager Inheritance object RadiationSuitColorSwapManager Implements IColorSwapManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RadiationSuitColorSwapManager() Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitVestColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitVestColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) public void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitVestColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitVestColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) public Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitVestColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationSuitVestColorSwapManager.html",
    "title": "Class RadiationSuitVestColorSwapManager | Nitrox",
    "keywords": "Class RadiationSuitVestColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class RadiationSuitVestColorSwapManager : IColorSwapManager Inheritance object RadiationSuitVestColorSwapManager Implements IColorSwapManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationTankColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationTankColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) public void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationTankColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationTankColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) public Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationTankColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RadiationTankColorSwapManager.html",
    "title": "Class RadiationTankColorSwapManager | Nitrox",
    "keywords": "Class RadiationTankColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class RadiationTankColorSwapManager : IColorSwapManager Inheritance object RadiationTankColorSwapManager Implements IColorSwapManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RebreatherColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RebreatherColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) public void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RebreatherColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RebreatherColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) public Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RebreatherColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.RebreatherColorSwapManager.html",
    "title": "Class RebreatherColorSwapManager | Nitrox",
    "keywords": "Class RebreatherColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class RebreatherColorSwapManager : IColorSwapManager Inheritance object RebreatherColorSwapManager Implements IColorSwapManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ReinforcedSuitColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ReinforcedSuitColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) public void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ReinforcedSuitColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ReinforcedSuitColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) public Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ReinforcedSuitColorSwapManager.PrepareMaterials.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ReinforcedSuitColorSwapManager.PrepareMaterials.html",
    "title": "Method PrepareMaterials | Nitrox",
    "keywords": "Method PrepareMaterials Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll PrepareMaterials(GameObject) public void PrepareMaterials(GameObject playerModel) Parameters playerModel GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ReinforcedSuitColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ReinforcedSuitColorSwapManager.html",
    "title": "Class ReinforcedSuitColorSwapManager | Nitrox",
    "keywords": "Class ReinforcedSuitColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class ReinforcedSuitColorSwapManager : IColorSwapManager Inheritance object ReinforcedSuitColorSwapManager Implements IColorSwapManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer) PrepareMaterials(GameObject)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ScubaTankColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ScubaTankColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) public void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ScubaTankColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ScubaTankColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) public Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ScubaTankColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.ScubaTankColorSwapManager.html",
    "title": "Class ScubaTankColorSwapManager | Nitrox",
    "keywords": "Class ScubaTankColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class ScubaTankColorSwapManager : IColorSwapManager Inheritance object ScubaTankColorSwapManager Implements IColorSwapManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.StillSuitColorSwapManager.ApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.StillSuitColorSwapManager.ApplyPlayerColor.html",
    "title": "Method ApplyPlayerColor | Nitrox",
    "keywords": "Method ApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) public void ApplyPlayerColor(Dictionary<string, Color[]> pixelIndex, INitroxPlayer nitroxPlayer) Parameters pixelIndex Dictionary<string, Color[]> nitroxPlayer INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.StillSuitColorSwapManager.CreateColorSwapTask.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.StillSuitColorSwapManager.CreateColorSwapTask.html",
    "title": "Method CreateColorSwapTask | Nitrox",
    "keywords": "Method CreateColorSwapTask Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll CreateColorSwapTask(INitroxPlayer) public Action<ColorSwapAsyncOperation> CreateColorSwapTask(INitroxPlayer nitroxPlayer) Parameters nitroxPlayer INitroxPlayer Returns Action<ColorSwapAsyncOperation>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.StillSuitColorSwapManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.StillSuitColorSwapManager.html",
    "title": "Class StillSuitColorSwapManager | Nitrox",
    "keywords": "Class StillSuitColorSwapManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class StillSuitColorSwapManager : IColorSwapManager Inheritance object StillSuitColorSwapManager Implements IColorSwapManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyPlayerColor(Dictionary<string, Color[]>, INitroxPlayer) CreateColorSwapTask(INitroxPlayer)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.AlphaChannelSwapper.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.AlphaChannelSwapper.-ctor.html",
    "title": "Constructor AlphaChannelSwapper | Nitrox",
    "keywords": "Constructor AlphaChannelSwapper Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Assembly NitroxClient.dll AlphaChannelSwapper(float) public AlphaChannelSwapper(float replacementAlpha) Parameters replacementAlpha float"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.AlphaChannelSwapper.SwapColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.AlphaChannelSwapper.SwapColor.html",
    "title": "Method SwapColor | Nitrox",
    "keywords": "Method SwapColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Assembly NitroxClient.dll SwapColor(Color) public Color SwapColor(Color originalColor) Parameters originalColor Color Returns Color"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.AlphaChannelSwapper.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.AlphaChannelSwapper.html",
    "title": "Class AlphaChannelSwapper | Nitrox",
    "keywords": "Class AlphaChannelSwapper Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Assembly NitroxClient.dll public class AlphaChannelSwapper : IColorSwapStrategy Inheritance object AlphaChannelSwapper Implements IColorSwapStrategy Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AlphaChannelSwapper(float) Methods SwapColor(Color)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSaturationVibrancySwapper.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSaturationVibrancySwapper.-ctor.html",
    "title": "Constructor HueSaturationVibrancySwapper | Nitrox",
    "keywords": "Constructor HueSaturationVibrancySwapper Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Assembly NitroxClient.dll HueSaturationVibrancySwapper(Color) public HueSaturationVibrancySwapper(Color playerColor) Parameters playerColor Color"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSaturationVibrancySwapper.SwapColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSaturationVibrancySwapper.SwapColor.html",
    "title": "Method SwapColor | Nitrox",
    "keywords": "Method SwapColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Assembly NitroxClient.dll SwapColor(Color) public Color SwapColor(Color originalColor) Parameters originalColor Color Returns Color"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSaturationVibrancySwapper.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSaturationVibrancySwapper.html",
    "title": "Class HueSaturationVibrancySwapper | Nitrox",
    "keywords": "Class HueSaturationVibrancySwapper Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Assembly NitroxClient.dll public class HueSaturationVibrancySwapper : IColorSwapStrategy Inheritance object HueSaturationVibrancySwapper Implements IColorSwapStrategy Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HueSaturationVibrancySwapper(Color) Methods SwapColor(Color)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSwapper.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSwapper.-ctor.html",
    "title": "Constructor HueSwapper | Nitrox",
    "keywords": "Constructor HueSwapper Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Assembly NitroxClient.dll HueSwapper(Color) public HueSwapper(Color playerColor) Parameters playerColor Color"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSwapper.SwapColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSwapper.SwapColor.html",
    "title": "Method SwapColor | Nitrox",
    "keywords": "Method SwapColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Assembly NitroxClient.dll SwapColor(Color) public Color SwapColor(Color originalColor) Parameters originalColor Color Returns Color"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSwapper.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.HueSwapper.html",
    "title": "Class HueSwapper | Nitrox",
    "keywords": "Class HueSwapper Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Assembly NitroxClient.dll public class HueSwapper : IColorSwapStrategy Inheritance object HueSwapper Implements IColorSwapStrategy Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HueSwapper(Color) Methods SwapColor(Color)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy.html",
    "title": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Classes AlphaChannelSwapper HueSaturationVibrancySwapper HueSwapper"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.-ctor.html",
    "title": "Constructor TextureBlock | Nitrox",
    "keywords": "Constructor TextureBlock Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll TextureBlock(int, int, int, int) public TextureBlock(int x, int y, int blockWidth, int blockHeight) Parameters x int y int blockWidth int blockHeight int"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.BlockHeight.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.BlockHeight.html",
    "title": "Property BlockHeight | Nitrox",
    "keywords": "Property BlockHeight Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll BlockHeight public int BlockHeight { get; } Property Value int"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.BlockWidth.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.BlockWidth.html",
    "title": "Property BlockWidth | Nitrox",
    "keywords": "Property BlockWidth Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll BlockWidth public int BlockWidth { get; } Property Value int"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.X.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.X.html",
    "title": "Property X | Nitrox",
    "keywords": "Property X Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll X public int X { get; } Property Value int"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.Y.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.Y.html",
    "title": "Property Y | Nitrox",
    "keywords": "Property Y Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll Y public int Y { get; } Property Value int"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.TextureBlock.html",
    "title": "Class TextureBlock | Nitrox",
    "keywords": "Class TextureBlock Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Assembly NitroxClient.dll public class TextureBlock Inheritance object TextureBlock Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TextureBlock(int, int, int, int) Properties BlockHeight BlockWidth X Y"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.html",
    "title": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap Namespaces NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap.Strategy Classes ColorSwapAsyncOperation ColorValueRange DiveSuitColorSwapManager FinColorSwapManager HsvSwapper RadiationHelmetColorSwapManager RadiationSuitColorSwapManager RadiationSuitVestColorSwapManager RadiationTankColorSwapManager RebreatherColorSwapManager ReinforcedSuitColorSwapManager ScubaTankColorSwapManager StillSuitColorSwapManager TextureBlock"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract.IEquipmentVisibilityHandler.UpdateEquipmentVisibility.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract.IEquipmentVisibilityHandler.UpdateEquipmentVisibility.html",
    "title": "Method UpdateEquipmentVisibility | Nitrox",
    "keywords": "Method UpdateEquipmentVisibility Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract Assembly NitroxClient.dll UpdateEquipmentVisibility(ReadOnlyCollection<TechType>) void UpdateEquipmentVisibility(ReadOnlyCollection<TechType> currentEquipment) Parameters currentEquipment ReadOnlyCollection<TechType>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract.IEquipmentVisibilityHandler.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract.IEquipmentVisibilityHandler.html",
    "title": "Interface IEquipmentVisibilityHandler | Nitrox",
    "keywords": "Interface IEquipmentVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract Assembly NitroxClient.dll public interface IEquipmentVisibilityHandler Methods UpdateEquipmentVisibility(ReadOnlyCollection<TechType>)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract.html",
    "title": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract Interfaces IEquipmentVisibilityHandler"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.DiveSuitVisibilityHandler.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.DiveSuitVisibilityHandler.-ctor.html",
    "title": "Constructor DiveSuitVisibilityHandler | Nitrox",
    "keywords": "Constructor DiveSuitVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll DiveSuitVisibilityHandler(GameObject) public DiveSuitVisibilityHandler(GameObject playerModel) Parameters playerModel GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.DiveSuitVisibilityHandler.UpdateEquipmentVisibility.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.DiveSuitVisibilityHandler.UpdateEquipmentVisibility.html",
    "title": "Method UpdateEquipmentVisibility | Nitrox",
    "keywords": "Method UpdateEquipmentVisibility Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll UpdateEquipmentVisibility(ReadOnlyCollection<TechType>) public void UpdateEquipmentVisibility(ReadOnlyCollection<TechType> currentEquipment) Parameters currentEquipment ReadOnlyCollection<TechType>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.DiveSuitVisibilityHandler.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.DiveSuitVisibilityHandler.html",
    "title": "Class DiveSuitVisibilityHandler | Nitrox",
    "keywords": "Class DiveSuitVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll public class DiveSuitVisibilityHandler : IEquipmentVisibilityHandler Inheritance object DiveSuitVisibilityHandler Implements IEquipmentVisibilityHandler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DiveSuitVisibilityHandler(GameObject) Methods UpdateEquipmentVisibility(ReadOnlyCollection<TechType>)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.FinsVisibilityHandler.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.FinsVisibilityHandler.-ctor.html",
    "title": "Constructor FinsVisibilityHandler | Nitrox",
    "keywords": "Constructor FinsVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll FinsVisibilityHandler(GameObject) public FinsVisibilityHandler(GameObject playerModel) Parameters playerModel GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.FinsVisibilityHandler.UpdateEquipmentVisibility.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.FinsVisibilityHandler.UpdateEquipmentVisibility.html",
    "title": "Method UpdateEquipmentVisibility | Nitrox",
    "keywords": "Method UpdateEquipmentVisibility Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll UpdateEquipmentVisibility(ReadOnlyCollection<TechType>) public void UpdateEquipmentVisibility(ReadOnlyCollection<TechType> currentEquipment) Parameters currentEquipment ReadOnlyCollection<TechType>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.FinsVisibilityHandler.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.FinsVisibilityHandler.html",
    "title": "Class FinsVisibilityHandler | Nitrox",
    "keywords": "Class FinsVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll public class FinsVisibilityHandler : IEquipmentVisibilityHandler Inheritance object FinsVisibilityHandler Implements IEquipmentVisibilityHandler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FinsVisibilityHandler(GameObject) Methods UpdateEquipmentVisibility(ReadOnlyCollection<TechType>)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.RadiationSuitVisibilityHandler.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.RadiationSuitVisibilityHandler.-ctor.html",
    "title": "Constructor RadiationSuitVisibilityHandler | Nitrox",
    "keywords": "Constructor RadiationSuitVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll RadiationSuitVisibilityHandler(GameObject) public RadiationSuitVisibilityHandler(GameObject playerModel) Parameters playerModel GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.RadiationSuitVisibilityHandler.UpdateEquipmentVisibility.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.RadiationSuitVisibilityHandler.UpdateEquipmentVisibility.html",
    "title": "Method UpdateEquipmentVisibility | Nitrox",
    "keywords": "Method UpdateEquipmentVisibility Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll UpdateEquipmentVisibility(ReadOnlyCollection<TechType>) public void UpdateEquipmentVisibility(ReadOnlyCollection<TechType> currentEquipment) Parameters currentEquipment ReadOnlyCollection<TechType>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.RadiationSuitVisibilityHandler.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.RadiationSuitVisibilityHandler.html",
    "title": "Class RadiationSuitVisibilityHandler | Nitrox",
    "keywords": "Class RadiationSuitVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll public class RadiationSuitVisibilityHandler : IEquipmentVisibilityHandler Inheritance object RadiationSuitVisibilityHandler Implements IEquipmentVisibilityHandler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RadiationSuitVisibilityHandler(GameObject) Methods UpdateEquipmentVisibility(ReadOnlyCollection<TechType>)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ReinforcedSuitVisibilityHandler.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ReinforcedSuitVisibilityHandler.-ctor.html",
    "title": "Constructor ReinforcedSuitVisibilityHandler | Nitrox",
    "keywords": "Constructor ReinforcedSuitVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll ReinforcedSuitVisibilityHandler(GameObject) public ReinforcedSuitVisibilityHandler(GameObject playerModel) Parameters playerModel GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ReinforcedSuitVisibilityHandler.UpdateEquipmentVisibility.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ReinforcedSuitVisibilityHandler.UpdateEquipmentVisibility.html",
    "title": "Method UpdateEquipmentVisibility | Nitrox",
    "keywords": "Method UpdateEquipmentVisibility Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll UpdateEquipmentVisibility(ReadOnlyCollection<TechType>) public void UpdateEquipmentVisibility(ReadOnlyCollection<TechType> currentEquipment) Parameters currentEquipment ReadOnlyCollection<TechType>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ReinforcedSuitVisibilityHandler.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ReinforcedSuitVisibilityHandler.html",
    "title": "Class ReinforcedSuitVisibilityHandler | Nitrox",
    "keywords": "Class ReinforcedSuitVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll public class ReinforcedSuitVisibilityHandler : IEquipmentVisibilityHandler Inheritance object ReinforcedSuitVisibilityHandler Implements IEquipmentVisibilityHandler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ReinforcedSuitVisibilityHandler(GameObject) Methods UpdateEquipmentVisibility(ReadOnlyCollection<TechType>)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ScubaSuitVisibilityHandler.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ScubaSuitVisibilityHandler.-ctor.html",
    "title": "Constructor ScubaSuitVisibilityHandler | Nitrox",
    "keywords": "Constructor ScubaSuitVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll ScubaSuitVisibilityHandler(GameObject) public ScubaSuitVisibilityHandler(GameObject playerModel) Parameters playerModel GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ScubaSuitVisibilityHandler.UpdateEquipmentVisibility.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ScubaSuitVisibilityHandler.UpdateEquipmentVisibility.html",
    "title": "Method UpdateEquipmentVisibility | Nitrox",
    "keywords": "Method UpdateEquipmentVisibility Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll UpdateEquipmentVisibility(ReadOnlyCollection<TechType>) public void UpdateEquipmentVisibility(ReadOnlyCollection<TechType> currentEquipment) Parameters currentEquipment ReadOnlyCollection<TechType>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ScubaSuitVisibilityHandler.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.ScubaSuitVisibilityHandler.html",
    "title": "Class ScubaSuitVisibilityHandler | Nitrox",
    "keywords": "Class ScubaSuitVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll public class ScubaSuitVisibilityHandler : IEquipmentVisibilityHandler Inheritance object ScubaSuitVisibilityHandler Implements IEquipmentVisibilityHandler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ScubaSuitVisibilityHandler(GameObject) Methods UpdateEquipmentVisibility(ReadOnlyCollection<TechType>)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.StillSuitVisibilityHandler.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.StillSuitVisibilityHandler.-ctor.html",
    "title": "Constructor StillSuitVisibilityHandler | Nitrox",
    "keywords": "Constructor StillSuitVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll StillSuitVisibilityHandler(GameObject) public StillSuitVisibilityHandler(GameObject playerModel) Parameters playerModel GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.StillSuitVisibilityHandler.UpdateEquipmentVisibility.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.StillSuitVisibilityHandler.UpdateEquipmentVisibility.html",
    "title": "Method UpdateEquipmentVisibility | Nitrox",
    "keywords": "Method UpdateEquipmentVisibility Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll UpdateEquipmentVisibility(ReadOnlyCollection<TechType>) public void UpdateEquipmentVisibility(ReadOnlyCollection<TechType> currentEquipment) Parameters currentEquipment ReadOnlyCollection<TechType>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.StillSuitVisibilityHandler.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.StillSuitVisibilityHandler.html",
    "title": "Class StillSuitVisibilityHandler | Nitrox",
    "keywords": "Class StillSuitVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Assembly NitroxClient.dll public class StillSuitVisibilityHandler : IEquipmentVisibilityHandler Inheritance object StillSuitVisibilityHandler Implements IEquipmentVisibilityHandler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StillSuitVisibilityHandler(GameObject) Methods UpdateEquipmentVisibility(ReadOnlyCollection<TechType>)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.html",
    "title": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Namespaces NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment.Abstract Classes DiveSuitVisibilityHandler FinsVisibilityHandler RadiationSuitVisibilityHandler ReinforcedSuitVisibilityHandler ScubaSuitVisibilityHandler StillSuitVisibilityHandler"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.CHARGED_FINS_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.CHARGED_FINS_GAME_OBJECT_NAME.html",
    "title": "Field CHARGED_FINS_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field CHARGED_FINS_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string CHARGED_FINS_GAME_OBJECT_NAME = \"male_geo/SwimChargeFins/flippers_basic_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.CHARGED_FINS_ROOT_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.CHARGED_FINS_ROOT_GAME_OBJECT_NAME.html",
    "title": "Field CHARGED_FINS_ROOT_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field CHARGED_FINS_ROOT_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string CHARGED_FINS_ROOT_GAME_OBJECT_NAME = \"male_geo/SwimChargeFins\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.DIVE_SUIT_ARMS_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.DIVE_SUIT_ARMS_INDEX_KEY.html",
    "title": "Field DIVE_SUIT_ARMS_INDEX_KEY | Nitrox",
    "keywords": "Field DIVE_SUIT_ARMS_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string DIVE_SUIT_ARMS_INDEX_KEY = \"dive-suit-arms\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.DIVE_SUIT_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.DIVE_SUIT_GAME_OBJECT_NAME.html",
    "title": "Field DIVE_SUIT_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field DIVE_SUIT_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string DIVE_SUIT_GAME_OBJECT_NAME = \"male_geo/diveSuit/diveSuit_body_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.DIVE_SUIT_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.DIVE_SUIT_INDEX_KEY.html",
    "title": "Field DIVE_SUIT_INDEX_KEY | Nitrox",
    "keywords": "Field DIVE_SUIT_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string DIVE_SUIT_INDEX_KEY = \"dive-suit\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.FINS_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.FINS_GAME_OBJECT_NAME.html",
    "title": "Field FINS_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field FINS_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string FINS_GAME_OBJECT_NAME = \"male_geo/generalSuit/flippers_basic_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.FINS_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.FINS_INDEX_KEY.html",
    "title": "Field FINS_INDEX_KEY | Nitrox",
    "keywords": "Field FINS_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string FINS_INDEX_KEY = \"fins\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.FINS_ROOT_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.FINS_ROOT_GAME_OBJECT_NAME.html",
    "title": "Field FINS_ROOT_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field FINS_ROOT_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string FINS_ROOT_GAME_OBJECT_NAME = \"male_geo/generalSuit\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.GLIDE_FINS_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.GLIDE_FINS_GAME_OBJECT_NAME.html",
    "title": "Field GLIDE_FINS_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field GLIDE_FINS_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string GLIDE_FINS_GAME_OBJECT_NAME = \"male_geo/UltraGlideFins/flippers_basic_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.GLIDE_FINS_ROOT_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.GLIDE_FINS_ROOT_GAME_OBJECT_NAME.html",
    "title": "Field GLIDE_FINS_ROOT_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field GLIDE_FINS_ROOT_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string GLIDE_FINS_ROOT_GAME_OBJECT_NAME = \"male_geo/UltraGlideFins\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.ITEM_ATTACH_POINT_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.ITEM_ATTACH_POINT_GAME_OBJECT_NAME.html",
    "title": "Field ITEM_ATTACH_POINT_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field ITEM_ATTACH_POINT_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string ITEM_ATTACH_POINT_GAME_OBJECT_NAME = \"export_skeleton/head_rig/neck/chest/clav_R/clav_R_aim/shoulder_R/elbow_R/hand_R/attach1\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.NORMAL_HANDS_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.NORMAL_HANDS_GAME_OBJECT_NAME.html",
    "title": "Field NORMAL_HANDS_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field NORMAL_HANDS_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string NORMAL_HANDS_GAME_OBJECT_NAME = \"male_geo/diveSuit/diveSuit_hands_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.NORMAL_HEAD_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.NORMAL_HEAD_GAME_OBJECT_NAME.html",
    "title": "Field NORMAL_HEAD_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field NORMAL_HEAD_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string NORMAL_HEAD_GAME_OBJECT_NAME = \"male_geo/diveSuit/diveSuit_head_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_GLOVES_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_GLOVES_GAME_OBJECT_NAME.html",
    "title": "Field RADIATION_GLOVES_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field RADIATION_GLOVES_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_GLOVES_GAME_OBJECT_NAME = \"male_geo/radiationSuit/radiationSuit_gloves_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_HEAD_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_HEAD_GAME_OBJECT_NAME.html",
    "title": "Field RADIATION_HEAD_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field RADIATION_HEAD_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_HEAD_GAME_OBJECT_NAME = \"male_geo/radiationSuit/radiationSuit_head_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_HELMET_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_HELMET_GAME_OBJECT_NAME.html",
    "title": "Field RADIATION_HELMET_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field RADIATION_HELMET_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_HELMET_GAME_OBJECT_NAME = \"male_geo/radiationSuit/radiationSuit_vest_reducedNeck_geo/radiationSuit_vest_neckExtension_geo/radiationSuit_helmet_geo 1\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_HELMET_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_HELMET_INDEX_KEY.html",
    "title": "Field RADIATION_HELMET_INDEX_KEY | Nitrox",
    "keywords": "Field RADIATION_HELMET_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_HELMET_INDEX_KEY = \"radiation-helmet\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_ARMS_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_ARMS_INDEX_KEY.html",
    "title": "Field RADIATION_SUIT_ARMS_INDEX_KEY | Nitrox",
    "keywords": "Field RADIATION_SUIT_ARMS_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_SUIT_ARMS_INDEX_KEY = \"radiation-suit-arms\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_BELT_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_BELT_INDEX_KEY.html",
    "title": "Field RADIATION_SUIT_BELT_INDEX_KEY | Nitrox",
    "keywords": "Field RADIATION_SUIT_BELT_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_SUIT_BELT_INDEX_KEY = \"radiation-suit-belt\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_FEET_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_FEET_INDEX_KEY.html",
    "title": "Field RADIATION_SUIT_FEET_INDEX_KEY | Nitrox",
    "keywords": "Field RADIATION_SUIT_FEET_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_SUIT_FEET_INDEX_KEY = \"radiation-suit-feet\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_GAME_OBJECT_NAME.html",
    "title": "Field RADIATION_SUIT_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field RADIATION_SUIT_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_SUIT_GAME_OBJECT_NAME = \"male_geo/radiationSuit/radiationSuit_body_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_LEG_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_LEG_INDEX_KEY.html",
    "title": "Field RADIATION_SUIT_LEG_INDEX_KEY | Nitrox",
    "keywords": "Field RADIATION_SUIT_LEG_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_SUIT_LEG_INDEX_KEY = \"radiation-suit-leg\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_NECK_CLASP_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_NECK_CLASP_GAME_OBJECT_NAME.html",
    "title": "Field RADIATION_SUIT_NECK_CLASP_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field RADIATION_SUIT_NECK_CLASP_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_SUIT_NECK_CLASP_GAME_OBJECT_NAME = \"male_geo/radiationSuit/radiationSuit_vest_reducedNeck_geo/radiationSuit_vest_neckExtension_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_NECK_CLASP_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_NECK_CLASP_INDEX_KEY.html",
    "title": "Field RADIATION_SUIT_NECK_CLASP_INDEX_KEY | Nitrox",
    "keywords": "Field RADIATION_SUIT_NECK_CLASP_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_SUIT_NECK_CLASP_INDEX_KEY = \"radiation-suit-neck-clasp\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_TANK_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_TANK_INDEX_KEY.html",
    "title": "Field RADIATION_SUIT_TANK_INDEX_KEY | Nitrox",
    "keywords": "Field RADIATION_SUIT_TANK_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_SUIT_TANK_INDEX_KEY = \"radiation-suit-tank\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_VEST_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_VEST_GAME_OBJECT_NAME.html",
    "title": "Field RADIATION_SUIT_VEST_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field RADIATION_SUIT_VEST_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_SUIT_VEST_GAME_OBJECT_NAME = \"male_geo/radiationSuit/radiationSuit_vest_reducedNeck_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_VEST_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_SUIT_VEST_INDEX_KEY.html",
    "title": "Field RADIATION_SUIT_VEST_INDEX_KEY | Nitrox",
    "keywords": "Field RADIATION_SUIT_VEST_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_SUIT_VEST_INDEX_KEY = \"radiation-suit-vest\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_TANK_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_TANK_GAME_OBJECT_NAME.html",
    "title": "Field RADIATION_TANK_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field RADIATION_TANK_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_TANK_GAME_OBJECT_NAME = \"male_geo/radiationSuit/radiationSuit_vest_reducedNeck_geo/radiationSuit_tank_geo 1\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_TANK_TUBES_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.RADIATION_TANK_TUBES_GAME_OBJECT_NAME.html",
    "title": "Field RADIATION_TANK_TUBES_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field RADIATION_TANK_TUBES_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string RADIATION_TANK_TUBES_GAME_OBJECT_NAME = \"male_geo/radiationSuit/radiationSuit_vest_reducedNeck_geo/radiationSuit_tank_geo 1/radiationSuit_tubes_geo 1\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REBREATHER_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REBREATHER_GAME_OBJECT_NAME.html",
    "title": "Field REBREATHER_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field REBREATHER_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string REBREATHER_GAME_OBJECT_NAME = \"male_geo/scubaSuit/scuba_head\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REBREATHER_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REBREATHER_INDEX_KEY.html",
    "title": "Field REBREATHER_INDEX_KEY | Nitrox",
    "keywords": "Field REBREATHER_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string REBREATHER_INDEX_KEY = \"rebreather\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REINFORCED_GLOVES_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REINFORCED_GLOVES_GAME_OBJECT_NAME.html",
    "title": "Field REINFORCED_GLOVES_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field REINFORCED_GLOVES_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string REINFORCED_GLOVES_GAME_OBJECT_NAME = \"male_geo/reinforcedSuit/reinforced_suit_01_glove_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REINFORCED_GLOVES_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REINFORCED_GLOVES_INDEX_KEY.html",
    "title": "Field REINFORCED_GLOVES_INDEX_KEY | Nitrox",
    "keywords": "Field REINFORCED_GLOVES_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string REINFORCED_GLOVES_INDEX_KEY = \"reinforced-gloves\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REINFORCED_SUIT_ARMS_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REINFORCED_SUIT_ARMS_INDEX_KEY.html",
    "title": "Field REINFORCED_SUIT_ARMS_INDEX_KEY | Nitrox",
    "keywords": "Field REINFORCED_SUIT_ARMS_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string REINFORCED_SUIT_ARMS_INDEX_KEY = \"reinforced-suit-arms\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REINFORCED_SUIT_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REINFORCED_SUIT_GAME_OBJECT_NAME.html",
    "title": "Field REINFORCED_SUIT_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field REINFORCED_SUIT_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string REINFORCED_SUIT_GAME_OBJECT_NAME = \"male_geo/reinforcedSuit/reinforced_suit_01_body_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REINFORCED_SUIT_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.REINFORCED_SUIT_INDEX_KEY.html",
    "title": "Field REINFORCED_SUIT_INDEX_KEY | Nitrox",
    "keywords": "Field REINFORCED_SUIT_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string REINFORCED_SUIT_INDEX_KEY = \"reinforced-suit\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.SCUBA_ROOT_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.SCUBA_ROOT_GAME_OBJECT_NAME.html",
    "title": "Field SCUBA_ROOT_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field SCUBA_ROOT_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string SCUBA_ROOT_GAME_OBJECT_NAME = \"male_geo/scubaSuit\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.SCUBA_TANK_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.SCUBA_TANK_GAME_OBJECT_NAME.html",
    "title": "Field SCUBA_TANK_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field SCUBA_TANK_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string SCUBA_TANK_GAME_OBJECT_NAME = \"male_geo/scubaSuit/scuba_vest\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.SCUBA_TANK_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.SCUBA_TANK_INDEX_KEY.html",
    "title": "Field SCUBA_TANK_INDEX_KEY | Nitrox",
    "keywords": "Field SCUBA_TANK_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string SCUBA_TANK_INDEX_KEY = \"scuba-tank\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.SCUBA_TANK_TUBES_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.SCUBA_TANK_TUBES_GAME_OBJECT_NAME.html",
    "title": "Field SCUBA_TANK_TUBES_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field SCUBA_TANK_TUBES_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string SCUBA_TANK_TUBES_GAME_OBJECT_NAME = \"male_geo/scubaSuit/scuba_vest/scuba_breatherTubes\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.STILL_SUIT_ARMS_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.STILL_SUIT_ARMS_INDEX_KEY.html",
    "title": "Field STILL_SUIT_ARMS_INDEX_KEY | Nitrox",
    "keywords": "Field STILL_SUIT_ARMS_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string STILL_SUIT_ARMS_INDEX_KEY = \"still-suit-arms\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.STILL_SUIT_GAME_OBJECT_NAME.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.STILL_SUIT_GAME_OBJECT_NAME.html",
    "title": "Field STILL_SUIT_GAME_OBJECT_NAME | Nitrox",
    "keywords": "Field STILL_SUIT_GAME_OBJECT_NAME Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string STILL_SUIT_GAME_OBJECT_NAME = \"male_geo/stillSuit/still_suit_01_body_geo\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.STILL_SUIT_INDEX_KEY.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.STILL_SUIT_INDEX_KEY.html",
    "title": "Field STILL_SUIT_INDEX_KEY | Nitrox",
    "keywords": "Field STILL_SUIT_INDEX_KEY Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public const string STILL_SUIT_INDEX_KEY = \"still-suit\" Returns string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerEquipmentConstants.html",
    "title": "Class PlayerEquipmentConstants | Nitrox",
    "keywords": "Class PlayerEquipmentConstants Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public static class PlayerEquipmentConstants Inheritance object PlayerEquipmentConstants Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields CHARGED_FINS_GAME_OBJECT_NAME CHARGED_FINS_ROOT_GAME_OBJECT_NAME DIVE_SUIT_ARMS_INDEX_KEY DIVE_SUIT_GAME_OBJECT_NAME DIVE_SUIT_INDEX_KEY FINS_GAME_OBJECT_NAME FINS_INDEX_KEY FINS_ROOT_GAME_OBJECT_NAME GLIDE_FINS_GAME_OBJECT_NAME GLIDE_FINS_ROOT_GAME_OBJECT_NAME ITEM_ATTACH_POINT_GAME_OBJECT_NAME NORMAL_HANDS_GAME_OBJECT_NAME NORMAL_HEAD_GAME_OBJECT_NAME RADIATION_GLOVES_GAME_OBJECT_NAME RADIATION_HEAD_GAME_OBJECT_NAME RADIATION_HELMET_GAME_OBJECT_NAME RADIATION_HELMET_INDEX_KEY RADIATION_SUIT_ARMS_INDEX_KEY RADIATION_SUIT_BELT_INDEX_KEY RADIATION_SUIT_FEET_INDEX_KEY RADIATION_SUIT_GAME_OBJECT_NAME RADIATION_SUIT_LEG_INDEX_KEY RADIATION_SUIT_NECK_CLASP_GAME_OBJECT_NAME RADIATION_SUIT_NECK_CLASP_INDEX_KEY RADIATION_SUIT_TANK_INDEX_KEY RADIATION_SUIT_VEST_GAME_OBJECT_NAME RADIATION_SUIT_VEST_INDEX_KEY RADIATION_TANK_GAME_OBJECT_NAME RADIATION_TANK_TUBES_GAME_OBJECT_NAME REBREATHER_GAME_OBJECT_NAME REBREATHER_INDEX_KEY REINFORCED_GLOVES_GAME_OBJECT_NAME REINFORCED_GLOVES_INDEX_KEY REINFORCED_SUIT_ARMS_INDEX_KEY REINFORCED_SUIT_GAME_OBJECT_NAME REINFORCED_SUIT_INDEX_KEY SCUBA_ROOT_GAME_OBJECT_NAME SCUBA_TANK_GAME_OBJECT_NAME SCUBA_TANK_INDEX_KEY SCUBA_TANK_TUBES_GAME_OBJECT_NAME STILL_SUIT_ARMS_INDEX_KEY STILL_SUIT_GAME_OBJECT_NAME STILL_SUIT_INDEX_KEY"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.-ctor.html",
    "title": "Constructor PlayerModelManager | Nitrox",
    "keywords": "Constructor PlayerModelManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll PlayerModelManager(IEnumerable<IColorSwapManager>) public PlayerModelManager(IEnumerable<IColorSwapManager> colorSwapManagers) Parameters colorSwapManagers IEnumerable<IColorSwapManager>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.AttachPing.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.AttachPing.html",
    "title": "Method AttachPing | Nitrox",
    "keywords": "Method AttachPing Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll AttachPing(INitroxPlayer) public IEnumerator AttachPing(INitroxPlayer player) Parameters player INitroxPlayer Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.BeginApplyPlayerColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.BeginApplyPlayerColor.html",
    "title": "Method BeginApplyPlayerColor | Nitrox",
    "keywords": "Method BeginApplyPlayerColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll BeginApplyPlayerColor(INitroxPlayer) public void BeginApplyPlayerColor(INitroxPlayer player) Parameters player INitroxPlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.RegisterEquipmentVisibilityHandler.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.RegisterEquipmentVisibilityHandler.html",
    "title": "Method RegisterEquipmentVisibilityHandler | Nitrox",
    "keywords": "Method RegisterEquipmentVisibilityHandler Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll RegisterEquipmentVisibilityHandler(GameObject) public void RegisterEquipmentVisibilityHandler(GameObject playerModel) Parameters playerModel GameObject"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.UpdateEquipmentVisibility.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.UpdateEquipmentVisibility.html",
    "title": "Method UpdateEquipmentVisibility | Nitrox",
    "keywords": "Method UpdateEquipmentVisibility Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll UpdateEquipmentVisibility(ReadOnlyCollection<TechType>) public void UpdateEquipmentVisibility(ReadOnlyCollection<TechType> currentEquipment) Parameters currentEquipment ReadOnlyCollection<TechType>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.PlayerModelManager.html",
    "title": "Class PlayerModelManager | Nitrox",
    "keywords": "Class PlayerModelManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Assembly NitroxClient.dll public class PlayerModelManager Inheritance object PlayerModelManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerModelManager(IEnumerable<IColorSwapManager>) Methods AttachPing(INitroxPlayer) BeginApplyPlayerColor(INitroxPlayer) RegisterEquipmentVisibilityHandler(GameObject) UpdateEquipmentVisibility(ReadOnlyCollection<TechType>)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerModel.html",
    "title": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerModel Namespaces NitroxClient.GameLogic.PlayerLogic.PlayerModel.Abstract NitroxClient.GameLogic.PlayerLogic.PlayerModel.ColorSwap NitroxClient.GameLogic.PlayerLogic.PlayerModel.Equipment Classes PlayerEquipmentConstants PlayerModelManager"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.IPreferenceStateProvider.GetPreferenceState.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.IPreferenceStateProvider.GetPreferenceState.html",
    "title": "Method GetPreferenceState | Nitrox",
    "keywords": "Method GetPreferenceState Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll GetPreferenceState() PlayerPreferenceState GetPreferenceState() Returns PlayerPreferenceState"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.IPreferenceStateProvider.SavePreferenceState.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.IPreferenceStateProvider.SavePreferenceState.html",
    "title": "Method SavePreferenceState | Nitrox",
    "keywords": "Method SavePreferenceState Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll SavePreferenceState(PlayerPreferenceState) void SavePreferenceState(PlayerPreferenceState preferenceState) Parameters preferenceState PlayerPreferenceState"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.IPreferenceStateProvider.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.IPreferenceStateProvider.html",
    "title": "Interface IPreferenceStateProvider | Nitrox",
    "keywords": "Interface IPreferenceStateProvider Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll public interface IPreferenceStateProvider Methods GetPreferenceState() SavePreferenceState(PlayerPreferenceState)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.-ctor.html",
    "title": "Constructor PlayerPreference | Nitrox",
    "keywords": "Constructor PlayerPreference Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll PlayerPreference() public PlayerPreference() PlayerPreference(Color) public PlayerPreference(Color playerColor) Parameters playerColor Color PlayerPreference(string, Color) public PlayerPreference(string playerName, Color playerColor) Parameters playerName string playerColor Color"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.BlueAdditive.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.BlueAdditive.html",
    "title": "Property BlueAdditive | Nitrox",
    "keywords": "Property BlueAdditive Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll BlueAdditive public float BlueAdditive { get; } Property Value float"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.Clone.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.Clone.html",
    "title": "Method Clone | Nitrox",
    "keywords": "Method Clone Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll Clone() public PlayerPreference Clone() Returns PlayerPreference"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.Equals.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll Equals(PlayerPreference) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerPreference other) Parameters other PlayerPreference An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false."
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.GetHashCode.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.GreenAdditive.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.GreenAdditive.html",
    "title": "Property GreenAdditive | Nitrox",
    "keywords": "Property GreenAdditive Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll GreenAdditive public float GreenAdditive { get; } Property Value float"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.PlayerName.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.PlayerName.html",
    "title": "Property PlayerName | Nitrox",
    "keywords": "Property PlayerName Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll PlayerName public string PlayerName { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.RedAdditive.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.RedAdditive.html",
    "title": "Property RedAdditive | Nitrox",
    "keywords": "Property RedAdditive Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll RedAdditive public float RedAdditive { get; } Property Value float"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreference.html",
    "title": "Class PlayerPreference | Nitrox",
    "keywords": "Class PlayerPreference Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll [Serializable] public class PlayerPreference : IEquatable<PlayerPreference> Inheritance object PlayerPreference Implements IEquatable<PlayerPreference> Inherited Members object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods PlayerPreferenceExtensions.PreferredColor(PlayerPreference) Constructors PlayerPreference() PlayerPreference(string, Color) PlayerPreference(Color) Properties BlueAdditive GreenAdditive PlayerName RedAdditive Methods Clone() Equals(PlayerPreference) Indicates whether the current object is equal to another object of the same type. Equals(object) Determines whether the specified object is equal to the current object. GetHashCode() Serves as the default hash function."
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceExtensions.PreferredColor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceExtensions.PreferredColor.html",
    "title": "Method PreferredColor | Nitrox",
    "keywords": "Method PreferredColor Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll PreferredColor(PlayerPreference) public static Color PreferredColor(this PlayerPreference playerPreference) Parameters playerPreference PlayerPreference Returns Color"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceExtensions.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceExtensions.html",
    "title": "Class PlayerPreferenceExtensions | Nitrox",
    "keywords": "Class PlayerPreferenceExtensions Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll public static class PlayerPreferenceExtensions Inheritance object PlayerPreferenceExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods PreferredColor(PlayerPreference)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManager.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManager.-ctor.html",
    "title": "Constructor PlayerPreferenceManager | Nitrox",
    "keywords": "Constructor PlayerPreferenceManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll PlayerPreferenceManager(IPreferenceStateProvider) public PlayerPreferenceManager(IPreferenceStateProvider stateProvider) Parameters stateProvider IPreferenceStateProvider"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManager.GetPreference.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManager.GetPreference.html",
    "title": "Method GetPreference | Nitrox",
    "keywords": "Method GetPreference Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll GetPreference(string) public PlayerPreference GetPreference(string ipAddress) Parameters ipAddress string Returns PlayerPreference"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManager.Save.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManager.Save.html",
    "title": "Method Save | Nitrox",
    "keywords": "Method Save Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll Save() public void Save()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManager.SetPreference.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManager.SetPreference.html",
    "title": "Method SetPreference | Nitrox",
    "keywords": "Method SetPreference Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll SetPreference(string, PlayerPreference) public void SetPreference(string ipAddress, PlayerPreference playerPreference) Parameters ipAddress string playerPreference PlayerPreference"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManager.html",
    "title": "Class PlayerPreferenceManager | Nitrox",
    "keywords": "Class PlayerPreferenceManager Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll public class PlayerPreferenceManager Inheritance object PlayerPreferenceManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerPreferenceManager(IPreferenceStateProvider) Methods GetPreference(string) Save() SetPreference(string, PlayerPreference)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress.html",
    "title": "Method GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress | Nitrox",
    "keywords": "Method GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly Nitrox.Test.dll GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress() [TestMethod] public void GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress.html",
    "title": "Method SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress | Nitrox",
    "keywords": "Method SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly Nitrox.Test.dll SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress() [TestMethod] public void SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference.html",
    "title": "Method SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference | Nitrox",
    "keywords": "Method SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly Nitrox.Test.dll SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference() [TestMethod] public void SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone.html",
    "title": "Method ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone | Nitrox",
    "keywords": "Method ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly Nitrox.Test.dll ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone() [TestMethod] public void ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveANewPreferenceEntry.html",
    "title": "Method ShouldBeAbleToRetrieveANewPreferenceEntry | Nitrox",
    "keywords": "Method ShouldBeAbleToRetrieveANewPreferenceEntry Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly Nitrox.Test.dll ShouldBeAbleToRetrieveANewPreferenceEntry() [TestMethod] public void ShouldBeAbleToRetrieveANewPreferenceEntry()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress.html",
    "title": "Method ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress | Nitrox",
    "keywords": "Method ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly Nitrox.Test.dll ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress() [TestMethod] public void ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer.html",
    "title": "Method ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer | Nitrox",
    "keywords": "Method ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly Nitrox.Test.dll ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer() [TestMethod] public void ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceManagerTests.html",
    "title": "Class PlayerPreferenceManagerTests | Nitrox",
    "keywords": "Class PlayerPreferenceManagerTests Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly Nitrox.Test.dll [TestClass] public class PlayerPreferenceManagerTests Inheritance object PlayerPreferenceManagerTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetPreferenceShouldThrowExceptionWhenGivenNullIpAddress() SetPreferenceShouldThrowExceptionWhenGivenANullIpAddress() SetPreferenceShouldThrowExceptionWhenGivenANullJoinServerSettingsReference() ShouldBeAbleToRetrieveADefaultPreferenceWhenThePlayerHasNone() ShouldBeAbleToRetrieveANewPreferenceEntry() ShouldBeAbleToRetrieveUpdatedPreferencesForAnExistingIpAddress() ShouldGetTheLastSetPlayerPreferenceWhenJoiningANewServer()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceState.LastSetPlayerPreference.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceState.LastSetPlayerPreference.html",
    "title": "Field LastSetPlayerPreference | Nitrox",
    "keywords": "Field LastSetPlayerPreference Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll public PlayerPreference LastSetPlayerPreference Returns PlayerPreference"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceState.Preferences.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceState.Preferences.html",
    "title": "Field Preferences | Nitrox",
    "keywords": "Field Preferences Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll public Dictionary<string, PlayerPreference> Preferences Returns Dictionary<string, PlayerPreference>"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceState.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.PlayerPreferenceState.html",
    "title": "Class PlayerPreferenceState | Nitrox",
    "keywords": "Class PlayerPreferenceState Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll [Serializable] public class PlayerPreferenceState Inheritance object PlayerPreferenceState Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields LastSetPlayerPreference Preferences"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.UnityPreferenceStateProvider.GetPreferenceState.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.UnityPreferenceStateProvider.GetPreferenceState.html",
    "title": "Method GetPreferenceState | Nitrox",
    "keywords": "Method GetPreferenceState Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll GetPreferenceState() public PlayerPreferenceState GetPreferenceState() Returns PlayerPreferenceState"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.UnityPreferenceStateProvider.SavePreferenceState.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.UnityPreferenceStateProvider.SavePreferenceState.html",
    "title": "Method SavePreferenceState | Nitrox",
    "keywords": "Method SavePreferenceState Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll SavePreferenceState(PlayerPreferenceState) public void SavePreferenceState(PlayerPreferenceState preferenceState) Parameters preferenceState PlayerPreferenceState"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.UnityPreferenceStateProvider.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.UnityPreferenceStateProvider.html",
    "title": "Class UnityPreferenceStateProvider | Nitrox",
    "keywords": "Class UnityPreferenceStateProvider Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Assembly NitroxClient.dll This abstraction allows us to write tests against the preferences manager. Otherwise - we are unduly tied to Unity. public class UnityPreferenceStateProvider : IPreferenceStateProvider Inheritance object UnityPreferenceStateProvider Implements IPreferenceStateProvider Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetPreferenceState() SavePreferenceState(PlayerPreferenceState)"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.PlayerPreferences.html",
    "title": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Classes PlayerPreference PlayerPreferenceExtensions PlayerPreferenceManager PlayerPreferenceManagerTests PlayerPreferenceState UnityPreferenceStateProvider This abstraction allows us to write tests against the preferences manager. Otherwise - we are unduly tied to Unity. Interfaces IPreferenceStateProvider"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.RemotePlayerIdentifier.CanDeconstruct.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.RemotePlayerIdentifier.CanDeconstruct.html",
    "title": "Method CanDeconstruct | Nitrox",
    "keywords": "Method CanDeconstruct Namespace NitroxClient.GameLogic.PlayerLogic Assembly NitroxClient.dll CanDeconstruct(out string) public bool CanDeconstruct(out string reason) Parameters reason string Returns bool"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.RemotePlayerIdentifier.IsDeconstructionObstacle.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.RemotePlayerIdentifier.IsDeconstructionObstacle.html",
    "title": "Method IsDeconstructionObstacle | Nitrox",
    "keywords": "Method IsDeconstructionObstacle Namespace NitroxClient.GameLogic.PlayerLogic Assembly NitroxClient.dll IsDeconstructionObstacle() public bool IsDeconstructionObstacle() Returns bool"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.RemotePlayerIdentifier.RemotePlayer.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.RemotePlayerIdentifier.RemotePlayer.html",
    "title": "Field RemotePlayer | Nitrox",
    "keywords": "Field RemotePlayer Namespace NitroxClient.GameLogic.PlayerLogic Assembly NitroxClient.dll public RemotePlayer RemotePlayer Returns RemotePlayer"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.RemotePlayerIdentifier.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.RemotePlayerIdentifier.html",
    "title": "Class RemotePlayerIdentifier | Nitrox",
    "keywords": "Class RemotePlayerIdentifier Namespace NitroxClient.GameLogic.PlayerLogic Assembly NitroxClient.dll Attached to a RemotePlayer. Useful to determine that this script's GameObject is in the EntityRoot of a RemotePlayer. public class RemotePlayerIdentifier : MonoBehaviour, IObstacle Inheritance object Object Component Behaviour MonoBehaviour RemotePlayerIdentifier Implements IObstacle Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Remarks The EntityRoot of an object is defined as the top most GameObject as when an object hierarchy first was spawned in. Either from a prefab, or in Nitrox' case, a cloned root game object. Fields RemotePlayer Methods CanDeconstruct(out string) IsDeconstructionObstacle()"
  },
  "api/NitroxClient.GameLogic.PlayerLogic.html": {
    "href": "api/NitroxClient.GameLogic.PlayerLogic.html",
    "title": "Namespace NitroxClient.GameLogic.PlayerLogic | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.PlayerLogic Namespaces NitroxClient.GameLogic.PlayerLogic.PlayerModel NitroxClient.GameLogic.PlayerLogic.PlayerPreferences Classes PlayerCinematics RemotePlayerIdentifier Attached to a RemotePlayer. Useful to determine that this script's GameObject is in the EntityRoot of a RemotePlayer."
  },
  "api/NitroxClient.GameLogic.PlayerManager.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.PlayerManager.-ctor.html",
    "title": "Constructor PlayerManager | Nitrox",
    "keywords": "Constructor PlayerManager Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerManager(PlayerModelManager, PlayerVitalsManager) public PlayerManager(PlayerModelManager playerModelManager, PlayerVitalsManager playerVitalsManager) Parameters playerModelManager PlayerModelManager playerVitalsManager PlayerVitalsManager"
  },
  "api/NitroxClient.GameLogic.PlayerManager.Create.html": {
    "href": "api/NitroxClient.GameLogic.PlayerManager.Create.html",
    "title": "Method Create | Nitrox",
    "keywords": "Method Create Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Create(PlayerContext) public RemotePlayer Create(PlayerContext playerContext) Parameters playerContext PlayerContext Returns RemotePlayer"
  },
  "api/NitroxClient.GameLogic.PlayerManager.Find.html": {
    "href": "api/NitroxClient.GameLogic.PlayerManager.Find.html",
    "title": "Method Find | Nitrox",
    "keywords": "Method Find Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Find(ushort) public Optional<RemotePlayer> Find(ushort playerId) Parameters playerId ushort Returns Optional<RemotePlayer> Find(NitroxId) public Optional<RemotePlayer> Find(NitroxId playerNitroxId) Parameters playerNitroxId NitroxId Returns Optional<RemotePlayer>"
  },
  "api/NitroxClient.GameLogic.PlayerManager.GetTotalPlayerCount.html": {
    "href": "api/NitroxClient.GameLogic.PlayerManager.GetTotalPlayerCount.html",
    "title": "Method GetTotalPlayerCount | Nitrox",
    "keywords": "Method GetTotalPlayerCount Namespace NitroxClient.GameLogic Assembly NitroxClient.dll GetTotalPlayerCount() public int GetTotalPlayerCount() Returns int"
  },
  "api/NitroxClient.GameLogic.PlayerManager.OnCreate.html": {
    "href": "api/NitroxClient.GameLogic.PlayerManager.OnCreate.html",
    "title": "Delegate PlayerManager.OnCreate | Nitrox",
    "keywords": "Delegate PlayerManager.OnCreate Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public delegate void PlayerManager.OnCreate(string playerId, RemotePlayer remotePlayer) Parameters playerId string remotePlayer RemotePlayer"
  },
  "api/NitroxClient.GameLogic.PlayerManager.OnRemove.html": {
    "href": "api/NitroxClient.GameLogic.PlayerManager.OnRemove.html",
    "title": "Delegate PlayerManager.OnRemove | Nitrox",
    "keywords": "Delegate PlayerManager.OnRemove Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public delegate void PlayerManager.OnRemove(string playerId, RemotePlayer remotePlayer) Parameters playerId string remotePlayer RemotePlayer"
  },
  "api/NitroxClient.GameLogic.PlayerManager.RemovePlayer.html": {
    "href": "api/NitroxClient.GameLogic.PlayerManager.RemovePlayer.html",
    "title": "Method RemovePlayer | Nitrox",
    "keywords": "Method RemovePlayer Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RemovePlayer(ushort) public void RemovePlayer(ushort playerId) Parameters playerId ushort"
  },
  "api/NitroxClient.GameLogic.PlayerManager.html": {
    "href": "api/NitroxClient.GameLogic.PlayerManager.html",
    "title": "Class PlayerManager | Nitrox",
    "keywords": "Class PlayerManager Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class PlayerManager Inheritance object PlayerManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods RemotePlayerManagerExtensions.TryFind(PlayerManager, ushort, out RemotePlayer) Constructors PlayerManager(PlayerModelManager, PlayerVitalsManager) Fields onCreate onRemove Methods Create(PlayerContext) Find(NitroxId) Find(ushort) GetTotalPlayerCount() RemovePlayer(ushort)"
  },
  "api/NitroxClient.GameLogic.PlayerManager.onCreate.html": {
    "href": "api/NitroxClient.GameLogic.PlayerManager.onCreate.html",
    "title": "Field onCreate | Nitrox",
    "keywords": "Field onCreate Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public PlayerManager.OnCreate onCreate Returns PlayerManager.OnCreate"
  },
  "api/NitroxClient.GameLogic.PlayerManager.onRemove.html": {
    "href": "api/NitroxClient.GameLogic.PlayerManager.onRemove.html",
    "title": "Field onRemove | Nitrox",
    "keywords": "Field onRemove Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public PlayerManager.OnRemove onRemove Returns PlayerManager.OnRemove"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.-ctor.html",
    "title": "Constructor RemotePlayer | Nitrox",
    "keywords": "Constructor RemotePlayer Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RemotePlayer(PlayerContext, PlayerModelManager, PlayerVitalsManager) public RemotePlayer(PlayerContext playerContext, PlayerModelManager playerModelManager, PlayerVitalsManager playerVitalsManager) Parameters playerContext PlayerContext playerModelManager PlayerModelManager playerVitalsManager PlayerVitalsManager"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.AnimationController.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.AnimationController.html",
    "title": "Property AnimationController | Nitrox",
    "keywords": "Property AnimationController Namespace NitroxClient.GameLogic Assembly NitroxClient.dll AnimationController public AnimationController AnimationController { get; } Property Value AnimationController"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.ArmsController.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.ArmsController.html",
    "title": "Property ArmsController | Nitrox",
    "keywords": "Property ArmsController Namespace NitroxClient.GameLogic Assembly NitroxClient.dll ArmsController public ArmsController ArmsController { get; } Property Value ArmsController"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.Attach.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.Attach.html",
    "title": "Method Attach | Nitrox",
    "keywords": "Method Attach Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Attach(Transform, bool) public void Attach(Transform transform, bool keepWorldTransform = false) Parameters transform Transform keepWorldTransform bool"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.Body.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.Body.html",
    "title": "Property Body | Nitrox",
    "keywords": "Property Body Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Body public GameObject Body { get; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.Collider.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.Collider.html",
    "title": "Property Collider | Nitrox",
    "keywords": "Property Collider Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Collider public CapsuleCollider Collider { get; } Property Value CapsuleCollider"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.Destroy.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.Destroy.html",
    "title": "Method Destroy | Nitrox",
    "keywords": "Method Destroy Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Destroy() public void Destroy()"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.Detach.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.Detach.html",
    "title": "Method Detach | Nitrox",
    "keywords": "Method Detach Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Detach() public void Detach()"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.EscapePod.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.EscapePod.html",
    "title": "Property EscapePod | Nitrox",
    "keywords": "Property EscapePod Namespace NitroxClient.GameLogic Assembly NitroxClient.dll EscapePod public EscapePod EscapePod { get; } Property Value EscapePod"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.InitializeGameObject.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.InitializeGameObject.html",
    "title": "Method InitializeGameObject | Nitrox",
    "keywords": "Method InitializeGameObject Namespace NitroxClient.GameLogic Assembly NitroxClient.dll InitializeGameObject(GameObject) public void InitializeGameObject(GameObject playerBody) Parameters playerBody GameObject"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.Inventory.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.Inventory.html",
    "title": "Property Inventory | Nitrox",
    "keywords": "Property Inventory Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Inventory public ItemsContainer Inventory { get; } Property Value ItemsContainer"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.ItemAttachPoint.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.ItemAttachPoint.html",
    "title": "Property ItemAttachPoint | Nitrox",
    "keywords": "Property ItemAttachPoint Namespace NitroxClient.GameLogic Assembly NitroxClient.dll ItemAttachPoint public Transform ItemAttachPoint { get; } Property Value Transform"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.PilotingChair.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.PilotingChair.html",
    "title": "Property PilotingChair | Nitrox",
    "keywords": "Property PilotingChair Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PilotingChair public PilotingChair PilotingChair { get; } Property Value PilotingChair"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.PlayerContext.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.PlayerContext.html",
    "title": "Property PlayerContext | Nitrox",
    "keywords": "Property PlayerContext Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerContext public PlayerContext PlayerContext { get; } Property Value PlayerContext"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.PlayerDeathEvent.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.PlayerDeathEvent.html",
    "title": "Field PlayerDeathEvent | Nitrox",
    "keywords": "Field PlayerDeathEvent Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public readonly Event<RemotePlayer> PlayerDeathEvent Returns Event<RemotePlayer>"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.PlayerDisconnectEvent.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.PlayerDisconnectEvent.html",
    "title": "Field PlayerDisconnectEvent | Nitrox",
    "keywords": "Field PlayerDisconnectEvent Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public readonly Event<RemotePlayer> PlayerDisconnectEvent Returns Event<RemotePlayer>"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.PlayerId.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.PlayerModel.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.PlayerModel.html",
    "title": "Property PlayerModel | Nitrox",
    "keywords": "Property PlayerModel Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerModel public GameObject PlayerModel { get; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.PlayerName.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.PlayerName.html",
    "title": "Property PlayerName | Nitrox",
    "keywords": "Property PlayerName Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerName public string PlayerName { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.PlayerSettings.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.PlayerSettings.html",
    "title": "Property PlayerSettings | Nitrox",
    "keywords": "Property PlayerSettings Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerSettings public PlayerSettings PlayerSettings { get; } Property Value PlayerSettings"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.ResetStates.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.ResetStates.html",
    "title": "Method ResetStates | Nitrox",
    "keywords": "Method ResetStates Namespace NitroxClient.GameLogic Assembly NitroxClient.dll ResetStates() Drops the remote player, swimming where he is public void ResetStates()"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.RigidBody.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.RigidBody.html",
    "title": "Property RigidBody | Nitrox",
    "keywords": "Property RigidBody Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RigidBody public Rigidbody RigidBody { get; } Property Value Rigidbody"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.SetEscapePod.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.SetEscapePod.html",
    "title": "Method SetEscapePod | Nitrox",
    "keywords": "Method SetEscapePod Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SetEscapePod(EscapePod) public void SetEscapePod(EscapePod newEscapePod) Parameters newEscapePod EscapePod"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.SetGameMode.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.SetGameMode.html",
    "title": "Method SetGameMode | Nitrox",
    "keywords": "Method SetGameMode Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SetGameMode(NitroxGameMode) public void SetGameMode(NitroxGameMode gameMode) Parameters gameMode NitroxGameMode"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.SetPilotingChair.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.SetPilotingChair.html",
    "title": "Method SetPilotingChair | Nitrox",
    "keywords": "Method SetPilotingChair Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SetPilotingChair(PilotingChair) public void SetPilotingChair(PilotingChair newPilotingChair) Parameters newPilotingChair PilotingChair"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.SetSubRoot.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.SetSubRoot.html",
    "title": "Method SetSubRoot | Nitrox",
    "keywords": "Method SetSubRoot Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SetSubRoot(SubRoot) public void SetSubRoot(SubRoot newSubRoot) Parameters newSubRoot SubRoot"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.SetVehicle.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.SetVehicle.html",
    "title": "Method SetVehicle | Nitrox",
    "keywords": "Method SetVehicle Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SetVehicle(Vehicle) public void SetVehicle(Vehicle newVehicle) Parameters newVehicle Vehicle"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.SubRoot.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.SubRoot.html",
    "title": "Property SubRoot | Nitrox",
    "keywords": "Property SubRoot Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SubRoot public SubRoot SubRoot { get; } Property Value SubRoot"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.UpdateAnimationAndCollider.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.UpdateAnimationAndCollider.html",
    "title": "Method UpdateAnimationAndCollider | Nitrox",
    "keywords": "Method UpdateAnimationAndCollider Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UpdateAnimationAndCollider(AnimChangeType, AnimChangeState) public void UpdateAnimationAndCollider(AnimChangeType type, AnimChangeState state) Parameters type AnimChangeType state AnimChangeState"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.UpdateEquipmentVisibility.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.UpdateEquipmentVisibility.html",
    "title": "Method UpdateEquipmentVisibility | Nitrox",
    "keywords": "Method UpdateEquipmentVisibility Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UpdateEquipmentVisibility(List<TechType>) public void UpdateEquipmentVisibility(List<TechType> equippedItems) Parameters equippedItems List<TechType>"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.UpdatePosition.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.UpdatePosition.html",
    "title": "Method UpdatePosition | Nitrox",
    "keywords": "Method UpdatePosition Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UpdatePosition(Vector3, Vector3, Quaternion, Quaternion) public void UpdatePosition(Vector3 position, Vector3 velocity, Quaternion bodyRotation, Quaternion aimingRotation) Parameters position Vector3 velocity Vector3 bodyRotation Quaternion aimingRotation Quaternion"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.Vehicle.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.Vehicle.html",
    "title": "Property Vehicle | Nitrox",
    "keywords": "Property Vehicle Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Vehicle public Vehicle Vehicle { get; } Property Value Vehicle"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.html",
    "title": "Class RemotePlayer | Nitrox",
    "keywords": "Class RemotePlayer Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class RemotePlayer : INitroxPlayer Inheritance object RemotePlayer Implements INitroxPlayer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RemotePlayer(PlayerContext, PlayerModelManager, PlayerVitalsManager) Fields PlayerDeathEvent PlayerDisconnectEvent Properties AnimationController ArmsController Body Collider EscapePod Inventory ItemAttachPoint PilotingChair PlayerContext PlayerId PlayerModel PlayerName PlayerSettings RigidBody SubRoot Vehicle vitals Methods Attach(Transform, bool) Destroy() Detach() InitializeGameObject(GameObject) ResetStates() Drops the remote player, swimming where he is SetEscapePod(EscapePod) SetGameMode(NitroxGameMode) SetPilotingChair(PilotingChair) SetSubRoot(SubRoot) SetVehicle(Vehicle) UpdateAnimationAndCollider(AnimChangeType, AnimChangeState) UpdateEquipmentVisibility(List<TechType>) UpdatePosition(Vector3, Vector3, Quaternion, Quaternion)"
  },
  "api/NitroxClient.GameLogic.RemotePlayer.vitals.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayer.vitals.html",
    "title": "Property vitals | Nitrox",
    "keywords": "Property vitals Namespace NitroxClient.GameLogic Assembly NitroxClient.dll vitals public RemotePlayerVitals vitals { get; } Property Value RemotePlayerVitals"
  },
  "api/NitroxClient.GameLogic.RemotePlayerManagerExtensions.TryFind.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayerManagerExtensions.TryFind.html",
    "title": "Method TryFind | Nitrox",
    "keywords": "Method TryFind Namespace NitroxClient.GameLogic Assembly NitroxClient.dll TryFind(PlayerManager, ushort, out RemotePlayer) public static bool TryFind(this PlayerManager playerManager, ushort playerId, out RemotePlayer remotePlayer) Parameters playerManager PlayerManager playerId ushort remotePlayer RemotePlayer Returns bool"
  },
  "api/NitroxClient.GameLogic.RemotePlayerManagerExtensions.html": {
    "href": "api/NitroxClient.GameLogic.RemotePlayerManagerExtensions.html",
    "title": "Class RemotePlayerManagerExtensions | Nitrox",
    "keywords": "Class RemotePlayerManagerExtensions Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public static class RemotePlayerManagerExtensions Inheritance object RemotePlayerManagerExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods TryFind(PlayerManager, ushort, out RemotePlayer)"
  },
  "api/NitroxClient.GameLogic.Rockets.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Rockets.-ctor.html",
    "title": "Constructor Rockets | Nitrox",
    "keywords": "Constructor Rockets Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Rockets(IPacketSender, Vehicles, PlayerManager) public Rockets(IPacketSender packetSender, Vehicles vehicles, PlayerManager playerManager) Parameters packetSender IPacketSender vehicles Vehicles playerManager PlayerManager"
  },
  "api/NitroxClient.GameLogic.Rockets.RequestRocketLaunch.html": {
    "href": "api/NitroxClient.GameLogic.Rockets.RequestRocketLaunch.html",
    "title": "Method RequestRocketLaunch | Nitrox",
    "keywords": "Method RequestRocketLaunch Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RequestRocketLaunch(Rocket) public void RequestRocketLaunch(Rocket rocket) Parameters rocket Rocket"
  },
  "api/NitroxClient.GameLogic.Rockets.RocketLaunch.html": {
    "href": "api/NitroxClient.GameLogic.Rockets.RocketLaunch.html",
    "title": "Method RocketLaunch | Nitrox",
    "keywords": "Method RocketLaunch Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RocketLaunch(NitroxId) public void RocketLaunch(NitroxId rocketId) Parameters rocketId NitroxId"
  },
  "api/NitroxClient.GameLogic.Rockets.html": {
    "href": "api/NitroxClient.GameLogic.Rockets.html",
    "title": "Class Rockets | Nitrox",
    "keywords": "Class Rockets Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class Rockets Inheritance object Rockets Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Rockets(IPacketSender, Vehicles, PlayerManager) Methods RequestRocketLaunch(Rocket) RocketLaunch(NitroxId)"
  },
  "api/NitroxClient.GameLogic.SeamothModulesEvent.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.SeamothModulesEvent.-ctor.html",
    "title": "Constructor SeamothModulesEvent | Nitrox",
    "keywords": "Constructor SeamothModulesEvent Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SeamothModulesEvent(IPacketSender) public SeamothModulesEvent(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.SeamothModulesEvent.BroadcastElectricalDefense.html": {
    "href": "api/NitroxClient.GameLogic.SeamothModulesEvent.BroadcastElectricalDefense.html",
    "title": "Method BroadcastElectricalDefense | Nitrox",
    "keywords": "Method BroadcastElectricalDefense Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastElectricalDefense(TechType, int, SeaMoth) public void BroadcastElectricalDefense(TechType techType, int slotID, SeaMoth instance) Parameters techType TechType slotID int instance SeaMoth"
  },
  "api/NitroxClient.GameLogic.SeamothModulesEvent.BroadcastTorpedoLaunch.html": {
    "href": "api/NitroxClient.GameLogic.SeamothModulesEvent.BroadcastTorpedoLaunch.html",
    "title": "Method BroadcastTorpedoLaunch | Nitrox",
    "keywords": "Method BroadcastTorpedoLaunch Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastTorpedoLaunch(TechType, int, SeaMoth) public void BroadcastTorpedoLaunch(TechType techType, int slotID, SeaMoth instance) Parameters techType TechType slotID int instance SeaMoth"
  },
  "api/NitroxClient.GameLogic.SeamothModulesEvent.html": {
    "href": "api/NitroxClient.GameLogic.SeamothModulesEvent.html",
    "title": "Class SeamothModulesEvent | Nitrox",
    "keywords": "Class SeamothModulesEvent Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class SeamothModulesEvent Inheritance object SeamothModulesEvent Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SeamothModulesEvent(IPacketSender) Methods BroadcastElectricalDefense(TechType, int, SeaMoth) BroadcastTorpedoLaunch(TechType, int, SeaMoth)"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPref-1.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPref-1.-ctor.html",
    "title": "Constructor NitroxPref | Nitrox",
    "keywords": "Constructor NitroxPref Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll NitroxPref(string, T) public NitroxPref(string key, T defaultValue = default) Parameters key string defaultValue T"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPref-1.DefaultValue.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPref-1.DefaultValue.html",
    "title": "Property DefaultValue | Nitrox",
    "keywords": "Property DefaultValue Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll DefaultValue public T DefaultValue { get; } Property Value T"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPref-1.Key.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPref-1.Key.html",
    "title": "Property Key | Nitrox",
    "keywords": "Property Key Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll Key public string Key { get; } Property Value string"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPref-1.Value.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPref-1.Value.html",
    "title": "Property Value | Nitrox",
    "keywords": "Property Value Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll Value public T Value { get; set; } Property Value T"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPref-1.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPref-1.html",
    "title": "Class NitroxPref<T> | Nitrox",
    "keywords": "Class NitroxPref<T> Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public class NitroxPref<T> : NitroxPref where T : IConvertible Type Parameters T Inheritance object NitroxPref NitroxPref<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxPref(string, T) Properties DefaultValue Key Value"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPref.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPref.html",
    "title": "Class NitroxPref | Nitrox",
    "keywords": "Class NitroxPref Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public abstract class NitroxPref Inheritance object NitroxPref Derived NitroxPref<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPrefs.ChatUsed.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPrefs.ChatUsed.html",
    "title": "Field ChatUsed | Nitrox",
    "keywords": "Field ChatUsed Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public static readonly NitroxPref<bool> ChatUsed Returns NitroxPref<bool>"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPrefs.HideIp.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPrefs.HideIp.html",
    "title": "Field HideIp | Nitrox",
    "keywords": "Field HideIp Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public static readonly NitroxPref<bool> HideIp Returns NitroxPref<bool>"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPrefs.SafeBuilding.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPrefs.SafeBuilding.html",
    "title": "Field SafeBuilding | Nitrox",
    "keywords": "Field SafeBuilding Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public static readonly NitroxPref<bool> SafeBuilding Returns NitroxPref<bool>"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPrefs.SafeBuildingLog.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPrefs.SafeBuildingLog.html",
    "title": "Field SafeBuildingLog | Nitrox",
    "keywords": "Field SafeBuildingLog Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public static readonly NitroxPref<bool> SafeBuildingLog Returns NitroxPref<bool>"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPrefs.SilenceChat.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPrefs.SilenceChat.html",
    "title": "Field SilenceChat | Nitrox",
    "keywords": "Field SilenceChat Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public static readonly NitroxPref<bool> SilenceChat Returns NitroxPref<bool>"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxPrefs.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxPrefs.html",
    "title": "Class NitroxPrefs | Nitrox",
    "keywords": "Class NitroxPrefs Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public class NitroxPrefs Inheritance object NitroxPrefs Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields ChatUsed HideIp SafeBuilding SafeBuildingLog SilenceChat"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.-ctor.html",
    "title": "Constructor NitroxSettingsManager | Nitrox",
    "keywords": "Constructor NitroxSettingsManager Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll NitroxSettingsManager() public NitroxSettingsManager()"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.AddSetting.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.AddSetting.html",
    "title": "Method AddSetting | Nitrox",
    "keywords": "Method AddSetting Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll AddSetting(string, Setting) Adds a setting to the list under a certain heading public void AddSetting(string heading, NitroxSettingsManager.Setting setting) Parameters heading string setting NitroxSettingsManager.Setting"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.NitroxSettings.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.NitroxSettings.html",
    "title": "Field NitroxSettings | Nitrox",
    "keywords": "Field NitroxSettings Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll Settings grouped by their headings public readonly Dictionary<string, List<NitroxSettingsManager.Setting>> NitroxSettings Returns Dictionary<string, List<NitroxSettingsManager.Setting>>"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.-ctor.html",
    "title": "Constructor Setting | Nitrox",
    "keywords": "Constructor Setting Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll Setting(string, UnityAction) Constructor for buttons (doesn't need a NitroxPref) public Setting(string label, UnityAction callback) Parameters label string callback UnityAction Setting(string, NitroxPref, UnityAction<bool>) Constructor for a Toggle setting public Setting(string label, NitroxPref nitroxPref, UnityAction<bool> callback) Parameters label string nitroxPref NitroxPref callback UnityAction<bool> Setting(string, NitroxPref, UnityAction<float>, float, float, float, float) Constructor for a Slider setting public Setting(string label, NitroxPref nitroxPref, UnityAction<float> callback, float sliderMinValue, float sliderMaxValue, float sliderDefaultValue, float sliderStep) Parameters label string nitroxPref NitroxPref callback UnityAction<float> sliderMinValue float sliderMaxValue float sliderDefaultValue float sliderStep float Setting(string, NitroxPref, UnityAction<int>, string[]) Constructor for a List setting public Setting(string label, NitroxPref nitroxPref, UnityAction<int> callback, string[] listItems) Parameters label string nitroxPref NitroxPref callback UnityAction<int> listItems string[]"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.Callback.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.Callback.html",
    "title": "Field Callback | Nitrox",
    "keywords": "Field Callback Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public readonly Delegate Callback Returns Delegate"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.GetValue.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.GetValue.html",
    "title": "Method GetValue | Nitrox",
    "keywords": "Method GetValue Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll GetValue<T>() public T GetValue<T>() where T : IConvertible Returns T Type Parameters T"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.Label.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.Label.html",
    "title": "Field Label | Nitrox",
    "keywords": "Field Label Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public readonly string Label Returns string"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.ListItems.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.ListItems.html",
    "title": "Field ListItems | Nitrox",
    "keywords": "Field ListItems Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public readonly string[] ListItems Returns string[]"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.NitroxPref.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.NitroxPref.html",
    "title": "Field NitroxPref | Nitrox",
    "keywords": "Field NitroxPref Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public readonly NitroxPref NitroxPref Returns NitroxPref"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.SettingType.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.SettingType.html",
    "title": "Field SettingType | Nitrox",
    "keywords": "Field SettingType Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public readonly NitroxSettingsManager.SettingType SettingType Returns NitroxSettingsManager.SettingType"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.SliderDefaultValue.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.SliderDefaultValue.html",
    "title": "Field SliderDefaultValue | Nitrox",
    "keywords": "Field SliderDefaultValue Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public readonly float SliderDefaultValue Returns float"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.SliderMaxValue.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.SliderMaxValue.html",
    "title": "Field SliderMaxValue | Nitrox",
    "keywords": "Field SliderMaxValue Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public readonly float SliderMaxValue Returns float"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.SliderMinValue.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.SliderMinValue.html",
    "title": "Field SliderMinValue | Nitrox",
    "keywords": "Field SliderMinValue Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public readonly float SliderMinValue Returns float"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.SliderStep.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.SliderStep.html",
    "title": "Field SliderStep | Nitrox",
    "keywords": "Field SliderStep Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public readonly float SliderStep Returns float"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.Setting.html",
    "title": "Class NitroxSettingsManager.Setting | Nitrox",
    "keywords": "Class NitroxSettingsManager.Setting Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public class NitroxSettingsManager.Setting Inheritance object NitroxSettingsManager.Setting Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Setting(string, NitroxPref, UnityAction<bool>) Constructor for a Toggle setting Setting(string, NitroxPref, UnityAction<int>, string[]) Constructor for a List setting Setting(string, NitroxPref, UnityAction<float>, float, float, float, float) Constructor for a Slider setting Setting(string, UnityAction) Constructor for buttons (doesn't need a NitroxPref) Fields Callback Label ListItems NitroxPref SettingType SliderDefaultValue SliderMaxValue SliderMinValue SliderStep Methods GetValue<T>()"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.SettingType.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.SettingType.html",
    "title": "Enum NitroxSettingsManager.SettingType | Nitrox",
    "keywords": "Enum NitroxSettingsManager.SettingType Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public enum NitroxSettingsManager.SettingType Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields BUTTON = 3 LIST = 2 SLIDER = 1 TOGGLE = 0"
  },
  "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.html": {
    "href": "api/NitroxClient.GameLogic.Settings.NitroxSettingsManager.html",
    "title": "Class NitroxSettingsManager | Nitrox",
    "keywords": "Class NitroxSettingsManager Namespace NitroxClient.GameLogic.Settings Assembly NitroxClient.dll public class NitroxSettingsManager Inheritance object NitroxSettingsManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxSettingsManager() Fields NitroxSettings Settings grouped by their headings Methods AddSetting(string, Setting) Adds a setting to the list under a certain heading"
  },
  "api/NitroxClient.GameLogic.Settings.html": {
    "href": "api/NitroxClient.GameLogic.Settings.html",
    "title": "Namespace NitroxClient.GameLogic.Settings | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Settings Classes NitroxPref NitroxPref<T> NitroxPrefs NitroxSettingsManager NitroxSettingsManager.Setting Enums NitroxSettingsManager.SettingType"
  },
  "api/NitroxClient.GameLogic.Simulation.HandInteraction-1.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.HandInteraction-1.-ctor.html",
    "title": "Constructor HandInteraction | Nitrox",
    "keywords": "Constructor HandInteraction Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll HandInteraction(T, GUIHand) public HandInteraction(T Target, GUIHand GuiHand) Parameters Target T GuiHand GUIHand"
  },
  "api/NitroxClient.GameLogic.Simulation.HandInteraction-1.GuiHand.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.HandInteraction-1.GuiHand.html",
    "title": "Property GuiHand | Nitrox",
    "keywords": "Property GuiHand Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll GuiHand public GUIHand GuiHand { get; } Property Value GUIHand"
  },
  "api/NitroxClient.GameLogic.Simulation.HandInteraction-1.Target.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.HandInteraction-1.Target.html",
    "title": "Property Target | Nitrox",
    "keywords": "Property Target Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll Target public T Target { get; } Property Value T"
  },
  "api/NitroxClient.GameLogic.Simulation.HandInteraction-1.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.HandInteraction-1.html",
    "title": "Class HandInteraction<T> | Nitrox",
    "keywords": "Class HandInteraction<T> Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll public class HandInteraction<T> : LockRequestContext where T : IHandTarget Type Parameters T Inheritance object HandInteraction<T> Implements LockRequestContext Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HandInteraction(T, GUIHand) Properties GuiHand Target"
  },
  "api/NitroxClient.GameLogic.Simulation.LockRequest-1.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.LockRequest-1.-ctor.html",
    "title": "Constructor LockRequest | Nitrox",
    "keywords": "Constructor LockRequest Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll LockRequest(NitroxId, SimulationLockType, LockRequestCompleted, T) public LockRequest(NitroxId id, SimulationLockType lockType, LockRequest<T>.LockRequestCompleted onComplete, T context) Parameters id NitroxId lockType SimulationLockType onComplete LockRequest<T>.LockRequestCompleted context T"
  },
  "api/NitroxClient.GameLogic.Simulation.LockRequest-1.LockRequestComplete.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.LockRequest-1.LockRequestComplete.html",
    "title": "Method LockRequestComplete | Nitrox",
    "keywords": "Method LockRequestComplete Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll LockRequestComplete(NitroxId, bool) public override void LockRequestComplete(NitroxId id, bool lockAquired) Parameters id NitroxId lockAquired bool"
  },
  "api/NitroxClient.GameLogic.Simulation.LockRequest-1.LockRequestCompleted.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.LockRequest-1.LockRequestCompleted.html",
    "title": "Delegate LockRequest<T>.LockRequestCompleted | Nitrox",
    "keywords": "Delegate LockRequest<T>.LockRequestCompleted Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll public delegate void LockRequest<T>.LockRequestCompleted(NitroxId id, bool lockAquired, T context) Parameters id NitroxId lockAquired bool context T"
  },
  "api/NitroxClient.GameLogic.Simulation.LockRequest-1.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.LockRequest-1.html",
    "title": "Class LockRequest<T> | Nitrox",
    "keywords": "Class LockRequest<T> Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll public class LockRequest<T> : LockRequestBase where T : LockRequestContext Type Parameters T Inheritance object LockRequestBase LockRequest<T> Inherited Members LockRequestBase.Id LockRequestBase.LockType object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LockRequest(NitroxId, SimulationLockType, LockRequestCompleted, T) Methods LockRequestComplete(NitroxId, bool)"
  },
  "api/NitroxClient.GameLogic.Simulation.LockRequestBase.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.LockRequestBase.-ctor.html",
    "title": "Constructor LockRequestBase | Nitrox",
    "keywords": "Constructor LockRequestBase Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll LockRequestBase(NitroxId, SimulationLockType) public LockRequestBase(NitroxId Id, SimulationLockType LockType) Parameters Id NitroxId LockType SimulationLockType"
  },
  "api/NitroxClient.GameLogic.Simulation.LockRequestBase.Id.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.LockRequestBase.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxClient.GameLogic.Simulation.LockRequestBase.LockRequestComplete.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.LockRequestBase.LockRequestComplete.html",
    "title": "Method LockRequestComplete | Nitrox",
    "keywords": "Method LockRequestComplete Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll LockRequestComplete(NitroxId, bool) public abstract void LockRequestComplete(NitroxId id, bool lockAquired) Parameters id NitroxId lockAquired bool"
  },
  "api/NitroxClient.GameLogic.Simulation.LockRequestBase.LockType.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.LockRequestBase.LockType.html",
    "title": "Property LockType | Nitrox",
    "keywords": "Property LockType Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll LockType public SimulationLockType LockType { get; } Property Value SimulationLockType"
  },
  "api/NitroxClient.GameLogic.Simulation.LockRequestBase.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.LockRequestBase.html",
    "title": "Class LockRequestBase | Nitrox",
    "keywords": "Class LockRequestBase Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll public abstract class LockRequestBase Inheritance object LockRequestBase Derived LockRequest<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LockRequestBase(NitroxId, SimulationLockType) Properties Id LockType Methods LockRequestComplete(NitroxId, bool)"
  },
  "api/NitroxClient.GameLogic.Simulation.LockRequestContext.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.LockRequestContext.html",
    "title": "Interface LockRequestContext | Nitrox",
    "keywords": "Interface LockRequestContext Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll public interface LockRequestContext"
  },
  "api/NitroxClient.GameLogic.Simulation.PropulsionGrab.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.PropulsionGrab.-ctor.html",
    "title": "Constructor PropulsionGrab | Nitrox",
    "keywords": "Constructor PropulsionGrab Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll PropulsionGrab(PropulsionCannon, GameObject) public PropulsionGrab(PropulsionCannon Cannon, GameObject GrabbedObject) Parameters Cannon PropulsionCannon GrabbedObject GameObject"
  },
  "api/NitroxClient.GameLogic.Simulation.PropulsionGrab.Cannon.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.PropulsionGrab.Cannon.html",
    "title": "Property Cannon | Nitrox",
    "keywords": "Property Cannon Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll Cannon public PropulsionCannon Cannon { get; } Property Value PropulsionCannon"
  },
  "api/NitroxClient.GameLogic.Simulation.PropulsionGrab.GrabbedObject.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.PropulsionGrab.GrabbedObject.html",
    "title": "Property GrabbedObject | Nitrox",
    "keywords": "Property GrabbedObject Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll GrabbedObject public GameObject GrabbedObject { get; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.Simulation.PropulsionGrab.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.PropulsionGrab.html",
    "title": "Class PropulsionGrab | Nitrox",
    "keywords": "Class PropulsionGrab Namespace NitroxClient.GameLogic.Simulation Assembly NitroxClient.dll public class PropulsionGrab : LockRequestContext Inheritance object PropulsionGrab Implements LockRequestContext Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PropulsionGrab(PropulsionCannon, GameObject) Properties Cannon GrabbedObject"
  },
  "api/NitroxClient.GameLogic.Simulation.html": {
    "href": "api/NitroxClient.GameLogic.Simulation.html",
    "title": "Namespace NitroxClient.GameLogic.Simulation | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Simulation Classes HandInteraction<T> LockRequestBase LockRequest<T> PropulsionGrab Interfaces LockRequestContext Delegates LockRequest<T>.LockRequestCompleted"
  },
  "api/NitroxClient.GameLogic.SimulationOwnership.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.SimulationOwnership.-ctor.html",
    "title": "Constructor SimulationOwnership | Nitrox",
    "keywords": "Constructor SimulationOwnership Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SimulationOwnership(IMultiplayerSession, IPacketSender) public SimulationOwnership(IMultiplayerSession muliplayerSession, IPacketSender packetSender) Parameters muliplayerSession IMultiplayerSession packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.SimulationOwnership.HasAnyLockType.html": {
    "href": "api/NitroxClient.GameLogic.SimulationOwnership.HasAnyLockType.html",
    "title": "Method HasAnyLockType | Nitrox",
    "keywords": "Method HasAnyLockType Namespace NitroxClient.GameLogic Assembly NitroxClient.dll HasAnyLockType(NitroxId) public bool HasAnyLockType(NitroxId id) Parameters id NitroxId Returns bool"
  },
  "api/NitroxClient.GameLogic.SimulationOwnership.HasExclusiveLock.html": {
    "href": "api/NitroxClient.GameLogic.SimulationOwnership.HasExclusiveLock.html",
    "title": "Method HasExclusiveLock | Nitrox",
    "keywords": "Method HasExclusiveLock Namespace NitroxClient.GameLogic Assembly NitroxClient.dll HasExclusiveLock(NitroxId) public bool HasExclusiveLock(NitroxId id) Parameters id NitroxId Returns bool"
  },
  "api/NitroxClient.GameLogic.SimulationOwnership.PlayerHasMinLockType.html": {
    "href": "api/NitroxClient.GameLogic.SimulationOwnership.PlayerHasMinLockType.html",
    "title": "Method PlayerHasMinLockType | Nitrox",
    "keywords": "Method PlayerHasMinLockType Namespace NitroxClient.GameLogic Assembly NitroxClient.dll PlayerHasMinLockType(NitroxId, SimulationLockType) public bool PlayerHasMinLockType(NitroxId id, SimulationLockType lockType) Parameters id NitroxId lockType SimulationLockType Returns bool"
  },
  "api/NitroxClient.GameLogic.SimulationOwnership.ReceivedSimulationLockResponse.html": {
    "href": "api/NitroxClient.GameLogic.SimulationOwnership.ReceivedSimulationLockResponse.html",
    "title": "Method ReceivedSimulationLockResponse | Nitrox",
    "keywords": "Method ReceivedSimulationLockResponse Namespace NitroxClient.GameLogic Assembly NitroxClient.dll ReceivedSimulationLockResponse(NitroxId, bool, SimulationLockType) public void ReceivedSimulationLockResponse(NitroxId id, bool lockAquired, SimulationLockType lockType) Parameters id NitroxId lockAquired bool lockType SimulationLockType"
  },
  "api/NitroxClient.GameLogic.SimulationOwnership.RequestSimulationLock.html": {
    "href": "api/NitroxClient.GameLogic.SimulationOwnership.RequestSimulationLock.html",
    "title": "Method RequestSimulationLock | Nitrox",
    "keywords": "Method RequestSimulationLock Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RequestSimulationLock(NitroxId, SimulationLockType) public void RequestSimulationLock(NitroxId id, SimulationLockType lockType) Parameters id NitroxId lockType SimulationLockType RequestSimulationLock(LockRequestBase) public void RequestSimulationLock(LockRequestBase lockRequest) Parameters lockRequest LockRequestBase"
  },
  "api/NitroxClient.GameLogic.SimulationOwnership.SimulateEntity.html": {
    "href": "api/NitroxClient.GameLogic.SimulationOwnership.SimulateEntity.html",
    "title": "Method SimulateEntity | Nitrox",
    "keywords": "Method SimulateEntity Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SimulateEntity(NitroxId, SimulationLockType) public void SimulateEntity(NitroxId id, SimulationLockType lockType) Parameters id NitroxId lockType SimulationLockType"
  },
  "api/NitroxClient.GameLogic.SimulationOwnership.StopSimulatingEntity.html": {
    "href": "api/NitroxClient.GameLogic.SimulationOwnership.StopSimulatingEntity.html",
    "title": "Method StopSimulatingEntity | Nitrox",
    "keywords": "Method StopSimulatingEntity Namespace NitroxClient.GameLogic Assembly NitroxClient.dll StopSimulatingEntity(NitroxId) public void StopSimulatingEntity(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxClient.GameLogic.SimulationOwnership.html": {
    "href": "api/NitroxClient.GameLogic.SimulationOwnership.html",
    "title": "Class SimulationOwnership | Nitrox",
    "keywords": "Class SimulationOwnership Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class SimulationOwnership Inheritance object SimulationOwnership Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SimulationOwnership(IMultiplayerSession, IPacketSender) Methods HasAnyLockType(NitroxId) HasExclusiveLock(NitroxId) PlayerHasMinLockType(NitroxId, SimulationLockType) ReceivedSimulationLockResponse(NitroxId, bool, SimulationLockType) RequestSimulationLock(LockRequestBase) RequestSimulationLock(NitroxId, SimulationLockType) SimulateEntity(NitroxId, SimulationLockType) StopSimulatingEntity(NitroxId)"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.EntitySpawner-1.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.EntitySpawner-1.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll SpawnAsync(T, TaskResult<Optional<GameObject>>) protected abstract IEnumerator SpawnAsync(T entity, TaskResult<Optional<GameObject>> result) Parameters entity T result TaskResult<Optional<GameObject>> Returns IEnumerator SpawnAsync(Entity, TaskResult<Optional<GameObject>>) public IEnumerator SpawnAsync(Entity entity, TaskResult<Optional<GameObject>> result) Parameters entity Entity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.EntitySpawner-1.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.EntitySpawner-1.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll SpawnsOwnChildren(T) protected abstract bool SpawnsOwnChildren(T entity) Parameters entity T Returns bool SpawnsOwnChildren(Entity) public bool SpawnsOwnChildren(Entity entity) Parameters entity Entity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.EntitySpawner-1.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.EntitySpawner-1.html",
    "title": "Class EntitySpawner<T> | Nitrox",
    "keywords": "Class EntitySpawner<T> Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll public abstract class EntitySpawner<T> : IEntitySpawner where T : Entity Type Parameters T Inheritance object EntitySpawner<T> Implements IEntitySpawner Derived SyncEntitySpawner<T> BuildEntitySpawner GhostEntitySpawner InteriorPieceEntitySpawner ModuleEntitySpawner InventoryEntitySpawner PathBasedChildEntitySpawner PrefabChildEntitySpawner WorldEntitySpawner Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SpawnAsync(Entity, TaskResult<Optional<GameObject>>) SpawnAsync(T, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(Entity) SpawnsOwnChildren(T)"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.IEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.IEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll SpawnAsync(Entity, TaskResult<Optional<GameObject>>) IEnumerator SpawnAsync(Entity entity, TaskResult<Optional<GameObject>> result) Parameters entity Entity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.IEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.IEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll SpawnsOwnChildren(Entity) bool SpawnsOwnChildren(Entity entity) Parameters entity Entity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.IEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.IEntitySpawner.html",
    "title": "Interface IEntitySpawner | Nitrox",
    "keywords": "Interface IEntitySpawner Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll public interface IEntitySpawner Methods SpawnAsync(Entity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(Entity)"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.ISyncEntitySpawner.SpawnSync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.ISyncEntitySpawner.SpawnSync.html",
    "title": "Method SpawnSync | Nitrox",
    "keywords": "Method SpawnSync Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll SpawnSync(Entity, TaskResult<Optional<GameObject>>) bool SpawnSync(Entity entity, TaskResult<Optional<GameObject>> result) Parameters entity Entity result TaskResult<Optional<GameObject>> Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.ISyncEntitySpawner.SpawnSyncSafe.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.ISyncEntitySpawner.SpawnSyncSafe.html",
    "title": "Method SpawnSyncSafe | Nitrox",
    "keywords": "Method SpawnSyncSafe Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll SpawnSyncSafe(Entity, TaskResult<Optional<GameObject>>, TaskResult<Exception>) bool SpawnSyncSafe(Entity entity, TaskResult<Optional<GameObject>> result, TaskResult<Exception> exception) Parameters entity Entity result TaskResult<Optional<GameObject>> exception TaskResult<Exception> Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.ISyncEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.ISyncEntitySpawner.html",
    "title": "Interface ISyncEntitySpawner | Nitrox",
    "keywords": "Interface ISyncEntitySpawner Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll public interface ISyncEntitySpawner Methods SpawnSync(Entity, TaskResult<Optional<GameObject>>) SpawnSyncSafe(Entity, TaskResult<Optional<GameObject>>, TaskResult<Exception>)"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.SyncEntitySpawner-1.SpawnSync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.SyncEntitySpawner-1.SpawnSync.html",
    "title": "Method SpawnSync | Nitrox",
    "keywords": "Method SpawnSync Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll SpawnSync(T, TaskResult<Optional<GameObject>>) protected abstract bool SpawnSync(T entity, TaskResult<Optional<GameObject>> result) Parameters entity T result TaskResult<Optional<GameObject>> Returns bool SpawnSync(Entity, TaskResult<Optional<GameObject>>) public bool SpawnSync(Entity entity, TaskResult<Optional<GameObject>> result) Parameters entity Entity result TaskResult<Optional<GameObject>> Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.SyncEntitySpawner-1.SpawnSyncSafe.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.SyncEntitySpawner-1.SpawnSyncSafe.html",
    "title": "Method SpawnSyncSafe | Nitrox",
    "keywords": "Method SpawnSyncSafe Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll SpawnSyncSafe(Entity, TaskResult<Optional<GameObject>>, TaskResult<Exception>) public bool SpawnSyncSafe(Entity entity, TaskResult<Optional<GameObject>> result, TaskResult<Exception> exception) Parameters entity Entity result TaskResult<Optional<GameObject>> exception TaskResult<Exception> Returns bool The result of SpawnSync(T, TaskResult<Optional<GameObject>>) or true with the caught exception"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.SyncEntitySpawner-1.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.SyncEntitySpawner-1.html",
    "title": "Class SyncEntitySpawner<T> | Nitrox",
    "keywords": "Class SyncEntitySpawner<T> Namespace NitroxClient.GameLogic.Spawning.Abstract Assembly NitroxClient.dll public abstract class SyncEntitySpawner<T> : EntitySpawner<T>, IEntitySpawner, ISyncEntitySpawner where T : Entity Type Parameters T Inheritance object EntitySpawner<T> SyncEntitySpawner<T> Implements IEntitySpawner ISyncEntitySpawner Derived InstalledBatteryEntitySpawner InstalledModuleEntitySpawner InventoryItemEntitySpawner Inherited Members EntitySpawner<T>.SpawnsOwnChildren(T) EntitySpawner<T>.SpawnAsync(T, TaskResult<Optional<GameObject>>) EntitySpawner<T>.SpawnsOwnChildren(Entity) EntitySpawner<T>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SpawnSync(Entity, TaskResult<Optional<GameObject>>) SpawnSync(T, TaskResult<Optional<GameObject>>) SpawnSyncSafe(Entity, TaskResult<Optional<GameObject>>, TaskResult<Exception>)"
  },
  "api/NitroxClient.GameLogic.Spawning.Abstract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Abstract.html",
    "title": "Namespace NitroxClient.GameLogic.Spawning.Abstract | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Spawning.Abstract Classes EntitySpawner<T> SyncEntitySpawner<T> Interfaces IEntitySpawner ISyncEntitySpawner"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.-ctor.html",
    "title": "Constructor BuildEntitySpawner | Nitrox",
    "keywords": "Constructor BuildEntitySpawner Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll BuildEntitySpawner(Entities) public BuildEntitySpawner(Entities entities) Parameters entities Entities"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.ApplyBaseData.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.ApplyBaseData.html",
    "title": "Method ApplyBaseData | Nitrox",
    "keywords": "Method ApplyBaseData Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll ApplyBaseData(BaseData, Base) public static void ApplyBaseData(BaseData baseData, Base @base) Parameters baseData BaseData base Base"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.From.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll From(Base) public static BuildEntity From(Base targetBase) Parameters targetBase Base Returns BuildEntity"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.GetBaseData.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.GetBaseData.html",
    "title": "Method GetBaseData | Nitrox",
    "keywords": "Method GetBaseData Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll GetBaseData(Base) public static BaseData GetBaseData(Base targetBase) Parameters targetBase Base Returns BaseData"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.SetupBase.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.SetupBase.html",
    "title": "Method SetupBase | Nitrox",
    "keywords": "Method SetupBase Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SetupBase(BuildEntity, Base, Entities, TaskResult<Optional<GameObject>>) public static IEnumerator SetupBase(BuildEntity buildEntity, Base @base, Entities entities, TaskResult<Optional<GameObject>> result = null) Parameters buildEntity BuildEntity base Base entities Entities result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SpawnAsync(BuildEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(BuildEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity BuildEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SpawnsOwnChildren(BuildEntity) protected override bool SpawnsOwnChildren(BuildEntity entity) Parameters entity BuildEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildEntitySpawner.html",
    "title": "Class BuildEntitySpawner | Nitrox",
    "keywords": "Class BuildEntitySpawner Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll public class BuildEntitySpawner : EntitySpawner<BuildEntity>, IEntitySpawner Inheritance object EntitySpawner<BuildEntity> BuildEntitySpawner Implements IEntitySpawner Inherited Members EntitySpawner<BuildEntity>.SpawnsOwnChildren(Entity) EntitySpawner<BuildEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BuildEntitySpawner(Entities) Methods ApplyBaseData(BaseData, Base) From(Base) GetBaseData(Base) SetupBase(BuildEntity, Base, Entities, TaskResult<Optional<GameObject>>) SpawnAsync(BuildEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(BuildEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildingPostSpawner.ApplyPostSpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildingPostSpawner.ApplyPostSpawner.html",
    "title": "Method ApplyPostSpawner | Nitrox",
    "keywords": "Method ApplyPostSpawner Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll ApplyPostSpawner(GameObject, NitroxId) public static IEnumerator ApplyPostSpawner(GameObject gameObject, NitroxId objectId) Parameters gameObject GameObject objectId NitroxId Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildingPostSpawner.SetupBench.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildingPostSpawner.SetupBench.html",
    "title": "Method SetupBench | Nitrox",
    "keywords": "Method SetupBench Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SetupBench(GameObject, NitroxId) For better immersion we split the Bench in three parts (left/center/right). On each can sit one player. public static IEnumerator SetupBench(GameObject gameObject, NitroxId benchId) Parameters gameObject GameObject benchId NitroxId Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildingPostSpawner.SetupLargeRoomWaterPark.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildingPostSpawner.SetupLargeRoomWaterPark.html",
    "title": "Method SetupLargeRoomWaterPark | Nitrox",
    "keywords": "Method SetupLargeRoomWaterPark Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SetupLargeRoomWaterPark(LargeRoomWaterPark, NitroxId) public static IEnumerator SetupLargeRoomWaterPark(LargeRoomWaterPark baseModule, NitroxId waterParkId) Parameters baseModule LargeRoomWaterPark waterParkId NitroxId Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.BuildingPostSpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.BuildingPostSpawner.html",
    "title": "Class BuildingPostSpawner | Nitrox",
    "keywords": "Class BuildingPostSpawner Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll public static class BuildingPostSpawner Inheritance object BuildingPostSpawner Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyPostSpawner(GameObject, NitroxId) SetupBench(GameObject, NitroxId) For better immersion we split the Bench in three parts (left/center/right). On each can sit one player. SetupLargeRoomWaterPark(LargeRoomWaterPark, NitroxId)"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.GhostEntitySpawner.From.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.GhostEntitySpawner.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll From(ConstructableBase) public static GhostEntity From(ConstructableBase constructableBase) Parameters constructableBase ConstructableBase Returns GhostEntity"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.GhostEntitySpawner.RestoreGhost.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.GhostEntitySpawner.RestoreGhost.html",
    "title": "Method RestoreGhost | Nitrox",
    "keywords": "Method RestoreGhost Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll RestoreGhost(Transform, GhostEntity, TaskResult<Optional<GameObject>>) public static IEnumerator RestoreGhost(Transform parent, GhostEntity ghostEntity, TaskResult<Optional<GameObject>> result = null) Parameters parent Transform ghostEntity GhostEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.GhostEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.GhostEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SpawnAsync(GhostEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(GhostEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity GhostEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.GhostEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.GhostEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SpawnsOwnChildren(GhostEntity) protected override bool SpawnsOwnChildren(GhostEntity entity) Parameters entity GhostEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.GhostEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.GhostEntitySpawner.html",
    "title": "Class GhostEntitySpawner | Nitrox",
    "keywords": "Class GhostEntitySpawner Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll public class GhostEntitySpawner : EntitySpawner<GhostEntity>, IEntitySpawner Inheritance object EntitySpawner<GhostEntity> GhostEntitySpawner Implements IEntitySpawner Inherited Members EntitySpawner<GhostEntity>.SpawnsOwnChildren(Entity) EntitySpawner<GhostEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods From(ConstructableBase) RestoreGhost(Transform, GhostEntity, TaskResult<Optional<GameObject>>) SpawnAsync(GhostEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(GhostEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.-ctor.html",
    "title": "Constructor InteriorPieceEntitySpawner | Nitrox",
    "keywords": "Constructor InteriorPieceEntitySpawner Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll InteriorPieceEntitySpawner(Entities) public InteriorPieceEntitySpawner(Entities entities) Parameters entities Entities"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.From.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll From(IBaseModule) public static InteriorPieceEntity From(IBaseModule module) Parameters module IBaseModule Returns InteriorPieceEntity"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.RestoreInteriorPiece.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.RestoreInteriorPiece.html",
    "title": "Method RestoreInteriorPiece | Nitrox",
    "keywords": "Method RestoreInteriorPiece Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll RestoreInteriorPiece(InteriorPieceEntity, Base, TaskResult<Optional<GameObject>>) public static IEnumerator RestoreInteriorPiece(InteriorPieceEntity interiorPiece, Base @base, TaskResult<Optional<GameObject>> result = null) Parameters interiorPiece InteriorPieceEntity base Base result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.RestoreMapRoom.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.RestoreMapRoom.html",
    "title": "Method RestoreMapRoom | Nitrox",
    "keywords": "Method RestoreMapRoom Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll RestoreMapRoom(Base, MapRoomEntity) public static IEnumerator RestoreMapRoom(Base @base, MapRoomEntity mapRoomEntity) Parameters base Base mapRoomEntity MapRoomEntity Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SpawnAsync(InteriorPieceEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(InteriorPieceEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity InteriorPieceEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SpawnsOwnChildren(InteriorPieceEntity) protected override bool SpawnsOwnChildren(InteriorPieceEntity entity) Parameters entity InteriorPieceEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.InteriorPieceEntitySpawner.html",
    "title": "Class InteriorPieceEntitySpawner | Nitrox",
    "keywords": "Class InteriorPieceEntitySpawner Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll public class InteriorPieceEntitySpawner : EntitySpawner<InteriorPieceEntity>, IEntitySpawner Inheritance object EntitySpawner<InteriorPieceEntity> InteriorPieceEntitySpawner Implements IEntitySpawner Inherited Members EntitySpawner<InteriorPieceEntity>.SpawnsOwnChildren(Entity) EntitySpawner<InteriorPieceEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InteriorPieceEntitySpawner(Entities) Methods From(IBaseModule) RestoreInteriorPiece(InteriorPieceEntity, Base, TaskResult<Optional<GameObject>>) RestoreMapRoom(Base, MapRoomEntity) SpawnAsync(InteriorPieceEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(InteriorPieceEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.-ctor.html",
    "title": "Constructor ModuleEntitySpawner | Nitrox",
    "keywords": "Constructor ModuleEntitySpawner Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll ModuleEntitySpawner(Entities) public ModuleEntitySpawner(Entities entities) Parameters entities Entities"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.ApplyModuleData.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.ApplyModuleData.html",
    "title": "Method ApplyModuleData | Nitrox",
    "keywords": "Method ApplyModuleData Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll ApplyModuleData(ModuleEntity, GameObject, TaskResult<Optional<GameObject>>) public static void ApplyModuleData(ModuleEntity moduleEntity, GameObject moduleObject, TaskResult<Optional<GameObject>> result = null) Parameters moduleEntity ModuleEntity moduleObject GameObject result TaskResult<Optional<GameObject>>"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.FillObject.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.FillObject.html",
    "title": "Method FillObject | Nitrox",
    "keywords": "Method FillObject Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll FillObject(ModuleEntity, Constructable) public static void FillObject(ModuleEntity moduleEntity, Constructable constructable) Parameters moduleEntity ModuleEntity constructable Constructable"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.From.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll From(Constructable) public static ModuleEntity From(Constructable constructable) Parameters constructable Constructable Returns ModuleEntity"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.RestoreModule.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.RestoreModule.html",
    "title": "Method RestoreModule | Nitrox",
    "keywords": "Method RestoreModule Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll RestoreModule(Transform, ModuleEntity, TaskResult<Optional<GameObject>>) public static IEnumerator RestoreModule(Transform parent, ModuleEntity moduleEntity, TaskResult<Optional<GameObject>> result = null) Parameters parent Transform moduleEntity ModuleEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SpawnAsync(ModuleEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(ModuleEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity ModuleEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll SpawnsOwnChildren(ModuleEntity) protected override bool SpawnsOwnChildren(ModuleEntity entity) Parameters entity ModuleEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.ModuleEntitySpawner.html",
    "title": "Class ModuleEntitySpawner | Nitrox",
    "keywords": "Class ModuleEntitySpawner Namespace NitroxClient.GameLogic.Spawning.Bases Assembly NitroxClient.dll public class ModuleEntitySpawner : EntitySpawner<ModuleEntity>, IEntitySpawner Inheritance object EntitySpawner<ModuleEntity> ModuleEntitySpawner Implements IEntitySpawner Inherited Members EntitySpawner<ModuleEntity>.SpawnsOwnChildren(Entity) EntitySpawner<ModuleEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ModuleEntitySpawner(Entities) Methods ApplyModuleData(ModuleEntity, GameObject, TaskResult<Optional<GameObject>>) FillObject(ModuleEntity, Constructable) From(Constructable) RestoreModule(Transform, ModuleEntity, TaskResult<Optional<GameObject>>) SpawnAsync(ModuleEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(ModuleEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.Bases.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Bases.html",
    "title": "Namespace NitroxClient.GameLogic.Spawning.Bases | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Spawning.Bases Classes BuildEntitySpawner BuildingPostSpawner GhostEntitySpawner InteriorPieceEntitySpawner ModuleEntitySpawner"
  },
  "api/NitroxClient.GameLogic.Spawning.InstalledBatteryEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InstalledBatteryEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnAsync(InstalledBatteryEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(InstalledBatteryEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity InstalledBatteryEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.InstalledBatteryEntitySpawner.SpawnSync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InstalledBatteryEntitySpawner.SpawnSync.html",
    "title": "Method SpawnSync | Nitrox",
    "keywords": "Method SpawnSync Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnSync(InstalledBatteryEntity, TaskResult<Optional<GameObject>>) protected override bool SpawnSync(InstalledBatteryEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity InstalledBatteryEntity result TaskResult<Optional<GameObject>> Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.InstalledBatteryEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InstalledBatteryEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnsOwnChildren(InstalledBatteryEntity) protected override bool SpawnsOwnChildren(InstalledBatteryEntity entity) Parameters entity InstalledBatteryEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.InstalledBatteryEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InstalledBatteryEntitySpawner.html",
    "title": "Class InstalledBatteryEntitySpawner | Nitrox",
    "keywords": "Class InstalledBatteryEntitySpawner Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll public class InstalledBatteryEntitySpawner : SyncEntitySpawner<InstalledBatteryEntity>, IEntitySpawner, ISyncEntitySpawner Inheritance object EntitySpawner<InstalledBatteryEntity> SyncEntitySpawner<InstalledBatteryEntity> InstalledBatteryEntitySpawner Implements IEntitySpawner ISyncEntitySpawner Inherited Members SyncEntitySpawner<InstalledBatteryEntity>.SpawnSync(Entity, TaskResult<Optional<GameObject>>) SyncEntitySpawner<InstalledBatteryEntity>.SpawnSyncSafe(Entity, TaskResult<Optional<GameObject>>, TaskResult<Exception>) EntitySpawner<InstalledBatteryEntity>.SpawnsOwnChildren(Entity) EntitySpawner<InstalledBatteryEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SpawnAsync(InstalledBatteryEntity, TaskResult<Optional<GameObject>>) SpawnSync(InstalledBatteryEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(InstalledBatteryEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.InstalledModuleEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InstalledModuleEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnAsync(InstalledModuleEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(InstalledModuleEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity InstalledModuleEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.InstalledModuleEntitySpawner.SpawnSync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InstalledModuleEntitySpawner.SpawnSync.html",
    "title": "Method SpawnSync | Nitrox",
    "keywords": "Method SpawnSync Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnSync(InstalledModuleEntity, TaskResult<Optional<GameObject>>) protected override bool SpawnSync(InstalledModuleEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity InstalledModuleEntity result TaskResult<Optional<GameObject>> Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.InstalledModuleEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InstalledModuleEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnsOwnChildren(InstalledModuleEntity) protected override bool SpawnsOwnChildren(InstalledModuleEntity entity) Parameters entity InstalledModuleEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.InstalledModuleEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InstalledModuleEntitySpawner.html",
    "title": "Class InstalledModuleEntitySpawner | Nitrox",
    "keywords": "Class InstalledModuleEntitySpawner Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll public class InstalledModuleEntitySpawner : SyncEntitySpawner<InstalledModuleEntity>, IEntitySpawner, ISyncEntitySpawner Inheritance object EntitySpawner<InstalledModuleEntity> SyncEntitySpawner<InstalledModuleEntity> InstalledModuleEntitySpawner Implements IEntitySpawner ISyncEntitySpawner Inherited Members SyncEntitySpawner<InstalledModuleEntity>.SpawnSync(Entity, TaskResult<Optional<GameObject>>) SyncEntitySpawner<InstalledModuleEntity>.SpawnSyncSafe(Entity, TaskResult<Optional<GameObject>>, TaskResult<Exception>) EntitySpawner<InstalledModuleEntity>.SpawnsOwnChildren(Entity) EntitySpawner<InstalledModuleEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SpawnAsync(InstalledModuleEntity, TaskResult<Optional<GameObject>>) SpawnSync(InstalledModuleEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(InstalledModuleEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.InventoryEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InventoryEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnAsync(InventoryEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(InventoryEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity InventoryEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.InventoryEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InventoryEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnsOwnChildren(InventoryEntity) protected override bool SpawnsOwnChildren(InventoryEntity entity) Parameters entity InventoryEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.InventoryEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InventoryEntitySpawner.html",
    "title": "Class InventoryEntitySpawner | Nitrox",
    "keywords": "Class InventoryEntitySpawner Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll public class InventoryEntitySpawner : EntitySpawner<InventoryEntity>, IEntitySpawner Inheritance object EntitySpawner<InventoryEntity> InventoryEntitySpawner Implements IEntitySpawner Inherited Members EntitySpawner<InventoryEntity>.SpawnsOwnChildren(Entity) EntitySpawner<InventoryEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SpawnAsync(InventoryEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(InventoryEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.InventoryItemEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InventoryItemEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnAsync(InventoryItemEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(InventoryItemEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity InventoryItemEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.InventoryItemEntitySpawner.SpawnSync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InventoryItemEntitySpawner.SpawnSync.html",
    "title": "Method SpawnSync | Nitrox",
    "keywords": "Method SpawnSync Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnSync(InventoryItemEntity, TaskResult<Optional<GameObject>>) protected override bool SpawnSync(InventoryItemEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity InventoryItemEntity result TaskResult<Optional<GameObject>> Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.InventoryItemEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InventoryItemEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnsOwnChildren(InventoryItemEntity) protected override bool SpawnsOwnChildren(InventoryItemEntity entity) Parameters entity InventoryItemEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.InventoryItemEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.InventoryItemEntitySpawner.html",
    "title": "Class InventoryItemEntitySpawner | Nitrox",
    "keywords": "Class InventoryItemEntitySpawner Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll public class InventoryItemEntitySpawner : SyncEntitySpawner<InventoryItemEntity>, IEntitySpawner, ISyncEntitySpawner Inheritance object EntitySpawner<InventoryItemEntity> SyncEntitySpawner<InventoryItemEntity> InventoryItemEntitySpawner Implements IEntitySpawner ISyncEntitySpawner Inherited Members SyncEntitySpawner<InventoryItemEntity>.SpawnSync(Entity, TaskResult<Optional<GameObject>>) SyncEntitySpawner<InventoryItemEntity>.SpawnSyncSafe(Entity, TaskResult<Optional<GameObject>>, TaskResult<Exception>) EntitySpawner<InventoryItemEntity>.SpawnsOwnChildren(Entity) EntitySpawner<InventoryItemEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SpawnAsync(InventoryItemEntity, TaskResult<Optional<GameObject>>) SpawnSync(InventoryItemEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(InventoryItemEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.BatteryMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.BatteryMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, BatteryMetadata) public override void ProcessMetadata(GameObject gameObject, BatteryMetadata metadata) Parameters gameObject GameObject metadata BatteryMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.BatteryMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.BatteryMetadataProcessor.html",
    "title": "Class BatteryMetadataProcessor | Nitrox",
    "keywords": "Class BatteryMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class BatteryMetadataProcessor : GenericEntityMetadataProcessor<BatteryMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<BatteryMetadata> BatteryMetadataProcessor Inherited Members GenericEntityMetadataProcessor<BatteryMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, BatteryMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.ConstructorMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.ConstructorMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, ConstructorMetadata) public override void ProcessMetadata(GameObject gameObject, ConstructorMetadata metadata) Parameters gameObject GameObject metadata ConstructorMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.ConstructorMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.ConstructorMetadataProcessor.html",
    "title": "Class ConstructorMetadataProcessor | Nitrox",
    "keywords": "Class ConstructorMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class ConstructorMetadataProcessor : GenericEntityMetadataProcessor<ConstructorMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<ConstructorMetadata> ConstructorMetadataProcessor Inherited Members GenericEntityMetadataProcessor<ConstructorMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, ConstructorMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.CrafterMetadataProcessor.ANTI_GRIEF_DURATION_BUFFER.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.CrafterMetadataProcessor.ANTI_GRIEF_DURATION_BUFFER.html",
    "title": "Field ANTI_GRIEF_DURATION_BUFFER | Nitrox",
    "keywords": "Field ANTI_GRIEF_DURATION_BUFFER Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public const float ANTI_GRIEF_DURATION_BUFFER = 0.2 Returns float"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.CrafterMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.CrafterMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, CrafterMetadata) public override void ProcessMetadata(GameObject gameObject, CrafterMetadata metadata) Parameters gameObject GameObject metadata CrafterMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.CrafterMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.CrafterMetadataProcessor.html",
    "title": "Class CrafterMetadataProcessor | Nitrox",
    "keywords": "Class CrafterMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class CrafterMetadataProcessor : GenericEntityMetadataProcessor<CrafterMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<CrafterMetadata> CrafterMetadataProcessor Inherited Members GenericEntityMetadataProcessor<CrafterMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields ANTI_GRIEF_DURATION_BUFFER Methods ProcessMetadata(GameObject, CrafterMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsLightingMetadataProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsLightingMetadataProcessor.-ctor.html",
    "title": "Constructor CyclopsLightingMetadataProcessor | Nitrox",
    "keywords": "Constructor CyclopsLightingMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll CyclopsLightingMetadataProcessor(IPacketSender) public CyclopsLightingMetadataProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsLightingMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsLightingMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, CyclopsLightingMetadata) public override void ProcessMetadata(GameObject gameObject, CyclopsLightingMetadata metadata) Parameters gameObject GameObject metadata CyclopsLightingMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsLightingMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsLightingMetadataProcessor.html",
    "title": "Class CyclopsLightingMetadataProcessor | Nitrox",
    "keywords": "Class CyclopsLightingMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class CyclopsLightingMetadataProcessor : GenericEntityMetadataProcessor<CyclopsLightingMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<CyclopsLightingMetadata> CyclopsLightingMetadataProcessor Inherited Members GenericEntityMetadataProcessor<CyclopsLightingMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsLightingMetadataProcessor(IPacketSender) Methods ProcessMetadata(GameObject, CyclopsLightingMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsMetadataProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsMetadataProcessor.-ctor.html",
    "title": "Constructor CyclopsMetadataProcessor | Nitrox",
    "keywords": "Constructor CyclopsMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll CyclopsMetadataProcessor(IPacketSender, LiveMixinManager) public CyclopsMetadataProcessor(IPacketSender packetSender, LiveMixinManager liveMixinManager) Parameters packetSender IPacketSender liveMixinManager LiveMixinManager"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsMetadataProcessor.ChangeSonarMode.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsMetadataProcessor.ChangeSonarMode.html",
    "title": "Method ChangeSonarMode | Nitrox",
    "keywords": "Method ChangeSonarMode Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ChangeSonarMode(GameObject, bool) public void ChangeSonarMode(GameObject cyclops, bool isOn) Parameters cyclops GameObject isOn bool"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, CyclopsMetadata) public override void ProcessMetadata(GameObject cyclops, CyclopsMetadata metadata) Parameters cyclops GameObject metadata CyclopsMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.CyclopsMetadataProcessor.html",
    "title": "Class CyclopsMetadataProcessor | Nitrox",
    "keywords": "Class CyclopsMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class CyclopsMetadataProcessor : GenericEntityMetadataProcessor<CyclopsMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<CyclopsMetadata> CyclopsMetadataProcessor Inherited Members GenericEntityMetadataProcessor<CyclopsMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsMetadataProcessor(IPacketSender, LiveMixinManager) Methods ChangeSonarMode(GameObject, bool) ProcessMetadata(GameObject, CyclopsMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.EntityMetadataProcessor.ApplyMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.EntityMetadataProcessor.ApplyMetadata.html",
    "title": "Method ApplyMetadata | Nitrox",
    "keywords": "Method ApplyMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ApplyMetadata(GameObject, EntityMetadata) public static void ApplyMetadata(GameObject gameObject, EntityMetadata metadata) Parameters gameObject GameObject metadata EntityMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.EntityMetadataProcessor.FromMetaData.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.EntityMetadataProcessor.FromMetaData.html",
    "title": "Method FromMetaData | Nitrox",
    "keywords": "Method FromMetaData Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll FromMetaData(EntityMetadata) public static Optional<EntityMetadataProcessor> FromMetaData(EntityMetadata metadata) Parameters metadata EntityMetadata Returns Optional<EntityMetadataProcessor>"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.EntityMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.EntityMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, EntityMetadata) public abstract void ProcessMetadata(GameObject gameObject, EntityMetadata metadata) Parameters gameObject GameObject metadata EntityMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.EntityMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.EntityMetadataProcessor.html",
    "title": "Class EntityMetadataProcessor | Nitrox",
    "keywords": "Class EntityMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public abstract class EntityMetadataProcessor Inheritance object EntityMetadataProcessor Derived GenericEntityMetadataProcessor<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyMetadata(GameObject, EntityMetadata) FromMetaData(EntityMetadata) ProcessMetadata(GameObject, EntityMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.EntitySignMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.EntitySignMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, EntitySignMetadata) public override void ProcessMetadata(GameObject gameObject, EntitySignMetadata metadata) Parameters gameObject GameObject metadata EntitySignMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.EntitySignMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.EntitySignMetadataProcessor.html",
    "title": "Class EntitySignMetadataProcessor | Nitrox",
    "keywords": "Class EntitySignMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class EntitySignMetadataProcessor : GenericEntityMetadataProcessor<EntitySignMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<EntitySignMetadata> EntitySignMetadataProcessor Inherited Members GenericEntityMetadataProcessor<EntitySignMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, EntitySignMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.BatteryMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.BatteryMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(Battery) public override BatteryMetadata Extract(Battery entity) Parameters entity Battery Returns BatteryMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.BatteryMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.BatteryMetadataExtractor.html",
    "title": "Class BatteryMetadataExtractor | Nitrox",
    "keywords": "Class BatteryMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class BatteryMetadataExtractor : GenericEntityMetadataExtractor<Battery, BatteryMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<Battery, BatteryMetadata> BatteryMetadataExtractor Inherited Members GenericEntityMetadataExtractor<Battery, BatteryMetadata>.Extract(Battery) GenericEntityMetadataExtractor<Battery, BatteryMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(Battery)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.ConstructorMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.ConstructorMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(Constructor) public override ConstructorMetadata Extract(Constructor entity) Parameters entity Constructor Returns ConstructorMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.ConstructorMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.ConstructorMetadataExtractor.html",
    "title": "Class ConstructorMetadataExtractor | Nitrox",
    "keywords": "Class ConstructorMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class ConstructorMetadataExtractor : GenericEntityMetadataExtractor<Constructor, ConstructorMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<Constructor, ConstructorMetadata> ConstructorMetadataExtractor Inherited Members GenericEntityMetadataExtractor<Constructor, ConstructorMetadata>.Extract(Constructor) GenericEntityMetadataExtractor<Constructor, ConstructorMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(Constructor)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsLightningMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsLightningMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(CyclopsLightingPanel) public override CyclopsLightingMetadata Extract(CyclopsLightingPanel lighting) Parameters lighting CyclopsLightingPanel Returns CyclopsLightingMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsLightningMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsLightningMetadataExtractor.html",
    "title": "Class CyclopsLightningMetadataExtractor | Nitrox",
    "keywords": "Class CyclopsLightningMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class CyclopsLightningMetadataExtractor : GenericEntityMetadataExtractor<CyclopsLightingPanel, CyclopsLightingMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<CyclopsLightingPanel, CyclopsLightingMetadata> CyclopsLightningMetadataExtractor Inherited Members GenericEntityMetadataExtractor<CyclopsLightingPanel, CyclopsLightingMetadata>.Extract(CyclopsLightingPanel) GenericEntityMetadataExtractor<CyclopsLightingPanel, CyclopsLightingMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(CyclopsLightingPanel)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsMetadataExtractor.CyclopsGameObject.GameObject.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsMetadataExtractor.CyclopsGameObject.GameObject.html",
    "title": "Property GameObject | Nitrox",
    "keywords": "Property GameObject Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll GameObject public GameObject GameObject { readonly get; set; } Property Value GameObject"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsMetadataExtractor.CyclopsGameObject.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsMetadataExtractor.CyclopsGameObject.html",
    "title": "Struct CyclopsMetadataExtractor.CyclopsGameObject | Nitrox",
    "keywords": "Struct CyclopsMetadataExtractor.CyclopsGameObject Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public struct CyclopsMetadataExtractor.CyclopsGameObject Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Properties GameObject"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(CyclopsGameObject) public override CyclopsMetadata Extract(CyclopsMetadataExtractor.CyclopsGameObject cyclops) Parameters cyclops CyclopsMetadataExtractor.CyclopsGameObject Returns CyclopsMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.CyclopsMetadataExtractor.html",
    "title": "Class CyclopsMetadataExtractor | Nitrox",
    "keywords": "Class CyclopsMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class CyclopsMetadataExtractor : GenericEntityMetadataExtractor<CyclopsMetadataExtractor.CyclopsGameObject, CyclopsMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<CyclopsMetadataExtractor.CyclopsGameObject, CyclopsMetadata> CyclopsMetadataExtractor Inherited Members GenericEntityMetadataExtractor<CyclopsMetadataExtractor.CyclopsGameObject, CyclopsMetadata>.Extract(CyclopsMetadataExtractor.CyclopsGameObject) GenericEntityMetadataExtractor<CyclopsMetadataExtractor.CyclopsGameObject, CyclopsMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(CyclopsGameObject)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.EntityMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.EntityMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(object) public static Optional<EntityMetadata> Extract(object o) Parameters o object Returns Optional<EntityMetadata> Extract(GameObject) public static Optional<EntityMetadata> Extract(GameObject o) Parameters o GameObject Returns Optional<EntityMetadata>"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.EntityMetadataExtractor.From.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.EntityMetadataExtractor.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll From(object) public abstract Optional<EntityMetadata> From(object o) Parameters o object Returns Optional<EntityMetadata>"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.EntityMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.EntityMetadataExtractor.html",
    "title": "Class EntityMetadataExtractor | Nitrox",
    "keywords": "Class EntityMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public abstract class EntityMetadataExtractor Inheritance object EntityMetadataExtractor Derived GenericEntityMetadataExtractor<I, O> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(object) Extract(GameObject) From(object)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.FireExtinguisherHolderMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.FireExtinguisherHolderMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(FireExtinguisherHolder) public override FireExtinguisherHolderMetadata Extract(FireExtinguisherHolder entity) Parameters entity FireExtinguisherHolder Returns FireExtinguisherHolderMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.FireExtinguisherHolderMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.FireExtinguisherHolderMetadataExtractor.html",
    "title": "Class FireExtinguisherHolderMetadataExtractor | Nitrox",
    "keywords": "Class FireExtinguisherHolderMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class FireExtinguisherHolderMetadataExtractor : GenericEntityMetadataExtractor<FireExtinguisherHolder, FireExtinguisherHolderMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<FireExtinguisherHolder, FireExtinguisherHolderMetadata> FireExtinguisherHolderMetadataExtractor Inherited Members GenericEntityMetadataExtractor<FireExtinguisherHolder, FireExtinguisherHolderMetadata>.Extract(FireExtinguisherHolder) GenericEntityMetadataExtractor<FireExtinguisherHolder, FireExtinguisherHolderMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(FireExtinguisherHolder)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.FlashlightMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.FlashlightMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(FlashLight) public override FlashlightMetadata Extract(FlashLight entity) Parameters entity FlashLight Returns FlashlightMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.FlashlightMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.FlashlightMetadataExtractor.html",
    "title": "Class FlashlightMetadataExtractor | Nitrox",
    "keywords": "Class FlashlightMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class FlashlightMetadataExtractor : GenericEntityMetadataExtractor<FlashLight, FlashlightMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<FlashLight, FlashlightMetadata> FlashlightMetadataExtractor Inherited Members GenericEntityMetadataExtractor<FlashLight, FlashlightMetadata>.Extract(FlashLight) GenericEntityMetadataExtractor<FlashLight, FlashlightMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(FlashLight)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.GenericEntityMetadataExtractor-2.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.GenericEntityMetadataExtractor-2.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(I) public abstract O Extract(I entity) Parameters entity I Returns O"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.GenericEntityMetadataExtractor-2.From.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.GenericEntityMetadataExtractor-2.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll From(object) public override Optional<EntityMetadata> From(object o) Parameters o object Returns Optional<EntityMetadata>"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.GenericEntityMetadataExtractor-2.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.GenericEntityMetadataExtractor-2.html",
    "title": "Class GenericEntityMetadataExtractor<I, O> | Nitrox",
    "keywords": "Class GenericEntityMetadataExtractor<I, O> Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public abstract class GenericEntityMetadataExtractor<I, O> : EntityMetadataExtractor where O : EntityMetadata Type Parameters I O Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<I, O> Derived BatteryMetadataExtractor ConstructorMetadataExtractor CyclopsLightningMetadataExtractor CyclopsMetadataExtractor FireExtinguisherHolderMetadataExtractor FlashlightMetadataExtractor PlantableMetadataExtractor PlayerMetadataExtractor RocketMetadataExtractor SealedDoorMetadataExtractor SeamothMetadataExtractor SubNameInputMetadataExtractor WaterParkCreatureMetadataExtractor Inherited Members EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(I) From(object)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.PlantableMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.PlantableMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(Plantable) public override PlantableMetadata Extract(Plantable entity) Parameters entity Plantable Returns PlantableMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.PlantableMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.PlantableMetadataExtractor.html",
    "title": "Class PlantableMetadataExtractor | Nitrox",
    "keywords": "Class PlantableMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class PlantableMetadataExtractor : GenericEntityMetadataExtractor<Plantable, PlantableMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<Plantable, PlantableMetadata> PlantableMetadataExtractor Inherited Members GenericEntityMetadataExtractor<Plantable, PlantableMetadata>.Extract(Plantable) GenericEntityMetadataExtractor<Plantable, PlantableMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(Plantable)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.PlayerMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.PlayerMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(Player) public override PlayerMetadata Extract(Player player) Parameters player Player Returns PlayerMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.PlayerMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.PlayerMetadataExtractor.html",
    "title": "Class PlayerMetadataExtractor | Nitrox",
    "keywords": "Class PlayerMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class PlayerMetadataExtractor : GenericEntityMetadataExtractor<Player, PlayerMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<Player, PlayerMetadata> PlayerMetadataExtractor Inherited Members GenericEntityMetadataExtractor<Player, PlayerMetadata>.Extract(Player) GenericEntityMetadataExtractor<Player, PlayerMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(Player)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.RocketMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.RocketMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(Rocket) public override RocketMetadata Extract(Rocket rocket) Parameters rocket Rocket Returns RocketMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.RocketMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.RocketMetadataExtractor.html",
    "title": "Class RocketMetadataExtractor | Nitrox",
    "keywords": "Class RocketMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class RocketMetadataExtractor : GenericEntityMetadataExtractor<Rocket, RocketMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<Rocket, RocketMetadata> RocketMetadataExtractor Inherited Members GenericEntityMetadataExtractor<Rocket, RocketMetadata>.Extract(Rocket) GenericEntityMetadataExtractor<Rocket, RocketMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(Rocket)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SealedDoorMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SealedDoorMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(Sealed) public override SealedDoorMetadata Extract(Sealed entity) Parameters entity Sealed Returns SealedDoorMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SealedDoorMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SealedDoorMetadataExtractor.html",
    "title": "Class SealedDoorMetadataExtractor | Nitrox",
    "keywords": "Class SealedDoorMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class SealedDoorMetadataExtractor : GenericEntityMetadataExtractor<Sealed, SealedDoorMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<Sealed, SealedDoorMetadata> SealedDoorMetadataExtractor Inherited Members GenericEntityMetadataExtractor<Sealed, SealedDoorMetadata>.Extract(Sealed) GenericEntityMetadataExtractor<Sealed, SealedDoorMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(Sealed)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SeamothMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SeamothMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(SeaMoth) public override SeamothMetadata Extract(SeaMoth seamoth) Parameters seamoth SeaMoth Returns SeamothMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SeamothMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SeamothMetadataExtractor.html",
    "title": "Class SeamothMetadataExtractor | Nitrox",
    "keywords": "Class SeamothMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class SeamothMetadataExtractor : GenericEntityMetadataExtractor<SeaMoth, SeamothMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<SeaMoth, SeamothMetadata> SeamothMetadataExtractor Inherited Members GenericEntityMetadataExtractor<SeaMoth, SeamothMetadata>.Extract(SeaMoth) GenericEntityMetadataExtractor<SeaMoth, SeamothMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(SeaMoth)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SubNameInputMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SubNameInputMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(SubNameInput) public override SubNameInputMetadata Extract(SubNameInput subNameInput) Parameters subNameInput SubNameInput Returns SubNameInputMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SubNameInputMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.SubNameInputMetadataExtractor.html",
    "title": "Class SubNameInputMetadataExtractor | Nitrox",
    "keywords": "Class SubNameInputMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class SubNameInputMetadataExtractor : GenericEntityMetadataExtractor<SubNameInput, SubNameInputMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<SubNameInput, SubNameInputMetadata> SubNameInputMetadataExtractor Inherited Members GenericEntityMetadataExtractor<SubNameInput, SubNameInputMetadata>.Extract(SubNameInput) GenericEntityMetadataExtractor<SubNameInput, SubNameInputMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(SubNameInput)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.WaterParkCreatureMetadataExtractor.Extract.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.WaterParkCreatureMetadataExtractor.Extract.html",
    "title": "Method Extract | Nitrox",
    "keywords": "Method Extract Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll Extract(WaterParkCreature) public override WaterParkCreatureMetadata Extract(WaterParkCreature entity) Parameters entity WaterParkCreature Returns WaterParkCreatureMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.WaterParkCreatureMetadataExtractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.WaterParkCreatureMetadataExtractor.html",
    "title": "Class WaterParkCreatureMetadataExtractor | Nitrox",
    "keywords": "Class WaterParkCreatureMetadataExtractor Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Assembly NitroxClient.dll public class WaterParkCreatureMetadataExtractor : GenericEntityMetadataExtractor<WaterParkCreature, WaterParkCreatureMetadata> Inheritance object EntityMetadataExtractor GenericEntityMetadataExtractor<WaterParkCreature, WaterParkCreatureMetadata> WaterParkCreatureMetadataExtractor Inherited Members GenericEntityMetadataExtractor<WaterParkCreature, WaterParkCreatureMetadata>.Extract(WaterParkCreature) GenericEntityMetadataExtractor<WaterParkCreature, WaterParkCreatureMetadata>.From(object) EntityMetadataExtractor.From(object) EntityMetadataExtractor.Extract(object) EntityMetadataExtractor.Extract(GameObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Extract(WaterParkCreature)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.Extractor.html",
    "title": "Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Spawning.Metadata.Extractor Classes BatteryMetadataExtractor ConstructorMetadataExtractor CyclopsLightningMetadataExtractor CyclopsMetadataExtractor EntityMetadataExtractor FireExtinguisherHolderMetadataExtractor FlashlightMetadataExtractor GenericEntityMetadataExtractor<I, O> PlantableMetadataExtractor PlayerMetadataExtractor RocketMetadataExtractor SealedDoorMetadataExtractor SeamothMetadataExtractor SubNameInputMetadataExtractor WaterParkCreatureMetadataExtractor Structs CyclopsMetadataExtractor.CyclopsGameObject"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.FireExtinguisherHolderMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.FireExtinguisherHolderMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, FireExtinguisherHolderMetadata) public override void ProcessMetadata(GameObject gameObject, FireExtinguisherHolderMetadata metadata) Parameters gameObject GameObject metadata FireExtinguisherHolderMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.FireExtinguisherHolderMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.FireExtinguisherHolderMetadataProcessor.html",
    "title": "Class FireExtinguisherHolderMetadataProcessor | Nitrox",
    "keywords": "Class FireExtinguisherHolderMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class FireExtinguisherHolderMetadataProcessor : GenericEntityMetadataProcessor<FireExtinguisherHolderMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<FireExtinguisherHolderMetadata> FireExtinguisherHolderMetadataProcessor Inherited Members GenericEntityMetadataProcessor<FireExtinguisherHolderMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, FireExtinguisherHolderMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.FlashlightMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.FlashlightMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, FlashlightMetadata) public override void ProcessMetadata(GameObject gameObject, FlashlightMetadata metadata) Parameters gameObject GameObject metadata FlashlightMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.FlashlightMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.FlashlightMetadataProcessor.html",
    "title": "Class FlashlightMetadataProcessor | Nitrox",
    "keywords": "Class FlashlightMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class FlashlightMetadataProcessor : GenericEntityMetadataProcessor<FlashlightMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<FlashlightMetadata> FlashlightMetadataProcessor Inherited Members GenericEntityMetadataProcessor<FlashlightMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, FlashlightMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.GenericEntityMetadataProcessor-1.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.GenericEntityMetadataProcessor-1.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, T) public abstract void ProcessMetadata(GameObject gameObject, T metadata) Parameters gameObject GameObject metadata T ProcessMetadata(GameObject, EntityMetadata) public override void ProcessMetadata(GameObject gameObject, EntityMetadata metadata) Parameters gameObject GameObject metadata EntityMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.GenericEntityMetadataProcessor-1.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.GenericEntityMetadataProcessor-1.html",
    "title": "Class GenericEntityMetadataProcessor<T> | Nitrox",
    "keywords": "Class GenericEntityMetadataProcessor<T> Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public abstract class GenericEntityMetadataProcessor<T> : EntityMetadataProcessor where T : EntityMetadata Type Parameters T Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<T> Derived BatteryMetadataProcessor ConstructorMetadataProcessor CrafterMetadataProcessor CyclopsLightingMetadataProcessor CyclopsMetadataProcessor EntitySignMetadataProcessor FireExtinguisherHolderMetadataProcessor FlashlightMetadataProcessor KeypadMetadataProcessor PlantableMetadataProcessor PlayerMetadataProcessor PrecursorDoorwayMetadataProcessor PrecursorKeyTerminalMetadataProcessor PrecursorTeleporterActivationTerminalMetadataProcessor PrecursorTeleporterMetadataProcessor RepairedComponentMetadataProcessor RocketMetadataProcessor SealedDoorMetadataProcessor SeamothMetadataProcessor SubNameInputProcessor WaterParkCreatureMetadataProcessor Inherited Members EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, EntityMetadata) ProcessMetadata(GameObject, T)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.KeypadMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.KeypadMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, KeypadMetadata) public override void ProcessMetadata(GameObject gameObject, KeypadMetadata metadata) Parameters gameObject GameObject metadata KeypadMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.KeypadMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.KeypadMetadataProcessor.html",
    "title": "Class KeypadMetadataProcessor | Nitrox",
    "keywords": "Class KeypadMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class KeypadMetadataProcessor : GenericEntityMetadataProcessor<KeypadMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<KeypadMetadata> KeypadMetadataProcessor Inherited Members GenericEntityMetadataProcessor<KeypadMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, KeypadMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PlantableMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PlantableMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, PlantableMetadata) public override void ProcessMetadata(GameObject gameObject, PlantableMetadata metadata) Parameters gameObject GameObject metadata PlantableMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PlantableMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PlantableMetadataProcessor.html",
    "title": "Class PlantableMetadataProcessor | Nitrox",
    "keywords": "Class PlantableMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class PlantableMetadataProcessor : GenericEntityMetadataProcessor<PlantableMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<PlantableMetadata> PlantableMetadataProcessor Inherited Members GenericEntityMetadataProcessor<PlantableMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, PlantableMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PlayerMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PlayerMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, PlayerMetadata) public override void ProcessMetadata(GameObject gameObject, PlayerMetadata metadata) Parameters gameObject GameObject metadata PlayerMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PlayerMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PlayerMetadataProcessor.html",
    "title": "Class PlayerMetadataProcessor | Nitrox",
    "keywords": "Class PlayerMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class PlayerMetadataProcessor : GenericEntityMetadataProcessor<PlayerMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<PlayerMetadata> PlayerMetadataProcessor Inherited Members GenericEntityMetadataProcessor<PlayerMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, PlayerMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorDoorwayMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorDoorwayMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, PrecursorDoorwayMetadata) public override void ProcessMetadata(GameObject gameObject, PrecursorDoorwayMetadata metadata) Parameters gameObject GameObject metadata PrecursorDoorwayMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorDoorwayMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorDoorwayMetadataProcessor.html",
    "title": "Class PrecursorDoorwayMetadataProcessor | Nitrox",
    "keywords": "Class PrecursorDoorwayMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class PrecursorDoorwayMetadataProcessor : GenericEntityMetadataProcessor<PrecursorDoorwayMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<PrecursorDoorwayMetadata> PrecursorDoorwayMetadataProcessor Inherited Members GenericEntityMetadataProcessor<PrecursorDoorwayMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, PrecursorDoorwayMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorKeyTerminalMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorKeyTerminalMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, PrecursorKeyTerminalMetadata) public override void ProcessMetadata(GameObject gameObject, PrecursorKeyTerminalMetadata metadata) Parameters gameObject GameObject metadata PrecursorKeyTerminalMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorKeyTerminalMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorKeyTerminalMetadataProcessor.html",
    "title": "Class PrecursorKeyTerminalMetadataProcessor | Nitrox",
    "keywords": "Class PrecursorKeyTerminalMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class PrecursorKeyTerminalMetadataProcessor : GenericEntityMetadataProcessor<PrecursorKeyTerminalMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<PrecursorKeyTerminalMetadata> PrecursorKeyTerminalMetadataProcessor Inherited Members GenericEntityMetadataProcessor<PrecursorKeyTerminalMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, PrecursorKeyTerminalMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorTeleporterActivationTerminalMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorTeleporterActivationTerminalMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, PrecursorTeleporterActivationTerminalMetadata) public override void ProcessMetadata(GameObject gameObject, PrecursorTeleporterActivationTerminalMetadata metadata) Parameters gameObject GameObject metadata PrecursorTeleporterActivationTerminalMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorTeleporterActivationTerminalMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorTeleporterActivationTerminalMetadataProcessor.html",
    "title": "Class PrecursorTeleporterActivationTerminalMetadataProcessor | Nitrox",
    "keywords": "Class PrecursorTeleporterActivationTerminalMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class PrecursorTeleporterActivationTerminalMetadataProcessor : GenericEntityMetadataProcessor<PrecursorTeleporterActivationTerminalMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<PrecursorTeleporterActivationTerminalMetadata> PrecursorTeleporterActivationTerminalMetadataProcessor Inherited Members GenericEntityMetadataProcessor<PrecursorTeleporterActivationTerminalMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, PrecursorTeleporterActivationTerminalMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorTeleporterMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorTeleporterMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, PrecursorTeleporterMetadata) public override void ProcessMetadata(GameObject gameObject, PrecursorTeleporterMetadata metadata) Parameters gameObject GameObject metadata PrecursorTeleporterMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorTeleporterMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.PrecursorTeleporterMetadataProcessor.html",
    "title": "Class PrecursorTeleporterMetadataProcessor | Nitrox",
    "keywords": "Class PrecursorTeleporterMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class PrecursorTeleporterMetadataProcessor : GenericEntityMetadataProcessor<PrecursorTeleporterMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<PrecursorTeleporterMetadata> PrecursorTeleporterMetadataProcessor Inherited Members GenericEntityMetadataProcessor<PrecursorTeleporterMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, PrecursorTeleporterMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.RepairedComponentMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.RepairedComponentMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, RepairedComponentMetadata) public override void ProcessMetadata(GameObject gameObject, RepairedComponentMetadata metadata) Parameters gameObject GameObject metadata RepairedComponentMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.RepairedComponentMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.RepairedComponentMetadataProcessor.html",
    "title": "Class RepairedComponentMetadataProcessor | Nitrox",
    "keywords": "Class RepairedComponentMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class RepairedComponentMetadataProcessor : GenericEntityMetadataProcessor<RepairedComponentMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<RepairedComponentMetadata> RepairedComponentMetadataProcessor Inherited Members GenericEntityMetadataProcessor<RepairedComponentMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, RepairedComponentMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.RocketMetadataProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.RocketMetadataProcessor.-ctor.html",
    "title": "Constructor RocketMetadataProcessor | Nitrox",
    "keywords": "Constructor RocketMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll RocketMetadataProcessor(IPacketSender) public RocketMetadataProcessor(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.RocketMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.RocketMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, RocketMetadata) public override void ProcessMetadata(GameObject gameObject, RocketMetadata metadata) Parameters gameObject GameObject metadata RocketMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.RocketMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.RocketMetadataProcessor.html",
    "title": "Class RocketMetadataProcessor | Nitrox",
    "keywords": "Class RocketMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class RocketMetadataProcessor : GenericEntityMetadataProcessor<RocketMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<RocketMetadata> RocketMetadataProcessor Inherited Members GenericEntityMetadataProcessor<RocketMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RocketMetadataProcessor(IPacketSender) Methods ProcessMetadata(GameObject, RocketMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.SealedDoorMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.SealedDoorMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, SealedDoorMetadata) public override void ProcessMetadata(GameObject gameObject, SealedDoorMetadata metadata) Parameters gameObject GameObject metadata SealedDoorMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.SealedDoorMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.SealedDoorMetadataProcessor.html",
    "title": "Class SealedDoorMetadataProcessor | Nitrox",
    "keywords": "Class SealedDoorMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class SealedDoorMetadataProcessor : GenericEntityMetadataProcessor<SealedDoorMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<SealedDoorMetadata> SealedDoorMetadataProcessor Inherited Members GenericEntityMetadataProcessor<SealedDoorMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, SealedDoorMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.SeamothMetadataProcessor.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.SeamothMetadataProcessor.-ctor.html",
    "title": "Constructor SeamothMetadataProcessor | Nitrox",
    "keywords": "Constructor SeamothMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll SeamothMetadataProcessor(IPacketSender, LiveMixinManager) public SeamothMetadataProcessor(IPacketSender packetSender, LiveMixinManager liveMixinManager) Parameters packetSender IPacketSender liveMixinManager LiveMixinManager"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.SeamothMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.SeamothMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, SeamothMetadata) public override void ProcessMetadata(GameObject gameObject, SeamothMetadata metadata) Parameters gameObject GameObject metadata SeamothMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.SeamothMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.SeamothMetadataProcessor.html",
    "title": "Class SeamothMetadataProcessor | Nitrox",
    "keywords": "Class SeamothMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class SeamothMetadataProcessor : GenericEntityMetadataProcessor<SeamothMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<SeamothMetadata> SeamothMetadataProcessor Inherited Members GenericEntityMetadataProcessor<SeamothMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SeamothMetadataProcessor(IPacketSender, LiveMixinManager) Methods ProcessMetadata(GameObject, SeamothMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.SubNameInputProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.SubNameInputProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, SubNameInputMetadata) public override void ProcessMetadata(GameObject gameObject, SubNameInputMetadata metadata) Parameters gameObject GameObject metadata SubNameInputMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.SubNameInputProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.SubNameInputProcessor.html",
    "title": "Class SubNameInputProcessor | Nitrox",
    "keywords": "Class SubNameInputProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class SubNameInputProcessor : GenericEntityMetadataProcessor<SubNameInputMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<SubNameInputMetadata> SubNameInputProcessor Inherited Members GenericEntityMetadataProcessor<SubNameInputMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, SubNameInputMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.WaterParkCreatureMetadataProcessor.ProcessMetadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.WaterParkCreatureMetadataProcessor.ProcessMetadata.html",
    "title": "Method ProcessMetadata | Nitrox",
    "keywords": "Method ProcessMetadata Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll ProcessMetadata(GameObject, WaterParkCreatureMetadata) public override void ProcessMetadata(GameObject gameObject, WaterParkCreatureMetadata metadata) Parameters gameObject GameObject metadata WaterParkCreatureMetadata"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.WaterParkCreatureMetadataProcessor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.WaterParkCreatureMetadataProcessor.html",
    "title": "Class WaterParkCreatureMetadataProcessor | Nitrox",
    "keywords": "Class WaterParkCreatureMetadataProcessor Namespace NitroxClient.GameLogic.Spawning.Metadata Assembly NitroxClient.dll public class WaterParkCreatureMetadataProcessor : GenericEntityMetadataProcessor<WaterParkCreatureMetadata> Inheritance object EntityMetadataProcessor GenericEntityMetadataProcessor<WaterParkCreatureMetadata> WaterParkCreatureMetadataProcessor Inherited Members GenericEntityMetadataProcessor<WaterParkCreatureMetadata>.ProcessMetadata(GameObject, EntityMetadata) EntityMetadataProcessor.FromMetaData(EntityMetadata) EntityMetadataProcessor.ApplyMetadata(GameObject, EntityMetadata) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ProcessMetadata(GameObject, WaterParkCreatureMetadata)"
  },
  "api/NitroxClient.GameLogic.Spawning.Metadata.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.Metadata.html",
    "title": "Namespace NitroxClient.GameLogic.Spawning.Metadata | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Spawning.Metadata Namespaces NitroxClient.GameLogic.Spawning.Metadata.Extractor Classes BatteryMetadataProcessor ConstructorMetadataProcessor CrafterMetadataProcessor CyclopsLightingMetadataProcessor CyclopsMetadataProcessor EntityMetadataProcessor EntitySignMetadataProcessor FireExtinguisherHolderMetadataProcessor FlashlightMetadataProcessor GenericEntityMetadataProcessor<T> KeypadMetadataProcessor PlantableMetadataProcessor PlayerMetadataProcessor PrecursorDoorwayMetadataProcessor PrecursorKeyTerminalMetadataProcessor PrecursorTeleporterActivationTerminalMetadataProcessor PrecursorTeleporterMetadataProcessor RepairedComponentMetadataProcessor RocketMetadataProcessor SealedDoorMetadataProcessor SeamothMetadataProcessor SubNameInputProcessor WaterParkCreatureMetadataProcessor"
  },
  "api/NitroxClient.GameLogic.Spawning.PathBasedChildEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.PathBasedChildEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnAsync(PathBasedChildEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(PathBasedChildEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity PathBasedChildEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.PathBasedChildEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.PathBasedChildEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnsOwnChildren(PathBasedChildEntity) protected override bool SpawnsOwnChildren(PathBasedChildEntity entity) Parameters entity PathBasedChildEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.PathBasedChildEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.PathBasedChildEntitySpawner.html",
    "title": "Class PathBasedChildEntitySpawner | Nitrox",
    "keywords": "Class PathBasedChildEntitySpawner Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll public class PathBasedChildEntitySpawner : EntitySpawner<PathBasedChildEntity>, IEntitySpawner Inheritance object EntitySpawner<PathBasedChildEntity> PathBasedChildEntitySpawner Implements IEntitySpawner Inherited Members EntitySpawner<PathBasedChildEntity>.SpawnsOwnChildren(Entity) EntitySpawner<PathBasedChildEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SpawnAsync(PathBasedChildEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(PathBasedChildEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.PrefabChildEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.PrefabChildEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnAsync(PrefabChildEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(PrefabChildEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity PrefabChildEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.PrefabChildEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.PrefabChildEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnsOwnChildren(PrefabChildEntity) protected override bool SpawnsOwnChildren(PrefabChildEntity entity) Parameters entity PrefabChildEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.PrefabChildEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.PrefabChildEntitySpawner.html",
    "title": "Class PrefabChildEntitySpawner | Nitrox",
    "keywords": "Class PrefabChildEntitySpawner Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll public class PrefabChildEntitySpawner : EntitySpawner<PrefabChildEntity>, IEntitySpawner Inheritance object EntitySpawner<PrefabChildEntity> PrefabChildEntitySpawner Implements IEntitySpawner Inherited Members EntitySpawner<PrefabChildEntity>.SpawnsOwnChildren(Entity) EntitySpawner<PrefabChildEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SpawnAsync(PrefabChildEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(PrefabChildEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.CrashEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.CrashEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) public IEnumerator SpawnAsync(WorldEntity entity, Optional<GameObject> parent, EntityCell cellRoot, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity parent Optional<GameObject> cellRoot EntityCell result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.CrashEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.CrashEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnsOwnChildren() public bool SpawnsOwnChildren() Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.CrashEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.CrashEntitySpawner.html",
    "title": "Class CrashEntitySpawner | Nitrox",
    "keywords": "Class CrashEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public class CrashEntitySpawner : IWorldEntitySpawner Inheritance object CrashEntitySpawner Implements IWorldEntitySpawner Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) SpawnsOwnChildren()"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.CreateGameObject.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.CreateGameObject.html",
    "title": "Method CreateGameObject | Nitrox",
    "keywords": "Method CreateGameObject Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll CreateGameObject(TechType, string, TaskResult<GameObject>) public static IEnumerator CreateGameObject(TechType techType, string classId, TaskResult<GameObject> result) Parameters techType TechType classId string result TaskResult<GameObject> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.RequestPrefab.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.RequestPrefab.html",
    "title": "Method RequestPrefab | Nitrox",
    "keywords": "Method RequestPrefab Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll RequestPrefab(TechType, TaskResult<GameObject>) Either gets the prefab reference from the cache or requests it and fills the provided result with it. public static IEnumerator RequestPrefab(TechType techType, TaskResult<GameObject> result) Parameters techType TechType result TaskResult<GameObject> Returns IEnumerator Remarks UWE.PrefabDatabase requires executing an extra yield instruction which is avoided here. Because each yield costs a non-required time (and non-neglectable considering the amount of entities) for batch spawning. Pumping a coroutine isn't possible when it contains prefab loading instructions as the one used here. RequestPrefab(string, TaskResult<GameObject>) Either gets the prefab reference from the cache or requests it and fills the provided result with it. public static IEnumerator RequestPrefab(string classId, TaskResult<GameObject> result) Parameters classId string result TaskResult<GameObject> Returns IEnumerator Remarks UWE.PrefabDatabase requires executing an extra yield instruction which is avoided here. Because each yield costs a non-required time (and non-neglectable considering the amount of entities) for batch spawning. Pumping a coroutine isn't possible when it contains prefab loading instructions as the one used here."
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) public IEnumerator SpawnAsync(WorldEntity entity, Optional<GameObject> parent, EntityCell cellRoot, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity parent Optional<GameObject> cellRoot EntityCell result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.SpawnSync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.SpawnSync.html",
    "title": "Method SpawnSync | Nitrox",
    "keywords": "Method SpawnSync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnSync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) public bool SpawnSync(WorldEntity entity, Optional<GameObject> parent, EntityCell cellRoot, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity parent Optional<GameObject> cellRoot EntityCell result TaskResult<Optional<GameObject>> Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnsOwnChildren() public bool SpawnsOwnChildren() Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.TryCreateGameObjectSync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.TryCreateGameObjectSync.html",
    "title": "Method TryCreateGameObjectSync | Nitrox",
    "keywords": "Method TryCreateGameObjectSync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll TryCreateGameObjectSync(TechType, string, out GameObject) Looks in prefab cache and creates a GameObject out of it if possible, or returns false. public static bool TryCreateGameObjectSync(TechType techType, string classId, out GameObject gameObject) Parameters techType TechType classId string gameObject GameObject Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.TryGetCachedPrefab.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.TryGetCachedPrefab.html",
    "title": "Method TryGetCachedPrefab | Nitrox",
    "keywords": "Method TryGetCachedPrefab Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll TryGetCachedPrefab(out GameObject, TechType, string) public static bool TryGetCachedPrefab(out GameObject prefab, TechType techType = TechType.None, string classId = null) Parameters prefab GameObject techType TechType classId string Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.DefaultWorldEntitySpawner.html",
    "title": "Class DefaultWorldEntitySpawner | Nitrox",
    "keywords": "Class DefaultWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public class DefaultWorldEntitySpawner : IWorldEntitySpawner, IWorldEntitySyncSpawner Inheritance object DefaultWorldEntitySpawner Implements IWorldEntitySpawner IWorldEntitySyncSpawner Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CreateGameObject(TechType, string, TaskResult<GameObject>) RequestPrefab(string, TaskResult<GameObject>) Either gets the prefab reference from the cache or requests it and fills the provided result with it. RequestPrefab(TechType, TaskResult<GameObject>) Either gets the prefab reference from the cache or requests it and fills the provided result with it. SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) SpawnSync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) SpawnsOwnChildren() TryCreateGameObjectSync(TechType, string, out GameObject) Looks in prefab cache and creates a GameObject out of it if possible, or returns false. TryGetCachedPrefab(out GameObject, TechType, string)"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.EscapePodWorldEntitySpawner.SURPRESS_ESCAPE_POD_AWAKE_METHOD.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.EscapePodWorldEntitySpawner.SURPRESS_ESCAPE_POD_AWAKE_METHOD.html",
    "title": "Field SURPRESS_ESCAPE_POD_AWAKE_METHOD | Nitrox",
    "keywords": "Field SURPRESS_ESCAPE_POD_AWAKE_METHOD Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public static bool SURPRESS_ESCAPE_POD_AWAKE_METHOD Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.EscapePodWorldEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.EscapePodWorldEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) public IEnumerator SpawnAsync(WorldEntity entity, Optional<GameObject> parent, EntityCell cellRoot, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity parent Optional<GameObject> cellRoot EntityCell result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.EscapePodWorldEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.EscapePodWorldEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnsOwnChildren() public bool SpawnsOwnChildren() Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.EscapePodWorldEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.EscapePodWorldEntitySpawner.html",
    "title": "Class EscapePodWorldEntitySpawner | Nitrox",
    "keywords": "Class EscapePodWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public class EscapePodWorldEntitySpawner : IWorldEntitySpawner Inheritance object EscapePodWorldEntitySpawner Implements IWorldEntitySpawner Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields SURPRESS_ESCAPE_POD_AWAKE_METHOD Methods SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) SpawnsOwnChildren()"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.IWorldEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.IWorldEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) IEnumerator SpawnAsync(WorldEntity entity, Optional<GameObject> parent, EntityCell cellRoot, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity parent Optional<GameObject> cellRoot EntityCell result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.IWorldEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.IWorldEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnsOwnChildren() bool SpawnsOwnChildren() Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.IWorldEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.IWorldEntitySpawner.html",
    "title": "Interface IWorldEntitySpawner | Nitrox",
    "keywords": "Interface IWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public interface IWorldEntitySpawner Methods SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) SpawnsOwnChildren()"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.IWorldEntitySyncSpawner.SpawnSync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.IWorldEntitySyncSpawner.SpawnSync.html",
    "title": "Method SpawnSync | Nitrox",
    "keywords": "Method SpawnSync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnSync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) bool SpawnSync(WorldEntity entity, Optional<GameObject> parent, EntityCell cellRoot, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity parent Optional<GameObject> cellRoot EntityCell result TaskResult<Optional<GameObject>> Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.IWorldEntitySyncSpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.IWorldEntitySyncSpawner.html",
    "title": "Interface IWorldEntitySyncSpawner | Nitrox",
    "keywords": "Interface IWorldEntitySyncSpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public interface IWorldEntitySyncSpawner Methods SpawnSync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>)"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlaceholderGroupWorldEntitySpawner.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlaceholderGroupWorldEntitySpawner.-ctor.html",
    "title": "Constructor PlaceholderGroupWorldEntitySpawner | Nitrox",
    "keywords": "Constructor PlaceholderGroupWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll PlaceholderGroupWorldEntitySpawner(WorldEntitySpawnerResolver, DefaultWorldEntitySpawner) public PlaceholderGroupWorldEntitySpawner(WorldEntitySpawnerResolver spawnerResolver, DefaultWorldEntitySpawner defaultSpawner) Parameters spawnerResolver WorldEntitySpawnerResolver defaultSpawner DefaultWorldEntitySpawner"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlaceholderGroupWorldEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlaceholderGroupWorldEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) public IEnumerator SpawnAsync(WorldEntity entity, Optional<GameObject> parent, EntityCell cellRoot, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity parent Optional<GameObject> cellRoot EntityCell result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlaceholderGroupWorldEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlaceholderGroupWorldEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnsOwnChildren() public bool SpawnsOwnChildren() Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlaceholderGroupWorldEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlaceholderGroupWorldEntitySpawner.html",
    "title": "Class PlaceholderGroupWorldEntitySpawner | Nitrox",
    "keywords": "Class PlaceholderGroupWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public class PlaceholderGroupWorldEntitySpawner : IWorldEntitySpawner Inheritance object PlaceholderGroupWorldEntitySpawner Implements IWorldEntitySpawner Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks This spawner can't hold a SpawnSync function because it is also responsible for spawning its children so the SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) function will still use sync spawning when possible and fall back to async when required. Constructors PlaceholderGroupWorldEntitySpawner(WorldEntitySpawnerResolver, DefaultWorldEntitySpawner) Methods SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) SpawnsOwnChildren()"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlayerWorldEntitySpawner.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlayerWorldEntitySpawner.-ctor.html",
    "title": "Constructor PlayerWorldEntitySpawner | Nitrox",
    "keywords": "Constructor PlayerWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll PlayerWorldEntitySpawner(PlayerManager, ILocalNitroxPlayer) public PlayerWorldEntitySpawner(PlayerManager playerManager, ILocalNitroxPlayer localPlayer) Parameters playerManager PlayerManager localPlayer ILocalNitroxPlayer"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlayerWorldEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlayerWorldEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) public IEnumerator SpawnAsync(WorldEntity entity, Optional<GameObject> parent, EntityCell cellRoot, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity parent Optional<GameObject> cellRoot EntityCell result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlayerWorldEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlayerWorldEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnsOwnChildren() public bool SpawnsOwnChildren() Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlayerWorldEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.PlayerWorldEntitySpawner.html",
    "title": "Class PlayerWorldEntitySpawner | Nitrox",
    "keywords": "Class PlayerWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public class PlayerWorldEntitySpawner : IWorldEntitySpawner Inheritance object PlayerWorldEntitySpawner Implements IWorldEntitySpawner Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerWorldEntitySpawner(PlayerManager, ILocalNitroxPlayer) Methods SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) SpawnsOwnChildren()"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.ReefbackWorldEntitySpawner.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.ReefbackWorldEntitySpawner.-ctor.html",
    "title": "Constructor ReefbackWorldEntitySpawner | Nitrox",
    "keywords": "Constructor ReefbackWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll ReefbackWorldEntitySpawner(DefaultWorldEntitySpawner) public ReefbackWorldEntitySpawner(DefaultWorldEntitySpawner defaultSpawner) Parameters defaultSpawner DefaultWorldEntitySpawner"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.ReefbackWorldEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.ReefbackWorldEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) public IEnumerator SpawnAsync(WorldEntity entity, Optional<GameObject> parent, EntityCell cellRoot, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity parent Optional<GameObject> cellRoot EntityCell result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.ReefbackWorldEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.ReefbackWorldEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnsOwnChildren() public bool SpawnsOwnChildren() Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.ReefbackWorldEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.ReefbackWorldEntitySpawner.html",
    "title": "Class ReefbackWorldEntitySpawner | Nitrox",
    "keywords": "Class ReefbackWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public class ReefbackWorldEntitySpawner : IWorldEntitySpawner Inheritance object ReefbackWorldEntitySpawner Implements IWorldEntitySpawner Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ReefbackWorldEntitySpawner(DefaultWorldEntitySpawner) Methods SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) SpawnsOwnChildren()"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.VehicleWorldEntitySpawner.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.VehicleWorldEntitySpawner.-ctor.html",
    "title": "Constructor VehicleWorldEntitySpawner | Nitrox",
    "keywords": "Constructor VehicleWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll VehicleWorldEntitySpawner(Entities) public VehicleWorldEntitySpawner(Entities entities) Parameters entities Entities"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.VehicleWorldEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.VehicleWorldEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) public IEnumerator SpawnAsync(WorldEntity entity, Optional<GameObject> parent, EntityCell cellRoot, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity parent Optional<GameObject> cellRoot EntityCell result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.VehicleWorldEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.VehicleWorldEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll SpawnsOwnChildren() public bool SpawnsOwnChildren() Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.VehicleWorldEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.VehicleWorldEntitySpawner.html",
    "title": "Class VehicleWorldEntitySpawner | Nitrox",
    "keywords": "Class VehicleWorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public class VehicleWorldEntitySpawner : IWorldEntitySpawner Inheritance object VehicleWorldEntitySpawner Implements IWorldEntitySpawner Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleWorldEntitySpawner(Entities) Methods SpawnAsync(WorldEntity, Optional<GameObject>, EntityCell, TaskResult<Optional<GameObject>>) SpawnsOwnChildren()"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.WorldEntitySpawnerResolver.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.WorldEntitySpawnerResolver.-ctor.html",
    "title": "Constructor WorldEntitySpawnerResolver | Nitrox",
    "keywords": "Constructor WorldEntitySpawnerResolver Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll WorldEntitySpawnerResolver(PlayerManager, ILocalNitroxPlayer, Entities) public WorldEntitySpawnerResolver(PlayerManager playerManager, ILocalNitroxPlayer localPlayer, Entities entities) Parameters playerManager PlayerManager localPlayer ILocalNitroxPlayer entities Entities"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.WorldEntitySpawnerResolver.ResolveEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.WorldEntitySpawnerResolver.ResolveEntitySpawner.html",
    "title": "Method ResolveEntitySpawner | Nitrox",
    "keywords": "Method ResolveEntitySpawner Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll ResolveEntitySpawner(WorldEntity) public IWorldEntitySpawner ResolveEntitySpawner(WorldEntity entity) Parameters entity WorldEntity Returns IWorldEntitySpawner"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.WorldEntitySpawnerResolver.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.WorldEntitySpawnerResolver.html",
    "title": "Class WorldEntitySpawnerResolver | Nitrox",
    "keywords": "Class WorldEntitySpawnerResolver Namespace NitroxClient.GameLogic.Spawning.WorldEntities Assembly NitroxClient.dll public class WorldEntitySpawnerResolver Inheritance object WorldEntitySpawnerResolver Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WorldEntitySpawnerResolver(PlayerManager, ILocalNitroxPlayer, Entities) Methods ResolveEntitySpawner(WorldEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntities.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntities.html",
    "title": "Namespace NitroxClient.GameLogic.Spawning.WorldEntities | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Spawning.WorldEntities Classes CrashEntitySpawner DefaultWorldEntitySpawner EscapePodWorldEntitySpawner PlaceholderGroupWorldEntitySpawner PlayerWorldEntitySpawner ReefbackWorldEntitySpawner VehicleWorldEntitySpawner WorldEntitySpawnerResolver Interfaces IWorldEntitySpawner IWorldEntitySyncSpawner"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntitySpawner.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntitySpawner.-ctor.html",
    "title": "Constructor WorldEntitySpawner | Nitrox",
    "keywords": "Constructor WorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll WorldEntitySpawner(PlayerManager, ILocalNitroxPlayer, Entities) public WorldEntitySpawner(PlayerManager playerManager, ILocalNitroxPlayer localPlayer, Entities entities) Parameters playerManager PlayerManager localPlayer ILocalNitroxPlayer entities Entities"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntitySpawner.SpawnAsync.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntitySpawner.SpawnAsync.html",
    "title": "Method SpawnAsync | Nitrox",
    "keywords": "Method SpawnAsync Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnAsync(WorldEntity, TaskResult<Optional<GameObject>>) protected override IEnumerator SpawnAsync(WorldEntity entity, TaskResult<Optional<GameObject>> result) Parameters entity WorldEntity result TaskResult<Optional<GameObject>> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntitySpawner.SpawnsOwnChildren.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntitySpawner.SpawnsOwnChildren.html",
    "title": "Method SpawnsOwnChildren | Nitrox",
    "keywords": "Method SpawnsOwnChildren Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll SpawnsOwnChildren(WorldEntity) protected override bool SpawnsOwnChildren(WorldEntity entity) Parameters entity WorldEntity Returns bool"
  },
  "api/NitroxClient.GameLogic.Spawning.WorldEntitySpawner.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.WorldEntitySpawner.html",
    "title": "Class WorldEntitySpawner | Nitrox",
    "keywords": "Class WorldEntitySpawner Namespace NitroxClient.GameLogic.Spawning Assembly NitroxClient.dll public class WorldEntitySpawner : EntitySpawner<WorldEntity>, IEntitySpawner Inheritance object EntitySpawner<WorldEntity> WorldEntitySpawner Implements IEntitySpawner Inherited Members EntitySpawner<WorldEntity>.SpawnsOwnChildren(Entity) EntitySpawner<WorldEntity>.SpawnAsync(Entity, TaskResult<Optional<GameObject>>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WorldEntitySpawner(PlayerManager, ILocalNitroxPlayer, Entities) Methods SpawnAsync(WorldEntity, TaskResult<Optional<GameObject>>) SpawnsOwnChildren(WorldEntity)"
  },
  "api/NitroxClient.GameLogic.Spawning.html": {
    "href": "api/NitroxClient.GameLogic.Spawning.html",
    "title": "Namespace NitroxClient.GameLogic.Spawning | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic.Spawning Namespaces NitroxClient.GameLogic.Spawning.Abstract NitroxClient.GameLogic.Spawning.Bases NitroxClient.GameLogic.Spawning.Metadata NitroxClient.GameLogic.Spawning.WorldEntities Classes InstalledBatteryEntitySpawner InstalledModuleEntitySpawner InventoryEntitySpawner InventoryItemEntitySpawner PathBasedChildEntitySpawner PrefabChildEntitySpawner WorldEntitySpawner"
  },
  "api/NitroxClient.GameLogic.StoryManager.CleanAuroraEvents.html": {
    "href": "api/NitroxClient.GameLogic.StoryManager.CleanAuroraEvents.html",
    "title": "Method CleanAuroraEvents | Nitrox",
    "keywords": "Method CleanAuroraEvents Namespace NitroxClient.GameLogic Assembly NitroxClient.dll CleanAuroraEvents() Removes the aurora-related entries from StoryGoalManager's completedEvents and PDALog public static void CleanAuroraEvents()"
  },
  "api/NitroxClient.GameLogic.StoryManager.RestoreAurora.html": {
    "href": "api/NitroxClient.GameLogic.StoryManager.RestoreAurora.html",
    "title": "Method RestoreAurora | Nitrox",
    "keywords": "Method RestoreAurora Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RestoreAurora() public static void RestoreAurora()"
  },
  "api/NitroxClient.GameLogic.StoryManager.ScanCompleted.html": {
    "href": "api/NitroxClient.GameLogic.StoryManager.ScanCompleted.html",
    "title": "Method ScanCompleted | Nitrox",
    "keywords": "Method ScanCompleted Namespace NitroxClient.GameLogic Assembly NitroxClient.dll ScanCompleted(NitroxId, bool) public static void ScanCompleted(NitroxId entityId, bool destroy) Parameters entityId NitroxId destroy bool"
  },
  "api/NitroxClient.GameLogic.StoryManager.UpdateAuroraData.html": {
    "href": "api/NitroxClient.GameLogic.StoryManager.UpdateAuroraData.html",
    "title": "Method UpdateAuroraData | Nitrox",
    "keywords": "Method UpdateAuroraData Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UpdateAuroraData(AuroraEventData) public static void UpdateAuroraData(AuroraEventData auroraEventData) Parameters auroraEventData AuroraEventData"
  },
  "api/NitroxClient.GameLogic.StoryManager.html": {
    "href": "api/NitroxClient.GameLogic.StoryManager.html",
    "title": "Class StoryManager | Nitrox",
    "keywords": "Class StoryManager Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public static class StoryManager Inheritance object StoryManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CleanAuroraEvents() Removes the aurora-related entries from StoryGoalManager's completedEvents and PDALog RestoreAurora() ScanCompleted(NitroxId, bool) UpdateAuroraData(AuroraEventData)"
  },
  "api/NitroxClient.GameLogic.Terrain.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Terrain.-ctor.html",
    "title": "Constructor Terrain | Nitrox",
    "keywords": "Constructor Terrain Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Terrain(IMultiplayerSession, IPacketSender, VisibleCells, VisibleBatches) public Terrain(IMultiplayerSession multiplayerSession, IPacketSender packetSender, VisibleCells visibleCells, VisibleBatches visibleBatches) Parameters multiplayerSession IMultiplayerSession packetSender IPacketSender visibleCells VisibleCells visibleBatches VisibleBatches"
  },
  "api/NitroxClient.GameLogic.Terrain.BatchLoaded.html": {
    "href": "api/NitroxClient.GameLogic.Terrain.BatchLoaded.html",
    "title": "Method BatchLoaded | Nitrox",
    "keywords": "Method BatchLoaded Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BatchLoaded(Int3) public void BatchLoaded(Int3 batchId) Parameters batchId Int3"
  },
  "api/NitroxClient.GameLogic.Terrain.BatchUnloaded.html": {
    "href": "api/NitroxClient.GameLogic.Terrain.BatchUnloaded.html",
    "title": "Method BatchUnloaded | Nitrox",
    "keywords": "Method BatchUnloaded Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BatchUnloaded(Int3) public void BatchUnloaded(Int3 batchId) Parameters batchId Int3"
  },
  "api/NitroxClient.GameLogic.Terrain.CellLoaded.html": {
    "href": "api/NitroxClient.GameLogic.Terrain.CellLoaded.html",
    "title": "Method CellLoaded | Nitrox",
    "keywords": "Method CellLoaded Namespace NitroxClient.GameLogic Assembly NitroxClient.dll CellLoaded(Int3, Int3, int) public void CellLoaded(Int3 batchId, Int3 cellId, int level) Parameters batchId Int3 cellId Int3 level int"
  },
  "api/NitroxClient.GameLogic.Terrain.CellUnloaded.html": {
    "href": "api/NitroxClient.GameLogic.Terrain.CellUnloaded.html",
    "title": "Method CellUnloaded | Nitrox",
    "keywords": "Method CellUnloaded Namespace NitroxClient.GameLogic Assembly NitroxClient.dll CellUnloaded(Int3, Int3, int) public void CellUnloaded(Int3 batchId, Int3 cellId, int level) Parameters batchId Int3 cellId Int3 level int"
  },
  "api/NitroxClient.GameLogic.Terrain.UpdateVisibility.html": {
    "href": "api/NitroxClient.GameLogic.Terrain.UpdateVisibility.html",
    "title": "Method UpdateVisibility | Nitrox",
    "keywords": "Method UpdateVisibility Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UpdateVisibility() public void UpdateVisibility()"
  },
  "api/NitroxClient.GameLogic.Terrain.WaitForWorldLoad.html": {
    "href": "api/NitroxClient.GameLogic.Terrain.WaitForWorldLoad.html",
    "title": "Method WaitForWorldLoad | Nitrox",
    "keywords": "Method WaitForWorldLoad Namespace NitroxClient.GameLogic Assembly NitroxClient.dll WaitForWorldLoad() Forces world streamer's to load the terrain around the MainCamera and waits until it's done to unfreeze the player. public static IEnumerator WaitForWorldLoad() Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Terrain.html": {
    "href": "api/NitroxClient.GameLogic.Terrain.html",
    "title": "Class Terrain | Nitrox",
    "keywords": "Class Terrain Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class Terrain Inheritance object Terrain Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Terrain(IMultiplayerSession, IPacketSender, VisibleCells, VisibleBatches) Methods BatchLoaded(Int3) BatchUnloaded(Int3) CellLoaded(Int3, Int3, int) CellUnloaded(Int3, Int3, int) UpdateVisibility() WaitForWorldLoad() Forces world streamer's to load the terrain around the MainCamera and waits until it's done to unfreeze the player."
  },
  "api/NitroxClient.GameLogic.TimeManager.CurrentTime.html": {
    "href": "api/NitroxClient.GameLogic.TimeManager.CurrentTime.html",
    "title": "Property CurrentTime | Nitrox",
    "keywords": "Property CurrentTime Namespace NitroxClient.GameLogic Assembly NitroxClient.dll CurrentTime Calculates the current exact time from an offset (latestRegisteredTime) and the delta time between UtcNow and the offset's exact DateTimeOffset (latestRegistrationTime). public double CurrentTime { get; } Property Value double Remarks This should only be used for DayNigthCycle internal calculations so that we don't use different times during the same frame. Use DayNightCycle.timePassed instead to get the current frame's time."
  },
  "api/NitroxClient.GameLogic.TimeManager.ProcessUpdate.html": {
    "href": "api/NitroxClient.GameLogic.TimeManager.ProcessUpdate.html",
    "title": "Method ProcessUpdate | Nitrox",
    "keywords": "Method ProcessUpdate Namespace NitroxClient.GameLogic Assembly NitroxClient.dll ProcessUpdate(TimeChange) public void ProcessUpdate(TimeChange packet) Parameters packet TimeChange"
  },
  "api/NitroxClient.GameLogic.TimeManager.html": {
    "href": "api/NitroxClient.GameLogic.TimeManager.html",
    "title": "Class TimeManager | Nitrox",
    "keywords": "Class TimeManager Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class TimeManager Inheritance object TimeManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CurrentTime Calculates the current exact time from an offset (latestRegisteredTime) and the delta time between UtcNow and the offset's exact DateTimeOffset (latestRegistrationTime). Methods ProcessUpdate(TimeChange)"
  },
  "api/NitroxClient.GameLogic.Vehicles.-ctor.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.-ctor.html",
    "title": "Constructor Vehicles | Nitrox",
    "keywords": "Constructor Vehicles Namespace NitroxClient.GameLogic Assembly NitroxClient.dll Vehicles(IPacketSender, IMultiplayerSession) public Vehicles(IPacketSender packetSender, IMultiplayerSession multiplayerSession) Parameters packetSender IPacketSender multiplayerSession IMultiplayerSession"
  },
  "api/NitroxClient.GameLogic.Vehicles.AllowMovementPacketsAfterDockingAnimation.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.AllowMovementPacketsAfterDockingAnimation.html",
    "title": "Method AllowMovementPacketsAfterDockingAnimation | Nitrox",
    "keywords": "Method AllowMovementPacketsAfterDockingAnimation Namespace NitroxClient.GameLogic Assembly NitroxClient.dll AllowMovementPacketsAfterDockingAnimation(PacketSuppressor<PlayerMovement>, PacketSuppressor<VehicleMovement>) public IEnumerator AllowMovementPacketsAfterDockingAnimation(PacketSuppressor<PlayerMovement> playerMovementSuppressor, PacketSuppressor<VehicleMovement> vehicleMovementSuppressor) Parameters playerMovementSuppressor PacketSuppressor<PlayerMovement> vehicleMovementSuppressor PacketSuppressor<VehicleMovement> Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Vehicles.BroadcastDestroyedVehicle.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.BroadcastDestroyedVehicle.html",
    "title": "Method BroadcastDestroyedVehicle | Nitrox",
    "keywords": "Method BroadcastDestroyedVehicle Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastDestroyedVehicle(NitroxId) public void BroadcastDestroyedVehicle(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxClient.GameLogic.Vehicles.BroadcastOnPilotModeChanged.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.BroadcastOnPilotModeChanged.html",
    "title": "Method BroadcastOnPilotModeChanged | Nitrox",
    "keywords": "Method BroadcastOnPilotModeChanged Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastOnPilotModeChanged(Vehicle, bool) public void BroadcastOnPilotModeChanged(Vehicle vehicle, bool isPiloting) Parameters vehicle Vehicle isPiloting bool"
  },
  "api/NitroxClient.GameLogic.Vehicles.BroadcastVehicleDocking.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.BroadcastVehicleDocking.html",
    "title": "Method BroadcastVehicleDocking | Nitrox",
    "keywords": "Method BroadcastVehicleDocking Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastVehicleDocking(VehicleDockingBay, Vehicle) public void BroadcastVehicleDocking(VehicleDockingBay dockingBay, Vehicle vehicle) Parameters dockingBay VehicleDockingBay vehicle Vehicle"
  },
  "api/NitroxClient.GameLogic.Vehicles.BroadcastVehicleUndocking.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.BroadcastVehicleUndocking.html",
    "title": "Method BroadcastVehicleUndocking | Nitrox",
    "keywords": "Method BroadcastVehicleUndocking Namespace NitroxClient.GameLogic Assembly NitroxClient.dll BroadcastVehicleUndocking(VehicleDockingBay, Vehicle, bool) public void BroadcastVehicleUndocking(VehicleDockingBay dockingBay, Vehicle vehicle, bool undockingStart) Parameters dockingBay VehicleDockingBay vehicle Vehicle undockingStart bool"
  },
  "api/NitroxClient.GameLogic.Vehicles.RemoveNitroxEntitiesTagging.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.RemoveNitroxEntitiesTagging.html",
    "title": "Method RemoveNitroxEntitiesTagging | Nitrox",
    "keywords": "Method RemoveNitroxEntitiesTagging Namespace NitroxClient.GameLogic Assembly NitroxClient.dll RemoveNitroxEntitiesTagging(GameObject) Removes ALL NitroxEntity on the UnityEngine.GameObject and its children. public static void RemoveNitroxEntitiesTagging(GameObject constructedObject) Parameters constructedObject GameObject Remarks Subnautica pre-emptively loads a prefab of each vehicle (such as a cyclops) during the initial game load. This allows the game to instantaniously use this prefab for the first constructor event. Subsequent constructor events will use this prefab as a template. However, this is problematic because the template + children are now tagged with NitroxEntity because players are interacting with it. We need to remove any NitroxEntity from the new gameObject that used the template."
  },
  "api/NitroxClient.GameLogic.Vehicles.SetOnPilotMode.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.SetOnPilotMode.html",
    "title": "Method SetOnPilotMode | Nitrox",
    "keywords": "Method SetOnPilotMode Namespace NitroxClient.GameLogic Assembly NitroxClient.dll SetOnPilotMode(NitroxId, ushort, bool) public void SetOnPilotMode(NitroxId vehicleId, ushort playerId, bool isPiloting) Parameters vehicleId NitroxId playerId ushort isPiloting bool"
  },
  "api/NitroxClient.GameLogic.Vehicles.UpdateVehiclePosition.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.UpdateVehiclePosition.html",
    "title": "Method UpdateVehiclePosition | Nitrox",
    "keywords": "Method UpdateVehiclePosition Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UpdateVehiclePosition(VehicleMovementData, Optional<RemotePlayer>) public void UpdateVehiclePosition(VehicleMovementData vehicleModel, Optional<RemotePlayer> player) Parameters vehicleModel VehicleMovementData player Optional<RemotePlayer>"
  },
  "api/NitroxClient.GameLogic.Vehicles.UpdateVehiclePositionAfterSpawn.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.UpdateVehiclePositionAfterSpawn.html",
    "title": "Method UpdateVehiclePositionAfterSpawn | Nitrox",
    "keywords": "Method UpdateVehiclePositionAfterSpawn Namespace NitroxClient.GameLogic Assembly NitroxClient.dll UpdateVehiclePositionAfterSpawn(NitroxId, TechType, GameObject, float) public IEnumerator UpdateVehiclePositionAfterSpawn(NitroxId id, TechType techType, GameObject gameObject, float cooldown) Parameters id NitroxId techType TechType gameObject GameObject cooldown float Returns IEnumerator"
  },
  "api/NitroxClient.GameLogic.Vehicles.html": {
    "href": "api/NitroxClient.GameLogic.Vehicles.html",
    "title": "Class Vehicles | Nitrox",
    "keywords": "Class Vehicles Namespace NitroxClient.GameLogic Assembly NitroxClient.dll public class Vehicles Inheritance object Vehicles Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Vehicles(IPacketSender, IMultiplayerSession) Methods AllowMovementPacketsAfterDockingAnimation(PacketSuppressor<PlayerMovement>, PacketSuppressor<VehicleMovement>) BroadcastDestroyedVehicle(NitroxId) BroadcastOnPilotModeChanged(Vehicle, bool) BroadcastVehicleDocking(VehicleDockingBay, Vehicle) BroadcastVehicleUndocking(VehicleDockingBay, Vehicle, bool) RemoveNitroxEntitiesTagging(GameObject) Removes ALL NitroxEntity on the UnityEngine.GameObject and its children. SetOnPilotMode(NitroxId, ushort, bool) UpdateVehiclePosition(VehicleMovementData, Optional<RemotePlayer>) UpdateVehiclePositionAfterSpawn(NitroxId, TechType, GameObject, float)"
  },
  "api/NitroxClient.GameLogic.html": {
    "href": "api/NitroxClient.GameLogic.html",
    "title": "Namespace NitroxClient.GameLogic | Nitrox",
    "keywords": "Namespace NitroxClient.GameLogic Namespaces NitroxClient.GameLogic.Bases NitroxClient.GameLogic.ChatUI NitroxClient.GameLogic.Containers NitroxClient.GameLogic.FMOD NitroxClient.GameLogic.HUD NitroxClient.GameLogic.Helper NitroxClient.GameLogic.InitialSync NitroxClient.GameLogic.PlayerLogic NitroxClient.GameLogic.Settings NitroxClient.GameLogic.Simulation NitroxClient.GameLogic.Spawning Classes AI Cyclops Entities EquipmentSlots ExosuitModuleEvent Fires Handles all of the Fires in the game. Currently, the only known Fire spawning is in SubFire.CreateFire(SubFire.RoomFire). The fires in the Aurora come loaded with the map and do not grow in size. If we want to create a Fire spawning mechanic outside of Cyclops fires, it should be added to Create(CyclopsFireData). Fire dousing goes by Id and does not need to be modified Interior ItemContainers Items LiveMixinManager LocalPlayer MedkitFabricator MobileVehicleBay MovementHelper NitroxConsole PlayerManager RemotePlayer RemotePlayerManagerExtensions Rockets SeamothModulesEvent SimulationOwnership StoryManager Terrain TimeManager Vehicles Delegates PlayerManager.OnCreate PlayerManager.OnRemove"
  },
  "api/NitroxClient.Helpers.NitroxEntityExtensions.GetId.html": {
    "href": "api/NitroxClient.Helpers.NitroxEntityExtensions.GetId.html",
    "title": "Method GetId | Nitrox",
    "keywords": "Method GetId Namespace NitroxClient.Helpers Assembly NitroxClient.dll GetId(GameObject) public static Optional<NitroxId> GetId(this GameObject gameObject) Parameters gameObject GameObject Returns Optional<NitroxId> GetId(Component) public static Optional<NitroxId> GetId(this Component component) Parameters component Component Returns Optional<NitroxId>"
  },
  "api/NitroxClient.Helpers.NitroxEntityExtensions.TryGetIdOrWarn.html": {
    "href": "api/NitroxClient.Helpers.NitroxEntityExtensions.TryGetIdOrWarn.html",
    "title": "Method TryGetIdOrWarn | Nitrox",
    "keywords": "Method TryGetIdOrWarn Namespace NitroxClient.Helpers Assembly NitroxClient.dll TryGetIdOrWarn(GameObject, out NitroxId, string, string, int) public static bool TryGetIdOrWarn(this GameObject gameObject, out NitroxId nitroxId, string methodName = \"\", string filePath = \"\", int lineNumber = 0) Parameters gameObject GameObject nitroxId NitroxId methodName string filePath string lineNumber int Returns bool TryGetIdOrWarn(Component, out NitroxId, string, string, int) public static bool TryGetIdOrWarn(this Component component, out NitroxId nitroxId, string methodName = \"\", string filePath = \"\", int lineNumber = 0) Parameters component Component nitroxId NitroxId methodName string filePath string lineNumber int Returns bool"
  },
  "api/NitroxClient.Helpers.NitroxEntityExtensions.TryGetNitroxEntity.html": {
    "href": "api/NitroxClient.Helpers.NitroxEntityExtensions.TryGetNitroxEntity.html",
    "title": "Method TryGetNitroxEntity | Nitrox",
    "keywords": "Method TryGetNitroxEntity Namespace NitroxClient.Helpers Assembly NitroxClient.dll TryGetNitroxEntity(Component, out NitroxEntity) public static bool TryGetNitroxEntity(this Component component, out NitroxEntity nitroxEntity) Parameters component Component nitroxEntity NitroxEntity Returns bool TryGetNitroxEntity(GameObject, out NitroxEntity) public static bool TryGetNitroxEntity(this GameObject gameObject, out NitroxEntity nitroxEntity) Parameters gameObject GameObject nitroxEntity NitroxEntity Returns bool"
  },
  "api/NitroxClient.Helpers.NitroxEntityExtensions.TryGetNitroxId.html": {
    "href": "api/NitroxClient.Helpers.NitroxEntityExtensions.TryGetNitroxId.html",
    "title": "Method TryGetNitroxId | Nitrox",
    "keywords": "Method TryGetNitroxId Namespace NitroxClient.Helpers Assembly NitroxClient.dll TryGetNitroxId(GameObject, out NitroxId) public static bool TryGetNitroxId(this GameObject gameObject, out NitroxId nitroxId) Parameters gameObject GameObject nitroxId NitroxId Returns bool TryGetNitroxId(Component, out NitroxId) public static bool TryGetNitroxId(this Component component, out NitroxId nitroxId) Parameters component Component nitroxId NitroxId Returns bool"
  },
  "api/NitroxClient.Helpers.NitroxEntityExtensions.html": {
    "href": "api/NitroxClient.Helpers.NitroxEntityExtensions.html",
    "title": "Class NitroxEntityExtensions | Nitrox",
    "keywords": "Class NitroxEntityExtensions Namespace NitroxClient.Helpers Assembly NitroxClient.dll public static class NitroxEntityExtensions Inheritance object NitroxEntityExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetId(Component) GetId(GameObject) TryGetIdOrWarn(Component, out NitroxId, string, string, int) TryGetIdOrWarn(GameObject, out NitroxId, string, string, int) TryGetNitroxEntity(Component, out NitroxEntity) TryGetNitroxEntity(GameObject, out NitroxEntity) TryGetNitroxId(Component, out NitroxId) TryGetNitroxId(GameObject, out NitroxId)"
  },
  "api/NitroxClient.Helpers.NitroxProtobufSerializer.-ctor.html": {
    "href": "api/NitroxClient.Helpers.NitroxProtobufSerializer.-ctor.html",
    "title": "Constructor NitroxProtobufSerializer | Nitrox",
    "keywords": "Constructor NitroxProtobufSerializer Namespace NitroxClient.Helpers Assembly NitroxClient.dll NitroxProtobufSerializer(params string[]) public NitroxProtobufSerializer(params string[] assemblies) Parameters assemblies string[]"
  },
  "api/NitroxClient.Helpers.NitroxProtobufSerializer.Deserialize.html": {
    "href": "api/NitroxClient.Helpers.NitroxProtobufSerializer.Deserialize.html",
    "title": "Method Deserialize | Nitrox",
    "keywords": "Method Deserialize Namespace NitroxClient.Helpers Assembly NitroxClient.dll Deserialize<T>(Stream) public T Deserialize<T>(Stream stream) Parameters stream Stream Returns T Type Parameters T Deserialize(Stream, object, Type) public object Deserialize(Stream stream, object o, Type t) Parameters stream Stream o object t Type Returns object"
  },
  "api/NitroxClient.Helpers.NitroxProtobufSerializer.Model.html": {
    "href": "api/NitroxClient.Helpers.NitroxProtobufSerializer.Model.html",
    "title": "Property Model | Nitrox",
    "keywords": "Property Model Namespace NitroxClient.Helpers Assembly NitroxClient.dll Model protected RuntimeTypeModel Model { get; } Property Value RuntimeTypeModel"
  },
  "api/NitroxClient.Helpers.NitroxProtobufSerializer.NitroxTypes.html": {
    "href": "api/NitroxClient.Helpers.NitroxProtobufSerializer.NitroxTypes.html",
    "title": "Field NitroxTypes | Nitrox",
    "keywords": "Field NitroxTypes Namespace NitroxClient.Helpers Assembly NitroxClient.dll public readonly Dictionary<Type, int> NitroxTypes Returns Dictionary<Type, int>"
  },
  "api/NitroxClient.Helpers.NitroxProtobufSerializer.Serialize.html": {
    "href": "api/NitroxClient.Helpers.NitroxProtobufSerializer.Serialize.html",
    "title": "Method Serialize | Nitrox",
    "keywords": "Method Serialize Namespace NitroxClient.Helpers Assembly NitroxClient.dll Serialize(Stream, object) public void Serialize(Stream stream, object o) Parameters stream Stream o object"
  },
  "api/NitroxClient.Helpers.NitroxProtobufSerializer.html": {
    "href": "api/NitroxClient.Helpers.NitroxProtobufSerializer.html",
    "title": "Class NitroxProtobufSerializer | Nitrox",
    "keywords": "Class NitroxProtobufSerializer Namespace NitroxClient.Helpers Assembly NitroxClient.dll public class NitroxProtobufSerializer Inheritance object NitroxProtobufSerializer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxProtobufSerializer(params string[]) Fields NitroxTypes model Properties Model Methods Deserialize(Stream, object, Type) Deserialize<T>(Stream) Serialize(Stream, object)"
  },
  "api/NitroxClient.Helpers.NitroxProtobufSerializer.model.html": {
    "href": "api/NitroxClient.Helpers.NitroxProtobufSerializer.model.html",
    "title": "Field model | Nitrox",
    "keywords": "Field model Namespace NitroxClient.Helpers Assembly NitroxClient.dll public readonly RuntimeTypeModel model Returns RuntimeTypeModel"
  },
  "api/NitroxClient.Helpers.ThrottledPacketSender.-ctor.html": {
    "href": "api/NitroxClient.Helpers.ThrottledPacketSender.-ctor.html",
    "title": "Constructor ThrottledPacketSender | Nitrox",
    "keywords": "Constructor ThrottledPacketSender Namespace NitroxClient.Helpers Assembly NitroxClient.dll ThrottledPacketSender(IPacketSender) public ThrottledPacketSender(IPacketSender packetSender) Parameters packetSender IPacketSender"
  },
  "api/NitroxClient.Helpers.ThrottledPacketSender.RemovePendingPackets.html": {
    "href": "api/NitroxClient.Helpers.ThrottledPacketSender.RemovePendingPackets.html",
    "title": "Method RemovePendingPackets | Nitrox",
    "keywords": "Method RemovePendingPackets Namespace NitroxClient.Helpers Assembly NitroxClient.dll RemovePendingPackets(object) public bool RemovePendingPackets(object dedupeKey) Parameters dedupeKey object Returns bool"
  },
  "api/NitroxClient.Helpers.ThrottledPacketSender.SendThrottled.html": {
    "href": "api/NitroxClient.Helpers.ThrottledPacketSender.SendThrottled.html",
    "title": "Method SendThrottled | Nitrox",
    "keywords": "Method SendThrottled Namespace NitroxClient.Helpers Assembly NitroxClient.dll SendThrottled<T>(T, Func<T, object>, float) public bool SendThrottled<T>(T packet, Func<T, object> dedupeMethod, float throttleTime = 0.2) where T : Packet Parameters packet T dedupeMethod Func<T, object> throttleTime float Returns bool Type Parameters T"
  },
  "api/NitroxClient.Helpers.ThrottledPacketSender.Update.html": {
    "href": "api/NitroxClient.Helpers.ThrottledPacketSender.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxClient.Helpers Assembly NitroxClient.dll Update() public void Update()"
  },
  "api/NitroxClient.Helpers.ThrottledPacketSender.html": {
    "href": "api/NitroxClient.Helpers.ThrottledPacketSender.html",
    "title": "Class ThrottledPacketSender | Nitrox",
    "keywords": "Class ThrottledPacketSender Namespace NitroxClient.Helpers Assembly NitroxClient.dll public class ThrottledPacketSender Inheritance object ThrottledPacketSender Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ThrottledPacketSender(IPacketSender) Methods RemovePendingPackets(object) SendThrottled<T>(T, Func<T, object>, float) Update()"
  },
  "api/NitroxClient.Helpers.UnityObjectExtensions.Resolve.html": {
    "href": "api/NitroxClient.Helpers.UnityObjectExtensions.Resolve.html",
    "title": "Method Resolve | Nitrox",
    "keywords": "Method Resolve Namespace NitroxClient.Helpers Assembly NitroxClient.dll Resolve<T>(Object, bool) Resolves a type using LocateService<T>(). If the result is not null it will cache and return the same type on future calls. public static T Resolve<T>(this Object _, bool prelifeTime = false) where T : class Parameters _ Object prelifeTime bool Returns T The requested type or null if not available. Type Parameters T Type to get and cache from NitroxServiceLocator Remarks Dependency Injection should be limited to UnityEngine object types as in other cases it should be injected as constructor parameter. This is the reason for having UnityEngine.Object as first parameter."
  },
  "api/NitroxClient.Helpers.UnityObjectExtensions.html": {
    "href": "api/NitroxClient.Helpers.UnityObjectExtensions.html",
    "title": "Class UnityObjectExtensions | Nitrox",
    "keywords": "Class UnityObjectExtensions Namespace NitroxClient.Helpers Assembly NitroxClient.dll public static class UnityObjectExtensions Inheritance object UnityObjectExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Resolve<T>(Object, bool) Resolves a type using LocateService<T>(). If the result is not null it will cache and return the same type on future calls."
  },
  "api/NitroxClient.Helpers.VFXConstructingHelper.EndGracefully.html": {
    "href": "api/NitroxClient.Helpers.VFXConstructingHelper.EndGracefully.html",
    "title": "Method EndGracefully | Nitrox",
    "keywords": "Method EndGracefully Namespace NitroxClient.Helpers Assembly NitroxClient.dll EndGracefully(VFXConstructing) public static void EndGracefully(this VFXConstructing vfxConstructing) Parameters vfxConstructing VFXConstructing"
  },
  "api/NitroxClient.Helpers.VFXConstructingHelper.html": {
    "href": "api/NitroxClient.Helpers.VFXConstructingHelper.html",
    "title": "Class VFXConstructingHelper | Nitrox",
    "keywords": "Class VFXConstructingHelper Namespace NitroxClient.Helpers Assembly NitroxClient.dll public static class VFXConstructingHelper Inheritance object VFXConstructingHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods EndGracefully(VFXConstructing)"
  },
  "api/NitroxClient.Helpers.html": {
    "href": "api/NitroxClient.Helpers.html",
    "title": "Namespace NitroxClient.Helpers | Nitrox",
    "keywords": "Namespace NitroxClient.Helpers Classes NitroxEntityExtensions NitroxProtobufSerializer ThrottledPacketSender UnityObjectExtensions VFXConstructingHelper"
  },
  "api/NitroxClient.Map.VisibleBatches.Add.html": {
    "href": "api/NitroxClient.Map.VisibleBatches.Add.html",
    "title": "Method Add | Nitrox",
    "keywords": "Method Add Namespace NitroxClient.Map Assembly NitroxClient.dll Add(NitroxInt3) public void Add(NitroxInt3 batchId) Parameters batchId NitroxInt3"
  },
  "api/NitroxClient.Map.VisibleBatches.Contains.html": {
    "href": "api/NitroxClient.Map.VisibleBatches.Contains.html",
    "title": "Method Contains | Nitrox",
    "keywords": "Method Contains Namespace NitroxClient.Map Assembly NitroxClient.dll Contains(NitroxInt3) public bool Contains(NitroxInt3 batchId) Parameters batchId NitroxInt3 Returns bool"
  },
  "api/NitroxClient.Map.VisibleBatches.Remove.html": {
    "href": "api/NitroxClient.Map.VisibleBatches.Remove.html",
    "title": "Method Remove | Nitrox",
    "keywords": "Method Remove Namespace NitroxClient.Map Assembly NitroxClient.dll Remove(NitroxInt3) public void Remove(NitroxInt3 batchId) Parameters batchId NitroxInt3"
  },
  "api/NitroxClient.Map.VisibleBatches.html": {
    "href": "api/NitroxClient.Map.VisibleBatches.html",
    "title": "Class VisibleBatches | Nitrox",
    "keywords": "Class VisibleBatches Namespace NitroxClient.Map Assembly NitroxClient.dll public class VisibleBatches Inheritance object VisibleBatches Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Add(NitroxInt3) Contains(NitroxInt3) Remove(NitroxInt3)"
  },
  "api/NitroxClient.Map.VisibleCells.Add.html": {
    "href": "api/NitroxClient.Map.VisibleCells.Add.html",
    "title": "Method Add | Nitrox",
    "keywords": "Method Add Namespace NitroxClient.Map Assembly NitroxClient.dll Add(AbsoluteEntityCell) public void Add(AbsoluteEntityCell cell) Parameters cell AbsoluteEntityCell"
  },
  "api/NitroxClient.Map.VisibleCells.Contains.html": {
    "href": "api/NitroxClient.Map.VisibleCells.Contains.html",
    "title": "Method Contains | Nitrox",
    "keywords": "Method Contains Namespace NitroxClient.Map Assembly NitroxClient.dll Contains(AbsoluteEntityCell) public bool Contains(AbsoluteEntityCell cell) Parameters cell AbsoluteEntityCell Returns bool"
  },
  "api/NitroxClient.Map.VisibleCells.Remove.html": {
    "href": "api/NitroxClient.Map.VisibleCells.Remove.html",
    "title": "Method Remove | Nitrox",
    "keywords": "Method Remove Namespace NitroxClient.Map Assembly NitroxClient.dll Remove(AbsoluteEntityCell) public void Remove(AbsoluteEntityCell cell) Parameters cell AbsoluteEntityCell"
  },
  "api/NitroxClient.Map.VisibleCells.html": {
    "href": "api/NitroxClient.Map.VisibleCells.html",
    "title": "Class VisibleCells | Nitrox",
    "keywords": "Class VisibleCells Namespace NitroxClient.Map Assembly NitroxClient.dll public class VisibleCells Inheritance object VisibleCells Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Add(AbsoluteEntityCell) Contains(AbsoluteEntityCell) Remove(AbsoluteEntityCell)"
  },
  "api/NitroxClient.Map.html": {
    "href": "api/NitroxClient.Map.html",
    "title": "Namespace NitroxClient.Map | Nitrox",
    "keywords": "Namespace NitroxClient.Map Classes VisibleBatches VisibleCells"
  },
  "api/NitroxClient.MonoBehaviours.AnimChangeState.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimChangeState.html",
    "title": "Enum AnimChangeState | Nitrox",
    "keywords": "Enum AnimChangeState Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public enum AnimChangeState Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields OFF = 0 ON = 1 UNSET = 2"
  },
  "api/NitroxClient.MonoBehaviours.AnimChangeType.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimChangeType.html",
    "title": "Enum AnimChangeType | Nitrox",
    "keywords": "Enum AnimChangeType Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public enum AnimChangeType Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields BENCH = 1 UNDERWATER = 0"
  },
  "api/NitroxClient.MonoBehaviours.AnimationController.AimingRotation.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationController.AimingRotation.html",
    "title": "Property AimingRotation | Nitrox",
    "keywords": "Property AimingRotation Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll AimingRotation public Quaternion AimingRotation { get; set; } Property Value Quaternion"
  },
  "api/NitroxClient.MonoBehaviours.AnimationController.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationController.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() public void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.AnimationController.BodyRotation.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationController.BodyRotation.html",
    "title": "Property BodyRotation | Nitrox",
    "keywords": "Property BodyRotation Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll BodyRotation public Quaternion BodyRotation { get; set; } Property Value Quaternion"
  },
  "api/NitroxClient.MonoBehaviours.AnimationController.FixedUpdate.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationController.FixedUpdate.html",
    "title": "Method FixedUpdate | Nitrox",
    "keywords": "Method FixedUpdate Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll FixedUpdate() public void FixedUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.AnimationController.Item.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationController.Item.html",
    "title": "Property this | Nitrox",
    "keywords": "Property this Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll this[string] public bool this[string name] { get; set; } Parameters name string Property Value bool"
  },
  "api/NitroxClient.MonoBehaviours.AnimationController.UpdatePlayerAnimations.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationController.UpdatePlayerAnimations.html",
    "title": "Property UpdatePlayerAnimations | Nitrox",
    "keywords": "Property UpdatePlayerAnimations Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll UpdatePlayerAnimations public bool UpdatePlayerAnimations { get; set; } Property Value bool"
  },
  "api/NitroxClient.MonoBehaviours.AnimationController.Velocity.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationController.Velocity.html",
    "title": "Property Velocity | Nitrox",
    "keywords": "Property Velocity Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Velocity public Vector3 Velocity { get; set; } Property Value Vector3"
  },
  "api/NitroxClient.MonoBehaviours.AnimationController.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationController.html",
    "title": "Class AnimationController | Nitrox",
    "keywords": "Class AnimationController Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class AnimationController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AnimationController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Properties AimingRotation BodyRotation this[string] UpdatePlayerAnimations Velocity Methods Awake() FixedUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.AnimationSender.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationSender.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() public void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.AnimationSender.Update.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationSender.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Update() public void Update()"
  },
  "api/NitroxClient.MonoBehaviours.AnimationSender.html": {
    "href": "api/NitroxClient.MonoBehaviours.AnimationSender.html",
    "title": "Class AnimationSender | Nitrox",
    "keywords": "Class AnimationSender Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class AnimationSender : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AnimationSender Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods Awake() Update()"
  },
  "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.InitializeRPInGame.html": {
    "href": "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.InitializeRPInGame.html",
    "title": "Method InitializeRPInGame | Nitrox",
    "keywords": "Method InitializeRPInGame Namespace NitroxClient.MonoBehaviours.Discord Assembly NitroxClient.dll InitializeRPInGame(string, int, int) public static void InitializeRPInGame(string username, int playerCount, int maxConnections) Parameters username string playerCount int maxConnections int"
  },
  "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.InitializeRPMenu.html": {
    "href": "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.InitializeRPMenu.html",
    "title": "Method InitializeRPMenu | Nitrox",
    "keywords": "Method InitializeRPMenu Namespace NitroxClient.MonoBehaviours.Discord Assembly NitroxClient.dll InitializeRPMenu() public static void InitializeRPMenu()"
  },
  "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.RespondJoinRequest.html": {
    "href": "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.RespondJoinRequest.html",
    "title": "Method RespondJoinRequest | Nitrox",
    "keywords": "Method RespondJoinRequest Namespace NitroxClient.MonoBehaviours.Discord Assembly NitroxClient.dll RespondJoinRequest(long, ActivityJoinRequestReply) public static void RespondJoinRequest(long userID, ActivityJoinRequestReply reply) Parameters userID long reply ActivityJoinRequestReply"
  },
  "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.UpdateIpPort.html": {
    "href": "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.UpdateIpPort.html",
    "title": "Method UpdateIpPort | Nitrox",
    "keywords": "Method UpdateIpPort Namespace NitroxClient.MonoBehaviours.Discord Assembly NitroxClient.dll UpdateIpPort(string) public static void UpdateIpPort(string ipPort) Parameters ipPort string"
  },
  "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.UpdatePartySize.html": {
    "href": "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.UpdatePartySize.html",
    "title": "Method UpdatePartySize | Nitrox",
    "keywords": "Method UpdatePartySize Namespace NitroxClient.MonoBehaviours.Discord Assembly NitroxClient.dll UpdatePartySize(int) public static void UpdatePartySize(int size) Parameters size int"
  },
  "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.html": {
    "href": "api/NitroxClient.MonoBehaviours.Discord.DiscordClient.html",
    "title": "Class DiscordClient | Nitrox",
    "keywords": "Class DiscordClient Namespace NitroxClient.MonoBehaviours.Discord Assembly NitroxClient.dll public class DiscordClient : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DiscordClient Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods InitializeRPInGame(string, int, int) InitializeRPMenu() RespondJoinRequest(long, ActivityJoinRequestReply) UpdateIpPort(string) UpdatePartySize(int)"
  },
  "api/NitroxClient.MonoBehaviours.Discord.DiscordJoinRequestGui.Select.html": {
    "href": "api/NitroxClient.MonoBehaviours.Discord.DiscordJoinRequestGui.Select.html",
    "title": "Method Select | Nitrox",
    "keywords": "Method Select Namespace NitroxClient.MonoBehaviours.Discord Assembly NitroxClient.dll Select() public static void Select()"
  },
  "api/NitroxClient.MonoBehaviours.Discord.DiscordJoinRequestGui.SpawnGui.html": {
    "href": "api/NitroxClient.MonoBehaviours.Discord.DiscordJoinRequestGui.SpawnGui.html",
    "title": "Method SpawnGui | Nitrox",
    "keywords": "Method SpawnGui Namespace NitroxClient.MonoBehaviours.Discord Assembly NitroxClient.dll SpawnGui(User) public static IEnumerator SpawnGui(User requestingUser) Parameters requestingUser User Returns IEnumerator"
  },
  "api/NitroxClient.MonoBehaviours.Discord.DiscordJoinRequestGui.html": {
    "href": "api/NitroxClient.MonoBehaviours.Discord.DiscordJoinRequestGui.html",
    "title": "Class DiscordJoinRequestGui | Nitrox",
    "keywords": "Class DiscordJoinRequestGui Namespace NitroxClient.MonoBehaviours.Discord Assembly NitroxClient.dll public class DiscordJoinRequestGui : uGUI_InputGroup Inheritance object Object Component Behaviour MonoBehaviour uGUI_InputGroup DiscordJoinRequestGui Inherited Members uGUI_InputGroup._inputDummy uGUI_InputGroup.cursorLockCached uGUI_InputGroup.<selected>k__BackingField uGUI_InputGroup.acceptedMouseButtonsForActivation uGUI_InputGroup.Awake() uGUI_InputGroup.Update() uGUI_InputGroup.OnDisable() uGUI_InputGroup.Select(bool) uGUI_InputGroup.Deselect() uGUI_InputGroup.Deselect(uGUI_InputGroup) uGUI_InputGroup.OnSelect(bool) uGUI_InputGroup.OnDeselect() uGUI_InputGroup.OnReselect(bool) uGUI_InputGroup.Raycast(PointerEventData, List<RaycastResult>) uGUI_InputGroup.InterceptInput(bool) uGUI_InputGroup.LockMovement(bool) uGUI_InputGroup.IsAcceptedToOpenWithButton(PointerEventData.InputButton) uGUI_InputGroup.inputDummy uGUI_InputGroup.selected uGUI_InputGroup.focused MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods Select() SpawnGui(User)"
  },
  "api/NitroxClient.MonoBehaviours.Discord.html": {
    "href": "api/NitroxClient.MonoBehaviours.Discord.html",
    "title": "Namespace NitroxClient.MonoBehaviours.Discord | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours.Discord Classes DiscordClient DiscordJoinRequestGui"
  },
  "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() public void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.BROADCAST_INTERVAL.html": {
    "href": "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.BROADCAST_INTERVAL.html",
    "title": "Field BROADCAST_INTERVAL | Nitrox",
    "keywords": "Field BROADCAST_INTERVAL Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public static readonly float BROADCAST_INTERVAL Returns float"
  },
  "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.RegisterSplineMovementChange.html": {
    "href": "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.RegisterSplineMovementChange.html",
    "title": "Method RegisterSplineMovementChange | Nitrox",
    "keywords": "Method RegisterSplineMovementChange Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll RegisterSplineMovementChange(NitroxId, GameObject, Vector3, Vector3, float) public static void RegisterSplineMovementChange(NitroxId id, GameObject gameObject, Vector3 targetPos, Vector3 targetDir, float velocity) Parameters id NitroxId gameObject GameObject targetPos Vector3 targetDir Vector3 velocity float"
  },
  "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.StopWatchingEntity.html": {
    "href": "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.StopWatchingEntity.html",
    "title": "Method StopWatchingEntity | Nitrox",
    "keywords": "Method StopWatchingEntity Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll StopWatchingEntity(NitroxId) public static void StopWatchingEntity(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.Update.html": {
    "href": "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Update() public void Update()"
  },
  "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.WatchEntity.html": {
    "href": "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.WatchEntity.html",
    "title": "Method WatchEntity | Nitrox",
    "keywords": "Method WatchEntity Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll WatchEntity(NitroxId) public static void WatchEntity(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.html": {
    "href": "api/NitroxClient.MonoBehaviours.EntityPositionBroadcaster.html",
    "title": "Class EntityPositionBroadcaster | Nitrox",
    "keywords": "Class EntityPositionBroadcaster Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class EntityPositionBroadcaster : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityPositionBroadcaster Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields BROADCAST_INTERVAL Methods Awake() RegisterSplineMovementChange(NitroxId, GameObject, Vector3, Vector3, float) StopWatchingEntity(NitroxId) Update() WatchEntity(NitroxId)"
  },
  "api/NitroxClient.MonoBehaviours.FMODEmitterController.AddEmitter.html": {
    "href": "api/NitroxClient.MonoBehaviours.FMODEmitterController.AddEmitter.html",
    "title": "Method AddEmitter | Nitrox",
    "keywords": "Method AddEmitter Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll AddEmitter(string, FMOD_CustomEmitter, float) public void AddEmitter(string path, FMOD_CustomEmitter customEmitter, float radius) Parameters path string customEmitter FMOD_CustomEmitter radius float AddEmitter(string, FMOD_CustomLoopingEmitter, float) public void AddEmitter(string path, FMOD_CustomLoopingEmitter loopingEmitter, float radius) Parameters path string loopingEmitter FMOD_CustomLoopingEmitter radius float AddEmitter(string, FMOD_StudioEventEmitter, float) public void AddEmitter(string path, FMOD_StudioEventEmitter studioEmitter, float radius) Parameters path string studioEmitter FMOD_StudioEventEmitter radius float"
  },
  "api/NitroxClient.MonoBehaviours.FMODEmitterController.ParamCustomEmitter.html": {
    "href": "api/NitroxClient.MonoBehaviours.FMODEmitterController.ParamCustomEmitter.html",
    "title": "Method ParamCustomEmitter | Nitrox",
    "keywords": "Method ParamCustomEmitter Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll ParamCustomEmitter(string, string, float) public void ParamCustomEmitter(string path, string paramString, float value) Parameters path string paramString string value float"
  },
  "api/NitroxClient.MonoBehaviours.FMODEmitterController.PlayCustomEmitter.html": {
    "href": "api/NitroxClient.MonoBehaviours.FMODEmitterController.PlayCustomEmitter.html",
    "title": "Method PlayCustomEmitter | Nitrox",
    "keywords": "Method PlayCustomEmitter Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll PlayCustomEmitter(string) public void PlayCustomEmitter(string path) Parameters path string"
  },
  "api/NitroxClient.MonoBehaviours.FMODEmitterController.PlayCustomLoopingEmitter.html": {
    "href": "api/NitroxClient.MonoBehaviours.FMODEmitterController.PlayCustomLoopingEmitter.html",
    "title": "Method PlayCustomLoopingEmitter | Nitrox",
    "keywords": "Method PlayCustomLoopingEmitter Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll PlayCustomLoopingEmitter(string) public void PlayCustomLoopingEmitter(string path) Parameters path string"
  },
  "api/NitroxClient.MonoBehaviours.FMODEmitterController.PlayStudioEmitter.html": {
    "href": "api/NitroxClient.MonoBehaviours.FMODEmitterController.PlayStudioEmitter.html",
    "title": "Method PlayStudioEmitter | Nitrox",
    "keywords": "Method PlayStudioEmitter Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll PlayStudioEmitter(string) public void PlayStudioEmitter(string path) Parameters path string"
  },
  "api/NitroxClient.MonoBehaviours.FMODEmitterController.StopCustomEmitter.html": {
    "href": "api/NitroxClient.MonoBehaviours.FMODEmitterController.StopCustomEmitter.html",
    "title": "Method StopCustomEmitter | Nitrox",
    "keywords": "Method StopCustomEmitter Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll StopCustomEmitter(string) public void StopCustomEmitter(string path) Parameters path string"
  },
  "api/NitroxClient.MonoBehaviours.FMODEmitterController.StopStudioEmitter.html": {
    "href": "api/NitroxClient.MonoBehaviours.FMODEmitterController.StopStudioEmitter.html",
    "title": "Method StopStudioEmitter | Nitrox",
    "keywords": "Method StopStudioEmitter Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll StopStudioEmitter(string, bool) public void StopStudioEmitter(string path, bool allowFadeout) Parameters path string allowFadeout bool"
  },
  "api/NitroxClient.MonoBehaviours.FMODEmitterController.html": {
    "href": "api/NitroxClient.MonoBehaviours.FMODEmitterController.html",
    "title": "Class FMODEmitterController | Nitrox",
    "keywords": "Class FMODEmitterController Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class FMODEmitterController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FMODEmitterController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods AddEmitter(string, FMOD_CustomEmitter, float) AddEmitter(string, FMOD_CustomLoopingEmitter, float) AddEmitter(string, FMOD_StudioEventEmitter, float) ParamCustomEmitter(string, string, float) PlayCustomEmitter(string) PlayCustomLoopingEmitter(string) PlayStudioEmitter(string) StopCustomEmitter(string) StopStudioEmitter(string, bool)"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.CHAT_VISIBILITY_TIME_LENGTH.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.CHAT_VISIBILITY_TIME_LENGTH.html",
    "title": "Field CHAT_VISIBILITY_TIME_LENGTH | Nitrox",
    "keywords": "Field CHAT_VISIBILITY_TIME_LENGTH Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll public const float CHAT_VISIBILITY_TIME_LENGTH = 6 Returns float"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.Hide.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.Hide.html",
    "title": "Method Hide | Nitrox",
    "keywords": "Method Hide Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll Hide() public void Hide()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.InputText.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.InputText.html",
    "title": "Property InputText | Nitrox",
    "keywords": "Property InputText Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll InputText public string InputText { get; set; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.IsReady.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.IsReady.html",
    "title": "Property IsReady | Nitrox",
    "keywords": "Property IsReady Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll IsReady public static bool IsReady { get; } Property Value bool"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.Select.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.Select.html",
    "title": "Method Select | Nitrox",
    "keywords": "Method Select Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll Select() public void Select()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.SetupChatComponents.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.SetupChatComponents.html",
    "title": "Method SetupChatComponents | Nitrox",
    "keywords": "Method SetupChatComponents Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll SetupChatComponents() public IEnumerator SetupChatComponents() Returns IEnumerator"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.Show.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.Show.html",
    "title": "Method Show | Nitrox",
    "keywords": "Method Show Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll Show() public void Show()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.WriteLogEntry.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.WriteLogEntry.html",
    "title": "Method WriteLogEntry | Nitrox",
    "keywords": "Method WriteLogEntry Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll WriteLogEntry(string, string, Color) public void WriteLogEntry(string playerName, string message, Color color) Parameters playerName string message string color Color"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChat.html",
    "title": "Class PlayerChat | Nitrox",
    "keywords": "Class PlayerChat Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll public class PlayerChat : uGUI_InputGroup Inheritance object Object Component Behaviour MonoBehaviour uGUI_InputGroup PlayerChat Inherited Members uGUI_InputGroup._inputDummy uGUI_InputGroup.cursorLockCached uGUI_InputGroup.<selected>k__BackingField uGUI_InputGroup.acceptedMouseButtonsForActivation uGUI_InputGroup.Awake() uGUI_InputGroup.Update() uGUI_InputGroup.OnDisable() uGUI_InputGroup.Select(bool) uGUI_InputGroup.Deselect() uGUI_InputGroup.Deselect(uGUI_InputGroup) uGUI_InputGroup.OnSelect(bool) uGUI_InputGroup.OnDeselect() uGUI_InputGroup.OnReselect(bool) uGUI_InputGroup.Raycast(PointerEventData, List<RaycastResult>) uGUI_InputGroup.InterceptInput(bool) uGUI_InputGroup.LockMovement(bool) uGUI_InputGroup.IsAcceptedToOpenWithButton(PointerEventData.InputButton) uGUI_InputGroup.inputDummy uGUI_InputGroup.selected uGUI_InputGroup.focused MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields CHAT_VISIBILITY_TIME_LENGTH Properties InputText IsReady Methods Hide() Select() SetupChatComponents() Show() WriteLogEntry(string, string, Color)"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.FreezeTime.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.FreezeTime.html",
    "title": "Field FreezeTime | Nitrox",
    "keywords": "Field FreezeTime Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll public static bool FreezeTime Returns bool"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.InputField.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.InputField.html",
    "title": "Field InputField | Nitrox",
    "keywords": "Field InputField Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll public InputField InputField Returns InputField"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.OnDeselect.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.OnDeselect.html",
    "title": "Method OnDeselect | Nitrox",
    "keywords": "Method OnDeselect Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll OnDeselect(BaseEventData) public void OnDeselect(BaseEventData eventData) Parameters eventData BaseEventData"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.OnSelect.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.OnSelect.html",
    "title": "Method OnSelect | Nitrox",
    "keywords": "Method OnSelect Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll OnSelect(BaseEventData) public void OnSelect(BaseEventData eventData) Parameters eventData BaseEventData"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.ResetTimer.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.ResetTimer.html",
    "title": "Method ResetTimer | Nitrox",
    "keywords": "Method ResetTimer Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll ResetTimer() public static void ResetTimer()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatInputField.html",
    "title": "Class PlayerChatInputField | Nitrox",
    "keywords": "Class PlayerChatInputField Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll public class PlayerChatInputField : MonoBehaviour, ISelectHandler, IDeselectHandler, IEventSystemHandler Inheritance object Object Component Behaviour MonoBehaviour PlayerChatInputField Implements ISelectHandler IDeselectHandler IEventSystemHandler Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields FreezeTime InputField Methods OnDeselect(BaseEventData) OnSelect(BaseEventData) ResetTimer()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatLogItem.ApplyOnPrefab.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatLogItem.ApplyOnPrefab.html",
    "title": "Method ApplyOnPrefab | Nitrox",
    "keywords": "Method ApplyOnPrefab Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll ApplyOnPrefab(ChatLogEntry) public void ApplyOnPrefab(ChatLogEntry chatLogEntry) Parameters chatLogEntry ChatLogEntry"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatLogItem.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatLogItem.html",
    "title": "Class PlayerChatLogItem | Nitrox",
    "keywords": "Class PlayerChatLogItem Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll public class PlayerChatLogItem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerChatLogItem Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods ApplyOnPrefab(ChatLogEntry)"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatPinButton.OnPointerDown.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatPinButton.OnPointerDown.html",
    "title": "Method OnPointerDown | Nitrox",
    "keywords": "Method OnPointerDown Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll OnPointerDown(PointerEventData) public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatPinButton.OnPointerUp.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatPinButton.OnPointerUp.html",
    "title": "Method OnPointerUp | Nitrox",
    "keywords": "Method OnPointerUp Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll OnPointerUp(PointerEventData) public void OnPointerUp(PointerEventData eventData) Parameters eventData PointerEventData"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatPinButton.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.PlayerChatPinButton.html",
    "title": "Class PlayerChatPinButton | Nitrox",
    "keywords": "Class PlayerChatPinButton Namespace NitroxClient.MonoBehaviours.Gui.Chat Assembly NitroxClient.dll public class PlayerChatPinButton : MonoBehaviour, IPointerDownHandler, IPointerUpHandler, IEventSystemHandler Inheritance object Object Component Behaviour MonoBehaviour PlayerChatPinButton Implements IPointerDownHandler IPointerUpHandler IEventSystemHandler Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods OnPointerDown(PointerEventData) OnPointerUp(PointerEventData)"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Chat.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Chat.html",
    "title": "Namespace NitroxClient.MonoBehaviours.Gui.Chat | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours.Gui.Chat Classes PlayerChat PlayerChatInputField PlayerChatLogItem PlayerChatPinButton"
  },
  "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.CreateForPlayer.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.CreateForPlayer.html",
    "title": "Method CreateForPlayer | Nitrox",
    "keywords": "Method CreateForPlayer Namespace NitroxClient.MonoBehaviours.Gui.HUD Assembly NitroxClient.dll CreateForPlayer(RemotePlayer) Creates a player vitals UI elements for the player id. public static RemotePlayerVitals CreateForPlayer(RemotePlayer remotePlayer) Parameters remotePlayer RemotePlayer Returns RemotePlayerVitals"
  },
  "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.LateUpdate.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.LateUpdate.html",
    "title": "Method LateUpdate | Nitrox",
    "keywords": "Method LateUpdate Namespace NitroxClient.MonoBehaviours.Gui.HUD Assembly NitroxClient.dll LateUpdate() public void LateUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.SetFood.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.SetFood.html",
    "title": "Method SetFood | Nitrox",
    "keywords": "Method SetFood Namespace NitroxClient.MonoBehaviours.Gui.HUD Assembly NitroxClient.dll SetFood(float) public void SetFood(float food) Parameters food float"
  },
  "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.SetHealth.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.SetHealth.html",
    "title": "Method SetHealth | Nitrox",
    "keywords": "Method SetHealth Namespace NitroxClient.MonoBehaviours.Gui.HUD Assembly NitroxClient.dll SetHealth(float) public void SetHealth(float health) Parameters health float"
  },
  "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.SetOxygen.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.SetOxygen.html",
    "title": "Method SetOxygen | Nitrox",
    "keywords": "Method SetOxygen Namespace NitroxClient.MonoBehaviours.Gui.HUD Assembly NitroxClient.dll SetOxygen(float, float) public void SetOxygen(float oxygen, float maxOxygen) Parameters oxygen float maxOxygen float"
  },
  "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.SetWater.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.SetWater.html",
    "title": "Method SetWater | Nitrox",
    "keywords": "Method SetWater Namespace NitroxClient.MonoBehaviours.Gui.HUD Assembly NitroxClient.dll SetWater(float) public void SetWater(float water) Parameters water float"
  },
  "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.HUD.RemotePlayerVitals.html",
    "title": "Class RemotePlayerVitals | Nitrox",
    "keywords": "Class RemotePlayerVitals Namespace NitroxClient.MonoBehaviours.Gui.HUD Assembly NitroxClient.dll public class RemotePlayerVitals : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RemotePlayerVitals Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods CreateForPlayer(RemotePlayer) Creates a player vitals UI elements for the player id. LateUpdate() SetFood(float) SetHealth(float) SetOxygen(float, float) SetWater(float)"
  },
  "api/NitroxClient.MonoBehaviours.Gui.HUD.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.HUD.html",
    "title": "Namespace NitroxClient.MonoBehaviours.Gui.HUD | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours.Gui.HUD Classes RemotePlayerVitals"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.-ctor.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.-ctor.html",
    "title": "Constructor ConfirmModal | Nitrox",
    "keywords": "Constructor ConfirmModal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll ConfirmModal() public ConfirmModal()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.ClickNo.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.ClickNo.html",
    "title": "Method ClickNo | Nitrox",
    "keywords": "Method ClickNo Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll ClickNo() public override void ClickNo()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.ClickYes.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.ClickYes.html",
    "title": "Method ClickYes | Nitrox",
    "keywords": "Method ClickYes Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll ClickYes() public override void ClickYes()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.OnDeselect.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.OnDeselect.html",
    "title": "Method OnDeselect | Nitrox",
    "keywords": "Method OnDeselect Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll OnDeselect() Called when this modal is deselected (only when pressing outside of the modal) public override void OnDeselect()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.Show.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.Show.html",
    "title": "Method Show | Nitrox",
    "keywords": "Method Show Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Show(string, Action) public void Show(string actionText, Action yesCallback) Parameters actionText string yesCallback Action"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.ConfirmModal.html",
    "title": "Class ConfirmModal | Nitrox",
    "keywords": "Class ConfirmModal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll public class ConfirmModal : Modal Inheritance object Modal ConfirmModal Inherited Members Modal.Modals Modal.CurrentModal Modal.SubWindowName Modal.ModalText Modal.IsAvoidable Modal.HideNoButton Modal.YesButtonText Modal.NoButtonText Modal.FreezeGame Modal.Transparency Modal.IsAvoidableBypass Modal.Show() Modal.Hide() Modal.Get<T>() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ConfirmModal() Methods ClickNo() ClickYes() OnDeselect() Called when this modal is deselected (only when pressing outside of the modal) Show(string, Action)"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.KickedModal.-ctor.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.KickedModal.-ctor.html",
    "title": "Constructor KickedModal | Nitrox",
    "keywords": "Constructor KickedModal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll KickedModal() public KickedModal()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.KickedModal.ClickYes.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.KickedModal.ClickYes.html",
    "title": "Method ClickYes | Nitrox",
    "keywords": "Method ClickYes Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll ClickYes() public override void ClickYes()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.KickedModal.Show.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.KickedModal.Show.html",
    "title": "Method Show | Nitrox",
    "keywords": "Method Show Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Show(string) public void Show(string reason) Parameters reason string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.KickedModal.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.KickedModal.html",
    "title": "Class KickedModal | Nitrox",
    "keywords": "Class KickedModal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll public class KickedModal : Modal Inheritance object Modal KickedModal Inherited Members Modal.Modals Modal.CurrentModal Modal.SubWindowName Modal.ModalText Modal.IsAvoidable Modal.HideNoButton Modal.YesButtonText Modal.NoButtonText Modal.FreezeGame Modal.Transparency Modal.IsAvoidableBypass Modal.Show() Modal.Hide() Modal.OnDeselect() Modal.ClickNo() Modal.Get<T>() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KickedModal() Methods ClickYes() Show(string)"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.LostConnectionModal.-ctor.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.LostConnectionModal.-ctor.html",
    "title": "Constructor LostConnectionModal | Nitrox",
    "keywords": "Constructor LostConnectionModal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll LostConnectionModal() public LostConnectionModal()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.LostConnectionModal.ClickYes.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.LostConnectionModal.ClickYes.html",
    "title": "Method ClickYes | Nitrox",
    "keywords": "Method ClickYes Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll ClickYes() public override void ClickYes()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.LostConnectionModal.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.LostConnectionModal.html",
    "title": "Class LostConnectionModal | Nitrox",
    "keywords": "Class LostConnectionModal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Extends the IngameMenu with a disconnect popup. public class LostConnectionModal : Modal Inheritance object Modal LostConnectionModal Inherited Members Modal.Modals Modal.CurrentModal Modal.SubWindowName Modal.ModalText Modal.IsAvoidable Modal.HideNoButton Modal.YesButtonText Modal.NoButtonText Modal.FreezeGame Modal.Transparency Modal.IsAvoidableBypass Modal.Show() Modal.Hide() Modal.OnDeselect() Modal.ClickNo() Modal.Get<T>() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LostConnectionModal() Methods ClickYes()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.-ctor.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.-ctor.html",
    "title": "Constructor Modal | Nitrox",
    "keywords": "Constructor Modal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Modal(string, bool, string, string, bool, bool, float) public Modal(string yesButtonText = \"YES\", bool hideNoButton = true, string noButtonText = \"NO\", string modalText = \"\", bool isAvoidable = false, bool freezeGame = false, float transparency = 0.392) Parameters yesButtonText string hideNoButton bool noButtonText string modalText string isAvoidable bool freezeGame bool transparency float"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.ClickNo.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.ClickNo.html",
    "title": "Method ClickNo | Nitrox",
    "keywords": "Method ClickNo Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll ClickNo() public virtual void ClickNo()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.ClickYes.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.ClickYes.html",
    "title": "Method ClickYes | Nitrox",
    "keywords": "Method ClickYes Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll ClickYes() public virtual void ClickYes()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.CurrentModal.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.CurrentModal.html",
    "title": "Field CurrentModal | Nitrox",
    "keywords": "Field CurrentModal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Current modal that is visible on the screen public static Modal CurrentModal Returns Modal"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.FreezeGame.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.FreezeGame.html",
    "title": "Property FreezeGame | Nitrox",
    "keywords": "Property FreezeGame Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll FreezeGame public bool FreezeGame { get; init; } Property Value bool"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.Get.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.Get.html",
    "title": "Method Get | Nitrox",
    "keywords": "Method Get Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Get<T>() Lets you get any existing Modal by its Type public static T Get<T>() where T : Modal Returns T An existing instance of the modal if it already exists, else, a new one Type Parameters T The type of the modal to get"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.Hide.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.Hide.html",
    "title": "Method Hide | Nitrox",
    "keywords": "Method Hide Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Hide() Removes the Modal from the screen public void Hide()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.HideNoButton.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.HideNoButton.html",
    "title": "Property HideNoButton | Nitrox",
    "keywords": "Property HideNoButton Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll HideNoButton public bool HideNoButton { get; init; } Property Value bool"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.IsAvoidable.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.IsAvoidable.html",
    "title": "Property IsAvoidable | Nitrox",
    "keywords": "Property IsAvoidable Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll IsAvoidable Makes it possible to dismiss the modal by clicking outside of the modal or pressing escape (default false). public bool IsAvoidable { get; init; } Property Value bool"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.IsAvoidableBypass.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.IsAvoidableBypass.html",
    "title": "Field IsAvoidableBypass | Nitrox",
    "keywords": "Field IsAvoidableBypass Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll public bool IsAvoidableBypass Returns bool"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.ModalText.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.ModalText.html",
    "title": "Property ModalText | Nitrox",
    "keywords": "Property ModalText Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll ModalText public string ModalText { get; set; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.Modals.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.Modals.html",
    "title": "Field Modals | Nitrox",
    "keywords": "Field Modals Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Get a Modal by its type at any time (static) public static Dictionary<Type, Modal> Modals Returns Dictionary<Type, Modal>"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.NoButtonText.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.NoButtonText.html",
    "title": "Property NoButtonText | Nitrox",
    "keywords": "Property NoButtonText Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll NoButtonText public string NoButtonText { get; init; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.OnDeselect.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.OnDeselect.html",
    "title": "Method OnDeselect | Nitrox",
    "keywords": "Method OnDeselect Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll OnDeselect() Called when this modal is deselected (only when pressing outside of the modal) public virtual void OnDeselect()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.Show.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.Show.html",
    "title": "Method Show | Nitrox",
    "keywords": "Method Show Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Show() Adds the Modal to the screen public void Show()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.SubWindowName.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.SubWindowName.html",
    "title": "Property SubWindowName | Nitrox",
    "keywords": "Property SubWindowName Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll SubWindowName public string SubWindowName { get; init; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.Transparency.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.Transparency.html",
    "title": "Property Transparency | Nitrox",
    "keywords": "Property Transparency Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Transparency public float Transparency { get; init; } Property Value float"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.YesButtonText.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.YesButtonText.html",
    "title": "Property YesButtonText | Nitrox",
    "keywords": "Property YesButtonText Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll YesButtonText public string YesButtonText { get; init; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.Modal.html",
    "title": "Class Modal | Nitrox",
    "keywords": "Class Modal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll Base class for Modal components, which are dialog boxes that appear in the middle of the screen public abstract class Modal Inheritance object Modal Derived ConfirmModal KickedModal LostConnectionModal ServerStoppedModal Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Modal(string, bool, string, string, bool, bool, float) Fields CurrentModal Current modal that is visible on the screen IsAvoidableBypass Modals Get a Modal by its type at any time (static) Properties FreezeGame HideNoButton IsAvoidable Makes it possible to dismiss the modal by clicking outside of the modal or pressing escape (default false). ModalText NoButtonText SubWindowName Transparency YesButtonText Methods ClickNo() ClickYes() Get<T>() Lets you get any existing Modal by its Type Hide() Removes the Modal from the screen OnDeselect() Called when this modal is deselected (only when pressing outside of the modal) Show() Adds the Modal to the screen"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.ServerStoppedModal.-ctor.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.ServerStoppedModal.-ctor.html",
    "title": "Constructor ServerStoppedModal | Nitrox",
    "keywords": "Constructor ServerStoppedModal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll ServerStoppedModal() public ServerStoppedModal()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.ServerStoppedModal.ClickYes.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.ServerStoppedModal.ClickYes.html",
    "title": "Method ClickYes | Nitrox",
    "keywords": "Method ClickYes Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll ClickYes() public override void ClickYes()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.ServerStoppedModal.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.ServerStoppedModal.html",
    "title": "Class ServerStoppedModal | Nitrox",
    "keywords": "Class ServerStoppedModal Namespace NitroxClient.MonoBehaviours.Gui.InGame Assembly NitroxClient.dll public class ServerStoppedModal : Modal Inheritance object Modal ServerStoppedModal Inherited Members Modal.Modals Modal.CurrentModal Modal.SubWindowName Modal.ModalText Modal.IsAvoidable Modal.HideNoButton Modal.YesButtonText Modal.NoButtonText Modal.FreezeGame Modal.Transparency Modal.IsAvoidableBypass Modal.Show() Modal.Hide() Modal.OnDeselect() Modal.ClickNo() Modal.Get<T>() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerStoppedModal() Methods ClickYes()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.InGame.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.InGame.html",
    "title": "Namespace NitroxClient.MonoBehaviours.Gui.InGame | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours.Gui.InGame Classes ConfirmModal KickedModal LostConnectionModal Extends the IngameMenu with a disconnect popup. Modal Base class for Modal components, which are dialog boxes that appear in the middle of the screen ServerStoppedModal"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindingManager.-ctor.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindingManager.-ctor.html",
    "title": "Constructor KeyBindingManager | Nitrox",
    "keywords": "Constructor KeyBindingManager Namespace NitroxClient.MonoBehaviours.Gui.Input Assembly NitroxClient.dll KeyBindingManager() public KeyBindingManager()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindingManager.GetHighestKeyBindingValue.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindingManager.GetHighestKeyBindingValue.html",
    "title": "Method GetHighestKeyBindingValue | Nitrox",
    "keywords": "Method GetHighestKeyBindingValue Namespace NitroxClient.MonoBehaviours.Gui.Input Assembly NitroxClient.dll GetHighestKeyBindingValue() public int GetHighestKeyBindingValue() Returns int"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindingManager.KeyboardKeyBindings.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindingManager.KeyboardKeyBindings.html",
    "title": "Property KeyboardKeyBindings | Nitrox",
    "keywords": "Property KeyboardKeyBindings Namespace NitroxClient.MonoBehaviours.Gui.Input Assembly NitroxClient.dll KeyboardKeyBindings public List<KeyBinding> KeyboardKeyBindings { get; } Property Value List<KeyBinding>"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindingManager.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindingManager.html",
    "title": "Class KeyBindingManager | Nitrox",
    "keywords": "Class KeyBindingManager Namespace NitroxClient.MonoBehaviours.Gui.Input Assembly NitroxClient.dll public class KeyBindingManager Inheritance object KeyBindingManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyBindingManager() Properties KeyboardKeyBindings Methods GetHighestKeyBindingValue()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindingValues.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindingValues.html",
    "title": "Enum KeyBindingValues | Nitrox",
    "keywords": "Enum KeyBindingValues Namespace NitroxClient.MonoBehaviours.Gui.Input Assembly NitroxClient.dll Refers the keybinding values used for button creation in the options menu, to a more clear form public enum KeyBindingValues Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields CHAT = 45 FOCUS_DISCORD = 46"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.ChatKeyBindingAction.Execute.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.ChatKeyBindingAction.Execute.html",
    "title": "Method Execute | Nitrox",
    "keywords": "Method Execute Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions Assembly NitroxClient.dll Execute() public override void Execute()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.ChatKeyBindingAction.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.ChatKeyBindingAction.html",
    "title": "Class ChatKeyBindingAction | Nitrox",
    "keywords": "Class ChatKeyBindingAction Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions Assembly NitroxClient.dll public class ChatKeyBindingAction : KeyBindingAction Inheritance object KeyBindingAction ChatKeyBindingAction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Execute()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.DiscordFocusBindingAction.Execute.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.DiscordFocusBindingAction.Execute.html",
    "title": "Method Execute | Nitrox",
    "keywords": "Method Execute Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions Assembly NitroxClient.dll Execute() public override void Execute()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.DiscordFocusBindingAction.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.DiscordFocusBindingAction.html",
    "title": "Class DiscordFocusBindingAction | Nitrox",
    "keywords": "Class DiscordFocusBindingAction Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions Assembly NitroxClient.dll public class DiscordFocusBindingAction : KeyBindingAction Inheritance object KeyBindingAction DiscordFocusBindingAction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Execute()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.KeyBindingAction.Execute.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.KeyBindingAction.Execute.html",
    "title": "Method Execute | Nitrox",
    "keywords": "Method Execute Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions Assembly NitroxClient.dll Execute() public abstract void Execute()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.KeyBindingAction.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.KeyBindingAction.html",
    "title": "Class KeyBindingAction | Nitrox",
    "keywords": "Class KeyBindingAction Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions Assembly NitroxClient.dll public abstract class KeyBindingAction Inheritance object KeyBindingAction Derived ChatKeyBindingAction DiscordFocusBindingAction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Execute()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions.html",
    "title": "Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions Classes ChatKeyBindingAction DiscordFocusBindingAction KeyBindingAction"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.DefaultKeyBinding.-ctor.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.DefaultKeyBinding.-ctor.html",
    "title": "Constructor DefaultKeyBinding | Nitrox",
    "keywords": "Constructor DefaultKeyBinding Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll DefaultKeyBinding(string, BindingSet) public DefaultKeyBinding(string defaultBinding, GameInput.BindingSet defaultBindingSet) Parameters defaultBinding string defaultBindingSet GameInput.BindingSet"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.DefaultKeyBinding.Binding.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.DefaultKeyBinding.Binding.html",
    "title": "Property Binding | Nitrox",
    "keywords": "Property Binding Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll Binding public string Binding { get; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.DefaultKeyBinding.BindingSet.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.DefaultKeyBinding.BindingSet.html",
    "title": "Property BindingSet | Nitrox",
    "keywords": "Property BindingSet Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll BindingSet public GameInput.BindingSet BindingSet { get; } Property Value GameInput.BindingSet"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.DefaultKeyBinding.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.DefaultKeyBinding.html",
    "title": "Class DefaultKeyBinding | Nitrox",
    "keywords": "Class DefaultKeyBinding Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll public class DefaultKeyBinding Inheritance object DefaultKeyBinding Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DefaultKeyBinding(string, BindingSet) Properties Binding BindingSet"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.-ctor.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.-ctor.html",
    "title": "Constructor KeyBinding | Nitrox",
    "keywords": "Constructor KeyBinding Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll KeyBinding(int, string, Device, KeyBindingAction, string, string) public KeyBinding(int keyBindingValue, string buttonLabel, GameInput.Device buttonDevice, KeyBindingAction buttonAction, string primaryKey, string secondaryKey = null) Parameters keyBindingValue int buttonLabel string buttonDevice GameInput.Device buttonAction KeyBindingAction primaryKey string secondaryKey string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.Action.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.Action.html",
    "title": "Property Action | Nitrox",
    "keywords": "Property Action Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll Action public KeyBindingAction Action { get; } Property Value KeyBindingAction"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.Button.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.Button.html",
    "title": "Property Button | Nitrox",
    "keywords": "Property Button Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll Button public GameInput.Button Button { get; } Property Value GameInput.Button"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.Device.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.Device.html",
    "title": "Property Device | Nitrox",
    "keywords": "Property Device Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll Device public GameInput.Device Device { get; } Property Value GameInput.Device"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.Label.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.Label.html",
    "title": "Property Label | Nitrox",
    "keywords": "Property Label Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll Label public string Label { get; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.PrimaryKey.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.PrimaryKey.html",
    "title": "Property PrimaryKey | Nitrox",
    "keywords": "Property PrimaryKey Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll PrimaryKey public string PrimaryKey { get; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.SecondaryKey.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.SecondaryKey.html",
    "title": "Property SecondaryKey | Nitrox",
    "keywords": "Property SecondaryKey Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll SecondaryKey public string SecondaryKey { get; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.KeyBinding.html",
    "title": "Class KeyBinding | Nitrox",
    "keywords": "Class KeyBinding Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Assembly NitroxClient.dll public class KeyBinding Inheritance object KeyBinding Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyBinding(int, string, Device, KeyBindingAction, string, string) Properties Action Button Device Label PrimaryKey SecondaryKey"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.html",
    "title": "Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Namespaces NitroxClient.MonoBehaviours.Gui.Input.KeyBindings.Actions Classes DefaultKeyBinding KeyBinding"
  },
  "api/NitroxClient.MonoBehaviours.Gui.Input.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.Input.html",
    "title": "Namespace NitroxClient.MonoBehaviours.Gui.Input | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours.Gui.Input Namespaces NitroxClient.MonoBehaviours.Gui.Input.KeyBindings Classes KeyBindingManager Enums KeyBindingValues Refers the keybinding values used for button creation in the options menu, to a more clear form"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServer.MenuName.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServer.MenuName.html",
    "title": "Property MenuName | Nitrox",
    "keywords": "Property MenuName Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll MenuName public string MenuName { get; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServer.Setup.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServer.Setup.html",
    "title": "Method Setup | Nitrox",
    "keywords": "Method Setup Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll Setup(GameObject) public void Setup(GameObject saveGameMenu) Parameters saveGameMenu GameObject"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServer.ShowAsync.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServer.ShowAsync.html",
    "title": "Method ShowAsync | Nitrox",
    "keywords": "Method ShowAsync Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll ShowAsync(string, int) public Task ShowAsync(string ip, int port) Parameters ip string port int Returns Task"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServer.StopMultiplayerClient.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServer.StopMultiplayerClient.html",
    "title": "Method StopMultiplayerClient | Nitrox",
    "keywords": "Method StopMultiplayerClient Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll StopMultiplayerClient() public void StopMultiplayerClient()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServer.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServer.html",
    "title": "Class JoinServer | Nitrox",
    "keywords": "Class JoinServer Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll public class JoinServer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour JoinServer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Properties MenuName Methods Setup(GameObject) ShowAsync(string, int) StopMultiplayerClient()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.ActivateInputField.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.ActivateInputField.html",
    "title": "Method ActivateInputField | Nitrox",
    "keywords": "Method ActivateInputField Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll ActivateInputField() public void ActivateInputField()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.GetCurrentColor.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.GetCurrentColor.html",
    "title": "Method GetCurrentColor | Nitrox",
    "keywords": "Method GetCurrentColor Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll GetCurrentColor() public Color GetCurrentColor() Returns Color"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.Initialize.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.Initialize.html",
    "title": "Method Initialize | Nitrox",
    "keywords": "Method Initialize Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll Initialize(RectTransform, UnityAction, UnityAction) public IEnumerator Initialize(RectTransform joinServerBackground, UnityAction joinButtonCall, UnityAction cancelButtonCall) Parameters joinServerBackground RectTransform joinButtonCall UnityAction cancelButtonCall UnityAction Returns IEnumerator"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.IsReady.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.IsReady.html",
    "title": "Method IsReady | Nitrox",
    "keywords": "Method IsReady Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll IsReady() public Task IsReady() Returns Task"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.PlayerName.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.PlayerName.html",
    "title": "Property PlayerName | Nitrox",
    "keywords": "Property PlayerName Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll PlayerName public string PlayerName { get; set; } Property Value string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.SetHSB.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.SetHSB.html",
    "title": "Method SetHSB | Nitrox",
    "keywords": "Method SetHSB Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll SetHSB(Vector3) public void SetHSB(Vector3 hsb) Parameters hsb Vector3"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.SetIP.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.SetIP.html",
    "title": "Method SetIP | Nitrox",
    "keywords": "Method SetIP Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll SetIP(string) public void SetIP(string serverIp) Parameters serverIp string"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.SubscribeColorChanged.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.SubscribeColorChanged.html",
    "title": "Method SubscribeColorChanged | Nitrox",
    "keywords": "Method SubscribeColorChanged Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll SubscribeColorChanged() public void SubscribeColorChanged()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.UnsubscribeColorChanged.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.UnsubscribeColorChanged.html",
    "title": "Method UnsubscribeColorChanged | Nitrox",
    "keywords": "Method UnsubscribeColorChanged Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll UnsubscribeColorChanged() public void UnsubscribeColorChanged()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerJoinWindow.html",
    "title": "Class JoinServerJoinWindow | Nitrox",
    "keywords": "Class JoinServerJoinWindow Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll public class JoinServerJoinWindow Inheritance object JoinServerJoinWindow Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties PlayerName Methods ActivateInputField() GetCurrentColor() Initialize(RectTransform, UnityAction, UnityAction) IsReady() SetHSB(Vector3) SetIP(string) SubscribeColorChanged() UnsubscribeColorChanged()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerServerList.InitializeServerList.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerServerList.InitializeServerList.html",
    "title": "Method InitializeServerList | Nitrox",
    "keywords": "Method InitializeServerList Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll InitializeServerList(GameObject, out GameObject, out RectTransform) public static void InitializeServerList(GameObject saveGameMenuPrototype, out GameObject joinServerMenu, out RectTransform joinServerBackground) Parameters saveGameMenuPrototype GameObject joinServerMenu GameObject joinServerBackground RectTransform"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerServerList.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.JoinServerServerList.html",
    "title": "Class JoinServerServerList | Nitrox",
    "keywords": "Class JoinServerServerList Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll public static class JoinServerServerList Inheritance object JoinServerServerList Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InitializeServerList(GameObject, out GameObject, out RectTransform)"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.LoadingScreenVersionText.DisableWarningText.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.LoadingScreenVersionText.DisableWarningText.html",
    "title": "Method DisableWarningText | Nitrox",
    "keywords": "Method DisableWarningText Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll DisableWarningText() public static void DisableWarningText()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.LoadingScreenVersionText.Initialize.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.LoadingScreenVersionText.Initialize.html",
    "title": "Method Initialize | Nitrox",
    "keywords": "Method Initialize Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll Initialize() public static void Initialize()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.LoadingScreenVersionText.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.LoadingScreenVersionText.html",
    "title": "Class LoadingScreenVersionText | Nitrox",
    "keywords": "Class LoadingScreenVersionText Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll public static class LoadingScreenVersionText Inheritance object LoadingScreenVersionText Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DisableWarningText() Initialize()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMods.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMods.html",
    "title": "Class MainMenuMods | Nitrox",
    "keywords": "Class MainMenuMods Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll public class MainMenuMods : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MainMenuMods Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool)"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.JoinServer.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.JoinServer.html",
    "title": "Property JoinServer | Nitrox",
    "keywords": "Property JoinServer Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll JoinServer public JoinServer JoinServer { get; } Property Value JoinServer"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.Main.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.Main.html",
    "title": "Field Main | Nitrox",
    "keywords": "Field Main Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll public static MainMenuMultiplayerPanel Main Returns MainMenuMultiplayerPanel"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.OpenJoinServerMenuAsync.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.OpenJoinServerMenuAsync.html",
    "title": "Method OpenJoinServerMenuAsync | Nitrox",
    "keywords": "Method OpenJoinServerMenuAsync Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll OpenJoinServerMenuAsync(string, string) public static Task OpenJoinServerMenuAsync(string serverIp, string serverPort) Parameters serverIp string serverPort string Returns Task"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.RefreshServerEntries.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.RefreshServerEntries.html",
    "title": "Method RefreshServerEntries | Nitrox",
    "keywords": "Method RefreshServerEntries Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll RefreshServerEntries() public void RefreshServerEntries()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.Setup.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.Setup.html",
    "title": "Method Setup | Nitrox",
    "keywords": "Method Setup Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll Setup(GameObject, GameObject) public void Setup(GameObject loadedMultiplayer, GameObject savedGames) Parameters loadedMultiplayer GameObject savedGames GameObject"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuMultiplayerPanel.html",
    "title": "Class MainMenuMultiplayerPanel | Nitrox",
    "keywords": "Class MainMenuMultiplayerPanel Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll public class MainMenuMultiplayerPanel : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MainMenuMultiplayerPanel Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields Main Properties JoinServer Methods OpenJoinServerMenuAsync(string, string) RefreshServerEntries() Setup(GameObject, GameObject)"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuNotification.OnGUI.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuNotification.OnGUI.html",
    "title": "Method OnGUI | Nitrox",
    "keywords": "Method OnGUI Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll OnGUI() public void OnGUI()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuNotification.ShowNotification.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuNotification.ShowNotification.html",
    "title": "Method ShowNotification | Nitrox",
    "keywords": "Method ShowNotification Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll ShowNotification(string, Action) public void ShowNotification(string notificationMessage, Action continuationAction) Parameters notificationMessage string continuationAction Action"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuNotification.Update.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuNotification.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll Update() public void Update()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuNotification.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.MainMenuNotification.html",
    "title": "Class MainMenuNotification | Nitrox",
    "keywords": "Class MainMenuNotification Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Assembly NitroxClient.dll public class MainMenuNotification : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MainMenuNotification Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods OnGUI() ShowNotification(string, Action) Update()"
  },
  "api/NitroxClient.MonoBehaviours.Gui.MainMenu.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.MainMenu.html",
    "title": "Namespace NitroxClient.MonoBehaviours.Gui.MainMenu | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours.Gui.MainMenu Classes JoinServer JoinServerJoinWindow JoinServerServerList LoadingScreenVersionText MainMenuMods MainMenuMultiplayerPanel MainMenuNotification"
  },
  "api/NitroxClient.MonoBehaviours.Gui.html": {
    "href": "api/NitroxClient.MonoBehaviours.Gui.html",
    "title": "Namespace NitroxClient.MonoBehaviours.Gui | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours.Gui Namespaces NitroxClient.MonoBehaviours.Gui.Chat NitroxClient.MonoBehaviours.Gui.HUD NitroxClient.MonoBehaviours.Gui.InGame NitroxClient.MonoBehaviours.Gui.Input NitroxClient.MonoBehaviours.Gui.MainMenu"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() public void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.DeregisterMoonpool.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.DeregisterMoonpool.html",
    "title": "Method DeregisterMoonpool | Nitrox",
    "keywords": "Method DeregisterMoonpool Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll DeregisterMoonpool(Transform) public NitroxId DeregisterMoonpool(Transform constructableTransform) Parameters constructableTransform Transform Returns NitroxId"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.GetMoonpoolsUpdate.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.GetMoonpoolsUpdate.html",
    "title": "Method GetMoonpoolsUpdate | Nitrox",
    "keywords": "Method GetMoonpoolsUpdate Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll GetMoonpoolsUpdate() public Dictionary<NitroxId, NitroxInt3> GetMoonpoolsUpdate() Returns Dictionary<NitroxId, NitroxInt3>"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.GetSavedMoonpools.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.GetSavedMoonpools.html",
    "title": "Method GetSavedMoonpools | Nitrox",
    "keywords": "Method GetSavedMoonpools Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll GetSavedMoonpools() public List<MoonpoolEntity> GetSavedMoonpools() Returns List<MoonpoolEntity>"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.LateAssignNitroxEntity.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.LateAssignNitroxEntity.html",
    "title": "Method LateAssignNitroxEntity | Nitrox",
    "keywords": "Method LateAssignNitroxEntity Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll LateAssignNitroxEntity(NitroxId) public void LateAssignNitroxEntity(NitroxId baseId) Parameters baseId NitroxId"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.LatestRegisteredMoonpool.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.LatestRegisteredMoonpool.html",
    "title": "Property LatestRegisteredMoonpool | Nitrox",
    "keywords": "Property LatestRegisteredMoonpool Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll LatestRegisteredMoonpool public MoonpoolEntity LatestRegisteredMoonpool { get; } Property Value MoonpoolEntity"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.LoadMoonpools.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.LoadMoonpools.html",
    "title": "Method LoadMoonpools | Nitrox",
    "keywords": "Method LoadMoonpools Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll LoadMoonpools(IEnumerable<MoonpoolEntity>) public void LoadMoonpools(IEnumerable<MoonpoolEntity> moonpoolEntities) Parameters moonpoolEntities IEnumerable<MoonpoolEntity>"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.OnDestroy.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.OnDestroy.html",
    "title": "Method OnDestroy | Nitrox",
    "keywords": "Method OnDestroy Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll OnDestroy() public void OnDestroy()"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.OnPostRebuildGeometry.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.OnPostRebuildGeometry.html",
    "title": "Method OnPostRebuildGeometry | Nitrox",
    "keywords": "Method OnPostRebuildGeometry Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll OnPostRebuildGeometry(Base) public void OnPostRebuildGeometry(Base _) Parameters _ Base"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.PrintDebug.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.PrintDebug.html",
    "title": "Method PrintDebug | Nitrox",
    "keywords": "Method PrintDebug Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll PrintDebug() [Conditional(\"DEBUG\")] public void PrintDebug()"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.RegisterMoonpool.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.RegisterMoonpool.html",
    "title": "Method RegisterMoonpool | Nitrox",
    "keywords": "Method RegisterMoonpool Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll RegisterMoonpool(Transform, NitroxId) public Optional<GameObject> RegisterMoonpool(Transform constructableTransform, NitroxId moonpoolId) Parameters constructableTransform Transform moonpoolId NitroxId Returns Optional<GameObject>"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.RestoreMoonpools.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.RestoreMoonpools.html",
    "title": "Method RestoreMoonpools | Nitrox",
    "keywords": "Method RestoreMoonpools Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll RestoreMoonpools(IEnumerable<MoonpoolEntity>, Base) public static IEnumerator RestoreMoonpools(IEnumerable<MoonpoolEntity> moonpoolEntities, Base @base) Parameters moonpoolEntities IEnumerable<MoonpoolEntity> base Base Returns IEnumerator"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.SpawnVehicles.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.SpawnVehicles.html",
    "title": "Method SpawnVehicles | Nitrox",
    "keywords": "Method SpawnVehicles Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll SpawnVehicles() public IEnumerator SpawnVehicles() Returns IEnumerator"
  },
  "api/NitroxClient.MonoBehaviours.MoonpoolManager.html": {
    "href": "api/NitroxClient.MonoBehaviours.MoonpoolManager.html",
    "title": "Class MoonpoolManager | Nitrox",
    "keywords": "Class MoonpoolManager Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Saves the moonpools NitroxEntity of a Base to assign them back after each Base.RebuildGeometry(). public class MoonpoolManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MoonpoolManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Remarks To recognize pieces even after the base is rebuilt, we use the base anchor (Base.anchor) to get an absolute cell value. Properties LatestRegisteredMoonpool Methods Awake() DeregisterMoonpool(Transform) GetMoonpoolsUpdate() GetSavedMoonpools() LateAssignNitroxEntity(NitroxId) LoadMoonpools(IEnumerable<MoonpoolEntity>) OnDestroy() OnPostRebuildGeometry(Base) PrintDebug() RegisterMoonpool(Transform, NitroxId) RestoreMoonpools(IEnumerable<MoonpoolEntity>, Base) SpawnVehicles()"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.Active.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.Active.html",
    "title": "Property Active | Nitrox",
    "keywords": "Property Active Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Active True if multiplayer is loaded and client is connected to a server. public static bool Active { get; } Property Value bool"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() public void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.InitMonoBehaviours.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.InitMonoBehaviours.html",
    "title": "Method InitMonoBehaviours | Nitrox",
    "keywords": "Method InitMonoBehaviours Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll InitMonoBehaviours() public void InitMonoBehaviours()"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.InitialSyncCompleted.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.InitialSyncCompleted.html",
    "title": "Property InitialSyncCompleted | Nitrox",
    "keywords": "Property InitialSyncCompleted Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll InitialSyncCompleted public bool InitialSyncCompleted { get; set; } Property Value bool"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.LoadAsync.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.LoadAsync.html",
    "title": "Method LoadAsync | Nitrox",
    "keywords": "Method LoadAsync Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll LoadAsync() public static IEnumerator LoadAsync() Returns IEnumerator"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.Main.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.Main.html",
    "title": "Field Main | Nitrox",
    "keywords": "Field Main Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public static Multiplayer Main Returns Multiplayer"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.OnAfterMultiplayerEnd.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.OnAfterMultiplayerEnd.html",
    "title": "Event OnAfterMultiplayerEnd | Nitrox",
    "keywords": "Event OnAfterMultiplayerEnd Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public static event Action OnAfterMultiplayerEnd Returns Action"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.OnBeforeMultiplayerStart.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.OnBeforeMultiplayerStart.html",
    "title": "Event OnBeforeMultiplayerStart | Nitrox",
    "keywords": "Event OnBeforeMultiplayerStart Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public static event Action OnBeforeMultiplayerStart Returns Action"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.ProcessPackets.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.ProcessPackets.html",
    "title": "Method ProcessPackets | Nitrox",
    "keywords": "Method ProcessPackets Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll ProcessPackets() public void ProcessPackets()"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.StartSession.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.StartSession.html",
    "title": "Method StartSession | Nitrox",
    "keywords": "Method StartSession Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll StartSession() public IEnumerator StartSession() Returns IEnumerator"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.StopCurrentSession.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.StopCurrentSession.html",
    "title": "Method StopCurrentSession | Nitrox",
    "keywords": "Method StopCurrentSession Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll StopCurrentSession() public void StopCurrentSession()"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.SubnauticaLoadingCompleted.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.SubnauticaLoadingCompleted.html",
    "title": "Method SubnauticaLoadingCompleted | Nitrox",
    "keywords": "Method SubnauticaLoadingCompleted Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll SubnauticaLoadingCompleted() public static void SubnauticaLoadingCompleted()"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.SubnauticaLoadingStarted.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.SubnauticaLoadingStarted.html",
    "title": "Method SubnauticaLoadingStarted | Nitrox",
    "keywords": "Method SubnauticaLoadingStarted Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll SubnauticaLoadingStarted() public static void SubnauticaLoadingStarted()"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.Update.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Update() public void Update()"
  },
  "api/NitroxClient.MonoBehaviours.Multiplayer.html": {
    "href": "api/NitroxClient.MonoBehaviours.Multiplayer.html",
    "title": "Class Multiplayer | Nitrox",
    "keywords": "Class Multiplayer Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class Multiplayer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Multiplayer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields Main Properties Active True if multiplayer is loaded and client is connected to a server. InitialSyncCompleted Methods Awake() InitMonoBehaviours() LoadAsync() ProcessPackets() StartSession() StopCurrentSession() SubnauticaLoadingCompleted() SubnauticaLoadingStarted() Update() Events OnAfterMultiplayerEnd OnBeforeMultiplayerStart"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerCyclops.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerCyclops.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() protected override void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerCyclops.CurrentPlayer.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerCyclops.CurrentPlayer.html",
    "title": "Property CurrentPlayer | Nitrox",
    "keywords": "Property CurrentPlayer Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll CurrentPlayer public RemotePlayer CurrentPlayer { get; set; } Property Value RemotePlayer"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerCyclops.FixedUpdate.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerCyclops.FixedUpdate.html",
    "title": "Method FixedUpdate | Nitrox",
    "keywords": "Method FixedUpdate Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll FixedUpdate() protected override void FixedUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerCyclops.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerCyclops.html",
    "title": "Class MultiplayerCyclops | Nitrox",
    "keywords": "Class MultiplayerCyclops Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class MultiplayerCyclops : MultiplayerVehicleControl Inheritance object Object Component Behaviour MonoBehaviour MultiplayerVehicleControl MultiplayerCyclops Inherited Members MultiplayerVehicleControl.SmoothYaw MultiplayerVehicleControl.SmoothPitch MultiplayerVehicleControl.SmoothLeftArm MultiplayerVehicleControl.SmoothRightArm MultiplayerVehicleControl.SmoothPosition MultiplayerVehicleControl.SmoothVelocity MultiplayerVehicleControl.SmoothRotation MultiplayerVehicleControl.SmoothAngularVelocity MultiplayerVehicleControl.WheelYawSetter MultiplayerVehicleControl.WheelPitchSetter MultiplayerVehicleControl.Exit() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Properties CurrentPlayer Methods Awake() FixedUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerSeaMoth.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerSeaMoth.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() protected override void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerSeaMoth.Exit.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerSeaMoth.Exit.html",
    "title": "Method Exit | Nitrox",
    "keywords": "Method Exit Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Exit() public override void Exit()"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerSeaMoth.Update.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerSeaMoth.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Update() protected void Update()"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerSeaMoth.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerSeaMoth.html",
    "title": "Class MultiplayerSeaMoth | Nitrox",
    "keywords": "Class MultiplayerSeaMoth Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class MultiplayerSeaMoth : MultiplayerVehicleControl Inheritance object Object Component Behaviour MonoBehaviour MultiplayerVehicleControl MultiplayerSeaMoth Inherited Members MultiplayerVehicleControl.SmoothYaw MultiplayerVehicleControl.SmoothPitch MultiplayerVehicleControl.SmoothLeftArm MultiplayerVehicleControl.SmoothRightArm MultiplayerVehicleControl.SmoothPosition MultiplayerVehicleControl.SmoothVelocity MultiplayerVehicleControl.SmoothRotation MultiplayerVehicleControl.SmoothAngularVelocity MultiplayerVehicleControl.WheelYawSetter MultiplayerVehicleControl.WheelPitchSetter MultiplayerVehicleControl.FixedUpdate() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods Awake() Exit() Update()"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() protected virtual void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.Exit.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.Exit.html",
    "title": "Method Exit | Nitrox",
    "keywords": "Method Exit Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Exit() public virtual void Exit()"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.FixedUpdate.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.FixedUpdate.html",
    "title": "Method FixedUpdate | Nitrox",
    "keywords": "Method FixedUpdate Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll FixedUpdate() protected virtual void FixedUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothAngularVelocity.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothAngularVelocity.html",
    "title": "Field SmoothAngularVelocity | Nitrox",
    "keywords": "Field SmoothAngularVelocity Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll protected SmoothVector SmoothAngularVelocity Returns SmoothVector"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothLeftArm.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothLeftArm.html",
    "title": "Field SmoothLeftArm | Nitrox",
    "keywords": "Field SmoothLeftArm Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll protected readonly SmoothVector SmoothLeftArm Returns SmoothVector"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothPitch.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothPitch.html",
    "title": "Field SmoothPitch | Nitrox",
    "keywords": "Field SmoothPitch Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll protected readonly SmoothParameter SmoothPitch Returns SmoothParameter"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothPosition.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothPosition.html",
    "title": "Field SmoothPosition | Nitrox",
    "keywords": "Field SmoothPosition Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll protected SmoothVector SmoothPosition Returns SmoothVector"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothRightArm.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothRightArm.html",
    "title": "Field SmoothRightArm | Nitrox",
    "keywords": "Field SmoothRightArm Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll protected readonly SmoothVector SmoothRightArm Returns SmoothVector"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothRotation.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothRotation.html",
    "title": "Field SmoothRotation | Nitrox",
    "keywords": "Field SmoothRotation Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll protected SmoothRotation SmoothRotation Returns SmoothRotation"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothVelocity.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothVelocity.html",
    "title": "Field SmoothVelocity | Nitrox",
    "keywords": "Field SmoothVelocity Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll protected SmoothVector SmoothVelocity Returns SmoothVector"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothYaw.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.SmoothYaw.html",
    "title": "Field SmoothYaw | Nitrox",
    "keywords": "Field SmoothYaw Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll protected readonly SmoothParameter SmoothYaw Returns SmoothParameter"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.WheelPitchSetter.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.WheelPitchSetter.html",
    "title": "Field WheelPitchSetter | Nitrox",
    "keywords": "Field WheelPitchSetter Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll protected Action<float> WheelPitchSetter Returns Action<float>"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.WheelYawSetter.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.WheelYawSetter.html",
    "title": "Field WheelYawSetter | Nitrox",
    "keywords": "Field WheelYawSetter Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll protected Action<float> WheelYawSetter Returns Action<float>"
  },
  "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.html": {
    "href": "api/NitroxClient.MonoBehaviours.MultiplayerVehicleControl.html",
    "title": "Class MultiplayerVehicleControl | Nitrox",
    "keywords": "Class MultiplayerVehicleControl Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public abstract class MultiplayerVehicleControl : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MultiplayerVehicleControl Derived MultiplayerCyclops MultiplayerSeaMoth Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields SmoothAngularVelocity SmoothLeftArm SmoothPitch SmoothPosition SmoothRightArm SmoothRotation SmoothVelocity SmoothYaw WheelPitchSetter WheelYawSetter Methods Awake() Exit() FixedUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.NitroxBootstrapper.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxBootstrapper.html",
    "title": "Class NitroxBootstrapper | Nitrox",
    "keywords": "Class NitroxBootstrapper Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class NitroxBootstrapper : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NitroxBootstrapper Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool)"
  },
  "api/NitroxClient.MonoBehaviours.NitroxDebugManager.OnGUI.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxDebugManager.OnGUI.html",
    "title": "Method OnGUI | Nitrox",
    "keywords": "Method OnGUI Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll OnGUI() public void OnGUI()"
  },
  "api/NitroxClient.MonoBehaviours.NitroxDebugManager.ToggleCursor.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxDebugManager.ToggleCursor.html",
    "title": "Method ToggleCursor | Nitrox",
    "keywords": "Method ToggleCursor Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll ToggleCursor() public static void ToggleCursor()"
  },
  "api/NitroxClient.MonoBehaviours.NitroxDebugManager.ToggleDebugging.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxDebugManager.ToggleDebugging.html",
    "title": "Method ToggleDebugging | Nitrox",
    "keywords": "Method ToggleDebugging Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll ToggleDebugging() public void ToggleDebugging()"
  },
  "api/NitroxClient.MonoBehaviours.NitroxDebugManager.Update.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxDebugManager.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Update() public void Update()"
  },
  "api/NitroxClient.MonoBehaviours.NitroxDebugManager.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxDebugManager.html",
    "title": "Class NitroxDebugManager | Nitrox",
    "keywords": "Class NitroxDebugManager Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class NitroxDebugManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NitroxDebugManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods OnGUI() ToggleCursor() ToggleDebugging() Update()"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.GenerateNewId.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.GenerateNewId.html",
    "title": "Method GenerateNewId | Nitrox",
    "keywords": "Method GenerateNewId Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll GenerateNewId(GameObject) public static NitroxId GenerateNewId(GameObject gameObject) Parameters gameObject GameObject Returns NitroxId"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.GetGameObjects.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.GetGameObjects.html",
    "title": "Method GetGameObjects | Nitrox",
    "keywords": "Method GetGameObjects Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll GetGameObjects() public static IEnumerable<KeyValuePair<NitroxId, GameObject>> GetGameObjects() Returns IEnumerable<KeyValuePair<NitroxId, GameObject>>"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.GetIdOrGenerateNew.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.GetIdOrGenerateNew.html",
    "title": "Method GetIdOrGenerateNew | Nitrox",
    "keywords": "Method GetIdOrGenerateNew Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll GetIdOrGenerateNew(GameObject) public static NitroxId GetIdOrGenerateNew(GameObject gameObject) Parameters gameObject GameObject Returns NitroxId"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.GetObjectFrom.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.GetObjectFrom.html",
    "title": "Method GetObjectFrom | Nitrox",
    "keywords": "Method GetObjectFrom Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll GetObjectFrom(NitroxId) public static Optional<GameObject> GetObjectFrom(NitroxId id) Parameters id NitroxId Returns Optional<GameObject>"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.GetObjectsFrom.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.GetObjectsFrom.html",
    "title": "Method GetObjectsFrom | Nitrox",
    "keywords": "Method GetObjectsFrom Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll GetObjectsFrom(HashSet<NitroxId>) public static Dictionary<NitroxId, GameObject> GetObjectsFrom(HashSet<NitroxId> ids) Parameters ids HashSet<NitroxId> Returns Dictionary<NitroxId, GameObject>"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.Id.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.Id.html",
    "title": "Field Id | Nitrox",
    "keywords": "Field Id Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll [DataMember(Order = 1)] [ProtoMember(1)] public NitroxId Id Returns NitroxId"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.OnProtoDeserializeObjectTree.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.OnProtoDeserializeObjectTree.html",
    "title": "Method OnProtoDeserializeObjectTree | Nitrox",
    "keywords": "Method OnProtoDeserializeObjectTree Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll OnProtoDeserializeObjectTree(ProtobufSerializer) public void OnProtoDeserializeObjectTree(ProtobufSerializer _) Parameters _ ProtobufSerializer"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.OnProtoSerializeObjectTree.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.OnProtoSerializeObjectTree.html",
    "title": "Method OnProtoSerializeObjectTree | Nitrox",
    "keywords": "Method OnProtoSerializeObjectTree Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll OnProtoSerializeObjectTree(ProtobufSerializer) public void OnProtoSerializeObjectTree(ProtobufSerializer _) Parameters _ ProtobufSerializer"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.Remove.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.Remove.html",
    "title": "Method Remove | Nitrox",
    "keywords": "Method Remove Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Remove() Removes the NitroxEntity from the global directory and set's its Id to null. public void Remove()"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.RemoveFrom.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.RemoveFrom.html",
    "title": "Method RemoveFrom | Nitrox",
    "keywords": "Method RemoveFrom Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll RemoveFrom(GameObject) public static void RemoveFrom(GameObject gameObject) Parameters gameObject GameObject"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.RequireObjectFrom.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.RequireObjectFrom.html",
    "title": "Method RequireObjectFrom | Nitrox",
    "keywords": "Method RequireObjectFrom Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll RequireObjectFrom(NitroxId) public static GameObject RequireObjectFrom(NitroxId id) Parameters id NitroxId Returns GameObject"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.SetNewId.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.SetNewId.html",
    "title": "Method SetNewId | Nitrox",
    "keywords": "Method SetNewId Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll SetNewId(GameObject, NitroxId) public static void SetNewId(GameObject gameObject, NitroxId id) Parameters gameObject GameObject id NitroxId"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.Start.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.Start.html",
    "title": "Method Start | Nitrox",
    "keywords": "Method Start Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Start() public void Start()"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.TryGetComponentFrom.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.TryGetComponentFrom.html",
    "title": "Method TryGetComponentFrom | Nitrox",
    "keywords": "Method TryGetComponentFrom Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll TryGetComponentFrom<T>(NitroxId, out T) public static bool TryGetComponentFrom<T>(NitroxId id, out T component) where T : Component Parameters id NitroxId component T Returns bool Type Parameters T"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.TryGetObjectFrom.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.TryGetObjectFrom.html",
    "title": "Method TryGetObjectFrom | Nitrox",
    "keywords": "Method TryGetObjectFrom Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll TryGetObjectFrom(NitroxId, out GameObject) public static bool TryGetObjectFrom(NitroxId id, out GameObject gameObject) Parameters id NitroxId gameObject GameObject Returns bool"
  },
  "api/NitroxClient.MonoBehaviours.NitroxEntity.html": {
    "href": "api/NitroxClient.MonoBehaviours.NitroxEntity.html",
    "title": "Class NitroxEntity | Nitrox",
    "keywords": "Class NitroxEntity Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll [Serializable] [DataContract] [ProtoContract] public class NitroxEntity : MonoBehaviour, IProtoTreeEventListener Inheritance object Object Component Behaviour MonoBehaviour NitroxEntity Implements IProtoTreeEventListener Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields Id Methods GenerateNewId(GameObject) GetGameObjects() GetIdOrGenerateNew(GameObject) GetObjectFrom(NitroxId) GetObjectsFrom(HashSet<NitroxId>) OnProtoDeserializeObjectTree(ProtobufSerializer) OnProtoSerializeObjectTree(ProtobufSerializer) Remove() Removes the NitroxEntity from the global directory and set's its Id to null. RemoveFrom(GameObject) RequireObjectFrom(NitroxId) SetNewId(GameObject, NitroxId) Start() TryGetComponentFrom<T>(NitroxId, out T) TryGetObjectFrom(NitroxId, out GameObject)"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.CinematicControllerPrefab.-ctor.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.CinematicControllerPrefab.-ctor.html",
    "title": "Constructor CinematicControllerPrefab | Nitrox",
    "keywords": "Constructor CinematicControllerPrefab Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll CinematicControllerPrefab(PlayerCinematicController) public CinematicControllerPrefab(PlayerCinematicController playerController) Parameters playerController PlayerCinematicController"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.CinematicControllerPrefab.PopulateRemoteController.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.CinematicControllerPrefab.PopulateRemoteController.html",
    "title": "Method PopulateRemoteController | Nitrox",
    "keywords": "Method PopulateRemoteController Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll PopulateRemoteController(RemotePlayerCinematicController) public void PopulateRemoteController(RemotePlayerCinematicController remoteController) Parameters remoteController RemotePlayerCinematicController"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.CinematicControllerPrefab.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.CinematicControllerPrefab.html",
    "title": "Struct CinematicControllerPrefab | Nitrox",
    "keywords": "Struct CinematicControllerPrefab Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public readonly struct CinematicControllerPrefab Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors CinematicControllerPrefab(PlayerCinematicController) Methods PopulateRemoteController(RemotePlayerCinematicController)"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerBench.FromBench.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerBench.FromBench.html",
    "title": "Method FromBench | Nitrox",
    "keywords": "Method FromBench Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll FromBench(Bench, GameObject, Side, GameObject) public static MultiplayerBench FromBench(Bench origin, GameObject target, MultiplayerBench.Side side, GameObject animatorRoot) Parameters origin Bench target GameObject side MultiplayerBench.Side animatorRoot GameObject Returns MultiplayerBench"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerBench.OnHandClick.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerBench.OnHandClick.html",
    "title": "Method OnHandClick | Nitrox",
    "keywords": "Method OnHandClick Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll OnHandClick(GUIHand) public override void OnHandClick(GUIHand hand) Parameters hand GUIHand"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerBench.Side.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerBench.Side.html",
    "title": "Enum MultiplayerBench.Side | Nitrox",
    "keywords": "Enum MultiplayerBench.Side Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public enum MultiplayerBench.Side Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields CENTER = 1 LEFT = 0 RIGHT = 2"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerBench.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerBench.html",
    "title": "Class MultiplayerBench | Nitrox",
    "keywords": "Class MultiplayerBench Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public class MultiplayerBench : Bench, IHandTarget Inheritance object Object Component Behaviour MonoBehaviour HandTarget CinematicModeTriggerBase CinematicModeTrigger Bench MultiplayerBench Implements IHandTarget Inherited Members Bench.queueUpdate Bench.queueLateUpdate Bench.isSitting Bench.currentPlayer Bench.animator Bench.playerTarget Bench.frontAnimRotation Bench.backAnimRotation Bench.standUpCinematicController Bench.frontObstacleCheck Bench.backObstacleCheck Bench.checkDistance Bench.notEnoughSpaceWarning Bench.standUpHandText Bench.checkLayerMask Bench.OnEnable() Bench.OnDisable() Bench.Start() Bench.OnUpdate() Bench.OnLateUpdate() Bench.OnCinematicEnd(CinematicModeEventData) Bench.OnHandHover(GUIHand) Bench.GetCanBeUsedBy(Player) Bench.GetSide(Player) Bench.CanSit(GameObject) Bench.EnterSittingMode(Player) Bench.ExitSittingMode(Player, bool) Bench.Subscribe(Player, bool) Bench.OnPlayerDeath(Player) Bench.CheckIfUnderwater(Utils.MonitoredValue<bool>) Bench.ResetAnimParams(Animator) Bench.ForcedSetAnimParams(bool, bool, Animator) CinematicModeTrigger.handText CinematicModeTriggerBase.triggerType CinematicModeTriggerBase.volumeTriggerType CinematicModeTriggerBase.showIconOnHandHover CinematicModeTriggerBase.cinematicController CinematicModeTriggerBase.timeUsingStarted CinematicModeTriggerBase.player CinematicModeTriggerBase.secureInventory CinematicModeTriggerBase.restoreActiveQuickSlot CinematicModeTriggerBase.quickSlot CinematicModeTriggerBase.onCinematicStart CinematicModeTriggerBase.onCinematicEnd CinematicModeTriggerBase.debug CinematicModeTriggerBase.OnStartCinematicMode() CinematicModeTriggerBase.OnTriggerEnter(Collider) CinematicModeTriggerBase.OnTriggerExit(Collider) CinematicModeTriggerBase.StartCinematicMode(Player) CinematicModeTriggerBase.OnPlayerCinematicModeEnd(PlayerCinematicController) HandTarget.creationTime HandTarget._isvalid HandTarget.Awake() HandTarget.isValidHandTarget MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods FromBench(Bench, GameObject, Side, GameObject) OnHandClick(GUIHand)"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.AddOtherControllers.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.AddOtherControllers.html",
    "title": "Method AddOtherControllers | Nitrox",
    "keywords": "Method AddOtherControllers Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll AddOtherControllers(IEnumerable<MultiplayerCinematicController>) public void AddOtherControllers(IEnumerable<MultiplayerCinematicController> otherControllers) Parameters otherControllers IEnumerable<MultiplayerCinematicController>"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.CallAllCinematicModeEnd.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.CallAllCinematicModeEnd.html",
    "title": "Method CallAllCinematicModeEnd | Nitrox",
    "keywords": "Method CallAllCinematicModeEnd Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll CallAllCinematicModeEnd() public void CallAllCinematicModeEnd()"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.CallCinematicModeEnd.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.CallCinematicModeEnd.html",
    "title": "Method CallCinematicModeEnd | Nitrox",
    "keywords": "Method CallCinematicModeEnd Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll CallCinematicModeEnd(RemotePlayer) public void CallCinematicModeEnd(RemotePlayer player) Parameters player RemotePlayer"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.CallStartCinematicMode.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.CallStartCinematicMode.html",
    "title": "Method CallStartCinematicMode | Nitrox",
    "keywords": "Method CallStartCinematicMode Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll CallStartCinematicMode(RemotePlayer) public void CallStartCinematicMode(RemotePlayer player) Parameters player RemotePlayer"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.Initialize.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.Initialize.html",
    "title": "Method Initialize | Nitrox",
    "keywords": "Method Initialize Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll Initialize(PlayerCinematicController) public static MultiplayerCinematicController Initialize(PlayerCinematicController playerController) Parameters playerController PlayerCinematicController Returns MultiplayerCinematicController"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.OnPlayerDisconnect.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.OnPlayerDisconnect.html",
    "title": "Method OnPlayerDisconnect | Nitrox",
    "keywords": "Method OnPlayerDisconnect Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll OnPlayerDisconnect(RemotePlayer) public void OnPlayerDisconnect(RemotePlayer player) Parameters player RemotePlayer"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicController.html",
    "title": "Class MultiplayerCinematicController | Nitrox",
    "keywords": "Class MultiplayerCinematicController Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public class MultiplayerCinematicController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MultiplayerCinematicController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods AddOtherControllers(IEnumerable<MultiplayerCinematicController>) CallAllCinematicModeEnd() CallCinematicModeEnd(RemotePlayer) CallStartCinematicMode(RemotePlayer) Initialize(PlayerCinematicController) OnPlayerDisconnect(RemotePlayer)"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicReference.AddController.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicReference.AddController.html",
    "title": "Method AddController | Nitrox",
    "keywords": "Method AddController Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll AddController(PlayerCinematicController) public void AddController(PlayerCinematicController playerController) Parameters playerController PlayerCinematicController"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicReference.CallCinematicModeEnd.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicReference.CallCinematicModeEnd.html",
    "title": "Method CallCinematicModeEnd | Nitrox",
    "keywords": "Method CallCinematicModeEnd Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll CallCinematicModeEnd(string, int, RemotePlayer) public void CallCinematicModeEnd(string key, int identifier, RemotePlayer player) Parameters key string identifier int player RemotePlayer"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicReference.CallStartCinematicMode.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicReference.CallStartCinematicMode.html",
    "title": "Method CallStartCinematicMode | Nitrox",
    "keywords": "Method CallStartCinematicMode Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll CallStartCinematicMode(string, int, RemotePlayer) public void CallStartCinematicMode(string key, int identifier, RemotePlayer player) Parameters key string identifier int player RemotePlayer"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicReference.GetCinematicControllerIdentifier.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicReference.GetCinematicControllerIdentifier.html",
    "title": "Method GetCinematicControllerIdentifier | Nitrox",
    "keywords": "Method GetCinematicControllerIdentifier Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll GetCinematicControllerIdentifier(GameObject, GameObject) public static int GetCinematicControllerIdentifier(GameObject controller, GameObject reference) Parameters controller GameObject reference GameObject Returns int"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicReference.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.MultiplayerCinematicReference.html",
    "title": "Class MultiplayerCinematicReference | Nitrox",
    "keywords": "Class MultiplayerCinematicReference Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public class MultiplayerCinematicReference : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MultiplayerCinematicReference Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods AddController(PlayerCinematicController) CallCinematicModeEnd(string, int, RemotePlayer) CallStartCinematicMode(string, int, RemotePlayer) GetCinematicControllerIdentifier(GameObject, GameObject)"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.EndCinematicMode.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.EndCinematicMode.html",
    "title": "Method EndCinematicMode | Nitrox",
    "keywords": "Method EndCinematicMode Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll EndCinematicMode(bool) public void EndCinematicMode(bool reset = false) Parameters reset bool"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.GetPlayer.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.GetPlayer.html",
    "title": "Method GetPlayer | Nitrox",
    "keywords": "Method GetPlayer Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll GetPlayer() public RemotePlayer GetPlayer() Returns RemotePlayer"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.GetProfileTag.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.GetProfileTag.html",
    "title": "Method GetProfileTag | Nitrox",
    "keywords": "Method GetProfileTag Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll GetProfileTag() public string GetProfileTag() Returns string"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.IsCinematicModeActive.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.IsCinematicModeActive.html",
    "title": "Method IsCinematicModeActive | Nitrox",
    "keywords": "Method IsCinematicModeActive Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll IsCinematicModeActive() public bool IsCinematicModeActive() Returns bool"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.ManagedLateUpdate.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.ManagedLateUpdate.html",
    "title": "Method ManagedLateUpdate | Nitrox",
    "keywords": "Method ManagedLateUpdate Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll ManagedLateUpdate() public void ManagedLateUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.ManagedUpdate.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.ManagedUpdate.html",
    "title": "Method ManagedUpdate | Nitrox",
    "keywords": "Method ManagedUpdate Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll ManagedUpdate() public void ManagedUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.OnPlayerCinematicModeEnd.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.OnPlayerCinematicModeEnd.html",
    "title": "Method OnPlayerCinematicModeEnd | Nitrox",
    "keywords": "Method OnPlayerCinematicModeEnd Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll OnPlayerCinematicModeEnd() public void OnPlayerCinematicModeEnd()"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.SetPlayer.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.SetPlayer.html",
    "title": "Method SetPlayer | Nitrox",
    "keywords": "Method SetPlayer Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll SetPlayer(RemotePlayer) public void SetPlayer(RemotePlayer setplayer) Parameters setplayer RemotePlayer"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.StartCinematicMode.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.StartCinematicMode.html",
    "title": "Method StartCinematicMode | Nitrox",
    "keywords": "Method StartCinematicMode Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll StartCinematicMode(RemotePlayer) public void StartCinematicMode(RemotePlayer setplayer) Parameters setplayer RemotePlayer"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.animParam.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.animParam.html",
    "title": "Field animParam | Nitrox",
    "keywords": "Field animParam Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public string animParam Returns string"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.animParamReceivers.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.animParamReceivers.html",
    "title": "Field animParamReceivers | Nitrox",
    "keywords": "Field animParamReceivers Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public GameObject[] animParamReceivers Returns GameObject[]"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.animState.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.animState.html",
    "title": "Property animState | Nitrox",
    "keywords": "Property animState Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll animState public bool animState { get; } Property Value bool"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.animatedTransform.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.animatedTransform.html",
    "title": "Field animatedTransform | Nitrox",
    "keywords": "Field animatedTransform Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll [AssertNotNull] public Transform animatedTransform Returns Transform"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.animator.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.animator.html",
    "title": "Field animator | Nitrox",
    "keywords": "Field animator Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public Animator animator Returns Animator"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.cinematicActivityStart.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.cinematicActivityStart.html",
    "title": "Property cinematicActivityStart | Nitrox",
    "keywords": "Property cinematicActivityStart Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll cinematicActivityStart public static float cinematicActivityStart { get; } Property Value float"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.cinematicModeActive.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.cinematicModeActive.html",
    "title": "Field cinematicModeActive | Nitrox",
    "keywords": "Field cinematicModeActive Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll [NonSerialized] public bool cinematicModeActive Returns bool"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.cinematicModeCount.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.cinematicModeCount.html",
    "title": "Property cinematicModeCount | Nitrox",
    "keywords": "Property cinematicModeCount Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll cinematicModeCount public static int cinematicModeCount { get; } Property Value int"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.debug.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.debug.html",
    "title": "Field debug | Nitrox",
    "keywords": "Field debug Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public bool debug Returns bool"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.endTransform.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.endTransform.html",
    "title": "Field endTransform | Nitrox",
    "keywords": "Field endTransform Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public Transform endTransform Returns Transform"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.html",
    "title": "Class RemotePlayerCinematicController | Nitrox",
    "keywords": "Class RemotePlayerCinematicController Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll Override for PlayerCinematicController public class RemotePlayerCinematicController : MonoBehaviour, IManagedUpdateBehaviour, IManagedLateUpdateBehaviour, IManagedBehaviour Inheritance object Object Component Behaviour MonoBehaviour RemotePlayerCinematicController Implements IManagedUpdateBehaviour IManagedLateUpdateBehaviour IManagedBehaviour Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields animParam animParamReceivers animatedTransform animator cinematicModeActive debug endTransform informGameObject interpolateAnimParam interpolateDuringAnimation interpolationTime interpolationTimeOut onlyUseEndTransformInVr playInVr playerViewAnimationName playerViewInterpolateAnimParam receiversAnimParam Properties animState cinematicActivityStart cinematicModeCount managedLateUpdateIndex managedUpdateIndex Methods EndCinematicMode(bool) GetPlayer() GetProfileTag() IsCinematicModeActive() ManagedLateUpdate() ManagedUpdate() OnPlayerCinematicModeEnd() SetPlayer(RemotePlayer) StartCinematicMode(RemotePlayer)"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.informGameObject.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.informGameObject.html",
    "title": "Field informGameObject | Nitrox",
    "keywords": "Field informGameObject Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public GameObject informGameObject Returns GameObject"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.interpolateAnimParam.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.interpolateAnimParam.html",
    "title": "Field interpolateAnimParam | Nitrox",
    "keywords": "Field interpolateAnimParam Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public string interpolateAnimParam Returns string"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.interpolateDuringAnimation.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.interpolateDuringAnimation.html",
    "title": "Field interpolateDuringAnimation | Nitrox",
    "keywords": "Field interpolateDuringAnimation Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public bool interpolateDuringAnimation Returns bool"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.interpolationTime.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.interpolationTime.html",
    "title": "Field interpolationTime | Nitrox",
    "keywords": "Field interpolationTime Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public float interpolationTime Returns float"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.interpolationTimeOut.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.interpolationTimeOut.html",
    "title": "Field interpolationTimeOut | Nitrox",
    "keywords": "Field interpolationTimeOut Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public float interpolationTimeOut Returns float"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.managedLateUpdateIndex.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.managedLateUpdateIndex.html",
    "title": "Property managedLateUpdateIndex | Nitrox",
    "keywords": "Property managedLateUpdateIndex Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll managedLateUpdateIndex public int managedLateUpdateIndex { get; set; } Property Value int"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.managedUpdateIndex.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.managedUpdateIndex.html",
    "title": "Property managedUpdateIndex | Nitrox",
    "keywords": "Property managedUpdateIndex Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll managedUpdateIndex public int managedUpdateIndex { get; set; } Property Value int"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.onlyUseEndTransformInVr.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.onlyUseEndTransformInVr.html",
    "title": "Field onlyUseEndTransformInVr | Nitrox",
    "keywords": "Field onlyUseEndTransformInVr Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public bool onlyUseEndTransformInVr Returns bool"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.playInVr.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.playInVr.html",
    "title": "Field playInVr | Nitrox",
    "keywords": "Field playInVr Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public bool playInVr Returns bool"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.playerViewAnimationName.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.playerViewAnimationName.html",
    "title": "Field playerViewAnimationName | Nitrox",
    "keywords": "Field playerViewAnimationName Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public string playerViewAnimationName Returns string"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.playerViewInterpolateAnimParam.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.playerViewInterpolateAnimParam.html",
    "title": "Field playerViewInterpolateAnimParam | Nitrox",
    "keywords": "Field playerViewInterpolateAnimParam Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public string playerViewInterpolateAnimParam Returns string"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.receiversAnimParam.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.RemotePlayerCinematicController.receiversAnimParam.html",
    "title": "Field receiversAnimParam | Nitrox",
    "keywords": "Field receiversAnimParam Namespace NitroxClient.MonoBehaviours.Overrides Assembly NitroxClient.dll public string receiversAnimParam Returns string"
  },
  "api/NitroxClient.MonoBehaviours.Overrides.html": {
    "href": "api/NitroxClient.MonoBehaviours.Overrides.html",
    "title": "Namespace NitroxClient.MonoBehaviours.Overrides | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours.Overrides Classes MultiplayerBench MultiplayerCinematicController MultiplayerCinematicReference RemotePlayerCinematicController Override for PlayerCinematicController Structs CinematicControllerPrefab Enums MultiplayerBench.Side"
  },
  "api/NitroxClient.MonoBehaviours.PlayerDeathBroadcaster.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.PlayerDeathBroadcaster.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() public void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.PlayerDeathBroadcaster.html": {
    "href": "api/NitroxClient.MonoBehaviours.PlayerDeathBroadcaster.html",
    "title": "Class PlayerDeathBroadcaster | Nitrox",
    "keywords": "Class PlayerDeathBroadcaster Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class PlayerDeathBroadcaster : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerDeathBroadcaster Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods Awake()"
  },
  "api/NitroxClient.MonoBehaviours.PlayerMovementBroadcaster.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.PlayerMovementBroadcaster.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() public void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.PlayerMovementBroadcaster.FixedUpdate.html": {
    "href": "api/NitroxClient.MonoBehaviours.PlayerMovementBroadcaster.FixedUpdate.html",
    "title": "Method FixedUpdate | Nitrox",
    "keywords": "Method FixedUpdate Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll FixedUpdate() public void FixedUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.PlayerMovementBroadcaster.LOCATION_BROADCAST_TICK_SKIPS.html": {
    "href": "api/NitroxClient.MonoBehaviours.PlayerMovementBroadcaster.LOCATION_BROADCAST_TICK_SKIPS.html",
    "title": "Field LOCATION_BROADCAST_TICK_SKIPS | Nitrox",
    "keywords": "Field LOCATION_BROADCAST_TICK_SKIPS Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Amount of physics updates to skip for sending location broadcasts. TODO: Allow servers to set this value for clients. With many clients connected to the server, a higher value can be preferred. public const int LOCATION_BROADCAST_TICK_SKIPS = 1 Returns int"
  },
  "api/NitroxClient.MonoBehaviours.PlayerMovementBroadcaster.html": {
    "href": "api/NitroxClient.MonoBehaviours.PlayerMovementBroadcaster.html",
    "title": "Class PlayerMovementBroadcaster | Nitrox",
    "keywords": "Class PlayerMovementBroadcaster Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class PlayerMovementBroadcaster : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerMovementBroadcaster Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Fields LOCATION_BROADCAST_TICK_SKIPS Amount of physics updates to skip for sending location broadcasts. TODO: Allow servers to set this value for clients. With many clients connected to the server, a higher value can be preferred. Methods Awake() FixedUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.PlayerStatsBroadcaster.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.PlayerStatsBroadcaster.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() public void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.PlayerStatsBroadcaster.Update.html": {
    "href": "api/NitroxClient.MonoBehaviours.PlayerStatsBroadcaster.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Update() public void Update()"
  },
  "api/NitroxClient.MonoBehaviours.PlayerStatsBroadcaster.html": {
    "href": "api/NitroxClient.MonoBehaviours.PlayerStatsBroadcaster.html",
    "title": "Class PlayerStatsBroadcaster | Nitrox",
    "keywords": "Class PlayerStatsBroadcaster Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class PlayerStatsBroadcaster : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerStatsBroadcaster Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods Awake() Update()"
  },
  "api/NitroxClient.MonoBehaviours.RemotelyControlled.Awake.html": {
    "href": "api/NitroxClient.MonoBehaviours.RemotelyControlled.Awake.html",
    "title": "Method Awake | Nitrox",
    "keywords": "Method Awake Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll Awake() public void Awake()"
  },
  "api/NitroxClient.MonoBehaviours.RemotelyControlled.FixedUpdate.html": {
    "href": "api/NitroxClient.MonoBehaviours.RemotelyControlled.FixedUpdate.html",
    "title": "Method FixedUpdate | Nitrox",
    "keywords": "Method FixedUpdate Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll FixedUpdate() public void FixedUpdate()"
  },
  "api/NitroxClient.MonoBehaviours.RemotelyControlled.UpdateKnownSplineUser.html": {
    "href": "api/NitroxClient.MonoBehaviours.RemotelyControlled.UpdateKnownSplineUser.html",
    "title": "Method UpdateKnownSplineUser | Nitrox",
    "keywords": "Method UpdateKnownSplineUser Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll UpdateKnownSplineUser(Vector3, Quaternion, Vector3, Vector3, float) public void UpdateKnownSplineUser(Vector3 currentPosition, Quaternion currentRotation, Vector3 destination, Vector3 desinationDirection, float velocity) Parameters currentPosition Vector3 currentRotation Quaternion destination Vector3 desinationDirection Vector3 velocity float"
  },
  "api/NitroxClient.MonoBehaviours.RemotelyControlled.UpdateOrientation.html": {
    "href": "api/NitroxClient.MonoBehaviours.RemotelyControlled.UpdateOrientation.html",
    "title": "Method UpdateOrientation | Nitrox",
    "keywords": "Method UpdateOrientation Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll UpdateOrientation(Vector3, Quaternion) public void UpdateOrientation(Vector3 position, Quaternion rotation) Parameters position Vector3 rotation Quaternion"
  },
  "api/NitroxClient.MonoBehaviours.RemotelyControlled.html": {
    "href": "api/NitroxClient.MonoBehaviours.RemotelyControlled.html",
    "title": "Class RemotelyControlled | Nitrox",
    "keywords": "Class RemotelyControlled Namespace NitroxClient.MonoBehaviours Assembly NitroxClient.dll public class RemotelyControlled : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RemotelyControlled Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectOfType<T>() Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.ToString() Object.Instantiate(Object, Vector3, Quaternion, bool) Object.Instantiate(Object, Vector3, Quaternion, Vector3, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, bool) Object.Instantiate(Object, Transform, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Vector3, Quaternion, Vector3, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, bool) Object.Instantiate<T>(T, Transform, Vector3, Quaternion, Vector3, bool) Object.name Object.hideFlags object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Extension Methods GameObjectHelper.AliveOrNull<TObject>(TObject) NitroxEntityExtensions.GetId(Component) NitroxEntityExtensions.TryGetIdOrWarn(Component, out NitroxId, string, string, int) NitroxEntityExtensions.TryGetNitroxEntity(Component, out NitroxEntity) NitroxEntityExtensions.TryGetNitroxId(Component, out NitroxId) GameObjectHelper.GetFullHierarchyPath(Component) GameObjectHelper.RequireComponentInChildren<T>(Component, bool) GameObjectHelper.RequireComponentInParent<T>(Component) GameObjectHelper.RequireComponent<T>(Component) GameObjectHelper.TryGetComponentInChildren<T>(Component, out T, bool) GameObjectHelper.TryGetComponentInParent<T>(Component, out T, bool) GameObjectHelper.RequireGameObject(MonoBehaviour, string) GameObjectHelper.RequireTransform(MonoBehaviour, string) UnityObjectExtensions.Resolve<T>(Object, bool) Methods Awake() FixedUpdate() UpdateKnownSplineUser(Vector3, Quaternion, Vector3, Vector3, float) UpdateOrientation(Vector3, Quaternion)"
  },
  "api/NitroxClient.MonoBehaviours.html": {
    "href": "api/NitroxClient.MonoBehaviours.html",
    "title": "Namespace NitroxClient.MonoBehaviours | Nitrox",
    "keywords": "Namespace NitroxClient.MonoBehaviours Namespaces NitroxClient.MonoBehaviours.Discord NitroxClient.MonoBehaviours.Gui NitroxClient.MonoBehaviours.Overrides Classes AnimationController AnimationSender EntityPositionBroadcaster FMODEmitterController MoonpoolManager Saves the moonpools NitroxEntity of a Base to assign them back after each Base.RebuildGeometry(). Multiplayer MultiplayerCyclops MultiplayerSeaMoth MultiplayerVehicleControl NitroxBootstrapper NitroxDebugManager NitroxEntity PlayerDeathBroadcaster PlayerMovementBroadcaster PlayerStatsBroadcaster RemotelyControlled Enums AnimChangeState AnimChangeType"
  },
  "api/NitroxClient.Serialization.ClientConfig.FileName.html": {
    "href": "api/NitroxClient.Serialization.ClientConfig.FileName.html",
    "title": "Property FileName | Nitrox",
    "keywords": "Property FileName Namespace NitroxClient.Serialization Assembly NitroxClient.dll FileName public override string FileName { get; } Property Value string"
  },
  "api/NitroxClient.Serialization.ClientConfig.FocusDiscordKeybindPrimary.html": {
    "href": "api/NitroxClient.Serialization.ClientConfig.FocusDiscordKeybindPrimary.html",
    "title": "Property FocusDiscordKeybindPrimary | Nitrox",
    "keywords": "Property FocusDiscordKeybindPrimary Namespace NitroxClient.Serialization Assembly NitroxClient.dll FocusDiscordKeybindPrimary [PropertyDescription(\"Keybinds to focus discord, ALT + [Default primary is F]\")] public string FocusDiscordKeybindPrimary { get; set; } Property Value string"
  },
  "api/NitroxClient.Serialization.ClientConfig.FocusDiscordKeybindSecondary.html": {
    "href": "api/NitroxClient.Serialization.ClientConfig.FocusDiscordKeybindSecondary.html",
    "title": "Property FocusDiscordKeybindSecondary | Nitrox",
    "keywords": "Property FocusDiscordKeybindSecondary Namespace NitroxClient.Serialization Assembly NitroxClient.dll FocusDiscordKeybindSecondary public string FocusDiscordKeybindSecondary { get; set; } Property Value string"
  },
  "api/NitroxClient.Serialization.ClientConfig.Init.html": {
    "href": "api/NitroxClient.Serialization.ClientConfig.Init.html",
    "title": "Method Init | Nitrox",
    "keywords": "Method Init Namespace NitroxClient.Serialization Assembly NitroxClient.dll Init() This method initialises the client config It checks for an existing file and returns back either a fresh instance, or an existing instance This is ran once on game startup. Use ClientConfig.Load to retrieve instance public static ClientConfig Init() Returns ClientConfig Instance of ClientConfig"
  },
  "api/NitroxClient.Serialization.ClientConfig.OpenChatKeybindPrimary.html": {
    "href": "api/NitroxClient.Serialization.ClientConfig.OpenChatKeybindPrimary.html",
    "title": "Property OpenChatKeybindPrimary | Nitrox",
    "keywords": "Property OpenChatKeybindPrimary Namespace NitroxClient.Serialization Assembly NitroxClient.dll OpenChatKeybindPrimary [PropertyDescription(\"Keybinds to open chat [Default primary is Y]\")] public string OpenChatKeybindPrimary { get; set; } Property Value string"
  },
  "api/NitroxClient.Serialization.ClientConfig.OpenChatKeybindSecondary.html": {
    "href": "api/NitroxClient.Serialization.ClientConfig.OpenChatKeybindSecondary.html",
    "title": "Property OpenChatKeybindSecondary | Nitrox",
    "keywords": "Property OpenChatKeybindSecondary Namespace NitroxClient.Serialization Assembly NitroxClient.dll OpenChatKeybindSecondary public string OpenChatKeybindSecondary { get; set; } Property Value string"
  },
  "api/NitroxClient.Serialization.ClientConfig.html": {
    "href": "api/NitroxClient.Serialization.ClientConfig.html",
    "title": "Class ClientConfig | Nitrox",
    "keywords": "Class ClientConfig Namespace NitroxClient.Serialization Assembly NitroxClient.dll This is the client config for Nitrox The file should be stored under %appdata%\\Roaming\\Nitrox\\client.cfg [PropertyDescription(\"These are the settings for the Nitrox Client.\")] public class ClientConfig : NitroxConfig<ClientConfig> Inheritance object NitroxConfig<ClientConfig> ClientConfig Inherited Members NitroxConfig<ClientConfig>.Load(string) NitroxConfig<ClientConfig>.Deserialize(string) NitroxConfig<ClientConfig>.Serialize(string) NitroxConfig<ClientConfig>.Update(string) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties FileName FocusDiscordKeybindPrimary FocusDiscordKeybindSecondary OpenChatKeybindPrimary OpenChatKeybindSecondary Methods Init() This method initialises the client config It checks for an existing file and returns back either a fresh instance, or an existing instance This is ran once on game startup. Use ClientConfig.Load to retrieve instance"
  },
  "api/NitroxClient.Serialization.html": {
    "href": "api/NitroxClient.Serialization.html",
    "title": "Namespace NitroxClient.Serialization | Nitrox",
    "keywords": "Namespace NitroxClient.Serialization Classes ClientConfig This is the client config for Nitrox The file should be stored under %appdata%\\Roaming\\Nitrox\\client.cfg"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.IsBundleLoaded.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.IsBundleLoaded.html",
    "title": "Method IsBundleLoaded | Nitrox",
    "keywords": "Method IsBundleLoaded Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll IsBundleLoaded(NitroxAssetBundle) public static bool IsBundleLoaded(AssetBundleLoader.NitroxAssetBundle nitroxAssetBundle) Parameters nitroxAssetBundle AssetBundleLoader.NitroxAssetBundle Returns bool"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.LoadAllAssets.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.LoadAllAssets.html",
    "title": "Method LoadAllAssets | Nitrox",
    "keywords": "Method LoadAllAssets Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll LoadAllAssets(NitroxAssetBundle) public static IEnumerator LoadAllAssets(AssetBundleLoader.NitroxAssetBundle nitroxAssetBundle) Parameters nitroxAssetBundle AssetBundleLoader.NitroxAssetBundle Returns IEnumerator"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.LoadUIAsset.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.LoadUIAsset.html",
    "title": "Method LoadUIAsset | Nitrox",
    "keywords": "Method LoadUIAsset Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll LoadUIAsset(NitroxAssetBundle, bool) public static IEnumerator LoadUIAsset(AssetBundleLoader.NitroxAssetBundle nitroxAssetBundle, bool hideUI) Parameters nitroxAssetBundle AssetBundleLoader.NitroxAssetBundle hideUI bool Returns IEnumerator"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.AssetBundle.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.AssetBundle.html",
    "title": "Property AssetBundle | Nitrox",
    "keywords": "Property AssetBundle Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll AssetBundle public AssetBundle AssetBundle { get; set; } Property Value AssetBundle"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.BundleName.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.BundleName.html",
    "title": "Property BundleName | Nitrox",
    "keywords": "Property BundleName Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll BundleName public string BundleName { get; } Property Value string"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.CHAT_KEY_HINT.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.CHAT_KEY_HINT.html",
    "title": "Field CHAT_KEY_HINT | Nitrox",
    "keywords": "Field CHAT_KEY_HINT Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly AssetBundleLoader.NitroxAssetBundle CHAT_KEY_HINT Returns AssetBundleLoader.NitroxAssetBundle"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.CHAT_LOG.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.CHAT_LOG.html",
    "title": "Field CHAT_LOG | Nitrox",
    "keywords": "Field CHAT_LOG Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly AssetBundleLoader.NitroxAssetBundle CHAT_LOG Returns AssetBundleLoader.NitroxAssetBundle"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.DISCORD_JOIN_REQUEST.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.DISCORD_JOIN_REQUEST.html",
    "title": "Field DISCORD_JOIN_REQUEST | Nitrox",
    "keywords": "Field DISCORD_JOIN_REQUEST Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly AssetBundleLoader.NitroxAssetBundle DISCORD_JOIN_REQUEST Returns AssetBundleLoader.NitroxAssetBundle"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.LoadedAssets.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.LoadedAssets.html",
    "title": "Property LoadedAssets | Nitrox",
    "keywords": "Property LoadedAssets Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll LoadedAssets public Object[] LoadedAssets { get; set; } Property Value Object[]"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.PLAYER_LIST_TAB.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.PLAYER_LIST_TAB.html",
    "title": "Field PLAYER_LIST_TAB | Nitrox",
    "keywords": "Field PLAYER_LIST_TAB Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly AssetBundleLoader.NitroxAssetBundle PLAYER_LIST_TAB Returns AssetBundleLoader.NitroxAssetBundle"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.SHARED_ASSETS.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.SHARED_ASSETS.html",
    "title": "Field SHARED_ASSETS | Nitrox",
    "keywords": "Field SHARED_ASSETS Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly AssetBundleLoader.NitroxAssetBundle SHARED_ASSETS Returns AssetBundleLoader.NitroxAssetBundle"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.NitroxAssetBundle.html",
    "title": "Class AssetBundleLoader.NitroxAssetBundle | Nitrox",
    "keywords": "Class AssetBundleLoader.NitroxAssetBundle Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public class AssetBundleLoader.NitroxAssetBundle Inheritance object AssetBundleLoader.NitroxAssetBundle Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields CHAT_KEY_HINT CHAT_LOG DISCORD_JOIN_REQUEST PLAYER_LIST_TAB SHARED_ASSETS Properties AssetBundle BundleName LoadedAssets"
  },
  "api/NitroxClient.Unity.Helper.AssetBundleLoader.html": {
    "href": "api/NitroxClient.Unity.Helper.AssetBundleLoader.html",
    "title": "Class AssetBundleLoader | Nitrox",
    "keywords": "Class AssetBundleLoader Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static class AssetBundleLoader Inheritance object AssetBundleLoader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods IsBundleLoaded(NitroxAssetBundle) LoadAllAssets(NitroxAssetBundle) LoadUIAsset(NitroxAssetBundle, bool)"
  },
  "api/NitroxClient.Unity.Helper.CoroutineHelper.OnYieldError.html": {
    "href": "api/NitroxClient.Unity.Helper.CoroutineHelper.OnYieldError.html",
    "title": "Method OnYieldError | Nitrox",
    "keywords": "Method OnYieldError Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll OnYieldError(IEnumerator, Action<Exception>) public static IEnumerator OnYieldError(this IEnumerator enumerator, Action<Exception> exceptionCallback) Parameters enumerator IEnumerator exceptionCallback Action<Exception> Returns IEnumerator OnYieldError<T>(IEnumerator, Action<T>) public static IEnumerator OnYieldError<T>(this IEnumerator enumerator, Action<T> exceptionCallback = null) where T : Exception Parameters enumerator IEnumerator exceptionCallback Action<T> Returns IEnumerator Type Parameters T"
  },
  "api/NitroxClient.Unity.Helper.CoroutineHelper.html": {
    "href": "api/NitroxClient.Unity.Helper.CoroutineHelper.html",
    "title": "Class CoroutineHelper | Nitrox",
    "keywords": "Class CoroutineHelper Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static class CoroutineHelper Inheritance object CoroutineHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods OnYieldError(IEnumerator, Action<Exception>) OnYieldError<T>(IEnumerator, Action<T>)"
  },
  "api/NitroxClient.Unity.Helper.DebugUtils.PrintHierarchy.html": {
    "href": "api/NitroxClient.Unity.Helper.DebugUtils.PrintHierarchy.html",
    "title": "Method PrintHierarchy | Nitrox",
    "keywords": "Method PrintHierarchy Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll PrintHierarchy(GameObject, bool, int, bool, bool) public static void PrintHierarchy(GameObject gameObject, bool startAtRoot = false, int parentsUpwards = 1, bool listComponents = false, bool travelDown = true) Parameters gameObject GameObject startAtRoot bool parentsUpwards int listComponents bool travelDown bool"
  },
  "api/NitroxClient.Unity.Helper.DebugUtils.html": {
    "href": "api/NitroxClient.Unity.Helper.DebugUtils.html",
    "title": "Class DebugUtils | Nitrox",
    "keywords": "Class DebugUtils Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static class DebugUtils Inheritance object DebugUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods PrintHierarchy(GameObject, bool, int, bool, bool)"
  },
  "api/NitroxClient.Unity.Helper.GUISkinUtils.CreateDerived.html": {
    "href": "api/NitroxClient.Unity.Helper.GUISkinUtils.CreateDerived.html",
    "title": "Method CreateDerived | Nitrox",
    "keywords": "Method CreateDerived Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll CreateDerived(GUISkin, string) public static GUISkin CreateDerived(GUISkin baseSkin = null, string name = null) Parameters baseSkin GUISkin name string Returns GUISkin"
  },
  "api/NitroxClient.Unity.Helper.GUISkinUtils.RegisterDerived.html": {
    "href": "api/NitroxClient.Unity.Helper.GUISkinUtils.RegisterDerived.html",
    "title": "Method RegisterDerived | Nitrox",
    "keywords": "Method RegisterDerived Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll RegisterDerived(string, GUISkin) public static GUISkin RegisterDerived(string name, GUISkin baseSkin = null) Parameters name string baseSkin GUISkin Returns GUISkin"
  },
  "api/NitroxClient.Unity.Helper.GUISkinUtils.RegisterDerivedOnce.html": {
    "href": "api/NitroxClient.Unity.Helper.GUISkinUtils.RegisterDerivedOnce.html",
    "title": "Method RegisterDerivedOnce | Nitrox",
    "keywords": "Method RegisterDerivedOnce Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll RegisterDerivedOnce(string, Action<GUISkin>, GUISkin) Creates a new default Unity skin if there are no existing skins with the given name. public static GUISkin RegisterDerivedOnce(string name, Action<GUISkin> skinInitializer = null, GUISkin baseSkin = null) Parameters name string Name for the new skin. skinInitializer Action<GUISkin> Optional skin initializer. baseSkin GUISkin Optional base skin to copy from. Returns GUISkin New or cached skin."
  },
  "api/NitroxClient.Unity.Helper.GUISkinUtils.RenderWithSkin.html": {
    "href": "api/NitroxClient.Unity.Helper.GUISkinUtils.RenderWithSkin.html",
    "title": "Method RenderWithSkin | Nitrox",
    "keywords": "Method RenderWithSkin Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll RenderWithSkin(GUISkin, Action) Switches the active skin until after the render action. public static void RenderWithSkin(GUISkin skin, Action render) Parameters skin GUISkin Skin to switch to. render Action Render function to run."
  },
  "api/NitroxClient.Unity.Helper.GUISkinUtils.SetCustomStyle.html": {
    "href": "api/NitroxClient.Unity.Helper.GUISkinUtils.SetCustomStyle.html",
    "title": "Method SetCustomStyle | Nitrox",
    "keywords": "Method SetCustomStyle Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll SetCustomStyle(GUISkin, string, GUIStyle, Action<GUIStyle>) Adds or sets a custom style to the skin. public static void SetCustomStyle(this GUISkin skin, string name, GUIStyle baseStyle, Action<GUIStyle> modify) Parameters skin GUISkin Skin to add a custom style to. name string Name of the new custom style. baseStyle GUIStyle Style to base your custom style on. modify Action<GUIStyle> Function that changes the custom style to your liking. Remarks Custom skins can be used by passing the \"nameofskin\" to the UnityEngine.GUIStyle parameter of Label(string, GUIStyle, params GUILayoutOption[]) and similar."
  },
  "api/NitroxClient.Unity.Helper.GUISkinUtils.html": {
    "href": "api/NitroxClient.Unity.Helper.GUISkinUtils.html",
    "title": "Class GUISkinUtils | Nitrox",
    "keywords": "Class GUISkinUtils Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static class GUISkinUtils Inheritance object GUISkinUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CreateDerived(GUISkin, string) RegisterDerived(string, GUISkin) RegisterDerivedOnce(string, Action<GUISkin>, GUISkin) Creates a new default Unity skin if there are no existing skins with the given name. RenderWithSkin(GUISkin, Action) Switches the active skin until after the render action. SetCustomStyle(GUISkin, string, GUIStyle, Action<GUIStyle>) Adds or sets a custom style to the skin."
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.AliveOrNull.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.AliveOrNull.html",
    "title": "Method AliveOrNull | Nitrox",
    "keywords": "Method AliveOrNull Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll AliveOrNull<TObject>(TObject) Returns null if Unity has marked this object as dead. public static TObject AliveOrNull<TObject>(this TObject obj) where TObject : Object Parameters obj TObject Unity UnityEngine.Object to check if alive. Returns TObject The UnityEngine.Object if alive or null if dead. Type Parameters TObject Type of Unity object that can be marked as either alive or dead."
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.GetFullHierarchyPath.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.GetFullHierarchyPath.html",
    "title": "Method GetFullHierarchyPath | Nitrox",
    "keywords": "Method GetFullHierarchyPath Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll GetFullHierarchyPath(Component) public static string GetFullHierarchyPath(this Component component) Parameters component Component Returns string"
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.GetHierarchyPath.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.GetHierarchyPath.html",
    "title": "Method GetHierarchyPath | Nitrox",
    "keywords": "Method GetHierarchyPath Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll GetHierarchyPath(GameObject, GameObject) public static string GetHierarchyPath(this GameObject go, GameObject end) Parameters go GameObject end GameObject Returns string"
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.RequireComponent.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.RequireComponent.html",
    "title": "Method RequireComponent | Nitrox",
    "keywords": "Method RequireComponent Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll RequireComponent<T>(GameObject) public static T RequireComponent<T>(this GameObject o) where T : Component Parameters o GameObject Returns T Type Parameters T RequireComponent<T>(Component) public static T RequireComponent<T>(this Component co) where T : Component Parameters co Component Returns T Type Parameters T"
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.RequireComponentInChildren.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.RequireComponentInChildren.html",
    "title": "Method RequireComponentInChildren | Nitrox",
    "keywords": "Method RequireComponentInChildren Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll RequireComponentInChildren<T>(GameObject, bool) public static T RequireComponentInChildren<T>(this GameObject o, bool includeInactive = false) where T : Component Parameters o GameObject includeInactive bool Returns T Type Parameters T RequireComponentInChildren<T>(Component, bool) public static T RequireComponentInChildren<T>(this Component co, bool includeInactive = false) where T : Component Parameters co Component includeInactive bool Returns T Type Parameters T"
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.RequireComponentInParent.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.RequireComponentInParent.html",
    "title": "Method RequireComponentInParent | Nitrox",
    "keywords": "Method RequireComponentInParent Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll RequireComponentInParent<T>(GameObject) public static T RequireComponentInParent<T>(this GameObject o) where T : Component Parameters o GameObject Returns T Type Parameters T RequireComponentInParent<T>(Component) public static T RequireComponentInParent<T>(this Component co) where T : Component Parameters co Component Returns T Type Parameters T"
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.RequireGameObject.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.RequireGameObject.html",
    "title": "Method RequireGameObject | Nitrox",
    "keywords": "Method RequireGameObject Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll RequireGameObject(Transform, string) public static GameObject RequireGameObject(this Transform tf, string name) Parameters tf Transform name string Returns GameObject RequireGameObject(GameObject, string) public static GameObject RequireGameObject(this GameObject go, string name) Parameters go GameObject name string Returns GameObject RequireGameObject(MonoBehaviour, string) public static GameObject RequireGameObject(this MonoBehaviour mb, string name) Parameters mb MonoBehaviour name string Returns GameObject RequireGameObject(string) public static GameObject RequireGameObject(string name) Parameters name string Returns GameObject"
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.RequireTransform.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.RequireTransform.html",
    "title": "Method RequireTransform | Nitrox",
    "keywords": "Method RequireTransform Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll RequireTransform(Transform, string) public static Transform RequireTransform(this Transform tf, string name) Parameters tf Transform name string Returns Transform RequireTransform(GameObject, string) public static Transform RequireTransform(this GameObject go, string name) Parameters go GameObject name string Returns Transform RequireTransform(MonoBehaviour, string) public static Transform RequireTransform(this MonoBehaviour mb, string name) Parameters mb MonoBehaviour name string Returns Transform"
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.TryGetComponentInAscendance.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.TryGetComponentInAscendance.html",
    "title": "Method TryGetComponentInAscendance | Nitrox",
    "keywords": "Method TryGetComponentInAscendance Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll TryGetComponentInAscendance<T>(Transform, int, out T) public static bool TryGetComponentInAscendance<T>(this Transform transform, int degree, out T component) Parameters transform Transform degree int component T Returns bool Type Parameters T"
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.TryGetComponentInChildren.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.TryGetComponentInChildren.html",
    "title": "Method TryGetComponentInChildren | Nitrox",
    "keywords": "Method TryGetComponentInChildren Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll TryGetComponentInChildren<T>(GameObject, out T, bool) public static bool TryGetComponentInChildren<T>(this GameObject go, out T component, bool includeInactive = false) where T : Component Parameters go GameObject component T includeInactive bool Returns bool Type Parameters T TryGetComponentInChildren<T>(Component, out T, bool) public static bool TryGetComponentInChildren<T>(this Component co, out T component, bool includeInactive = false) where T : Component Parameters co Component component T includeInactive bool Returns bool Type Parameters T"
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.TryGetComponentInParent.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.TryGetComponentInParent.html",
    "title": "Method TryGetComponentInParent | Nitrox",
    "keywords": "Method TryGetComponentInParent Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll TryGetComponentInParent<T>(GameObject, out T, bool) public static bool TryGetComponentInParent<T>(this GameObject go, out T component, bool includeInactive = false) where T : Component Parameters go GameObject component T includeInactive bool Returns bool Type Parameters T TryGetComponentInParent<T>(Component, out T, bool) public static bool TryGetComponentInParent<T>(this Component co, out T component, bool includeInactive = false) where T : Component Parameters co Component component T includeInactive bool Returns bool Type Parameters T"
  },
  "api/NitroxClient.Unity.Helper.GameObjectHelper.html": {
    "href": "api/NitroxClient.Unity.Helper.GameObjectHelper.html",
    "title": "Class GameObjectHelper | Nitrox",
    "keywords": "Class GameObjectHelper Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static class GameObjectHelper Inheritance object GameObjectHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AliveOrNull<TObject>(TObject) Returns null if Unity has marked this object as dead. GetFullHierarchyPath(Component) GetHierarchyPath(GameObject, GameObject) RequireComponentInChildren<T>(Component, bool) RequireComponentInChildren<T>(GameObject, bool) RequireComponentInParent<T>(Component) RequireComponentInParent<T>(GameObject) RequireComponent<T>(Component) RequireComponent<T>(GameObject) RequireGameObject(string) RequireGameObject(GameObject, string) RequireGameObject(MonoBehaviour, string) RequireGameObject(Transform, string) RequireTransform(GameObject, string) RequireTransform(MonoBehaviour, string) RequireTransform(Transform, string) TryGetComponentInAscendance<T>(Transform, int, out T) TryGetComponentInChildren<T>(Component, out T, bool) TryGetComponentInChildren<T>(GameObject, out T, bool) TryGetComponentInParent<T>(Component, out T, bool) TryGetComponentInParent<T>(GameObject, out T, bool)"
  },
  "api/NitroxClient.Unity.Helper.MathUtil.ClampMagnitude.html": {
    "href": "api/NitroxClient.Unity.Helper.MathUtil.ClampMagnitude.html",
    "title": "Method ClampMagnitude | Nitrox",
    "keywords": "Method ClampMagnitude Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll ClampMagnitude(Vector3, float, float) public static Vector3 ClampMagnitude(Vector3 v, float max, float min) Parameters v Vector3 max float min float Returns Vector3"
  },
  "api/NitroxClient.Unity.Helper.MathUtil.html": {
    "href": "api/NitroxClient.Unity.Helper.MathUtil.html",
    "title": "Class MathUtil | Nitrox",
    "keywords": "Class MathUtil Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public class MathUtil Inheritance object MathUtil Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ClampMagnitude(Vector3, float, float)"
  },
  "api/NitroxClient.Unity.Helper.RendererHelpers.ApplyClonedTexture.html": {
    "href": "api/NitroxClient.Unity.Helper.RendererHelpers.ApplyClonedTexture.html",
    "title": "Method ApplyClonedTexture | Nitrox",
    "keywords": "Method ApplyClonedTexture Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll ApplyClonedTexture(Material) public static void ApplyClonedTexture(this Material material) Parameters material Material"
  },
  "api/NitroxClient.Unity.Helper.RendererHelpers.Clone.html": {
    "href": "api/NitroxClient.Unity.Helper.RendererHelpers.Clone.html",
    "title": "Method Clone | Nitrox",
    "keywords": "Method Clone Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll Clone(Texture2D) public static Texture2D Clone(this Texture2D sourceTexture) Parameters sourceTexture Texture2D Returns Texture2D"
  },
  "api/NitroxClient.Unity.Helper.RendererHelpers.GetMainTexturePixelBlock.html": {
    "href": "api/NitroxClient.Unity.Helper.RendererHelpers.GetMainTexturePixelBlock.html",
    "title": "Method GetMainTexturePixelBlock | Nitrox",
    "keywords": "Method GetMainTexturePixelBlock Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll GetMainTexturePixelBlock(Material, TextureBlock) public static Color[] GetMainTexturePixelBlock(this Material material, TextureBlock textureBlock) Parameters material Material textureBlock TextureBlock Returns Color[]"
  },
  "api/NitroxClient.Unity.Helper.RendererHelpers.GetMainTexturePixels.html": {
    "href": "api/NitroxClient.Unity.Helper.RendererHelpers.GetMainTexturePixels.html",
    "title": "Method GetMainTexturePixels | Nitrox",
    "keywords": "Method GetMainTexturePixels Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll GetMainTexturePixels(Material) public static Color[] GetMainTexturePixels(this Material material) Parameters material Material Returns Color[]"
  },
  "api/NitroxClient.Unity.Helper.RendererHelpers.GetRenderer.html": {
    "href": "api/NitroxClient.Unity.Helper.RendererHelpers.GetRenderer.html",
    "title": "Method GetRenderer | Nitrox",
    "keywords": "Method GetRenderer Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll GetRenderer(GameObject, string) public static SkinnedMeshRenderer GetRenderer(this GameObject playerModel, string equipmentGameObjectName) Parameters playerModel GameObject equipmentGameObjectName string Returns SkinnedMeshRenderer"
  },
  "api/NitroxClient.Unity.Helper.RendererHelpers.SwapTextureColors.html": {
    "href": "api/NitroxClient.Unity.Helper.RendererHelpers.SwapTextureColors.html",
    "title": "Method SwapTextureColors | Nitrox",
    "keywords": "Method SwapTextureColors Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll SwapTextureColors(Texture2D, HsvSwapper, TextureBlock) public static void SwapTextureColors(this Texture2D texture, HsvSwapper filter, TextureBlock textureBlock) Parameters texture Texture2D filter HsvSwapper textureBlock TextureBlock"
  },
  "api/NitroxClient.Unity.Helper.RendererHelpers.UpdateMainTextureColors.html": {
    "href": "api/NitroxClient.Unity.Helper.RendererHelpers.UpdateMainTextureColors.html",
    "title": "Method UpdateMainTextureColors | Nitrox",
    "keywords": "Method UpdateMainTextureColors Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll UpdateMainTextureColors(Material, Color[]) public static void UpdateMainTextureColors(this Material material, Color[] pixels) Parameters material Material pixels Color[] UpdateMainTextureColors(Material, Color[], TextureBlock) public static void UpdateMainTextureColors(this Material material, Color[] pixels, TextureBlock textureBlock) Parameters material Material pixels Color[] textureBlock TextureBlock"
  },
  "api/NitroxClient.Unity.Helper.RendererHelpers.html": {
    "href": "api/NitroxClient.Unity.Helper.RendererHelpers.html",
    "title": "Class RendererHelpers | Nitrox",
    "keywords": "Class RendererHelpers Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static class RendererHelpers Inheritance object RendererHelpers Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ApplyClonedTexture(Material) Clone(Texture2D) GetMainTexturePixelBlock(Material, TextureBlock) GetMainTexturePixels(Material) GetRenderer(GameObject, string) SwapTextureColors(Texture2D, HsvSwapper, TextureBlock) UpdateMainTextureColors(Material, Color[]) UpdateMainTextureColors(Material, Color[], TextureBlock)"
  },
  "api/NitroxClient.Unity.Helper.StringUtils.ByteArrayToHexString.html": {
    "href": "api/NitroxClient.Unity.Helper.StringUtils.ByteArrayToHexString.html",
    "title": "Method ByteArrayToHexString | Nitrox",
    "keywords": "Method ByteArrayToHexString Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll ByteArrayToHexString(byte[]) public static string ByteArrayToHexString(this byte[] bytes) Parameters bytes byte[] Returns string"
  },
  "api/NitroxClient.Unity.Helper.StringUtils.TruncateLeft.html": {
    "href": "api/NitroxClient.Unity.Helper.StringUtils.TruncateLeft.html",
    "title": "Method TruncateLeft | Nitrox",
    "keywords": "Method TruncateLeft Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll TruncateLeft(string, int, string) public static string TruncateLeft(this string value, int maxChars, string appendix = \"...\") Parameters value string maxChars int appendix string Returns string"
  },
  "api/NitroxClient.Unity.Helper.StringUtils.TruncateRight.html": {
    "href": "api/NitroxClient.Unity.Helper.StringUtils.TruncateRight.html",
    "title": "Method TruncateRight | Nitrox",
    "keywords": "Method TruncateRight Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll TruncateRight(string, int, string) public static string TruncateRight(this string value, int maxChars, string appendix = \"...\") Parameters value string maxChars int appendix string Returns string"
  },
  "api/NitroxClient.Unity.Helper.StringUtils.html": {
    "href": "api/NitroxClient.Unity.Helper.StringUtils.html",
    "title": "Class StringUtils | Nitrox",
    "keywords": "Class StringUtils Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static class StringUtils Inheritance object StringUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ByteArrayToHexString(byte[]) TruncateLeft(string, int, string) TruncateRight(string, int, string)"
  },
  "api/NitroxClient.Unity.Helper.Yielders.WaitFor100Milliseconds.html": {
    "href": "api/NitroxClient.Unity.Helper.Yielders.WaitFor100Milliseconds.html",
    "title": "Field WaitFor100Milliseconds | Nitrox",
    "keywords": "Field WaitFor100Milliseconds Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly WaitForSeconds WaitFor100Milliseconds Returns WaitForSeconds"
  },
  "api/NitroxClient.Unity.Helper.Yielders.WaitFor1Second.html": {
    "href": "api/NitroxClient.Unity.Helper.Yielders.WaitFor1Second.html",
    "title": "Field WaitFor1Second | Nitrox",
    "keywords": "Field WaitFor1Second Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly WaitForSeconds WaitFor1Second Returns WaitForSeconds"
  },
  "api/NitroxClient.Unity.Helper.Yielders.WaitFor2Seconds.html": {
    "href": "api/NitroxClient.Unity.Helper.Yielders.WaitFor2Seconds.html",
    "title": "Field WaitFor2Seconds | Nitrox",
    "keywords": "Field WaitFor2Seconds Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly WaitForSeconds WaitFor2Seconds Returns WaitForSeconds"
  },
  "api/NitroxClient.Unity.Helper.Yielders.WaitFor3Seconds.html": {
    "href": "api/NitroxClient.Unity.Helper.Yielders.WaitFor3Seconds.html",
    "title": "Field WaitFor3Seconds | Nitrox",
    "keywords": "Field WaitFor3Seconds Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly WaitForSeconds WaitFor3Seconds Returns WaitForSeconds"
  },
  "api/NitroxClient.Unity.Helper.Yielders.WaitForEndOfFrame.html": {
    "href": "api/NitroxClient.Unity.Helper.Yielders.WaitForEndOfFrame.html",
    "title": "Field WaitForEndOfFrame | Nitrox",
    "keywords": "Field WaitForEndOfFrame Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly WaitForEndOfFrame WaitForEndOfFrame Returns WaitForEndOfFrame"
  },
  "api/NitroxClient.Unity.Helper.Yielders.WaitForFixedUpdate.html": {
    "href": "api/NitroxClient.Unity.Helper.Yielders.WaitForFixedUpdate.html",
    "title": "Field WaitForFixedUpdate | Nitrox",
    "keywords": "Field WaitForFixedUpdate Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly WaitForFixedUpdate WaitForFixedUpdate Returns WaitForFixedUpdate"
  },
  "api/NitroxClient.Unity.Helper.Yielders.WaitForHalfSecond.html": {
    "href": "api/NitroxClient.Unity.Helper.Yielders.WaitForHalfSecond.html",
    "title": "Field WaitForHalfSecond | Nitrox",
    "keywords": "Field WaitForHalfSecond Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll public static readonly WaitForSeconds WaitForHalfSecond Returns WaitForSeconds"
  },
  "api/NitroxClient.Unity.Helper.Yielders.html": {
    "href": "api/NitroxClient.Unity.Helper.Yielders.html",
    "title": "Class Yielders | Nitrox",
    "keywords": "Class Yielders Namespace NitroxClient.Unity.Helper Assembly NitroxClient.dll Cache for yields in IEnumeration to reduce GC pressure. public static class Yielders Inheritance object Yielders Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields WaitFor100Milliseconds WaitFor1Second WaitFor2Seconds WaitFor3Seconds WaitForEndOfFrame WaitForFixedUpdate WaitForHalfSecond"
  },
  "api/NitroxClient.Unity.Helper.html": {
    "href": "api/NitroxClient.Unity.Helper.html",
    "title": "Namespace NitroxClient.Unity.Helper | Nitrox",
    "keywords": "Namespace NitroxClient.Unity.Helper Classes AssetBundleLoader AssetBundleLoader.NitroxAssetBundle CoroutineHelper DebugUtils GUISkinUtils GameObjectHelper MathUtil RendererHelpers StringUtils Yielders Cache for yields in IEnumeration to reduce GC pressure."
  },
  "api/NitroxClient.Unity.Smoothing.SmoothParameter.-ctor.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothParameter.-ctor.html",
    "title": "Constructor SmoothParameter | Nitrox",
    "keywords": "Constructor SmoothParameter Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll SmoothParameter(float) public SmoothParameter(float initial = 0) Parameters initial float"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothParameter.FixedUpdate.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothParameter.FixedUpdate.html",
    "title": "Method FixedUpdate | Nitrox",
    "keywords": "Method FixedUpdate Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll FixedUpdate() public void FixedUpdate()"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothParameter.SmoothValue.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothParameter.SmoothValue.html",
    "title": "Property SmoothValue | Nitrox",
    "keywords": "Property SmoothValue Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll SmoothValue public float SmoothValue { get; } Property Value float"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothParameter.Target.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothParameter.Target.html",
    "title": "Property Target | Nitrox",
    "keywords": "Property Target Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll Target public float Target { get; set; } Property Value float"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothParameter.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothParameter.html",
    "title": "Class SmoothParameter | Nitrox",
    "keywords": "Class SmoothParameter Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll public class SmoothParameter Inheritance object SmoothParameter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SmoothParameter(float) Properties SmoothValue Target Methods FixedUpdate()"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothRotation.-ctor.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothRotation.-ctor.html",
    "title": "Constructor SmoothRotation | Nitrox",
    "keywords": "Constructor SmoothRotation Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll SmoothRotation(Quaternion) public SmoothRotation(Quaternion initial) Parameters initial Quaternion SmoothRotation() public SmoothRotation()"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothRotation.Current.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothRotation.Current.html",
    "title": "Property Current | Nitrox",
    "keywords": "Property Current Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll Current public Quaternion Current { get; set; } Property Value Quaternion"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothRotation.FixedUpdate.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothRotation.FixedUpdate.html",
    "title": "Method FixedUpdate | Nitrox",
    "keywords": "Method FixedUpdate Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll FixedUpdate() public void FixedUpdate()"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothRotation.Target.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothRotation.Target.html",
    "title": "Property Target | Nitrox",
    "keywords": "Property Target Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll Target public Quaternion Target { get; set; } Property Value Quaternion"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothRotation.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothRotation.html",
    "title": "Class SmoothRotation | Nitrox",
    "keywords": "Class SmoothRotation Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll public class SmoothRotation Inheritance object SmoothRotation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SmoothRotation() SmoothRotation(Quaternion) Properties Current Target Methods FixedUpdate()"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothVector.-ctor.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothVector.-ctor.html",
    "title": "Constructor SmoothVector | Nitrox",
    "keywords": "Constructor SmoothVector Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll SmoothVector(Vector3) public SmoothVector(Vector3 initial) Parameters initial Vector3 SmoothVector() public SmoothVector()"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothVector.Current.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothVector.Current.html",
    "title": "Property Current | Nitrox",
    "keywords": "Property Current Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll Current public Vector3 Current { get; set; } Property Value Vector3"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothVector.FixedUpdate.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothVector.FixedUpdate.html",
    "title": "Method FixedUpdate | Nitrox",
    "keywords": "Method FixedUpdate Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll FixedUpdate() public void FixedUpdate()"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothVector.Target.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothVector.Target.html",
    "title": "Property Target | Nitrox",
    "keywords": "Property Target Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll Target public Vector3 Target { get; set; } Property Value Vector3"
  },
  "api/NitroxClient.Unity.Smoothing.SmoothVector.html": {
    "href": "api/NitroxClient.Unity.Smoothing.SmoothVector.html",
    "title": "Class SmoothVector | Nitrox",
    "keywords": "Class SmoothVector Namespace NitroxClient.Unity.Smoothing Assembly NitroxClient.dll public class SmoothVector Inheritance object SmoothVector Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SmoothVector() SmoothVector(Vector3) Properties Current Target Methods FixedUpdate()"
  },
  "api/NitroxClient.Unity.Smoothing.html": {
    "href": "api/NitroxClient.Unity.Smoothing.html",
    "title": "Namespace NitroxClient.Unity.Smoothing | Nitrox",
    "keywords": "Namespace NitroxClient.Unity.Smoothing Classes SmoothParameter SmoothRotation SmoothVector"
  },
  "api/NitroxClient.Unity.html": {
    "href": "api/NitroxClient.Unity.html",
    "title": "Namespace NitroxClient.Unity | Nitrox",
    "keywords": "Namespace NitroxClient.Unity Namespaces NitroxClient.Unity.Helper NitroxClient.Unity.Smoothing"
  },
  "api/NitroxClient.html": {
    "href": "api/NitroxClient.html",
    "title": "Namespace NitroxClient | Nitrox",
    "keywords": "Namespace NitroxClient Namespaces NitroxClient.Communication NitroxClient.Debuggers NitroxClient.GameLogic NitroxClient.Helpers NitroxClient.Map NitroxClient.MonoBehaviours NitroxClient.Serialization NitroxClient.Unity Classes ClientAutoFacRegistrar"
  },
  "api/NitroxModel.Constants.LANDiscoveryConstants.BROADCAST_PORTS.html": {
    "href": "api/NitroxModel.Constants.LANDiscoveryConstants.BROADCAST_PORTS.html",
    "title": "Field BROADCAST_PORTS | Nitrox",
    "keywords": "Field BROADCAST_PORTS Namespace NitroxModel.Constants Assembly NitroxModel.dll public static readonly int[] BROADCAST_PORTS Returns int[]"
  },
  "api/NitroxModel.Constants.LANDiscoveryConstants.BROADCAST_REQUEST_STRING.html": {
    "href": "api/NitroxModel.Constants.LANDiscoveryConstants.BROADCAST_REQUEST_STRING.html",
    "title": "Field BROADCAST_REQUEST_STRING | Nitrox",
    "keywords": "Field BROADCAST_REQUEST_STRING Namespace NitroxModel.Constants Assembly NitroxModel.dll public const string BROADCAST_REQUEST_STRING = \"NitroxLANRequest\" Returns string"
  },
  "api/NitroxModel.Constants.LANDiscoveryConstants.BROADCAST_RESPONSE_STRING.html": {
    "href": "api/NitroxModel.Constants.LANDiscoveryConstants.BROADCAST_RESPONSE_STRING.html",
    "title": "Field BROADCAST_RESPONSE_STRING | Nitrox",
    "keywords": "Field BROADCAST_RESPONSE_STRING Namespace NitroxModel.Constants Assembly NitroxModel.dll public const string BROADCAST_RESPONSE_STRING = \"NitroxLANResponse\" Returns string"
  },
  "api/NitroxModel.Constants.LANDiscoveryConstants.html": {
    "href": "api/NitroxModel.Constants.LANDiscoveryConstants.html",
    "title": "Class LANDiscoveryConstants | Nitrox",
    "keywords": "Class LANDiscoveryConstants Namespace NitroxModel.Constants Assembly NitroxModel.dll Shared values across LANDiscoveryClient, in NitroxClient project and LANDiscoveryServer in NitroxServer project. public static class LANDiscoveryConstants Inheritance object LANDiscoveryConstants Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields BROADCAST_PORTS BROADCAST_REQUEST_STRING BROADCAST_RESPONSE_STRING"
  },
  "api/NitroxModel.Constants.html": {
    "href": "api/NitroxModel.Constants.html",
    "title": "Namespace NitroxModel.Constants | Nitrox",
    "keywords": "Namespace NitroxModel.Constants Classes LANDiscoveryConstants Shared values across LANDiscoveryClient, in NitroxClient project and LANDiscoveryServer in NitroxServer project."
  },
  "api/NitroxModel.Core.BaseServiceProvider-1.PerformService.html": {
    "href": "api/NitroxModel.Core.BaseServiceProvider-1.PerformService.html",
    "title": "Method PerformService | Nitrox",
    "keywords": "Method PerformService Namespace NitroxModel.Core Assembly Nitrox.Test.dll PerformService(TServiced) public abstract void PerformService(TServiced serviced) Parameters serviced TServiced"
  },
  "api/NitroxModel.Core.BaseServiceProvider-1.html": {
    "href": "api/NitroxModel.Core.BaseServiceProvider-1.html",
    "title": "Class BaseServiceProvider<TServiced> | Nitrox",
    "keywords": "Class BaseServiceProvider<TServiced> Namespace NitroxModel.Core Assembly Nitrox.Test.dll public abstract class BaseServiceProvider<TServiced> : IServicer<TServiced> where TServiced : IServiced Type Parameters TServiced Inheritance object BaseServiceProvider<TServiced> Implements IServicer<TServiced> Derived ServiceAProvider ServiceBProvider Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods PerformService(TServiced)"
  },
  "api/NitroxModel.Core.DependencyInjectionTests.BeforeAll.html": {
    "href": "api/NitroxModel.Core.DependencyInjectionTests.BeforeAll.html",
    "title": "Method BeforeAll | Nitrox",
    "keywords": "Method BeforeAll Namespace NitroxModel.Core Assembly Nitrox.Test.dll BeforeAll(TestContext) [ClassInitialize] public static void BeforeAll(TestContext context) Parameters context TestContext"
  },
  "api/NitroxModel.Core.DependencyInjectionTests.ShouldResolveConcreteType.html": {
    "href": "api/NitroxModel.Core.DependencyInjectionTests.ShouldResolveConcreteType.html",
    "title": "Method ShouldResolveConcreteType | Nitrox",
    "keywords": "Method ShouldResolveConcreteType Namespace NitroxModel.Core Assembly Nitrox.Test.dll ShouldResolveConcreteType() [TestMethod] public void ShouldResolveConcreteType()"
  },
  "api/NitroxModel.Core.DependencyInjectionTests.ShouldResolveDependencyPolymorphically.html": {
    "href": "api/NitroxModel.Core.DependencyInjectionTests.ShouldResolveDependencyPolymorphically.html",
    "title": "Method ShouldResolveDependencyPolymorphically | Nitrox",
    "keywords": "Method ShouldResolveDependencyPolymorphically Namespace NitroxModel.Core Assembly Nitrox.Test.dll ShouldResolveDependencyPolymorphically() [TestMethod] public void ShouldResolveDependencyPolymorphically()"
  },
  "api/NitroxModel.Core.DependencyInjectionTests.ShouldResolveGenericDependencies.html": {
    "href": "api/NitroxModel.Core.DependencyInjectionTests.ShouldResolveGenericDependencies.html",
    "title": "Method ShouldResolveGenericDependencies | Nitrox",
    "keywords": "Method ShouldResolveGenericDependencies Namespace NitroxModel.Core Assembly Nitrox.Test.dll ShouldResolveGenericDependencies() [TestMethod] public void ShouldResolveGenericDependencies()"
  },
  "api/NitroxModel.Core.DependencyInjectionTests.ShouldResolveGenericDependenciesFromManuallyConstructedTypeInstances.html": {
    "href": "api/NitroxModel.Core.DependencyInjectionTests.ShouldResolveGenericDependenciesFromManuallyConstructedTypeInstances.html",
    "title": "Method ShouldResolveGenericDependenciesFromManuallyConstructedTypeInstances | Nitrox",
    "keywords": "Method ShouldResolveGenericDependenciesFromManuallyConstructedTypeInstances Namespace NitroxModel.Core Assembly Nitrox.Test.dll ShouldResolveGenericDependenciesFromManuallyConstructedTypeInstances() [TestMethod] public void ShouldResolveGenericDependenciesFromManuallyConstructedTypeInstances()"
  },
  "api/NitroxModel.Core.DependencyInjectionTests.html": {
    "href": "api/NitroxModel.Core.DependencyInjectionTests.html",
    "title": "Class DependencyInjectionTests | Nitrox",
    "keywords": "Class DependencyInjectionTests Namespace NitroxModel.Core Assembly Nitrox.Test.dll [TestClass] public class DependencyInjectionTests Inheritance object DependencyInjectionTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods BeforeAll(TestContext) ShouldResolveConcreteType() ShouldResolveDependencyPolymorphically() ShouldResolveGenericDependencies() ShouldResolveGenericDependenciesFromManuallyConstructedTypeInstances()"
  },
  "api/NitroxModel.Core.DependencyWithRootDependency.-ctor.html": {
    "href": "api/NitroxModel.Core.DependencyWithRootDependency.-ctor.html",
    "title": "Constructor DependencyWithRootDependency | Nitrox",
    "keywords": "Constructor DependencyWithRootDependency Namespace NitroxModel.Core Assembly Nitrox.Test.dll DependencyWithRootDependency(IRootDependency) public DependencyWithRootDependency(IRootDependency rootDependency) Parameters rootDependency IRootDependency"
  },
  "api/NitroxModel.Core.DependencyWithRootDependency.RootDependency.html": {
    "href": "api/NitroxModel.Core.DependencyWithRootDependency.RootDependency.html",
    "title": "Property RootDependency | Nitrox",
    "keywords": "Property RootDependency Namespace NitroxModel.Core Assembly Nitrox.Test.dll RootDependency public IRootDependency RootDependency { get; } Property Value IRootDependency"
  },
  "api/NitroxModel.Core.DependencyWithRootDependency.html": {
    "href": "api/NitroxModel.Core.DependencyWithRootDependency.html",
    "title": "Class DependencyWithRootDependency | Nitrox",
    "keywords": "Class DependencyWithRootDependency Namespace NitroxModel.Core Assembly Nitrox.Test.dll public class DependencyWithRootDependency Inheritance object DependencyWithRootDependency Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DependencyWithRootDependency(IRootDependency) Properties RootDependency"
  },
  "api/NitroxModel.Core.IAutoFacRegistrar.RegisterDependencies.html": {
    "href": "api/NitroxModel.Core.IAutoFacRegistrar.RegisterDependencies.html",
    "title": "Method RegisterDependencies | Nitrox",
    "keywords": "Method RegisterDependencies Namespace NitroxModel.Core Assembly NitroxModel.dll RegisterDependencies(ContainerBuilder) void RegisterDependencies(ContainerBuilder containerBuilder) Parameters containerBuilder ContainerBuilder"
  },
  "api/NitroxModel.Core.IAutoFacRegistrar.html": {
    "href": "api/NitroxModel.Core.IAutoFacRegistrar.html",
    "title": "Interface IAutoFacRegistrar | Nitrox",
    "keywords": "Interface IAutoFacRegistrar Namespace NitroxModel.Core Assembly NitroxModel.dll Nitrox projects should inherit from this interface and register their services into the DI container using the builder method. public interface IAutoFacRegistrar Methods RegisterDependencies(ContainerBuilder)"
  },
  "api/NitroxModel.Core.IRootDependency.html": {
    "href": "api/NitroxModel.Core.IRootDependency.html",
    "title": "Interface IRootDependency | Nitrox",
    "keywords": "Interface IRootDependency Namespace NitroxModel.Core Assembly Nitrox.Test.dll public interface IRootDependency"
  },
  "api/NitroxModel.Core.IServiced.html": {
    "href": "api/NitroxModel.Core.IServiced.html",
    "title": "Interface IServiced | Nitrox",
    "keywords": "Interface IServiced Namespace NitroxModel.Core Assembly Nitrox.Test.dll public interface IServiced"
  },
  "api/NitroxModel.Core.IServicer-1.PerformService.html": {
    "href": "api/NitroxModel.Core.IServicer-1.PerformService.html",
    "title": "Method PerformService | Nitrox",
    "keywords": "Method PerformService Namespace NitroxModel.Core Assembly Nitrox.Test.dll PerformService(T) void PerformService(T serviced) Parameters serviced T"
  },
  "api/NitroxModel.Core.IServicer-1.html": {
    "href": "api/NitroxModel.Core.IServicer-1.html",
    "title": "Interface IServicer<T> | Nitrox",
    "keywords": "Interface IServicer<T> Namespace NitroxModel.Core Assembly Nitrox.Test.dll public interface IServicer<T> where T : IServiced Type Parameters T Methods PerformService(T)"
  },
  "api/NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.BeginNewLifetimeScope.html",
    "title": "Method BeginNewLifetimeScope | Nitrox",
    "keywords": "Method BeginNewLifetimeScope Namespace NitroxModel.Core Assembly NitroxModel.dll BeginNewLifetimeScope() Starts a new life time scope. A single instance per registered service will be returned while this scope is active. Services can scoped to this life time using Autofac.Builder.IRegistrationBuilder<TLimit, TActivatorData, TRegistrationStyle>.InstancePerLifetimeScope(). public static void BeginNewLifetimeScope() Remarks A life time scope should be created when the game leaves the main menu and loads a level with multiplayer. It should end when the game process unloads the level (e.g. player returns to the main menu)."
  },
  "api/NitroxModel.Core.NitroxServiceLocator.Cache-1.Invalidate.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.Cache-1.Invalidate.html",
    "title": "Method Invalidate | Nitrox",
    "keywords": "Method Invalidate Namespace NitroxModel.Core Assembly NitroxModel.dll Invalidate() Invalidates the cache for type T. The next Value access will request from NitroxServiceLocator again. public static void Invalidate()"
  },
  "api/NitroxModel.Core.NitroxServiceLocator.Cache-1.Value.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.Cache-1.Value.html",
    "title": "Property Value | Nitrox",
    "keywords": "Property Value Namespace NitroxModel.Core Assembly NitroxModel.dll Value public static T Value { get; } Property Value T"
  },
  "api/NitroxModel.Core.NitroxServiceLocator.Cache-1.ValuePreLifetime.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.Cache-1.ValuePreLifetime.html",
    "title": "Property ValuePreLifetime | Nitrox",
    "keywords": "Property ValuePreLifetime Namespace NitroxModel.Core Assembly NitroxModel.dll ValuePreLifetime public static T ValuePreLifetime { get; } Property Value T"
  },
  "api/NitroxModel.Core.NitroxServiceLocator.Cache-1.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.Cache-1.html",
    "title": "Class NitroxServiceLocator.Cache<T> | Nitrox",
    "keywords": "Class NitroxServiceLocator.Cache<T> Namespace NitroxModel.Core Assembly NitroxModel.dll Generic static class to cache type with very fast lookups. Only use for singleton types. public static class NitroxServiceLocator.Cache<T> where T : class Type Parameters T Type in the cache, should be singleton. Inheritance object NitroxServiceLocator.Cache<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Value ValuePreLifetime Methods Invalidate() Invalidates the cache for type T. The next Value access will request from NitroxServiceLocator again."
  },
  "api/NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.EndCurrentLifetimeScope.html",
    "title": "Method EndCurrentLifetimeScope | Nitrox",
    "keywords": "Method EndCurrentLifetimeScope Namespace NitroxModel.Core Assembly NitroxModel.dll EndCurrentLifetimeScope() Ends the life time scoped services that were registered using Autofac.Builder.IRegistrationBuilder<TLimit, TActivatorData, TRegistrationStyle>.InstancePerLifetimeScope(). public static void EndCurrentLifetimeScope()"
  },
  "api/NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.InitializeDependencyContainer.html",
    "title": "Method InitializeDependencyContainer | Nitrox",
    "keywords": "Method InitializeDependencyContainer Namespace NitroxModel.Core Assembly NitroxModel.dll InitializeDependencyContainer(params IAutoFacRegistrar[]) public static void InitializeDependencyContainer(params IAutoFacRegistrar[] registrars) Parameters registrars IAutoFacRegistrar[]"
  },
  "api/NitroxModel.Core.NitroxServiceLocator.LifetimeScopeEnded.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.LifetimeScopeEnded.html",
    "title": "Event LifetimeScopeEnded | Nitrox",
    "keywords": "Event LifetimeScopeEnded Namespace NitroxModel.Core Assembly NitroxModel.dll public static event EventHandler LifetimeScopeEnded Returns EventHandler"
  },
  "api/NitroxModel.Core.NitroxServiceLocator.LocateOptionalService.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.LocateOptionalService.html",
    "title": "Method LocateOptionalService | Nitrox",
    "keywords": "Method LocateOptionalService Namespace NitroxModel.Core Assembly NitroxModel.dll LocateOptionalService<T>() Tries to locate the service if it exists. Can return an Optional<T> without a value. public static Optional<T> LocateOptionalService<T>() where T : class Returns Optional<T> Optional that might or might not hold the service instance. Type Parameters T Type of service to try to locate. LocateOptionalService(Type) Tries to locate the service if it exists. Can return an Optional<T> without a value. public static Optional<object> LocateOptionalService(Type serviceType) Parameters serviceType Type Type of service to try to locate. Returns Optional<object> Optional that might or might not hold the service instance."
  },
  "api/NitroxModel.Core.NitroxServiceLocator.LocateService.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.LocateService.html",
    "title": "Method LocateService | Nitrox",
    "keywords": "Method LocateService Namespace NitroxModel.Core Assembly NitroxModel.dll LocateService<T>() Retrieves a service which was registered into the DI container. Creates a new instance if required. public static T LocateService<T>() where T : class Returns T Type Parameters T Remarks This method should not be used if the constructor is available for defining a parameter where its type is the service to inject. For Unity monobehaviours the constructor is used by Unity and cannot be used to inject services. In this case, use this method. LocateService(Type) Non-generic alternative to LocateService<T>(). public static object LocateService(Type serviceType) Parameters serviceType Type Returns object"
  },
  "api/NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.LocateServicePreLifetime.html",
    "title": "Method LocateServicePreLifetime | Nitrox",
    "keywords": "Method LocateServicePreLifetime Namespace NitroxModel.Core Assembly NitroxModel.dll LocateServicePreLifetime<T>() Only locates the service in the container, pre-lifetime scope. public static T LocateServicePreLifetime<T>() Returns T Type Parameters T"
  },
  "api/NitroxModel.Core.NitroxServiceLocator.html": {
    "href": "api/NitroxModel.Core.NitroxServiceLocator.html",
    "title": "Class NitroxServiceLocator | Nitrox",
    "keywords": "Class NitroxServiceLocator Namespace NitroxModel.Core Assembly NitroxModel.dll Dependency Injection (DI) class for resolving types as defined in the DI registrar, implementing IAutoFacRegistrar. public static class NitroxServiceLocator Inheritance object NitroxServiceLocator Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods BeginNewLifetimeScope() Starts a new life time scope. A single instance per registered service will be returned while this scope is active. Services can scoped to this life time using Autofac.Builder.IRegistrationBuilder<TLimit, TActivatorData, TRegistrationStyle>.InstancePerLifetimeScope(). EndCurrentLifetimeScope() Ends the life time scoped services that were registered using Autofac.Builder.IRegistrationBuilder<TLimit, TActivatorData, TRegistrationStyle>.InstancePerLifetimeScope(). InitializeDependencyContainer(params IAutoFacRegistrar[]) LocateOptionalService(Type) Tries to locate the service if it exists. Can return an Optional<T> without a value. LocateOptionalService<T>() Tries to locate the service if it exists. Can return an Optional<T> without a value. LocateService(Type) Non-generic alternative to LocateService<T>(). LocateServicePreLifetime<T>() Only locates the service in the container, pre-lifetime scope. LocateService<T>() Retrieves a service which was registered into the DI container. Creates a new instance if required. Events LifetimeScopeEnded"
  },
  "api/NitroxModel.Core.RootDependency.html": {
    "href": "api/NitroxModel.Core.RootDependency.html",
    "title": "Class RootDependency | Nitrox",
    "keywords": "Class RootDependency Namespace NitroxModel.Core Assembly Nitrox.Test.dll public class RootDependency : IRootDependency Inheritance object RootDependency Implements IRootDependency Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxModel.Core.ServiceAProvider.PerformService.html": {
    "href": "api/NitroxModel.Core.ServiceAProvider.PerformService.html",
    "title": "Method PerformService | Nitrox",
    "keywords": "Method PerformService Namespace NitroxModel.Core Assembly Nitrox.Test.dll PerformService(ServiceRecipientA) public override void PerformService(ServiceRecipientA serviced) Parameters serviced ServiceRecipientA"
  },
  "api/NitroxModel.Core.ServiceAProvider.html": {
    "href": "api/NitroxModel.Core.ServiceAProvider.html",
    "title": "Class ServiceAProvider | Nitrox",
    "keywords": "Class ServiceAProvider Namespace NitroxModel.Core Assembly Nitrox.Test.dll public class ServiceAProvider : BaseServiceProvider<ServiceRecipientA>, IServicer<ServiceRecipientA> Inheritance object BaseServiceProvider<ServiceRecipientA> ServiceAProvider Implements IServicer<ServiceRecipientA> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods PerformService(ServiceRecipientA)"
  },
  "api/NitroxModel.Core.ServiceBProvider.PerformService.html": {
    "href": "api/NitroxModel.Core.ServiceBProvider.PerformService.html",
    "title": "Method PerformService | Nitrox",
    "keywords": "Method PerformService Namespace NitroxModel.Core Assembly Nitrox.Test.dll PerformService(ServiceRecipientB) public override void PerformService(ServiceRecipientB serviced) Parameters serviced ServiceRecipientB"
  },
  "api/NitroxModel.Core.ServiceBProvider.html": {
    "href": "api/NitroxModel.Core.ServiceBProvider.html",
    "title": "Class ServiceBProvider | Nitrox",
    "keywords": "Class ServiceBProvider Namespace NitroxModel.Core Assembly Nitrox.Test.dll public class ServiceBProvider : BaseServiceProvider<ServiceRecipientB>, IServicer<ServiceRecipientB> Inheritance object BaseServiceProvider<ServiceRecipientB> ServiceBProvider Implements IServicer<ServiceRecipientB> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods PerformService(ServiceRecipientB)"
  },
  "api/NitroxModel.Core.ServiceRecipientA.html": {
    "href": "api/NitroxModel.Core.ServiceRecipientA.html",
    "title": "Class ServiceRecipientA | Nitrox",
    "keywords": "Class ServiceRecipientA Namespace NitroxModel.Core Assembly Nitrox.Test.dll public class ServiceRecipientA : IServiced Inheritance object ServiceRecipientA Implements IServiced Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxModel.Core.ServiceRecipientB.html": {
    "href": "api/NitroxModel.Core.ServiceRecipientB.html",
    "title": "Class ServiceRecipientB | Nitrox",
    "keywords": "Class ServiceRecipientB Namespace NitroxModel.Core Assembly Nitrox.Test.dll public class ServiceRecipientB : IServiced Inheritance object ServiceRecipientB Implements IServiced Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxModel.Core.html": {
    "href": "api/NitroxModel.Core.html",
    "title": "Namespace NitroxModel.Core | Nitrox",
    "keywords": "Namespace NitroxModel.Core Classes BaseServiceProvider<TServiced> DependencyInjectionTests DependencyWithRootDependency NitroxServiceLocator Dependency Injection (DI) class for resolving types as defined in the DI registrar, implementing IAutoFacRegistrar. NitroxServiceLocator.Cache<T> Generic static class to cache type with very fast lookups. Only use for singleton types. RootDependency ServiceAProvider ServiceBProvider ServiceRecipientA ServiceRecipientB Interfaces IAutoFacRegistrar Nitrox projects should inherit from this interface and register their services into the DI container using the builder method. IRootDependency IServiced IServicer<T>"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.-ctor.html",
    "title": "Constructor AbsoluteEntityCell | Nitrox",
    "keywords": "Constructor AbsoluteEntityCell Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll AbsoluteEntityCell() [IgnoreConstructor] protected AbsoluteEntityCell() AbsoluteEntityCell(NitroxInt3, NitroxInt3, int) public AbsoluteEntityCell(NitroxInt3 batchId, NitroxInt3 cellId, int level) Parameters batchId NitroxInt3 cellId NitroxInt3 level int AbsoluteEntityCell(NitroxVector3, int) public AbsoluteEntityCell(NitroxVector3 worldSpace, int level) Parameters worldSpace NitroxVector3 level int"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.BatchId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.BatchId.html",
    "title": "Property BatchId | Nitrox",
    "keywords": "Property BatchId Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll BatchId [DataMember(Order = 1)] public NitroxInt3 BatchId { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.CellId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.CellId.html",
    "title": "Property CellId | Nitrox",
    "keywords": "Property CellId Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll CellId [DataMember(Order = 2)] public NitroxInt3 CellId { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.Center.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.Center.html",
    "title": "Property Center | Nitrox",
    "keywords": "Property Center Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Center public NitroxInt3 Center { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.Equals.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. Equals(AbsoluteEntityCell) protected bool Equals(AbsoluteEntityCell other) Parameters other AbsoluteEntityCell Returns bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.GetCellSize.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.GetCellSize.html",
    "title": "Method GetCellSize | Nitrox",
    "keywords": "Method GetCellSize Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll GetCellSize(int, NitroxInt3) public static NitroxInt3 GetCellSize(int level, NitroxInt3 blocksPerBatch) Parameters level int blocksPerBatch NitroxInt3 Returns NitroxInt3 GetCellSize() public NitroxInt3 GetCellSize() Returns NitroxInt3 GetCellSize(NitroxInt3) public NitroxInt3 GetCellSize(NitroxInt3 blocksPerBatch) Parameters blocksPerBatch NitroxInt3 Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.GetCellsPerBlock.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.GetCellsPerBlock.html",
    "title": "Method GetCellsPerBlock | Nitrox",
    "keywords": "Method GetCellsPerBlock Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll GetCellsPerBlock(int) public static int GetCellsPerBlock(int level) Parameters level int Returns int GetCellsPerBlock() public int GetCellsPerBlock() Returns int"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.GetHashCode.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.Level.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.Level.html",
    "title": "Property Level | Nitrox",
    "keywords": "Property Level Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Level [DataMember(Order = 3)] public int Level { get; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.Position.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Position public NitroxInt3 Position { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.html",
    "title": "Class AbsoluteEntityCell | Nitrox",
    "keywords": "Class AbsoluteEntityCell Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class AbsoluteEntityCell Inheritance object AbsoluteEntityCell Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors AbsoluteEntityCell() AbsoluteEntityCell(NitroxInt3, NitroxInt3, int) AbsoluteEntityCell(NitroxVector3, int) Properties BatchId CellId Center Level Position Methods Equals(AbsoluteEntityCell) Equals(object) Determines whether the specified object is equal to the current object. GetCellSize() GetCellSize(NitroxInt3) GetCellSize(int, NitroxInt3) GetCellsPerBlock() GetCellsPerBlock(int) GetHashCode() Serves as the default hash function. ToString() Returns a string that represents the current object. Operators operator ==(AbsoluteEntityCell, AbsoluteEntityCell) operator !=(AbsoluteEntityCell, AbsoluteEntityCell)"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.op_Equality.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.op_Equality.html",
    "title": "Operator operator == | Nitrox",
    "keywords": "Operator operator == Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll operator ==(AbsoluteEntityCell, AbsoluteEntityCell) public static bool operator ==(AbsoluteEntityCell left, AbsoluteEntityCell right) Parameters left AbsoluteEntityCell right AbsoluteEntityCell Returns bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.op_Inequality.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AbsoluteEntityCell.op_Inequality.html",
    "title": "Operator operator != | Nitrox",
    "keywords": "Operator operator != Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll operator !=(AbsoluteEntityCell, AbsoluteEntityCell) public static bool operator !=(AbsoluteEntityCell left, AbsoluteEntityCell right) Parameters left AbsoluteEntityCell right AbsoluteEntityCell Returns bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.AuroraEventData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AuroraEventData.-ctor.html",
    "title": "Constructor AuroraEventData | Nitrox",
    "keywords": "Constructor AuroraEventData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll AuroraEventData() [IgnoreConstructor] protected AuroraEventData() AuroraEventData(float, float) public AuroraEventData(float timeToStartCountdown, float timeToStartWarning) Parameters timeToStartCountdown float timeToStartWarning float"
  },
  "api/NitroxModel.DataStructures.GameLogic.AuroraEventData.GoalNames.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AuroraEventData.GoalNames.html",
    "title": "Field GoalNames | Nitrox",
    "keywords": "Field GoalNames Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [NonSerialized] public static readonly IReadOnlyCollection<string> GoalNames Returns IReadOnlyCollection<string>"
  },
  "api/NitroxModel.DataStructures.GameLogic.AuroraEventData.TimeToStartCountdown.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AuroraEventData.TimeToStartCountdown.html",
    "title": "Field TimeToStartCountdown | Nitrox",
    "keywords": "Field TimeToStartCountdown Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll In-game time in seconds at which Aurora's countdown happens [DataMember(Order = 1)] public float TimeToStartCountdown Returns float"
  },
  "api/NitroxModel.DataStructures.GameLogic.AuroraEventData.TimeToStartWarning.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AuroraEventData.TimeToStartWarning.html",
    "title": "Field TimeToStartWarning | Nitrox",
    "keywords": "Field TimeToStartWarning Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll In-game time in seconds at which Aurora's warning messages start [DataMember(Order = 2)] public float TimeToStartWarning Returns float"
  },
  "api/NitroxModel.DataStructures.GameLogic.AuroraEventData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.AuroraEventData.html",
    "title": "Class AuroraEventData | Nitrox",
    "keywords": "Class AuroraEventData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Aurora events data [Serializable] [DataContract] public class AuroraEventData Inheritance object AuroraEventData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AuroraEventData() AuroraEventData(float, float) Fields GoalNames TimeToStartCountdown In-game time in seconds at which Aurora's countdown happens TimeToStartWarning In-game time in seconds at which Aurora's warning messages start"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Anchor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Anchor.html",
    "title": "Field Anchor | Nitrox",
    "keywords": "Field Anchor Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 3)] public NitroxInt3 Anchor Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.BaseShape.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.BaseShape.html",
    "title": "Field BaseShape | Nitrox",
    "keywords": "Field BaseShape Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 1)] public NitroxInt3 BaseShape Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.CellOffset.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.CellOffset.html",
    "title": "Field CellOffset | Nitrox",
    "keywords": "Field CellOffset Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 2)] public NitroxInt3 CellOffset Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Cells.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Cells.html",
    "title": "Field Cells | Nitrox",
    "keywords": "Field Cells Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 6)] public byte[] Cells Returns byte[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Equals.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll Equals(BaseData) Indicates whether the current object is equal to another object of the same type. public bool Equals(BaseData other) Parameters other BaseData An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false."
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Faces.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Faces.html",
    "title": "Field Faces | Nitrox",
    "keywords": "Field Faces Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 5)] public byte[] Faces Returns byte[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.GetHashCode.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.IsGlass.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.IsGlass.html",
    "title": "Field IsGlass | Nitrox",
    "keywords": "Field IsGlass Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 9)] public byte[] IsGlass Returns byte[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Links.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Links.html",
    "title": "Field Links | Nitrox",
    "keywords": "Field Links Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 7)] public byte[] Links Returns byte[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Masks.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.Masks.html",
    "title": "Field Masks | Nitrox",
    "keywords": "Field Masks Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 8)] public byte[] Masks Returns byte[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.PreCompressionSize.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.PreCompressionSize.html",
    "title": "Field PreCompressionSize | Nitrox",
    "keywords": "Field PreCompressionSize Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 4)] public int PreCompressionSize Returns int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BaseData.html",
    "title": "Class BaseData | Nitrox",
    "keywords": "Class BaseData Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataContract] public class BaseData : IEquatable<BaseData> Inheritance object BaseData Implements IEquatable<BaseData> Inherited Members object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Fields Anchor BaseShape CellOffset Cells Faces IsGlass Links Masks PreCompressionSize Methods Equals(BaseData) Indicates whether the current object is equal to another object of the same type. Equals(object) Determines whether the specified object is equal to the current object. GetHashCode() Serves as the default hash function."
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.-ctor.html",
    "title": "Constructor BuildPieceIdentifier | Nitrox",
    "keywords": "Constructor BuildPieceIdentifier Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll BuildPieceIdentifier(NitroxTechType, NitroxBaseFace?, NitroxInt3, NitroxInt3) public BuildPieceIdentifier(NitroxTechType Recipe, NitroxBaseFace? BaseFace, NitroxInt3 BaseCell, NitroxInt3 PiecePoint) Parameters Recipe NitroxTechType BaseFace NitroxBaseFace? BaseCell NitroxInt3 PiecePoint NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.BaseCell.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.BaseCell.html",
    "title": "Field BaseCell | Nitrox",
    "keywords": "Field BaseCell Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 3)] public NitroxInt3 BaseCell Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.BaseFace.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.BaseFace.html",
    "title": "Field BaseFace | Nitrox",
    "keywords": "Field BaseFace Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 2)] public NitroxBaseFace? BaseFace Returns NitroxBaseFace?"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.PiecePoint.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.PiecePoint.html",
    "title": "Field PiecePoint | Nitrox",
    "keywords": "Field PiecePoint Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 4)] public NitroxInt3 PiecePoint Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.Recipe.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.Recipe.html",
    "title": "Field Recipe | Nitrox",
    "keywords": "Field Recipe Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 1)] public NitroxTechType Recipe Returns NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.BuildPieceIdentifier.html",
    "title": "Struct BuildPieceIdentifier | Nitrox",
    "keywords": "Struct BuildPieceIdentifier Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [Serializable] [DataContract] public record struct BuildPieceIdentifier : IEquatable<BuildPieceIdentifier> Implements IEquatable<BuildPieceIdentifier> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors BuildPieceIdentifier(NitroxTechType, NitroxBaseFace?, NitroxInt3, NitroxInt3) Fields BaseCell BaseFace PiecePoint Recipe Methods ToString() Returns the fully qualified type name of this instance."
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.NitroxBaseFace.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.NitroxBaseFace.-ctor.html",
    "title": "Constructor NitroxBaseFace | Nitrox",
    "keywords": "Constructor NitroxBaseFace Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll NitroxBaseFace(NitroxInt3, int) public NitroxBaseFace(NitroxInt3 Cell, int Direction) Parameters Cell NitroxInt3 Direction int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.NitroxBaseFace.Cell.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.NitroxBaseFace.Cell.html",
    "title": "Field Cell | Nitrox",
    "keywords": "Field Cell Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 1)] public NitroxInt3 Cell Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.NitroxBaseFace.Direction.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.NitroxBaseFace.Direction.html",
    "title": "Field Direction | Nitrox",
    "keywords": "Field Direction Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [DataMember(Order = 2)] public int Direction Returns int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.NitroxBaseFace.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.NitroxBaseFace.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.NitroxBaseFace.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.NitroxBaseFace.html",
    "title": "Struct NitroxBaseFace | Nitrox",
    "keywords": "Struct NitroxBaseFace Namespace NitroxModel.DataStructures.GameLogic.Bases Assembly NitroxModel.dll [Serializable] [DataContract] public record struct NitroxBaseFace : IEquatable<NitroxBaseFace> Implements IEquatable<NitroxBaseFace> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors NitroxBaseFace(NitroxInt3, int) Fields Cell Direction Methods ToString() Returns the fully qualified type name of this instance."
  },
  "api/NitroxModel.DataStructures.GameLogic.Bases.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Bases.html",
    "title": "Namespace NitroxModel.DataStructures.GameLogic.Bases | Nitrox",
    "keywords": "Namespace NitroxModel.DataStructures.GameLogic.Bases Classes BaseData Structs BuildPieceIdentifier NitroxBaseFace"
  },
  "api/NitroxModel.DataStructures.GameLogic.BasicItemData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.BasicItemData.-ctor.html",
    "title": "Constructor BasicItemData | Nitrox",
    "keywords": "Constructor BasicItemData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll BasicItemData() [IgnoreConstructor] protected BasicItemData() BasicItemData(NitroxId, NitroxId, byte[]) public BasicItemData(NitroxId containerId, NitroxId itemId, byte[] serializedData) Parameters containerId NitroxId itemId NitroxId serializedData byte[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.BasicItemData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.BasicItemData.html",
    "title": "Class BasicItemData | Nitrox",
    "keywords": "Class BasicItemData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class BasicItemData : ItemData Inheritance object ItemData BasicItemData Inherited Members ItemData.ContainerId ItemData.ItemId ItemData.SerializedData ItemData.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BasicItemData() BasicItemData(NitroxId, NitroxId, byte[])"
  },
  "api/NitroxModel.DataStructures.GameLogic.BasicVehicleMovementData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.BasicVehicleMovementData.-ctor.html",
    "title": "Constructor BasicVehicleMovementData | Nitrox",
    "keywords": "Constructor BasicVehicleMovementData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll BasicVehicleMovementData(NitroxTechType, NitroxId, NitroxVector3, NitroxQuaternion) public BasicVehicleMovementData(NitroxTechType techType, NitroxId id, NitroxVector3 position, NitroxQuaternion rotation) Parameters techType NitroxTechType id NitroxId position NitroxVector3 rotation NitroxQuaternion BasicVehicleMovementData(NitroxTechType, NitroxId, NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxVector3, float, float, bool, NitroxVector3?) public BasicVehicleMovementData(NitroxTechType techType, NitroxId id, NitroxVector3 position, NitroxQuaternion rotation, NitroxVector3 velocity, NitroxVector3 angularVelocity, float steeringWheelYaw, float steeringWheelPitch, bool appliedThrottle, NitroxVector3? driverPosition = null) Parameters techType NitroxTechType id NitroxId position NitroxVector3 rotation NitroxQuaternion velocity NitroxVector3 angularVelocity NitroxVector3 steeringWheelYaw float steeringWheelPitch float appliedThrottle bool driverPosition NitroxVector3?"
  },
  "api/NitroxModel.DataStructures.GameLogic.BasicVehicleMovementData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.BasicVehicleMovementData.html",
    "title": "Class BasicVehicleMovementData | Nitrox",
    "keywords": "Class BasicVehicleMovementData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class BasicVehicleMovementData : VehicleMovementData Inheritance object VehicleMovementData BasicVehicleMovementData Inherited Members VehicleMovementData.TechType VehicleMovementData.Id VehicleMovementData.Position VehicleMovementData.Rotation VehicleMovementData.Velocity VehicleMovementData.AngularVelocity VehicleMovementData.SteeringWheelYaw VehicleMovementData.SteeringWheelPitch VehicleMovementData.AppliedThrottle VehicleMovementData.DriverPosition VehicleMovementData.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BasicVehicleMovementData(NitroxTechType, NitroxId, NitroxVector3, NitroxQuaternion) BasicVehicleMovementData(NitroxTechType, NitroxId, NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxVector3, float, float, bool, NitroxVector3?)"
  },
  "api/NitroxModel.DataStructures.GameLogic.DamageTakenData.DamageType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.DamageTakenData.DamageType.html",
    "title": "Property DamageType | Nitrox",
    "keywords": "Property DamageType Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll DamageType public ushort DamageType { get; set; } Property Value ushort"
  },
  "api/NitroxModel.DataStructures.GameLogic.DamageTakenData.DealerId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.DamageTakenData.DealerId.html",
    "title": "Property DealerId | Nitrox",
    "keywords": "Property DealerId Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll DealerId public Optional<NitroxId> DealerId { get; set; } Property Value Optional<NitroxId>"
  },
  "api/NitroxModel.DataStructures.GameLogic.DamageTakenData.Position.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.DamageTakenData.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Position public NitroxVector3 Position { get; set; } Property Value NitroxVector3"
  },
  "api/NitroxModel.DataStructures.GameLogic.DamageTakenData.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.DamageTakenData.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.DamageTakenData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.DamageTakenData.html",
    "title": "Class DamageTakenData | Nitrox",
    "keywords": "Class DamageTakenData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] public class DamageTakenData Inheritance object DamageTakenData Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties DamageType DealerId Position Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.-ctor.html",
    "title": "Constructor BuildEntity | Nitrox",
    "keywords": "Constructor BuildEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll BuildEntity() [IgnoreConstructor] protected BuildEntity() BuildEntity(BaseData, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public BuildEntity(BaseData baseData, NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters baseData BaseData transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.BaseData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.BaseData.html",
    "title": "Property BaseData | Nitrox",
    "keywords": "Property BaseData Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll BaseData [DataMember(Order = 1)] public BaseData BaseData { get; set; } Property Value BaseData"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.MakeEmpty.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.MakeEmpty.html",
    "title": "Method MakeEmpty | Nitrox",
    "keywords": "Method MakeEmpty Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll MakeEmpty() public static BuildEntity MakeEmpty() Returns BuildEntity"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.OperationId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.OperationId.html",
    "title": "Field OperationId | Nitrox",
    "keywords": "Field OperationId Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll [IgnoredMember] public int OperationId Returns int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.BuildEntity.html",
    "title": "Class BuildEntity | Nitrox",
    "keywords": "Class BuildEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll [Serializable] [DataContract] public class BuildEntity : GlobalRootEntity Inheritance object Entity WorldEntity GlobalRootEntity BuildEntity Inherited Members GlobalRootEntity.From(WorldEntity) WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BuildEntity() BuildEntity(BaseData, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Fields OperationId Properties BaseData Methods MakeEmpty() ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.-ctor.html",
    "title": "Constructor GhostEntity | Nitrox",
    "keywords": "Constructor GhostEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll GhostEntity() [IgnoreConstructor] protected GhostEntity() GhostEntity(NitroxBaseFace, BaseData, float, bool, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public GhostEntity(NitroxBaseFace baseFace, BaseData baseData, float constructedAmount, bool isInside, NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters baseFace NitroxBaseFace baseData BaseData constructedAmount float isInside bool transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.BaseData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.BaseData.html",
    "title": "Property BaseData | Nitrox",
    "keywords": "Property BaseData Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll BaseData [DataMember(Order = 2)] public BaseData BaseData { get; set; } Property Value BaseData"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.BaseFace.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.BaseFace.html",
    "title": "Property BaseFace | Nitrox",
    "keywords": "Property BaseFace Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll BaseFace [DataMember(Order = 1)] public NitroxBaseFace BaseFace { get; set; } Property Value NitroxBaseFace"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.MakeEmpty.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.MakeEmpty.html",
    "title": "Method MakeEmpty | Nitrox",
    "keywords": "Method MakeEmpty Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll MakeEmpty() public static GhostEntity MakeEmpty() Returns GhostEntity"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.GhostEntity.html",
    "title": "Class GhostEntity | Nitrox",
    "keywords": "Class GhostEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll [Serializable] [DataContract] public class GhostEntity : ModuleEntity Inheritance object Entity WorldEntity GlobalRootEntity ModuleEntity GhostEntity Inherited Members ModuleEntity.ConstructedAmount ModuleEntity.IsInside GlobalRootEntity.From(WorldEntity) WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GhostEntity() GhostEntity(NitroxBaseFace, BaseData, float, bool, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Properties BaseData BaseFace Methods MakeEmpty() ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.-ctor.html",
    "title": "Constructor InteriorPieceEntity | Nitrox",
    "keywords": "Constructor InteriorPieceEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll InteriorPieceEntity() [IgnoreConstructor] protected InteriorPieceEntity() InteriorPieceEntity(NitroxBaseFace, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public InteriorPieceEntity(NitroxBaseFace baseFace, NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters baseFace NitroxBaseFace transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.BaseFace.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.BaseFace.html",
    "title": "Field BaseFace | Nitrox",
    "keywords": "Field BaseFace Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll [DataMember(Order = 1)] public NitroxBaseFace BaseFace Returns NitroxBaseFace"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.IsWaterPark.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.IsWaterPark.html",
    "title": "Property IsWaterPark | Nitrox",
    "keywords": "Property IsWaterPark Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll IsWaterPark [IgnoreDataMember] public bool IsWaterPark { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.MakeEmpty.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.MakeEmpty.html",
    "title": "Method MakeEmpty | Nitrox",
    "keywords": "Method MakeEmpty Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll MakeEmpty() public static InteriorPieceEntity MakeEmpty() Returns InteriorPieceEntity"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.InteriorPieceEntity.html",
    "title": "Class InteriorPieceEntity | Nitrox",
    "keywords": "Class InteriorPieceEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll [Serializable] [DataContract] public class InteriorPieceEntity : GlobalRootEntity Inheritance object Entity WorldEntity GlobalRootEntity InteriorPieceEntity Inherited Members GlobalRootEntity.From(WorldEntity) WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InteriorPieceEntity() InteriorPieceEntity(NitroxBaseFace, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Fields BaseFace Properties IsWaterPark Methods MakeEmpty() ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MapRoomEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MapRoomEntity.-ctor.html",
    "title": "Constructor MapRoomEntity | Nitrox",
    "keywords": "Constructor MapRoomEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll MapRoomEntity() [IgnoreConstructor] protected MapRoomEntity() MapRoomEntity(NitroxId, NitroxId, NitroxInt3) public MapRoomEntity(NitroxId id, NitroxId parentId, NitroxInt3 cell) Parameters id NitroxId parentId NitroxId cell NitroxInt3 MapRoomEntity(NitroxInt3, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public MapRoomEntity(NitroxInt3 cell, NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters cell NitroxInt3 transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MapRoomEntity.Cell.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MapRoomEntity.Cell.html",
    "title": "Property Cell | Nitrox",
    "keywords": "Property Cell Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll Cell [DataMember(Order = 1)] public NitroxInt3 Cell { get; set; } Property Value NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MapRoomEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MapRoomEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MapRoomEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MapRoomEntity.html",
    "title": "Class MapRoomEntity | Nitrox",
    "keywords": "Class MapRoomEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll [Serializable] [DataContract] public class MapRoomEntity : GlobalRootEntity Inheritance object Entity WorldEntity GlobalRootEntity MapRoomEntity Inherited Members GlobalRootEntity.From(WorldEntity) WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MapRoomEntity() MapRoomEntity(NitroxId, NitroxId, NitroxInt3) MapRoomEntity(NitroxInt3, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Properties Cell Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.-ctor.html",
    "title": "Constructor ModuleEntity | Nitrox",
    "keywords": "Constructor ModuleEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll ModuleEntity() [IgnoreConstructor] protected ModuleEntity() ModuleEntity(float, bool, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public ModuleEntity(float constructedAmount, bool isInside, NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters constructedAmount float isInside bool transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.ConstructedAmount.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.ConstructedAmount.html",
    "title": "Property ConstructedAmount | Nitrox",
    "keywords": "Property ConstructedAmount Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll ConstructedAmount [DataMember(Order = 1)] public float ConstructedAmount { get; set; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.IsInside.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.IsInside.html",
    "title": "Property IsInside | Nitrox",
    "keywords": "Property IsInside Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll IsInside [DataMember(Order = 2)] public bool IsInside { get; set; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.MakeEmpty.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.MakeEmpty.html",
    "title": "Method MakeEmpty | Nitrox",
    "keywords": "Method MakeEmpty Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll MakeEmpty() public static ModuleEntity MakeEmpty() Returns ModuleEntity"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.ModuleEntity.html",
    "title": "Class ModuleEntity | Nitrox",
    "keywords": "Class ModuleEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll [Serializable] [DataContract] [ProtoInclude(50, typeof(GhostEntity))] public class ModuleEntity : GlobalRootEntity Inheritance object Entity WorldEntity GlobalRootEntity ModuleEntity Derived GhostEntity Inherited Members GlobalRootEntity.From(WorldEntity) WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ModuleEntity() ModuleEntity(float, bool, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Properties ConstructedAmount IsInside Methods MakeEmpty() ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MoonpoolEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MoonpoolEntity.-ctor.html",
    "title": "Constructor MoonpoolEntity | Nitrox",
    "keywords": "Constructor MoonpoolEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll MoonpoolEntity() [IgnoreConstructor] protected MoonpoolEntity() MoonpoolEntity(NitroxId, NitroxId, NitroxInt3) public MoonpoolEntity(NitroxId id, NitroxId parentId, NitroxInt3 cell) Parameters id NitroxId parentId NitroxId cell NitroxInt3 MoonpoolEntity(NitroxInt3, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public MoonpoolEntity(NitroxInt3 cell, NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters cell NitroxInt3 transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MoonpoolEntity.Cell.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MoonpoolEntity.Cell.html",
    "title": "Property Cell | Nitrox",
    "keywords": "Property Cell Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll Cell [DataMember(Order = 1)] public NitroxInt3 Cell { get; set; } Property Value NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MoonpoolEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MoonpoolEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MoonpoolEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.MoonpoolEntity.html",
    "title": "Class MoonpoolEntity | Nitrox",
    "keywords": "Class MoonpoolEntity Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Assembly NitroxModel.dll [Serializable] [DataContract] public class MoonpoolEntity : GlobalRootEntity Inheritance object Entity WorldEntity GlobalRootEntity MoonpoolEntity Inherited Members GlobalRootEntity.From(WorldEntity) WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MoonpoolEntity() MoonpoolEntity(NitroxId, NitroxId, NitroxInt3) MoonpoolEntity(NitroxInt3, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Properties Cell Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Bases.html",
    "title": "Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases | Nitrox",
    "keywords": "Namespace NitroxModel.DataStructures.GameLogic.Entities.Bases Classes BuildEntity GhostEntity InteriorPieceEntity MapRoomEntity ModuleEntity MoonpoolEntity"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.CellRootEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.CellRootEntity.-ctor.html",
    "title": "Constructor CellRootEntity | Nitrox",
    "keywords": "Constructor CellRootEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll CellRootEntity() [IgnoreConstructor] protected CellRootEntity() CellRootEntity(NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxTechType, int, string, bool, NitroxId) public CellRootEntity(NitroxVector3 localPosition, NitroxQuaternion localRotation, NitroxVector3 scale, NitroxTechType techType, int level, string classId, bool spawnedByServer, NitroxId id) Parameters localPosition NitroxVector3 localRotation NitroxQuaternion scale NitroxVector3 techType NitroxTechType level int classId string spawnedByServer bool id NitroxId CellRootEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public CellRootEntity(NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.CellRootEntity.CLASS_ID.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.CellRootEntity.CLASS_ID.html",
    "title": "Field CLASS_ID | Nitrox",
    "keywords": "Field CLASS_ID Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll public static readonly string CLASS_ID Returns string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.CellRootEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.CellRootEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.CellRootEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.CellRootEntity.html",
    "title": "Class CellRootEntity | Nitrox",
    "keywords": "Class CellRootEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class CellRootEntity : WorldEntity Inheritance object Entity WorldEntity CellRootEntity Inherited Members WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CellRootEntity() CellRootEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) CellRootEntity(NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxTechType, int, string, bool, NitroxId) Fields CLASS_ID Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.EscapePodWorldEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.EscapePodWorldEntity.-ctor.html",
    "title": "Constructor EscapePodWorldEntity | Nitrox",
    "keywords": "Constructor EscapePodWorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll EscapePodWorldEntity() [IgnoreConstructor] protected EscapePodWorldEntity() EscapePodWorldEntity(NitroxVector3, NitroxId, EntityMetadata) public EscapePodWorldEntity(NitroxVector3 position, NitroxId id, EntityMetadata metadata) Parameters position NitroxVector3 id NitroxId metadata EntityMetadata EscapePodWorldEntity(bool, List<ushort>, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public EscapePodWorldEntity(bool damaged, List<ushort> players, NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters damaged bool players List<ushort> transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.EscapePodWorldEntity.Damaged.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.EscapePodWorldEntity.Damaged.html",
    "title": "Property Damaged | Nitrox",
    "keywords": "Property Damaged Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Damaged [DataMember(Order = 1)] public bool Damaged { get; set; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.EscapePodWorldEntity.Players.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.EscapePodWorldEntity.Players.html",
    "title": "Property Players | Nitrox",
    "keywords": "Property Players Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Players [DataMember(Order = 2)] public List<ushort> Players { get; set; } Property Value List<ushort>"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.EscapePodWorldEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.EscapePodWorldEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.EscapePodWorldEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.EscapePodWorldEntity.html",
    "title": "Class EscapePodWorldEntity | Nitrox",
    "keywords": "Class EscapePodWorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class EscapePodWorldEntity : GlobalRootEntity Inheritance object Entity WorldEntity GlobalRootEntity EscapePodWorldEntity Inherited Members GlobalRootEntity.From(WorldEntity) WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EscapePodWorldEntity() EscapePodWorldEntity(NitroxVector3, NitroxId, EntityMetadata) EscapePodWorldEntity(bool, List<ushort>, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Properties Damaged Players Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.GlobalRootEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.GlobalRootEntity.-ctor.html",
    "title": "Constructor GlobalRootEntity | Nitrox",
    "keywords": "Constructor GlobalRootEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll GlobalRootEntity() [IgnoreConstructor] protected GlobalRootEntity() GlobalRootEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public GlobalRootEntity(NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.GlobalRootEntity.From.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.GlobalRootEntity.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll From(WorldEntity) public static GlobalRootEntity From(WorldEntity worldEntity) Parameters worldEntity WorldEntity Returns GlobalRootEntity"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.GlobalRootEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.GlobalRootEntity.html",
    "title": "Class GlobalRootEntity | Nitrox",
    "keywords": "Class GlobalRootEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] [ProtoInclude(50, typeof(BuildEntity))] [ProtoInclude(51, typeof(EscapePodWorldEntity))] [ProtoInclude(52, typeof(InteriorPieceEntity))] [ProtoInclude(53, typeof(MapRoomEntity))] [ProtoInclude(54, typeof(ModuleEntity))] [ProtoInclude(55, typeof(MoonpoolEntity))] [ProtoInclude(56, typeof(PlanterEntity))] [ProtoInclude(57, typeof(PlayerWorldEntity))] [ProtoInclude(58, typeof(VehicleWorldEntity))] public class GlobalRootEntity : WorldEntity Inheritance object Entity WorldEntity GlobalRootEntity Derived BuildEntity InteriorPieceEntity MapRoomEntity ModuleEntity MoonpoolEntity EscapePodWorldEntity PlanterEntity PlayerWorldEntity VehicleWorldEntity Inherited Members WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer WorldEntity.ToString() Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GlobalRootEntity() GlobalRootEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Methods From(WorldEntity)"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledBatteryEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledBatteryEntity.-ctor.html",
    "title": "Constructor InstalledBatteryEntity | Nitrox",
    "keywords": "Constructor InstalledBatteryEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll InstalledBatteryEntity() [IgnoreConstructor] protected InstalledBatteryEntity() InstalledBatteryEntity(NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public InstalledBatteryEntity(NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledBatteryEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledBatteryEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledBatteryEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledBatteryEntity.html",
    "title": "Class InstalledBatteryEntity | Nitrox",
    "keywords": "Class InstalledBatteryEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class InstalledBatteryEntity : Entity Inheritance object Entity InstalledBatteryEntity Inherited Members Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InstalledBatteryEntity() InstalledBatteryEntity(NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledModuleEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledModuleEntity.-ctor.html",
    "title": "Constructor InstalledModuleEntity | Nitrox",
    "keywords": "Constructor InstalledModuleEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll InstalledModuleEntity() [IgnoreConstructor] protected InstalledModuleEntity() InstalledModuleEntity(string, string, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public InstalledModuleEntity(string slot, string classId, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters slot string classId string id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledModuleEntity.ClassId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledModuleEntity.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ClassId [DataMember(Order = 2)] public string ClassId { get; set; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledModuleEntity.Slot.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledModuleEntity.Slot.html",
    "title": "Property Slot | Nitrox",
    "keywords": "Property Slot Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Slot [DataMember(Order = 1)] public string Slot { get; set; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledModuleEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledModuleEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledModuleEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InstalledModuleEntity.html",
    "title": "Class InstalledModuleEntity | Nitrox",
    "keywords": "Class InstalledModuleEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class InstalledModuleEntity : Entity Inheritance object Entity InstalledModuleEntity Inherited Members Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InstalledModuleEntity() InstalledModuleEntity(string, string, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Properties ClassId Slot Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryEntity.-ctor.html",
    "title": "Constructor InventoryEntity | Nitrox",
    "keywords": "Constructor InventoryEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll InventoryEntity() [IgnoreConstructor] protected InventoryEntity() InventoryEntity(int, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public InventoryEntity(int componentIndex, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters componentIndex int id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryEntity.ComponentIndex.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryEntity.ComponentIndex.html",
    "title": "Property ComponentIndex | Nitrox",
    "keywords": "Property ComponentIndex Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ComponentIndex [DataMember(Order = 1)] public int ComponentIndex { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryEntity.html",
    "title": "Class InventoryEntity | Nitrox",
    "keywords": "Class InventoryEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Represents an object that can hold InventoryItemEntity, such as the locker in the escape pod. [Serializable] [DataContract] public class InventoryEntity : Entity Inheritance object Entity InventoryEntity Inherited Members Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InventoryEntity() InventoryEntity(int, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Properties ComponentIndex Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryItemEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryItemEntity.-ctor.html",
    "title": "Constructor InventoryItemEntity | Nitrox",
    "keywords": "Constructor InventoryItemEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll InventoryItemEntity() [IgnoreConstructor] protected InventoryItemEntity() InventoryItemEntity(NitroxId, string, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public InventoryItemEntity(NitroxId id, string classId, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters id NitroxId classId string techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryItemEntity.ClassId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryItemEntity.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ClassId [DataMember(Order = 1)] public string ClassId { get; set; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryItemEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryItemEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryItemEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.InventoryItemEntity.html",
    "title": "Class InventoryItemEntity | Nitrox",
    "keywords": "Class InventoryItemEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class InventoryItemEntity : Entity Inheritance object Entity InventoryItemEntity Inherited Members Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InventoryItemEntity() InventoryItemEntity(NitroxId, string, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Properties ClassId Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredCellGhostMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredCellGhostMetadata.-ctor.html",
    "title": "Constructor BaseAnchoredCellGhostMetadata | Nitrox",
    "keywords": "Constructor BaseAnchoredCellGhostMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll BaseAnchoredCellGhostMetadata() [IgnoreConstructor] public BaseAnchoredCellGhostMetadata() BaseAnchoredCellGhostMetadata(NitroxInt3?, NitroxInt3) public BaseAnchoredCellGhostMetadata(NitroxInt3? anchoredCell, NitroxInt3 targetOffset) Parameters anchoredCell NitroxInt3? targetOffset NitroxInt3 Remarks Used for json deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredCellGhostMetadata.AnchoredCell.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredCellGhostMetadata.AnchoredCell.html",
    "title": "Property AnchoredCell | Nitrox",
    "keywords": "Property AnchoredCell Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll AnchoredCell [DataMember(Order = 1)] public NitroxInt3? AnchoredCell { get; set; } Property Value NitroxInt3?"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredCellGhostMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredCellGhostMetadata.html",
    "title": "Class BaseAnchoredCellGhostMetadata | Nitrox",
    "keywords": "Class BaseAnchoredCellGhostMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll [Serializable] [DataContract] public class BaseAnchoredCellGhostMetadata : GhostMetadata Inheritance object EntityMetadata GhostMetadata BaseAnchoredCellGhostMetadata Inherited Members GhostMetadata.TargetOffset object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BaseAnchoredCellGhostMetadata() BaseAnchoredCellGhostMetadata(NitroxInt3?, NitroxInt3) Properties AnchoredCell"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredFaceGhostMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredFaceGhostMetadata.-ctor.html",
    "title": "Constructor BaseAnchoredFaceGhostMetadata | Nitrox",
    "keywords": "Constructor BaseAnchoredFaceGhostMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll BaseAnchoredFaceGhostMetadata() [IgnoreConstructor] public BaseAnchoredFaceGhostMetadata() BaseAnchoredFaceGhostMetadata(NitroxBaseFace?, NitroxInt3) public BaseAnchoredFaceGhostMetadata(NitroxBaseFace? anchoredFace, NitroxInt3 targetOffset) Parameters anchoredFace NitroxBaseFace? targetOffset NitroxInt3 Remarks Used for json deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredFaceGhostMetadata.AnchoredFace.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredFaceGhostMetadata.AnchoredFace.html",
    "title": "Property AnchoredFace | Nitrox",
    "keywords": "Property AnchoredFace Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll AnchoredFace [DataMember(Order = 1)] public NitroxBaseFace? AnchoredFace { get; set; } Property Value NitroxBaseFace?"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredFaceGhostMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseAnchoredFaceGhostMetadata.html",
    "title": "Class BaseAnchoredFaceGhostMetadata | Nitrox",
    "keywords": "Class BaseAnchoredFaceGhostMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll [Serializable] [DataContract] public class BaseAnchoredFaceGhostMetadata : GhostMetadata Inheritance object EntityMetadata GhostMetadata BaseAnchoredFaceGhostMetadata Inherited Members GhostMetadata.TargetOffset object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BaseAnchoredFaceGhostMetadata() BaseAnchoredFaceGhostMetadata(NitroxBaseFace?, NitroxInt3) Properties AnchoredFace"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseDeconstructableGhostMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseDeconstructableGhostMetadata.-ctor.html",
    "title": "Constructor BaseDeconstructableGhostMetadata | Nitrox",
    "keywords": "Constructor BaseDeconstructableGhostMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll BaseDeconstructableGhostMetadata() [IgnoreConstructor] public BaseDeconstructableGhostMetadata() BaseDeconstructableGhostMetadata(NitroxBaseFace?, string, NitroxInt3) public BaseDeconstructableGhostMetadata(NitroxBaseFace? moduleFace, string classId, NitroxInt3 targetOffset) Parameters moduleFace NitroxBaseFace? classId string targetOffset NitroxInt3 Remarks Used for json deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseDeconstructableGhostMetadata.ClassId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseDeconstructableGhostMetadata.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll ClassId [DataMember(Order = 2)] public string ClassId { get; set; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseDeconstructableGhostMetadata.ModuleFace.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseDeconstructableGhostMetadata.ModuleFace.html",
    "title": "Property ModuleFace | Nitrox",
    "keywords": "Property ModuleFace Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll ModuleFace [DataMember(Order = 1)] public NitroxBaseFace? ModuleFace { get; set; } Property Value NitroxBaseFace?"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseDeconstructableGhostMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseDeconstructableGhostMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseDeconstructableGhostMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.BaseDeconstructableGhostMetadata.html",
    "title": "Class BaseDeconstructableGhostMetadata | Nitrox",
    "keywords": "Class BaseDeconstructableGhostMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll [Serializable] [DataContract] public class BaseDeconstructableGhostMetadata : GhostMetadata Inheritance object EntityMetadata GhostMetadata BaseDeconstructableGhostMetadata Inherited Members GhostMetadata.TargetOffset object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BaseDeconstructableGhostMetadata() BaseDeconstructableGhostMetadata(NitroxBaseFace?, string, NitroxInt3) Properties ClassId ModuleFace Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.GhostMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.GhostMetadata.-ctor.html",
    "title": "Constructor GhostMetadata | Nitrox",
    "keywords": "Constructor GhostMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll GhostMetadata() [IgnoreConstructor] public GhostMetadata() GhostMetadata(NitroxInt3) public GhostMetadata(NitroxInt3 targetOffset) Parameters targetOffset NitroxInt3 Remarks Used for json deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.GhostMetadata.TargetOffset.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.GhostMetadata.TargetOffset.html",
    "title": "Property TargetOffset | Nitrox",
    "keywords": "Property TargetOffset Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll TargetOffset [DataMember(Order = 1)] public NitroxInt3 TargetOffset { get; set; } Property Value NitroxInt3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.GhostMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.GhostMetadata.html",
    "title": "Class GhostMetadata | Nitrox",
    "keywords": "Class GhostMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Assembly NitroxModel.dll [Serializable] [DataContract] [ProtoInclude(50, typeof(BaseDeconstructableGhostMetadata))] [ProtoInclude(51, typeof(BaseAnchoredFaceGhostMetadata))] [ProtoInclude(52, typeof(BaseAnchoredCellGhostMetadata))] public class GhostMetadata : EntityMetadata Inheritance object EntityMetadata GhostMetadata Derived BaseAnchoredCellGhostMetadata BaseAnchoredFaceGhostMetadata BaseDeconstructableGhostMetadata Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GhostMetadata() GhostMetadata(NitroxInt3) Properties TargetOffset"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases.html",
    "title": "Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases | Nitrox",
    "keywords": "Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Classes BaseAnchoredCellGhostMetadata BaseAnchoredFaceGhostMetadata BaseDeconstructableGhostMetadata GhostMetadata"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.BatteryMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.BatteryMetadata.-ctor.html",
    "title": "Constructor BatteryMetadata | Nitrox",
    "keywords": "Constructor BatteryMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll BatteryMetadata() [IgnoreConstructor] protected BatteryMetadata() BatteryMetadata(float) public BatteryMetadata(float charge) Parameters charge float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.BatteryMetadata.Charge.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.BatteryMetadata.Charge.html",
    "title": "Property Charge | Nitrox",
    "keywords": "Property Charge Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Charge [DataMember(Order = 1)] public float Charge { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.BatteryMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.BatteryMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.BatteryMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.BatteryMetadata.html",
    "title": "Class BatteryMetadata | Nitrox",
    "keywords": "Class BatteryMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class BatteryMetadata : EntityMetadata Inheritance object EntityMetadata BatteryMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BatteryMetadata() BatteryMetadata(float) Properties Charge Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.ConstructorMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.ConstructorMetadata.-ctor.html",
    "title": "Constructor ConstructorMetadata | Nitrox",
    "keywords": "Constructor ConstructorMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ConstructorMetadata() [IgnoreConstructor] protected ConstructorMetadata() ConstructorMetadata(bool) public ConstructorMetadata(bool deployed) Parameters deployed bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.ConstructorMetadata.Deployed.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.ConstructorMetadata.Deployed.html",
    "title": "Property Deployed | Nitrox",
    "keywords": "Property Deployed Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Deployed [DataMember(Order = 1)] public bool Deployed { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.ConstructorMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.ConstructorMetadata.html",
    "title": "Class ConstructorMetadata | Nitrox",
    "keywords": "Class ConstructorMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class ConstructorMetadata : EntityMetadata Inheritance object EntityMetadata ConstructorMetadata Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ConstructorMetadata() ConstructorMetadata(bool) Properties Deployed"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.-ctor.html",
    "title": "Constructor CrafterMetadata | Nitrox",
    "keywords": "Constructor CrafterMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll CrafterMetadata() [IgnoreConstructor] protected CrafterMetadata() CrafterMetadata(NitroxTechType, float, float) public CrafterMetadata(NitroxTechType techType, float startTime, float duration) Parameters techType NitroxTechType startTime float duration float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.Duration.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.Duration.html",
    "title": "Property Duration | Nitrox",
    "keywords": "Property Duration Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Duration [DataMember(Order = 3)] public float Duration { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.StartTime.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.StartTime.html",
    "title": "Property StartTime | Nitrox",
    "keywords": "Property StartTime Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll StartTime [DataMember(Order = 2)] public float StartTime { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.TechType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll TechType [DataMember(Order = 1)] public NitroxTechType TechType { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CrafterMetadata.html",
    "title": "Class CrafterMetadata | Nitrox",
    "keywords": "Class CrafterMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class CrafterMetadata : EntityMetadata Inheritance object EntityMetadata CrafterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CrafterMetadata() CrafterMetadata(NitroxTechType, float, float) Properties Duration StartTime TechType Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsLightingMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsLightingMetadata.-ctor.html",
    "title": "Constructor CyclopsLightingMetadata | Nitrox",
    "keywords": "Constructor CyclopsLightingMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll CyclopsLightingMetadata() [IgnoreConstructor] protected CyclopsLightingMetadata() CyclopsLightingMetadata(bool, bool) public CyclopsLightingMetadata(bool floodLightsOn, bool internalLightsOn) Parameters floodLightsOn bool internalLightsOn bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsLightingMetadata.FloodLightsOn.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsLightingMetadata.FloodLightsOn.html",
    "title": "Property FloodLightsOn | Nitrox",
    "keywords": "Property FloodLightsOn Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll FloodLightsOn [DataMember(Order = 1)] public bool FloodLightsOn { get; set; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsLightingMetadata.InternalLightsOn.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsLightingMetadata.InternalLightsOn.html",
    "title": "Property InternalLightsOn | Nitrox",
    "keywords": "Property InternalLightsOn Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll InternalLightsOn [DataMember(Order = 2)] public bool InternalLightsOn { get; set; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsLightingMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsLightingMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsLightingMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsLightingMetadata.html",
    "title": "Class CyclopsLightingMetadata | Nitrox",
    "keywords": "Class CyclopsLightingMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class CyclopsLightingMetadata : EntityMetadata Inheritance object EntityMetadata CyclopsLightingMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsLightingMetadata() CyclopsLightingMetadata(bool, bool) Properties FloodLightsOn InternalLightsOn Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.-ctor.html",
    "title": "Constructor CyclopsMetadata | Nitrox",
    "keywords": "Constructor CyclopsMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll CyclopsMetadata() [IgnoreConstructor] protected CyclopsMetadata() CyclopsMetadata(bool, bool, bool, bool, int, float) public CyclopsMetadata(bool silentRunningOn, bool shieldOn, bool sonarOn, bool engineOn, int engineMode, float health) Parameters silentRunningOn bool shieldOn bool sonarOn bool engineOn bool engineMode int health float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.EngineMode.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.EngineMode.html",
    "title": "Property EngineMode | Nitrox",
    "keywords": "Property EngineMode Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll EngineMode [DataMember(Order = 5)] public int EngineMode { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.EngineOn.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.EngineOn.html",
    "title": "Property EngineOn | Nitrox",
    "keywords": "Property EngineOn Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll EngineOn [DataMember(Order = 4)] public bool EngineOn { get; set; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.Health.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.Health.html",
    "title": "Property Health | Nitrox",
    "keywords": "Property Health Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Health [DataMember(Order = 6)] public float Health { get; set; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.ShieldOn.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.ShieldOn.html",
    "title": "Property ShieldOn | Nitrox",
    "keywords": "Property ShieldOn Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ShieldOn [DataMember(Order = 2)] public bool ShieldOn { get; set; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.SilentRunningOn.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.SilentRunningOn.html",
    "title": "Property SilentRunningOn | Nitrox",
    "keywords": "Property SilentRunningOn Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll SilentRunningOn [DataMember(Order = 1)] public bool SilentRunningOn { get; set; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.SonarOn.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.SonarOn.html",
    "title": "Property SonarOn | Nitrox",
    "keywords": "Property SonarOn Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll SonarOn [DataMember(Order = 3)] public bool SonarOn { get; set; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.CyclopsMetadata.html",
    "title": "Class CyclopsMetadata | Nitrox",
    "keywords": "Class CyclopsMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class CyclopsMetadata : EntityMetadata Inheritance object EntityMetadata CyclopsMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsMetadata() CyclopsMetadata(bool, bool, bool, bool, int, float) Properties EngineMode EngineOn Health ShieldOn SilentRunningOn SonarOn Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntityMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntityMetadata.html",
    "title": "Class EntityMetadata | Nitrox",
    "keywords": "Class EntityMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] [ProtoInclude(50, typeof(KeypadMetadata))] [ProtoInclude(60, typeof(SealedDoorMetadata))] [ProtoInclude(70, typeof(PrecursorDoorwayMetadata))] [ProtoInclude(80, typeof(PrecursorTeleporterMetadata))] [ProtoInclude(90, typeof(PrecursorKeyTerminalMetadata))] [ProtoInclude(100, typeof(PrecursorTeleporterActivationTerminalMetadata))] [ProtoInclude(110, typeof(StarshipDoorMetadata))] [ProtoInclude(120, typeof(WeldableWallPanelGenericMetadata))] [ProtoInclude(130, typeof(IncubatorMetadata))] [ProtoInclude(140, typeof(EntitySignMetadata))] [ProtoInclude(150, typeof(ConstructorMetadata))] [ProtoInclude(160, typeof(FlashlightMetadata))] [ProtoInclude(170, typeof(BatteryMetadata))] [ProtoInclude(180, typeof(RepairedComponentMetadata))] [ProtoInclude(190, typeof(CrafterMetadata))] [ProtoInclude(200, typeof(PlantableMetadata))] [ProtoInclude(210, typeof(CyclopsMetadata))] [ProtoInclude(220, typeof(SeamothMetadata))] [ProtoInclude(230, typeof(SubNameInputMetadata))] [ProtoInclude(240, typeof(RocketMetadata))] [ProtoInclude(250, typeof(CyclopsLightingMetadata))] [ProtoInclude(260, typeof(FireExtinguisherHolderMetadata))] [ProtoInclude(270, typeof(PlayerMetadata))] [ProtoInclude(280, typeof(GhostMetadata))] [ProtoInclude(290, typeof(WaterParkCreatureMetadata))] public abstract class EntityMetadata Inheritance object EntityMetadata Derived GhostMetadata BatteryMetadata ConstructorMetadata CrafterMetadata CyclopsLightingMetadata CyclopsMetadata EntitySignMetadata FireExtinguisherHolderMetadata FlashlightMetadata IncubatorMetadata KeypadMetadata PlantableMetadata PlayerMetadata PrecursorDoorwayMetadata PrecursorKeyTerminalMetadata PrecursorTeleporterActivationTerminalMetadata PrecursorTeleporterMetadata RepairedComponentMetadata RocketMetadata SealedDoorMetadata SeamothMetadata StarshipDoorMetadata SubNameInputMetadata WaterParkCreatureMetadata WeldableWallPanelGenericMetadata Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.-ctor.html",
    "title": "Constructor EntitySignMetadata | Nitrox",
    "keywords": "Constructor EntitySignMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll EntitySignMetadata() [IgnoreConstructor] protected EntitySignMetadata() EntitySignMetadata(string, int, int, bool[], bool) public EntitySignMetadata(string text, int colorIndex, int scaleIndex, bool[] elements, bool background) Parameters text string colorIndex int scaleIndex int elements bool[] background bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.Background.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.Background.html",
    "title": "Property Background | Nitrox",
    "keywords": "Property Background Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Background [DataMember(Order = 5)] public bool Background { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.ColorIndex.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.ColorIndex.html",
    "title": "Property ColorIndex | Nitrox",
    "keywords": "Property ColorIndex Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ColorIndex [DataMember(Order = 2)] public int ColorIndex { get; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.Elements.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.Elements.html",
    "title": "Property Elements | Nitrox",
    "keywords": "Property Elements Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Elements [DataMember(Order = 4)] public bool[] Elements { get; } Property Value bool[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.ScaleIndex.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.ScaleIndex.html",
    "title": "Property ScaleIndex | Nitrox",
    "keywords": "Property ScaleIndex Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ScaleIndex [DataMember(Order = 3)] public int ScaleIndex { get; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.Text.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.Text.html",
    "title": "Property Text | Nitrox",
    "keywords": "Property Text Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Text [DataMember(Order = 1)] public string Text { get; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.EntitySignMetadata.html",
    "title": "Class EntitySignMetadata | Nitrox",
    "keywords": "Class EntitySignMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class EntitySignMetadata : EntityMetadata Inheritance object EntityMetadata EntitySignMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntitySignMetadata() EntitySignMetadata(string, int, int, bool[], bool) Properties Background ColorIndex Elements ScaleIndex Text Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FireExtinguisherHolderMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FireExtinguisherHolderMetadata.-ctor.html",
    "title": "Constructor FireExtinguisherHolderMetadata | Nitrox",
    "keywords": "Constructor FireExtinguisherHolderMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll FireExtinguisherHolderMetadata() [IgnoreConstructor] protected FireExtinguisherHolderMetadata() FireExtinguisherHolderMetadata(bool, float) public FireExtinguisherHolderMetadata(bool hasExtinguisher, float fuel) Parameters hasExtinguisher bool fuel float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FireExtinguisherHolderMetadata.Fuel.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FireExtinguisherHolderMetadata.Fuel.html",
    "title": "Property Fuel | Nitrox",
    "keywords": "Property Fuel Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Fuel [DataMember(Order = 2)] public float Fuel { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FireExtinguisherHolderMetadata.HasExtinguisher.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FireExtinguisherHolderMetadata.HasExtinguisher.html",
    "title": "Property HasExtinguisher | Nitrox",
    "keywords": "Property HasExtinguisher Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll HasExtinguisher [DataMember(Order = 1)] public bool HasExtinguisher { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FireExtinguisherHolderMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FireExtinguisherHolderMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FireExtinguisherHolderMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FireExtinguisherHolderMetadata.html",
    "title": "Class FireExtinguisherHolderMetadata | Nitrox",
    "keywords": "Class FireExtinguisherHolderMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class FireExtinguisherHolderMetadata : EntityMetadata Inheritance object EntityMetadata FireExtinguisherHolderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FireExtinguisherHolderMetadata() FireExtinguisherHolderMetadata(bool, float) Properties Fuel HasExtinguisher Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FlashlightMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FlashlightMetadata.-ctor.html",
    "title": "Constructor FlashlightMetadata | Nitrox",
    "keywords": "Constructor FlashlightMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll FlashlightMetadata() [IgnoreConstructor] protected FlashlightMetadata() FlashlightMetadata(bool) public FlashlightMetadata(bool on) Parameters on bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FlashlightMetadata.On.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FlashlightMetadata.On.html",
    "title": "Property On | Nitrox",
    "keywords": "Property On Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll On [DataMember(Order = 1)] public bool On { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FlashlightMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FlashlightMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FlashlightMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.FlashlightMetadata.html",
    "title": "Class FlashlightMetadata | Nitrox",
    "keywords": "Class FlashlightMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class FlashlightMetadata : EntityMetadata Inheritance object EntityMetadata FlashlightMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FlashlightMetadata() FlashlightMetadata(bool) Properties On Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.IncubatorMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.IncubatorMetadata.-ctor.html",
    "title": "Constructor IncubatorMetadata | Nitrox",
    "keywords": "Constructor IncubatorMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll IncubatorMetadata() [IgnoreConstructor] protected IncubatorMetadata() IncubatorMetadata(bool, bool) public IncubatorMetadata(bool powered, bool hatched) Parameters powered bool hatched bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.IncubatorMetadata.Hatched.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.IncubatorMetadata.Hatched.html",
    "title": "Property Hatched | Nitrox",
    "keywords": "Property Hatched Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Hatched [DataMember(Order = 2)] public bool Hatched { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.IncubatorMetadata.Powered.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.IncubatorMetadata.Powered.html",
    "title": "Property Powered | Nitrox",
    "keywords": "Property Powered Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Powered [DataMember(Order = 1)] public bool Powered { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.IncubatorMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.IncubatorMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.IncubatorMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.IncubatorMetadata.html",
    "title": "Class IncubatorMetadata | Nitrox",
    "keywords": "Class IncubatorMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class IncubatorMetadata : EntityMetadata Inheritance object EntityMetadata IncubatorMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors IncubatorMetadata() IncubatorMetadata(bool, bool) Properties Hatched Powered Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.KeypadMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.KeypadMetadata.-ctor.html",
    "title": "Constructor KeypadMetadata | Nitrox",
    "keywords": "Constructor KeypadMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll KeypadMetadata() [IgnoreConstructor] protected KeypadMetadata() KeypadMetadata(bool) public KeypadMetadata(bool unlocked) Parameters unlocked bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.KeypadMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.KeypadMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.KeypadMetadata.Unlocked.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.KeypadMetadata.Unlocked.html",
    "title": "Property Unlocked | Nitrox",
    "keywords": "Property Unlocked Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Unlocked [DataMember(Order = 1)] public bool Unlocked { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.KeypadMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.KeypadMetadata.html",
    "title": "Class KeypadMetadata | Nitrox",
    "keywords": "Class KeypadMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class KeypadMetadata : EntityMetadata Inheritance object EntityMetadata KeypadMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeypadMetadata() KeypadMetadata(bool) Properties Unlocked Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlantableMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlantableMetadata.-ctor.html",
    "title": "Constructor PlantableMetadata | Nitrox",
    "keywords": "Constructor PlantableMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll PlantableMetadata() [IgnoreConstructor] protected PlantableMetadata() PlantableMetadata(float) public PlantableMetadata(float progress) Parameters progress float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlantableMetadata.Progress.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlantableMetadata.Progress.html",
    "title": "Property Progress | Nitrox",
    "keywords": "Property Progress Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Progress [DataMember(Order = 1)] public float Progress { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlantableMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlantableMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlantableMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlantableMetadata.html",
    "title": "Class PlantableMetadata | Nitrox",
    "keywords": "Class PlantableMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class PlantableMetadata : EntityMetadata Inheritance object EntityMetadata PlantableMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlantableMetadata() PlantableMetadata(float) Properties Progress Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.-ctor.html",
    "title": "Constructor PlayerMetadata | Nitrox",
    "keywords": "Constructor PlayerMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll PlayerMetadata() [IgnoreConstructor] protected PlayerMetadata() PlayerMetadata(List<EquippedItem>) public PlayerMetadata(List<PlayerMetadata.EquippedItem> equippedItems) Parameters equippedItems List<PlayerMetadata.EquippedItem>"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.-ctor.html",
    "title": "Constructor EquippedItem | Nitrox",
    "keywords": "Constructor EquippedItem Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll EquippedItem() [IgnoreConstructor] protected EquippedItem() EquippedItem(NitroxId, string, NitroxTechType) public EquippedItem(NitroxId id, string slot, NitroxTechType techType) Parameters id NitroxId slot string techType NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.Id.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Id [DataMember(Order = 1)] public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.Slot.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.Slot.html",
    "title": "Property Slot | Nitrox",
    "keywords": "Property Slot Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Slot [DataMember(Order = 2)] public string Slot { get; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.TechType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll TechType [DataMember(Order = 3)] public NitroxTechType TechType { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItem.html",
    "title": "Class PlayerMetadata.EquippedItem | Nitrox",
    "keywords": "Class PlayerMetadata.EquippedItem Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class PlayerMetadata.EquippedItem Inheritance object PlayerMetadata.EquippedItem Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EquippedItem() EquippedItem(NitroxId, string, NitroxTechType) Properties Id Slot TechType Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItems.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.EquippedItems.html",
    "title": "Property EquippedItems | Nitrox",
    "keywords": "Property EquippedItems Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll EquippedItems [DataMember(Order = 1)] public List<PlayerMetadata.EquippedItem> EquippedItems { get; } Property Value List<PlayerMetadata.EquippedItem>"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PlayerMetadata.html",
    "title": "Class PlayerMetadata | Nitrox",
    "keywords": "Class PlayerMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class PlayerMetadata : EntityMetadata Inheritance object EntityMetadata PlayerMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerMetadata() PlayerMetadata(List<EquippedItem>) Properties EquippedItems Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorDoorwayMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorDoorwayMetadata.-ctor.html",
    "title": "Constructor PrecursorDoorwayMetadata | Nitrox",
    "keywords": "Constructor PrecursorDoorwayMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll PrecursorDoorwayMetadata() [IgnoreConstructor] protected PrecursorDoorwayMetadata() PrecursorDoorwayMetadata(bool) public PrecursorDoorwayMetadata(bool isOpen) Parameters isOpen bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorDoorwayMetadata.IsOpen.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorDoorwayMetadata.IsOpen.html",
    "title": "Property IsOpen | Nitrox",
    "keywords": "Property IsOpen Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll IsOpen [DataMember(Order = 1)] public bool IsOpen { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorDoorwayMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorDoorwayMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorDoorwayMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorDoorwayMetadata.html",
    "title": "Class PrecursorDoorwayMetadata | Nitrox",
    "keywords": "Class PrecursorDoorwayMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class PrecursorDoorwayMetadata : EntityMetadata Inheritance object EntityMetadata PrecursorDoorwayMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrecursorDoorwayMetadata() PrecursorDoorwayMetadata(bool) Properties IsOpen Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorKeyTerminalMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorKeyTerminalMetadata.-ctor.html",
    "title": "Constructor PrecursorKeyTerminalMetadata | Nitrox",
    "keywords": "Constructor PrecursorKeyTerminalMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll PrecursorKeyTerminalMetadata() [IgnoreConstructor] protected PrecursorKeyTerminalMetadata() PrecursorKeyTerminalMetadata(bool) public PrecursorKeyTerminalMetadata(bool slotted) Parameters slotted bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorKeyTerminalMetadata.Slotted.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorKeyTerminalMetadata.Slotted.html",
    "title": "Property Slotted | Nitrox",
    "keywords": "Property Slotted Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Slotted [DataMember(Order = 1)] public bool Slotted { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorKeyTerminalMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorKeyTerminalMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorKeyTerminalMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorKeyTerminalMetadata.html",
    "title": "Class PrecursorKeyTerminalMetadata | Nitrox",
    "keywords": "Class PrecursorKeyTerminalMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class PrecursorKeyTerminalMetadata : EntityMetadata Inheritance object EntityMetadata PrecursorKeyTerminalMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrecursorKeyTerminalMetadata() PrecursorKeyTerminalMetadata(bool) Properties Slotted Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterActivationTerminalMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterActivationTerminalMetadata.-ctor.html",
    "title": "Constructor PrecursorTeleporterActivationTerminalMetadata | Nitrox",
    "keywords": "Constructor PrecursorTeleporterActivationTerminalMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll PrecursorTeleporterActivationTerminalMetadata() [IgnoreConstructor] protected PrecursorTeleporterActivationTerminalMetadata() PrecursorTeleporterActivationTerminalMetadata(bool) public PrecursorTeleporterActivationTerminalMetadata(bool unlocked) Parameters unlocked bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterActivationTerminalMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterActivationTerminalMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterActivationTerminalMetadata.Unlocked.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterActivationTerminalMetadata.Unlocked.html",
    "title": "Property Unlocked | Nitrox",
    "keywords": "Property Unlocked Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Unlocked [DataMember(Order = 1)] public bool Unlocked { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterActivationTerminalMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterActivationTerminalMetadata.html",
    "title": "Class PrecursorTeleporterActivationTerminalMetadata | Nitrox",
    "keywords": "Class PrecursorTeleporterActivationTerminalMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class PrecursorTeleporterActivationTerminalMetadata : EntityMetadata Inheritance object EntityMetadata PrecursorTeleporterActivationTerminalMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrecursorTeleporterActivationTerminalMetadata() PrecursorTeleporterActivationTerminalMetadata(bool) Properties Unlocked Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterMetadata.-ctor.html",
    "title": "Constructor PrecursorTeleporterMetadata | Nitrox",
    "keywords": "Constructor PrecursorTeleporterMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll PrecursorTeleporterMetadata() [IgnoreConstructor] protected PrecursorTeleporterMetadata() PrecursorTeleporterMetadata(bool) public PrecursorTeleporterMetadata(bool isOpen) Parameters isOpen bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterMetadata.IsOpen.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterMetadata.IsOpen.html",
    "title": "Property IsOpen | Nitrox",
    "keywords": "Property IsOpen Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll IsOpen [DataMember(Order = 1)] public bool IsOpen { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.PrecursorTeleporterMetadata.html",
    "title": "Class PrecursorTeleporterMetadata | Nitrox",
    "keywords": "Class PrecursorTeleporterMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class PrecursorTeleporterMetadata : EntityMetadata Inheritance object EntityMetadata PrecursorTeleporterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrecursorTeleporterMetadata() PrecursorTeleporterMetadata(bool) Properties IsOpen Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RepairedComponentMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RepairedComponentMetadata.-ctor.html",
    "title": "Constructor RepairedComponentMetadata | Nitrox",
    "keywords": "Constructor RepairedComponentMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll RepairedComponentMetadata() [IgnoreConstructor] protected RepairedComponentMetadata() RepairedComponentMetadata(NitroxTechType) public RepairedComponentMetadata(NitroxTechType techType) Parameters techType NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RepairedComponentMetadata.TechType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RepairedComponentMetadata.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll TechType [DataMember(Order = 1)] public NitroxTechType TechType { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RepairedComponentMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RepairedComponentMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RepairedComponentMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RepairedComponentMetadata.html",
    "title": "Class RepairedComponentMetadata | Nitrox",
    "keywords": "Class RepairedComponentMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class RepairedComponentMetadata : EntityMetadata Inheritance object EntityMetadata RepairedComponentMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RepairedComponentMetadata() RepairedComponentMetadata(NitroxTechType) Properties TechType Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.-ctor.html",
    "title": "Constructor RocketMetadata | Nitrox",
    "keywords": "Constructor RocketMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll RocketMetadata() [IgnoreConstructor] protected RocketMetadata() RocketMetadata(int, float, int, float, List<int>) public RocketMetadata(int currentStage, float lastStageTransitionTime, int elevatorState, float elevatorPosition, List<int> preflightChecks) Parameters currentStage int lastStageTransitionTime float elevatorState int elevatorPosition float preflightChecks List<int>"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.CurrentStage.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.CurrentStage.html",
    "title": "Property CurrentStage | Nitrox",
    "keywords": "Property CurrentStage Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll CurrentStage [DataMember(Order = 1)] public int CurrentStage { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.ElevatorPosition.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.ElevatorPosition.html",
    "title": "Property ElevatorPosition | Nitrox",
    "keywords": "Property ElevatorPosition Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ElevatorPosition [DataMember(Order = 4)] public float ElevatorPosition { get; set; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.ElevatorState.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.ElevatorState.html",
    "title": "Property ElevatorState | Nitrox",
    "keywords": "Property ElevatorState Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ElevatorState [DataMember(Order = 3)] public int ElevatorState { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.LastStageTransitionTime.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.LastStageTransitionTime.html",
    "title": "Property LastStageTransitionTime | Nitrox",
    "keywords": "Property LastStageTransitionTime Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll LastStageTransitionTime [DataMember(Order = 2)] public float LastStageTransitionTime { get; set; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.PreflightChecks.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.PreflightChecks.html",
    "title": "Property PreflightChecks | Nitrox",
    "keywords": "Property PreflightChecks Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll PreflightChecks [DataMember(Order = 5)] public List<int> PreflightChecks { get; set; } Property Value List<int>"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.RocketMetadata.html",
    "title": "Class RocketMetadata | Nitrox",
    "keywords": "Class RocketMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class RocketMetadata : EntityMetadata Inheritance object EntityMetadata RocketMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RocketMetadata() RocketMetadata(int, float, int, float, List<int>) Properties CurrentStage ElevatorPosition ElevatorState LastStageTransitionTime PreflightChecks Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SealedDoorMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SealedDoorMetadata.-ctor.html",
    "title": "Constructor SealedDoorMetadata | Nitrox",
    "keywords": "Constructor SealedDoorMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll SealedDoorMetadata() [IgnoreConstructor] protected SealedDoorMetadata() SealedDoorMetadata(bool, float) public SealedDoorMetadata(bool Sealed, float OpenedAmount) Parameters Sealed bool OpenedAmount float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SealedDoorMetadata.OpenedAmount.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SealedDoorMetadata.OpenedAmount.html",
    "title": "Property OpenedAmount | Nitrox",
    "keywords": "Property OpenedAmount Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll OpenedAmount [DataMember(Order = 2)] public float OpenedAmount { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SealedDoorMetadata.Sealed.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SealedDoorMetadata.Sealed.html",
    "title": "Property Sealed | Nitrox",
    "keywords": "Property Sealed Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Sealed [DataMember(Order = 1)] public bool Sealed { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SealedDoorMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SealedDoorMetadata.html",
    "title": "Class SealedDoorMetadata | Nitrox",
    "keywords": "Class SealedDoorMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class SealedDoorMetadata : EntityMetadata Inheritance object EntityMetadata SealedDoorMetadata Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SealedDoorMetadata() SealedDoorMetadata(bool, float) Properties OpenedAmount Sealed"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SeamothMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SeamothMetadata.-ctor.html",
    "title": "Constructor SeamothMetadata | Nitrox",
    "keywords": "Constructor SeamothMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll SeamothMetadata() [IgnoreConstructor] protected SeamothMetadata() SeamothMetadata(bool, float) public SeamothMetadata(bool lightsOn, float health) Parameters lightsOn bool health float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SeamothMetadata.Health.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SeamothMetadata.Health.html",
    "title": "Property Health | Nitrox",
    "keywords": "Property Health Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Health [DataMember(Order = 2)] public float Health { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SeamothMetadata.LightsOn.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SeamothMetadata.LightsOn.html",
    "title": "Property LightsOn | Nitrox",
    "keywords": "Property LightsOn Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll LightsOn [DataMember(Order = 1)] public bool LightsOn { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SeamothMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SeamothMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SeamothMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SeamothMetadata.html",
    "title": "Class SeamothMetadata | Nitrox",
    "keywords": "Class SeamothMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class SeamothMetadata : EntityMetadata Inheritance object EntityMetadata SeamothMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SeamothMetadata() SeamothMetadata(bool, float) Properties Health LightsOn Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.StarshipDoorMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.StarshipDoorMetadata.-ctor.html",
    "title": "Constructor StarshipDoorMetadata | Nitrox",
    "keywords": "Constructor StarshipDoorMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll StarshipDoorMetadata() [IgnoreConstructor] protected StarshipDoorMetadata() StarshipDoorMetadata(bool, bool) public StarshipDoorMetadata(bool doorLocked, bool doorOpen) Parameters doorLocked bool doorOpen bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.StarshipDoorMetadata.DoorLocked.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.StarshipDoorMetadata.DoorLocked.html",
    "title": "Property DoorLocked | Nitrox",
    "keywords": "Property DoorLocked Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll DoorLocked [DataMember(Order = 1)] public bool DoorLocked { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.StarshipDoorMetadata.DoorOpen.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.StarshipDoorMetadata.DoorOpen.html",
    "title": "Property DoorOpen | Nitrox",
    "keywords": "Property DoorOpen Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll DoorOpen [DataMember(Order = 2)] public bool DoorOpen { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.StarshipDoorMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.StarshipDoorMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.StarshipDoorMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.StarshipDoorMetadata.html",
    "title": "Class StarshipDoorMetadata | Nitrox",
    "keywords": "Class StarshipDoorMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class StarshipDoorMetadata : EntityMetadata Inheritance object EntityMetadata StarshipDoorMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StarshipDoorMetadata() StarshipDoorMetadata(bool, bool) Properties DoorLocked DoorOpen Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SubNameInputMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SubNameInputMetadata.-ctor.html",
    "title": "Constructor SubNameInputMetadata | Nitrox",
    "keywords": "Constructor SubNameInputMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll SubNameInputMetadata() [IgnoreConstructor] protected SubNameInputMetadata() SubNameInputMetadata(string, NitroxVector3[]) public SubNameInputMetadata(string name, NitroxVector3[] colors) Parameters name string colors NitroxVector3[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SubNameInputMetadata.Colors.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SubNameInputMetadata.Colors.html",
    "title": "Property Colors | Nitrox",
    "keywords": "Property Colors Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Colors [DataMember(Order = 2)] public NitroxVector3[] Colors { get; } Property Value NitroxVector3[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SubNameInputMetadata.Name.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SubNameInputMetadata.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Name [DataMember(Order = 1)] public string Name { get; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SubNameInputMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SubNameInputMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SubNameInputMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.SubNameInputMetadata.html",
    "title": "Class SubNameInputMetadata | Nitrox",
    "keywords": "Class SubNameInputMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class SubNameInputMetadata : EntityMetadata Inheritance object EntityMetadata SubNameInputMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SubNameInputMetadata() SubNameInputMetadata(string, NitroxVector3[]) Properties Colors Name Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.-ctor.html",
    "title": "Constructor WaterParkCreatureMetadata | Nitrox",
    "keywords": "Constructor WaterParkCreatureMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll WaterParkCreatureMetadata() [IgnoreConstructor] protected WaterParkCreatureMetadata() WaterParkCreatureMetadata(float, double, float, bool) public WaterParkCreatureMetadata(float age, double matureTime, float timeNextBreed, bool bornInside) Parameters age float matureTime double timeNextBreed float bornInside bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.Age.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.Age.html",
    "title": "Property Age | Nitrox",
    "keywords": "Property Age Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll Age [DataMember(Order = 1)] public float Age { get; init; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.BornInside.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.BornInside.html",
    "title": "Property BornInside | Nitrox",
    "keywords": "Property BornInside Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll BornInside [DataMember(Order = 4)] public bool BornInside { get; init; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.MatureTime.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.MatureTime.html",
    "title": "Property MatureTime | Nitrox",
    "keywords": "Property MatureTime Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll MatureTime [DataMember(Order = 2)] public double MatureTime { get; init; } Property Value double"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.TimeNextBreed.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.TimeNextBreed.html",
    "title": "Property TimeNextBreed | Nitrox",
    "keywords": "Property TimeNextBreed Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll TimeNextBreed [DataMember(Order = 3)] public float TimeNextBreed { get; init; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WaterParkCreatureMetadata.html",
    "title": "Class WaterParkCreatureMetadata | Nitrox",
    "keywords": "Class WaterParkCreatureMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class WaterParkCreatureMetadata : EntityMetadata Inheritance object EntityMetadata WaterParkCreatureMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WaterParkCreatureMetadata() WaterParkCreatureMetadata(float, double, float, bool) Properties Age BornInside MatureTime TimeNextBreed Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WeldableWallPanelGenericMetadata.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WeldableWallPanelGenericMetadata.-ctor.html",
    "title": "Constructor WeldableWallPanelGenericMetadata | Nitrox",
    "keywords": "Constructor WeldableWallPanelGenericMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll WeldableWallPanelGenericMetadata() [IgnoreConstructor] protected WeldableWallPanelGenericMetadata() WeldableWallPanelGenericMetadata(float) public WeldableWallPanelGenericMetadata(float liveMixInHealth) Parameters liveMixInHealth float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WeldableWallPanelGenericMetadata.LiveMixInHealth.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WeldableWallPanelGenericMetadata.LiveMixInHealth.html",
    "title": "Property LiveMixInHealth | Nitrox",
    "keywords": "Property LiveMixInHealth Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll LiveMixInHealth [DataMember(Order = 1)] public float LiveMixInHealth { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WeldableWallPanelGenericMetadata.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WeldableWallPanelGenericMetadata.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WeldableWallPanelGenericMetadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.WeldableWallPanelGenericMetadata.html",
    "title": "Class WeldableWallPanelGenericMetadata | Nitrox",
    "keywords": "Class WeldableWallPanelGenericMetadata Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Assembly NitroxModel.dll [Serializable] [DataContract] public class WeldableWallPanelGenericMetadata : EntityMetadata Inheritance object EntityMetadata WeldableWallPanelGenericMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WeldableWallPanelGenericMetadata() WeldableWallPanelGenericMetadata(float) Properties LiveMixInHealth Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.Metadata.html",
    "title": "Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata | Nitrox",
    "keywords": "Namespace NitroxModel.DataStructures.GameLogic.Entities.Metadata Namespaces NitroxModel.DataStructures.GameLogic.Entities.Metadata.Bases Classes BatteryMetadata ConstructorMetadata CrafterMetadata CyclopsLightingMetadata CyclopsMetadata EntityMetadata EntitySignMetadata FireExtinguisherHolderMetadata FlashlightMetadata IncubatorMetadata KeypadMetadata PlantableMetadata PlayerMetadata PlayerMetadata.EquippedItem PrecursorDoorwayMetadata PrecursorKeyTerminalMetadata PrecursorTeleporterActivationTerminalMetadata PrecursorTeleporterMetadata RepairedComponentMetadata RocketMetadata SealedDoorMetadata SeamothMetadata StarshipDoorMetadata SubNameInputMetadata WaterParkCreatureMetadata WeldableWallPanelGenericMetadata"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PathBasedChildEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PathBasedChildEntity.-ctor.html",
    "title": "Constructor PathBasedChildEntity | Nitrox",
    "keywords": "Constructor PathBasedChildEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll PathBasedChildEntity() [IgnoreConstructor] protected PathBasedChildEntity() PathBasedChildEntity(string, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public PathBasedChildEntity(string path, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters path string id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PathBasedChildEntity.Path.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PathBasedChildEntity.Path.html",
    "title": "Property Path | Nitrox",
    "keywords": "Property Path Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Path [DataMember(Order = 1)] public string Path { get; set; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PathBasedChildEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PathBasedChildEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PathBasedChildEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PathBasedChildEntity.html",
    "title": "Class PathBasedChildEntity | Nitrox",
    "keywords": "Class PathBasedChildEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class PathBasedChildEntity : Entity Inheritance object Entity PathBasedChildEntity Inherited Members Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PathBasedChildEntity() PathBasedChildEntity(string, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Properties Path Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PlaceholderGroupWorldEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PlaceholderGroupWorldEntity.-ctor.html",
    "title": "Constructor PlaceholderGroupWorldEntity | Nitrox",
    "keywords": "Constructor PlaceholderGroupWorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll PlaceholderGroupWorldEntity() [IgnoreConstructor] protected PlaceholderGroupWorldEntity() PlaceholderGroupWorldEntity(WorldEntity, List<Entity>) public PlaceholderGroupWorldEntity(WorldEntity worldEntity, List<Entity> prefabPlaceholders) Parameters worldEntity WorldEntity prefabPlaceholders List<Entity> PlaceholderGroupWorldEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public PlaceholderGroupWorldEntity(NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PlaceholderGroupWorldEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PlaceholderGroupWorldEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PlaceholderGroupWorldEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PlaceholderGroupWorldEntity.html",
    "title": "Class PlaceholderGroupWorldEntity | Nitrox",
    "keywords": "Class PlaceholderGroupWorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class PlaceholderGroupWorldEntity : WorldEntity Inheritance object Entity WorldEntity PlaceholderGroupWorldEntity Inherited Members WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlaceholderGroupWorldEntity() PlaceholderGroupWorldEntity(WorldEntity, List<Entity>) PlaceholderGroupWorldEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PlanterEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PlanterEntity.-ctor.html",
    "title": "Constructor PlanterEntity | Nitrox",
    "keywords": "Constructor PlanterEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll PlanterEntity() [IgnoreConstructor] protected PlanterEntity() PlanterEntity(NitroxId, NitroxId) public PlanterEntity(NitroxId id, NitroxId parentId) Parameters id NitroxId parentId NitroxId PlanterEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public PlanterEntity(NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PlanterEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PlanterEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PlanterEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PlanterEntity.html",
    "title": "Class PlanterEntity | Nitrox",
    "keywords": "Class PlanterEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class PlanterEntity : GlobalRootEntity Inheritance object Entity WorldEntity GlobalRootEntity PlanterEntity Inherited Members GlobalRootEntity.From(WorldEntity) WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlanterEntity() PlanterEntity(NitroxId, NitroxId) PlanterEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PlayerWorldEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PlayerWorldEntity.-ctor.html",
    "title": "Constructor PlayerWorldEntity | Nitrox",
    "keywords": "Constructor PlayerWorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll PlayerWorldEntity() [IgnoreConstructor] protected PlayerWorldEntity() PlayerWorldEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public PlayerWorldEntity(NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PlayerWorldEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PlayerWorldEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PlayerWorldEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PlayerWorldEntity.html",
    "title": "Class PlayerWorldEntity | Nitrox",
    "keywords": "Class PlayerWorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class PlayerWorldEntity : GlobalRootEntity Inheritance object Entity WorldEntity GlobalRootEntity PlayerWorldEntity Inherited Members GlobalRootEntity.From(WorldEntity) WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerWorldEntity() PlayerWorldEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabChildEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabChildEntity.-ctor.html",
    "title": "Constructor PrefabChildEntity | Nitrox",
    "keywords": "Constructor PrefabChildEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll PrefabChildEntity() [IgnoreConstructor] protected PrefabChildEntity() PrefabChildEntity(NitroxId, string, NitroxTechType, int, EntityMetadata, NitroxId) public PrefabChildEntity(NitroxId id, string classId, NitroxTechType techType, int componentIndex, EntityMetadata metadata, NitroxId parentId) Parameters id NitroxId classId string techType NitroxTechType componentIndex int metadata EntityMetadata parentId NitroxId PrefabChildEntity(int, string, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public PrefabChildEntity(int componentIndex, string classId, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters componentIndex int classId string id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabChildEntity.ClassId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabChildEntity.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ClassId [DataMember(Order = 2)] public string ClassId { get; set; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabChildEntity.ComponentIndex.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabChildEntity.ComponentIndex.html",
    "title": "Property ComponentIndex | Nitrox",
    "keywords": "Property ComponentIndex Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ComponentIndex [DataMember(Order = 1)] public int ComponentIndex { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabChildEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabChildEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabChildEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabChildEntity.html",
    "title": "Class PrefabChildEntity | Nitrox",
    "keywords": "Class PrefabChildEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class PrefabChildEntity : Entity Inheritance object Entity PrefabChildEntity Inherited Members Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrefabChildEntity() PrefabChildEntity(NitroxId, string, NitroxTechType, int, EntityMetadata, NitroxId) PrefabChildEntity(int, string, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) Properties ClassId ComponentIndex Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabPlaceholderEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabPlaceholderEntity.-ctor.html",
    "title": "Constructor PrefabPlaceholderEntity | Nitrox",
    "keywords": "Constructor PrefabPlaceholderEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll PrefabPlaceholderEntity() [IgnoreConstructor] protected PrefabPlaceholderEntity() PrefabPlaceholderEntity(NitroxId, NitroxTechType, NitroxId) public PrefabPlaceholderEntity(NitroxId id, NitroxTechType techType, NitroxId parentId) Parameters id NitroxId techType NitroxTechType parentId NitroxId PrefabPlaceholderEntity(NitroxId, string, NitroxTechType, NitroxId, List<Entity>) public PrefabPlaceholderEntity(NitroxId id, string classId, NitroxTechType techType, NitroxId parentId, List<Entity> childEntities) Parameters id NitroxId classId string techType NitroxTechType parentId NitroxId childEntities List<Entity> PrefabPlaceholderEntity(NitroxId, string, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public PrefabPlaceholderEntity(NitroxId id, string classId, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters id NitroxId classId string techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabPlaceholderEntity.ClassId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabPlaceholderEntity.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ClassId [DataMember(Order = 1)] public string ClassId { get; set; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabPlaceholderEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.PrefabPlaceholderEntity.html",
    "title": "Class PrefabPlaceholderEntity | Nitrox",
    "keywords": "Class PrefabPlaceholderEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class PrefabPlaceholderEntity : Entity Inheritance object Entity PrefabPlaceholderEntity Inherited Members Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities Entity.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrefabPlaceholderEntity() PrefabPlaceholderEntity(NitroxId, NitroxTechType, NitroxId) PrefabPlaceholderEntity(NitroxId, string, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) PrefabPlaceholderEntity(NitroxId, string, NitroxTechType, NitroxId, List<Entity>) Properties ClassId"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefab.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefab.-ctor.html",
    "title": "Constructor UwePrefab | Nitrox",
    "keywords": "Constructor UwePrefab Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll UwePrefab(string, float, int) public UwePrefab(string classId, float probability, int count) Parameters classId string probability float count int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefab.ClassId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefab.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ClassId public string ClassId { get; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefab.Count.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefab.Count.html",
    "title": "Property Count | Nitrox",
    "keywords": "Property Count Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Count public int Count { get; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefab.Probability.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefab.Probability.html",
    "title": "Property Probability | Nitrox",
    "keywords": "Property Probability Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Probability public float Probability { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefab.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefab.html",
    "title": "Class UwePrefab | Nitrox",
    "keywords": "Class UwePrefab Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll public class UwePrefab Inheritance object UwePrefab Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UwePrefab(string, float, int) Properties ClassId Count Probability"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefabFactory.GetPossiblePrefabs.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefabFactory.GetPossiblePrefabs.html",
    "title": "Method GetPossiblePrefabs | Nitrox",
    "keywords": "Method GetPossiblePrefabs Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll GetPossiblePrefabs(string) public abstract List<UwePrefab> GetPossiblePrefabs(string biomeType) Parameters biomeType string Returns List<UwePrefab>"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefabFactory.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UwePrefabFactory.html",
    "title": "Class UwePrefabFactory | Nitrox",
    "keywords": "Class UwePrefabFactory Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll public abstract class UwePrefabFactory Inheritance object UwePrefabFactory Derived SubnauticaUwePrefabFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetPossiblePrefabs(string)"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.-ctor.html",
    "title": "Constructor UweWorldEntity | Nitrox",
    "keywords": "Constructor UweWorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll UweWorldEntity(NitroxTechType, NitroxVector3, string, string, int) public UweWorldEntity(NitroxTechType techType, NitroxVector3 scale, string classId, string slotType, int cellLevel) Parameters techType NitroxTechType scale NitroxVector3 classId string slotType string cellLevel int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.CellLevel.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.CellLevel.html",
    "title": "Property CellLevel | Nitrox",
    "keywords": "Property CellLevel Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll CellLevel public int CellLevel { get; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.ClassId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ClassId public string ClassId { get; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.Scale.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.Scale.html",
    "title": "Property Scale | Nitrox",
    "keywords": "Property Scale Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Scale public NitroxVector3 Scale { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.SlotType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.SlotType.html",
    "title": "Property SlotType | Nitrox",
    "keywords": "Property SlotType Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll SlotType public string SlotType { get; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.TechType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll TechType public NitroxTechType TechType { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntity.html",
    "title": "Class UweWorldEntity | Nitrox",
    "keywords": "Class UweWorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll public class UweWorldEntity Inheritance object UweWorldEntity Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UweWorldEntity(NitroxTechType, NitroxVector3, string, string, int) Properties CellLevel ClassId Scale SlotType TechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntityFactory.From.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntityFactory.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll From(string) public abstract Optional<UweWorldEntity> From(string classId) Parameters classId string Returns Optional<UweWorldEntity>"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntityFactory.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.UweWorldEntityFactory.html",
    "title": "Class UweWorldEntityFactory | Nitrox",
    "keywords": "Class UweWorldEntityFactory Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll public abstract class UweWorldEntityFactory Inheritance object UweWorldEntityFactory Derived SubnauticaUweWorldEntityFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods From(string)"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.VehicleWorldEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.VehicleWorldEntity.-ctor.html",
    "title": "Constructor VehicleWorldEntity | Nitrox",
    "keywords": "Constructor VehicleWorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll VehicleWorldEntity() [IgnoreConstructor] protected VehicleWorldEntity() VehicleWorldEntity(NitroxId, float, NitroxTransform, string, bool, NitroxId, NitroxTechType, EntityMetadata) public VehicleWorldEntity(NitroxId spawnerId, float constructionTime, NitroxTransform transform, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata) Parameters spawnerId NitroxId constructionTime float transform NitroxTransform classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata VehicleWorldEntity(NitroxId, float, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public VehicleWorldEntity(NitroxId spawnerId, float constructionTime, NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters spawnerId NitroxId constructionTime float transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.VehicleWorldEntity.ConstructionTime.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.VehicleWorldEntity.ConstructionTime.html",
    "title": "Property ConstructionTime | Nitrox",
    "keywords": "Property ConstructionTime Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ConstructionTime [DataMember(Order = 2)] public float ConstructionTime { get; set; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.VehicleWorldEntity.SpawnerId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.VehicleWorldEntity.SpawnerId.html",
    "title": "Property SpawnerId | Nitrox",
    "keywords": "Property SpawnerId Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll SpawnerId [DataMember(Order = 1)] public NitroxId SpawnerId { get; set; } Property Value NitroxId"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.VehicleWorldEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.VehicleWorldEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.VehicleWorldEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.VehicleWorldEntity.html",
    "title": "Class VehicleWorldEntity | Nitrox",
    "keywords": "Class VehicleWorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] public class VehicleWorldEntity : GlobalRootEntity Inheritance object Entity WorldEntity GlobalRootEntity VehicleWorldEntity Inherited Members GlobalRootEntity.From(WorldEntity) WorldEntity.AbsoluteEntityCell WorldEntity.Transform WorldEntity.Level WorldEntity.ClassId WorldEntity.SpawnedByServer Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleWorldEntity() VehicleWorldEntity(NitroxId, float, NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) VehicleWorldEntity(NitroxId, float, NitroxTransform, string, bool, NitroxId, NitroxTechType, EntityMetadata) Properties ConstructionTime SpawnerId Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.-ctor.html",
    "title": "Constructor WorldEntity | Nitrox",
    "keywords": "Constructor WorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll WorldEntity() [IgnoreConstructor] protected WorldEntity() WorldEntity(NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxTechType, int, string, bool, NitroxId, Entity) public WorldEntity(NitroxVector3 localPosition, NitroxQuaternion localRotation, NitroxVector3 scale, NitroxTechType techType, int level, string classId, bool spawnedByServer, NitroxId id, Entity parentEntity) Parameters localPosition NitroxVector3 localRotation NitroxQuaternion scale NitroxVector3 techType NitroxTechType level int classId string spawnedByServer bool id NitroxId parentEntity Entity WorldEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) public WorldEntity(NitroxTransform transform, int level, string classId, bool spawnedByServer, NitroxId id, NitroxTechType techType, EntityMetadata metadata, NitroxId parentId, List<Entity> childEntities) Parameters transform NitroxTransform level int classId string spawnedByServer bool id NitroxId techType NitroxTechType metadata EntityMetadata parentId NitroxId childEntities List<Entity> Remarks Used for deserialization"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.AbsoluteEntityCell.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.AbsoluteEntityCell.html",
    "title": "Property AbsoluteEntityCell | Nitrox",
    "keywords": "Property AbsoluteEntityCell Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll AbsoluteEntityCell public AbsoluteEntityCell AbsoluteEntityCell { get; } Property Value AbsoluteEntityCell"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.ClassId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ClassId Gets the prefab class id assigned by Unity Engine. This is a unique Guid. [DataMember(Order = 3)] public string ClassId { get; set; } Property Value string Remarks What is a prefab?"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.Level.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.Level.html",
    "title": "Property Level | Nitrox",
    "keywords": "Property Level Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Level [DataMember(Order = 2)] public int Level { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.SpawnedByServer.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.SpawnedByServer.html",
    "title": "Field SpawnedByServer | Nitrox",
    "keywords": "Field SpawnedByServer Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Keeps track if an entity was spawned by the server or a player Server-spawned entities need to be techType white-listed to be simulated [DataMember(Order = 4)] public bool SpawnedByServer Returns bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.Transform.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.Transform.html",
    "title": "Property Transform | Nitrox",
    "keywords": "Property Transform Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll Transform [DataMember(Order = 1)] public NitroxTransform Transform { get; set; } Property Value NitroxTransform"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.WorldEntity.html",
    "title": "Class WorldEntity | Nitrox",
    "keywords": "Class WorldEntity Namespace NitroxModel.DataStructures.GameLogic.Entities Assembly NitroxModel.dll [Serializable] [DataContract] [ProtoInclude(50, typeof(PlaceholderGroupWorldEntity))] [ProtoInclude(51, typeof(CellRootEntity))] [ProtoInclude(52, typeof(GlobalRootEntity))] public class WorldEntity : Entity Inheritance object Entity WorldEntity Derived CellRootEntity GlobalRootEntity PlaceholderGroupWorldEntity Inherited Members Entity.Id Entity.TechType Entity.Metadata Entity.ParentId Entity.ChildEntities object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WorldEntity() WorldEntity(NitroxTransform, int, string, bool, NitroxId, NitroxTechType, EntityMetadata, NitroxId, List<Entity>) WorldEntity(NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxTechType, int, string, bool, NitroxId, Entity) Fields SpawnedByServer Keeps track if an entity was spawned by the server or a player Server-spawned entities need to be techType white-listed to be simulated Properties AbsoluteEntityCell ClassId Gets the prefab class id assigned by Unity Engine. This is a unique Guid. Level Transform Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entities.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entities.html",
    "title": "Namespace NitroxModel.DataStructures.GameLogic.Entities | Nitrox",
    "keywords": "Namespace NitroxModel.DataStructures.GameLogic.Entities Namespaces NitroxModel.DataStructures.GameLogic.Entities.Bases NitroxModel.DataStructures.GameLogic.Entities.Metadata Classes CellRootEntity EscapePodWorldEntity GlobalRootEntity InstalledBatteryEntity InstalledModuleEntity InventoryEntity Represents an object that can hold InventoryItemEntity, such as the locker in the escape pod. InventoryItemEntity PathBasedChildEntity PlaceholderGroupWorldEntity PlanterEntity PlayerWorldEntity PrefabChildEntity PrefabPlaceholderEntity UwePrefab UwePrefabFactory UweWorldEntity UweWorldEntityFactory VehicleWorldEntity WorldEntity"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entity.-ctor.html",
    "title": "Constructor Entity | Nitrox",
    "keywords": "Constructor Entity Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Entity() [IgnoreConstructor] protected Entity()"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entity.ChildEntities.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entity.ChildEntities.html",
    "title": "Property ChildEntities | Nitrox",
    "keywords": "Property ChildEntities Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ChildEntities [DataMember(Order = 5)] public List<Entity> ChildEntities { get; set; } Property Value List<Entity>"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entity.Id.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entity.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Id [DataMember(Order = 1)] public NitroxId Id { get; set; } Property Value NitroxId"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entity.Metadata.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entity.Metadata.html",
    "title": "Property Metadata | Nitrox",
    "keywords": "Property Metadata Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Metadata [DataMember(Order = 3)] public EntityMetadata Metadata { get; set; } Property Value EntityMetadata"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entity.ParentId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entity.ParentId.html",
    "title": "Property ParentId | Nitrox",
    "keywords": "Property ParentId Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ParentId [DataMember(Order = 4)] public NitroxId ParentId { get; set; } Property Value NitroxId"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entity.TechType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entity.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll TechType [DataMember(Order = 2)] public NitroxTechType TechType { get; set; } Property Value NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.Entity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Entity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Entity.html",
    "title": "Class Entity | Nitrox",
    "keywords": "Class Entity Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] [ProtoInclude(60, typeof(PrefabChildEntity))] [ProtoInclude(70, typeof(PrefabPlaceholderEntity))] [ProtoInclude(80, typeof(InventoryEntity))] [ProtoInclude(90, typeof(InventoryItemEntity))] [ProtoInclude(100, typeof(PathBasedChildEntity))] [ProtoInclude(110, typeof(InstalledBatteryEntity))] [ProtoInclude(120, typeof(InstalledModuleEntity))] [ProtoInclude(130, typeof(WorldEntity))] public abstract class Entity Inheritance object Entity Derived InstalledBatteryEntity InstalledModuleEntity InventoryEntity InventoryItemEntity PathBasedChildEntity PrefabChildEntity PrefabPlaceholderEntity WorldEntity Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Entity() Properties ChildEntities Id Metadata ParentId TechType Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.EquippedItemData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.EquippedItemData.-ctor.html",
    "title": "Constructor EquippedItemData | Nitrox",
    "keywords": "Constructor EquippedItemData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll EquippedItemData() [IgnoreConstructor] protected EquippedItemData() EquippedItemData(NitroxId, NitroxId, byte[], string, NitroxTechType) public EquippedItemData(NitroxId containerId, NitroxId itemId, byte[] serializedData, string slot, NitroxTechType techType) Parameters containerId NitroxId itemId NitroxId serializedData byte[] slot string techType NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.EquippedItemData.Slot.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.EquippedItemData.Slot.html",
    "title": "Property Slot | Nitrox",
    "keywords": "Property Slot Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Slot [DataMember(Order = 1)] public string Slot { get; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.EquippedItemData.TechType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.EquippedItemData.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll TechType [DataMember(Order = 2)] public NitroxTechType TechType { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.EquippedItemData.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.EquippedItemData.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.EquippedItemData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.EquippedItemData.html",
    "title": "Class EquippedItemData | Nitrox",
    "keywords": "Class EquippedItemData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class EquippedItemData : ItemData Inheritance object ItemData EquippedItemData Inherited Members ItemData.ContainerId ItemData.ItemId ItemData.SerializedData object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EquippedItemData() EquippedItemData(NitroxId, NitroxId, byte[], string, NitroxTechType) Properties Slot TechType Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.-ctor.html",
    "title": "Constructor InitialPDAData | Nitrox",
    "keywords": "Constructor InitialPDAData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll InitialPDAData() [IgnoreConstructor] protected InitialPDAData() InitialPDAData(List<NitroxTechType>, List<NitroxTechType>, List<PDALogEntry>, List<string>, List<NitroxId>, List<PDAEntry>, List<NitroxTechType>) public InitialPDAData(List<NitroxTechType> knownTechTypes, List<NitroxTechType> analyzedTechTypes, List<PDALogEntry> pDALogEntries, List<string> encyclopediaEntries, List<NitroxId> scannerFragments, List<PDAEntry> scannerPartial, List<NitroxTechType> scannerComplete) Parameters knownTechTypes List<NitroxTechType> analyzedTechTypes List<NitroxTechType> pDALogEntries List<PDALogEntry> encyclopediaEntries List<string> scannerFragments List<NitroxId> scannerPartial List<PDAEntry> scannerComplete List<NitroxTechType>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.AnalyzedTechTypes.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.AnalyzedTechTypes.html",
    "title": "Property AnalyzedTechTypes | Nitrox",
    "keywords": "Property AnalyzedTechTypes Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll AnalyzedTechTypes public List<NitroxTechType> AnalyzedTechTypes { get; set; } Property Value List<NitroxTechType>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.EncyclopediaEntries.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.EncyclopediaEntries.html",
    "title": "Property EncyclopediaEntries | Nitrox",
    "keywords": "Property EncyclopediaEntries Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll EncyclopediaEntries public List<string> EncyclopediaEntries { get; set; } Property Value List<string>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.KnownTechTypes.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.KnownTechTypes.html",
    "title": "Property KnownTechTypes | Nitrox",
    "keywords": "Property KnownTechTypes Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll KnownTechTypes public List<NitroxTechType> KnownTechTypes { get; set; } Property Value List<NitroxTechType>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.PDALogEntries.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.PDALogEntries.html",
    "title": "Property PDALogEntries | Nitrox",
    "keywords": "Property PDALogEntries Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll PDALogEntries public List<PDALogEntry> PDALogEntries { get; set; } Property Value List<PDALogEntry>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.ScannerComplete.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.ScannerComplete.html",
    "title": "Property ScannerComplete | Nitrox",
    "keywords": "Property ScannerComplete Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ScannerComplete public List<NitroxTechType> ScannerComplete { get; set; } Property Value List<NitroxTechType>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.ScannerFragments.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.ScannerFragments.html",
    "title": "Property ScannerFragments | Nitrox",
    "keywords": "Property ScannerFragments Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ScannerFragments public List<NitroxId> ScannerFragments { get; set; } Property Value List<NitroxId>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.ScannerPartial.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.ScannerPartial.html",
    "title": "Property ScannerPartial | Nitrox",
    "keywords": "Property ScannerPartial Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ScannerPartial public List<PDAEntry> ScannerPartial { get; set; } Property Value List<PDAEntry>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialPDAData.html",
    "title": "Class InitialPDAData | Nitrox",
    "keywords": "Class InitialPDAData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] public class InitialPDAData Inheritance object InitialPDAData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InitialPDAData() InitialPDAData(List<NitroxTechType>, List<NitroxTechType>, List<PDALogEntry>, List<string>, List<NitroxId>, List<PDAEntry>, List<NitroxTechType>) Properties AnalyzedTechTypes EncyclopediaEntries KnownTechTypes PDALogEntries ScannerComplete ScannerFragments ScannerPartial"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.-ctor.html",
    "title": "Constructor InitialStoryGoalData | Nitrox",
    "keywords": "Constructor InitialStoryGoalData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll InitialStoryGoalData() [IgnoreConstructor] protected InitialStoryGoalData() InitialStoryGoalData(List<string>, List<string>, List<string>, List<NitroxScheduledGoal>, Dictionary<string, float>) public InitialStoryGoalData(List<string> completedGoals, List<string> radioQueue, List<string> goalUnlocks, List<NitroxScheduledGoal> scheduledGoals, Dictionary<string, float> personalCompletedGoalsWithTimestamp) Parameters completedGoals List<string> radioQueue List<string> goalUnlocks List<string> scheduledGoals List<NitroxScheduledGoal> personalCompletedGoalsWithTimestamp Dictionary<string, float>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.CompletedGoals.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.CompletedGoals.html",
    "title": "Property CompletedGoals | Nitrox",
    "keywords": "Property CompletedGoals Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll CompletedGoals public List<string> CompletedGoals { get; set; } Property Value List<string>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.GoalUnlocks.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.GoalUnlocks.html",
    "title": "Property GoalUnlocks | Nitrox",
    "keywords": "Property GoalUnlocks Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll GoalUnlocks public List<string> GoalUnlocks { get; set; } Property Value List<string>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.PersonalCompletedGoalsWithTimestamp.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.PersonalCompletedGoalsWithTimestamp.html",
    "title": "Property PersonalCompletedGoalsWithTimestamp | Nitrox",
    "keywords": "Property PersonalCompletedGoalsWithTimestamp Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll PersonalCompletedGoalsWithTimestamp public Dictionary<string, float> PersonalCompletedGoalsWithTimestamp { get; set; } Property Value Dictionary<string, float> Remarks This is the only field in this class that is very personal to the player this will be sent to. The other ones are shared by everyone and are related to overall story progress."
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.RadioQueue.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.RadioQueue.html",
    "title": "Property RadioQueue | Nitrox",
    "keywords": "Property RadioQueue Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll RadioQueue public List<string> RadioQueue { get; set; } Property Value List<string>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.ScheduledGoals.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.ScheduledGoals.html",
    "title": "Property ScheduledGoals | Nitrox",
    "keywords": "Property ScheduledGoals Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ScheduledGoals public List<NitroxScheduledGoal> ScheduledGoals { get; set; } Property Value List<NitroxScheduledGoal>"
  },
  "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.InitialStoryGoalData.html",
    "title": "Class InitialStoryGoalData | Nitrox",
    "keywords": "Class InitialStoryGoalData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] public class InitialStoryGoalData Inheritance object InitialStoryGoalData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InitialStoryGoalData() InitialStoryGoalData(List<string>, List<string>, List<string>, List<NitroxScheduledGoal>, Dictionary<string, float>) Properties CompletedGoals GoalUnlocks PersonalCompletedGoalsWithTimestamp RadioQueue ScheduledGoals"
  },
  "api/NitroxModel.DataStructures.GameLogic.ItemData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.ItemData.-ctor.html",
    "title": "Constructor ItemData | Nitrox",
    "keywords": "Constructor ItemData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ItemData() [IgnoreConstructor] protected ItemData() ItemData(NitroxId, NitroxId, byte[]) public ItemData(NitroxId containerId, NitroxId itemId, byte[] serializedData) Parameters containerId NitroxId itemId NitroxId serializedData byte[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.ItemData.ContainerId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.ItemData.ContainerId.html",
    "title": "Property ContainerId | Nitrox",
    "keywords": "Property ContainerId Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ContainerId [DataMember(Order = 1)] public NitroxId ContainerId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.DataStructures.GameLogic.ItemData.ItemId.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.ItemData.ItemId.html",
    "title": "Property ItemId | Nitrox",
    "keywords": "Property ItemId Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ItemId [DataMember(Order = 2)] public NitroxId ItemId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.DataStructures.GameLogic.ItemData.SerializedData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.ItemData.SerializedData.html",
    "title": "Property SerializedData | Nitrox",
    "keywords": "Property SerializedData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll SerializedData [DataMember(Order = 3)] public byte[] SerializedData { get; } Property Value byte[]"
  },
  "api/NitroxModel.DataStructures.GameLogic.ItemData.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.ItemData.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.ItemData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.ItemData.html",
    "title": "Class ItemData | Nitrox",
    "keywords": "Class ItemData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] [ProtoInclude(50, typeof(BasicItemData))] [ProtoInclude(51, typeof(EquippedItemData))] [ProtoInclude(52, typeof(PlantableItemData))] public abstract class ItemData Inheritance object ItemData Derived BasicItemData EquippedItemData PlantableItemData Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemData() ItemData(NitroxId, NitroxId, byte[]) Properties ContainerId ItemId SerializedData Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.-ctor.html",
    "title": "Constructor NitroxScheduledGoal | Nitrox",
    "keywords": "Constructor NitroxScheduledGoal Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll NitroxScheduledGoal() [IgnoreConstructor] protected NitroxScheduledGoal() NitroxScheduledGoal(float, string, int) public NitroxScheduledGoal(float timeExecute, string goalKey, int goalType) Parameters timeExecute float goalKey string goalType int"
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.From.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll From(float, string, int) public static NitroxScheduledGoal From(float timeExecute, string goalKey, int goalType) Parameters timeExecute float goalKey string goalType int Returns NitroxScheduledGoal"
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.GoalKey.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.GoalKey.html",
    "title": "Property GoalKey | Nitrox",
    "keywords": "Property GoalKey Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll GoalKey [DataMember(Order = 2)] public string GoalKey { get; set; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.GoalType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.GoalType.html",
    "title": "Property GoalType | Nitrox",
    "keywords": "Property GoalType Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll GoalType [DataMember(Order = 3)] public int GoalType { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.TimeExecute.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.TimeExecute.html",
    "title": "Property TimeExecute | Nitrox",
    "keywords": "Property TimeExecute Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll TimeExecute [DataMember(Order = 1)] public float TimeExecute { get; set; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxScheduledGoal.html",
    "title": "Class NitroxScheduledGoal | Nitrox",
    "keywords": "Class NitroxScheduledGoal Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class NitroxScheduledGoal Inheritance object NitroxScheduledGoal Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxScheduledGoal() NitroxScheduledGoal(float, string, int) Properties GoalKey GoalType TimeExecute Methods From(float, string, int) ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.-ctor.html",
    "title": "Constructor NitroxTechType | Nitrox",
    "keywords": "Constructor NitroxTechType Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll NitroxTechType() [IgnoreConstructor] protected NitroxTechType() NitroxTechType(string) public NitroxTechType(string name) Parameters name string"
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. Equals(NitroxTechType) Indicates whether the current object is equal to another object of the same type. public bool Equals(NitroxTechType other) Parameters other NitroxTechType An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false."
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.Name.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Name [DataMember(Order = 1)] public string Name { get; } Property Value string"
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.None.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.None.html",
    "title": "Property None | Nitrox",
    "keywords": "Property None Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll None public static NitroxTechType None { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.NitroxTechType.html",
    "title": "Class NitroxTechType | Nitrox",
    "keywords": "Class NitroxTechType Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll TechType is the enum used in Subnautica for defining all the spawnable objects in the world. This includes food, enemies and bases. [Serializable] [DataContract] public class NitroxTechType : IEquatable<NitroxTechType> Inheritance object NitroxTechType Implements IEquatable<NitroxTechType> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Remarks Shim tech type model to bridge the gap between original subnautica and BZ. Constructors NitroxTechType() NitroxTechType(string) Properties Name None Methods Equals(NitroxTechType) Indicates whether the current object is equal to another object of the same type. Equals(object) Determines whether the specified object is equal to the current object. GetHashCode() Serves as the default hash function. ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.PDAEntry.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PDAEntry.-ctor.html",
    "title": "Constructor PDAEntry | Nitrox",
    "keywords": "Constructor PDAEntry Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll PDAEntry() [IgnoreConstructor] protected PDAEntry() PDAEntry(NitroxTechType, int) public PDAEntry(NitroxTechType techType, int unlocked) Parameters techType NitroxTechType unlocked int"
  },
  "api/NitroxModel.DataStructures.GameLogic.PDAEntry.TechType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PDAEntry.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll TechType [DataMember(Order = 1)] public NitroxTechType TechType { get; set; } Property Value NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.PDAEntry.Unlocked.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PDAEntry.Unlocked.html",
    "title": "Property Unlocked | Nitrox",
    "keywords": "Property Unlocked Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Unlocked [DataMember(Order = 2)] public int Unlocked { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.PDAEntry.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PDAEntry.html",
    "title": "Class PDAEntry | Nitrox",
    "keywords": "Class PDAEntry Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class PDAEntry Inheritance object PDAEntry Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PDAEntry() PDAEntry(NitroxTechType, int) Properties TechType Unlocked"
  },
  "api/NitroxModel.DataStructures.GameLogic.PDALogEntry.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PDALogEntry.-ctor.html",
    "title": "Constructor PDALogEntry | Nitrox",
    "keywords": "Constructor PDALogEntry Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll PDALogEntry() [IgnoreConstructor] protected PDALogEntry() PDALogEntry(string, float) public PDALogEntry(string key, float timestamp) Parameters key string timestamp float"
  },
  "api/NitroxModel.DataStructures.GameLogic.PDALogEntry.Key.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PDALogEntry.Key.html",
    "title": "Field Key | Nitrox",
    "keywords": "Field Key Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [DataMember(Order = 1)] public string Key Returns string"
  },
  "api/NitroxModel.DataStructures.GameLogic.PDALogEntry.Timestamp.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PDALogEntry.Timestamp.html",
    "title": "Field Timestamp | Nitrox",
    "keywords": "Field Timestamp Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [DataMember(Order = 2)] public float Timestamp Returns float"
  },
  "api/NitroxModel.DataStructures.GameLogic.PDALogEntry.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PDALogEntry.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.PDALogEntry.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PDALogEntry.html",
    "title": "Class PDALogEntry | Nitrox",
    "keywords": "Class PDALogEntry Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class PDALogEntry Inheritance object PDALogEntry Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PDALogEntry() PDALogEntry(string, float) Fields Key Timestamp Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.Perms.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.Perms.html",
    "title": "Enum Perms | Nitrox",
    "keywords": "Enum Perms Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll public enum Perms : byte Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields ADMIN = 3 CONSOLE = 4 MODERATOR = 2 NONE = 0 PLAYER = 1"
  },
  "api/NitroxModel.DataStructures.GameLogic.PermsFlag.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PermsFlag.html",
    "title": "Enum PermsFlag | Nitrox",
    "keywords": "Enum PermsFlag Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Flags] public enum PermsFlag : byte Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields NONE = 0 NO_CONSOLE = 1"
  },
  "api/NitroxModel.DataStructures.GameLogic.PingInstancePreference.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PingInstancePreference.-ctor.html",
    "title": "Constructor PingInstancePreference | Nitrox",
    "keywords": "Constructor PingInstancePreference Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll PingInstancePreference() [IgnoreConstructor] protected PingInstancePreference() PingInstancePreference(int, bool) public PingInstancePreference(int color, bool visible) Parameters color int visible bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.PingInstancePreference.Color.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PingInstancePreference.Color.html",
    "title": "Property Color | Nitrox",
    "keywords": "Property Color Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Color [DataMember(Order = 1)] public int Color { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.GameLogic.PingInstancePreference.Visible.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PingInstancePreference.Visible.html",
    "title": "Property Visible | Nitrox",
    "keywords": "Property Visible Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Visible [DataMember(Order = 2)] public bool Visible { get; set; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.PingInstancePreference.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PingInstancePreference.html",
    "title": "Class PingInstancePreference | Nitrox",
    "keywords": "Class PingInstancePreference Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class PingInstancePreference Inheritance object PingInstancePreference Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PingInstancePreference() PingInstancePreference(int, bool) Properties Color Visible"
  },
  "api/NitroxModel.DataStructures.GameLogic.PlantableItemData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlantableItemData.-ctor.html",
    "title": "Constructor PlantableItemData | Nitrox",
    "keywords": "Constructor PlantableItemData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll PlantableItemData() [IgnoreConstructor] protected PlantableItemData() PlantableItemData(NitroxId, NitroxId, byte[], double) Extends the basic ItemData by adding the game time when the Plantable was added to its Planter container. public PlantableItemData(NitroxId containerId, NitroxId itemId, byte[] serializedData, double plantedGameTime) Parameters containerId NitroxId itemId NitroxId serializedData byte[] plantedGameTime double Clients will use this to determine expected plant growth progress when connecting"
  },
  "api/NitroxModel.DataStructures.GameLogic.PlantableItemData.PlantedGameTime.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlantableItemData.PlantedGameTime.html",
    "title": "Property PlantedGameTime | Nitrox",
    "keywords": "Property PlantedGameTime Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll PlantedGameTime [DataMember(Order = 1)] public double PlantedGameTime { get; } Property Value double"
  },
  "api/NitroxModel.DataStructures.GameLogic.PlantableItemData.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlantableItemData.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.PlantableItemData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlantableItemData.html",
    "title": "Class PlantableItemData | Nitrox",
    "keywords": "Class PlantableItemData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class PlantableItemData : ItemData Inheritance object ItemData PlantableItemData Inherited Members ItemData.ContainerId ItemData.ItemId ItemData.SerializedData object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlantableItemData() PlantableItemData(NitroxId, NitroxId, byte[], double) Extends the basic ItemData by adding the game time when the Plantable was added to its Planter container. Properties PlantedGameTime Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.-ctor.html",
    "title": "Constructor PlayerStatsData | Nitrox",
    "keywords": "Constructor PlayerStatsData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll PlayerStatsData() [IgnoreConstructor] protected PlayerStatsData() PlayerStatsData(float, float, float, float, float, float) public PlayerStatsData(float oxygen, float maxOxygen, float health, float food, float water, float infectionAmount) Parameters oxygen float maxOxygen float health float food float water float infectionAmount float"
  },
  "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.Food.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.Food.html",
    "title": "Property Food | Nitrox",
    "keywords": "Property Food Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Food [DataMember(Order = 4)] public float Food { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.Health.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.Health.html",
    "title": "Property Health | Nitrox",
    "keywords": "Property Health Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Health [DataMember(Order = 3)] public float Health { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.InfectionAmount.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.InfectionAmount.html",
    "title": "Property InfectionAmount | Nitrox",
    "keywords": "Property InfectionAmount Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll InfectionAmount [DataMember(Order = 6)] public float InfectionAmount { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.MaxOxygen.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.MaxOxygen.html",
    "title": "Property MaxOxygen | Nitrox",
    "keywords": "Property MaxOxygen Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll MaxOxygen [DataMember(Order = 2)] public float MaxOxygen { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.Oxygen.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.Oxygen.html",
    "title": "Property Oxygen | Nitrox",
    "keywords": "Property Oxygen Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Oxygen [DataMember(Order = 1)] public float Oxygen { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.Water.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.Water.html",
    "title": "Property Water | Nitrox",
    "keywords": "Property Water Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Water [DataMember(Order = 5)] public float Water { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.PlayerStatsData.html",
    "title": "Class PlayerStatsData | Nitrox",
    "keywords": "Class PlayerStatsData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class PlayerStatsData Inheritance object PlayerStatsData Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerStatsData() PlayerStatsData(float, float, float, float, float, float) Properties Food Health InfectionAmount MaxOxygen Oxygen Water Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.RandomStartGenerator.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.RandomStartGenerator.-ctor.html",
    "title": "Constructor RandomStartGenerator | Nitrox",
    "keywords": "Constructor RandomStartGenerator Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll RandomStartGenerator(Bitmap) public RandomStartGenerator(Bitmap randomStartTexture) Parameters randomStartTexture Bitmap"
  },
  "api/NitroxModel.DataStructures.GameLogic.RandomStartGenerator.GenerateRandomStartPosition.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.RandomStartGenerator.GenerateRandomStartPosition.html",
    "title": "Method GenerateRandomStartPosition | Nitrox",
    "keywords": "Method GenerateRandomStartPosition Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll GenerateRandomStartPosition(Random) public NitroxVector3 GenerateRandomStartPosition(Random rnd) Parameters rnd Random Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.GameLogic.RandomStartGenerator.GenerateRandomStartPositions.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.RandomStartGenerator.GenerateRandomStartPositions.html",
    "title": "Method GenerateRandomStartPositions | Nitrox",
    "keywords": "Method GenerateRandomStartPositions Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll GenerateRandomStartPositions(string) public List<NitroxVector3> GenerateRandomStartPositions(string seed) Parameters seed string Returns List<NitroxVector3>"
  },
  "api/NitroxModel.DataStructures.GameLogic.RandomStartGenerator.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.RandomStartGenerator.html",
    "title": "Class RandomStartGenerator | Nitrox",
    "keywords": "Class RandomStartGenerator Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll public class RandomStartGenerator Inheritance object RandomStartGenerator Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RandomStartGenerator(Bitmap) Methods GenerateRandomStartPosition(Random) GenerateRandomStartPositions(string)"
  },
  "api/NitroxModel.DataStructures.GameLogic.SubnauticaPlayerPreferences.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.SubnauticaPlayerPreferences.-ctor.html",
    "title": "Constructor SubnauticaPlayerPreferences | Nitrox",
    "keywords": "Constructor SubnauticaPlayerPreferences Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll SubnauticaPlayerPreferences() [IgnoreConstructor] protected SubnauticaPlayerPreferences() SubnauticaPlayerPreferences(Dictionary<string, PingInstancePreference>, List<int>) public SubnauticaPlayerPreferences(Dictionary<string, PingInstancePreference> pingPreferences, List<int> pinnedTechTypes) Parameters pingPreferences Dictionary<string, PingInstancePreference> pinnedTechTypes List<int>"
  },
  "api/NitroxModel.DataStructures.GameLogic.SubnauticaPlayerPreferences.PingPreferences.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.SubnauticaPlayerPreferences.PingPreferences.html",
    "title": "Property PingPreferences | Nitrox",
    "keywords": "Property PingPreferences Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll PingPreferences [DataMember(Order = 1)] public Dictionary<string, PingInstancePreference> PingPreferences { get; set; } Property Value Dictionary<string, PingInstancePreference>"
  },
  "api/NitroxModel.DataStructures.GameLogic.SubnauticaPlayerPreferences.PinnedTechTypes.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.SubnauticaPlayerPreferences.PinnedTechTypes.html",
    "title": "Property PinnedTechTypes | Nitrox",
    "keywords": "Property PinnedTechTypes Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll PinnedTechTypes [DataMember(Order = 2)] public List<int> PinnedTechTypes { get; set; } Property Value List<int> Remarks The int type refers to a TechType."
  },
  "api/NitroxModel.DataStructures.GameLogic.SubnauticaPlayerPreferences.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.SubnauticaPlayerPreferences.html",
    "title": "Class SubnauticaPlayerPreferences | Nitrox",
    "keywords": "Class SubnauticaPlayerPreferences Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public class SubnauticaPlayerPreferences Inheritance object SubnauticaPlayerPreferences Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SubnauticaPlayerPreferences() SubnauticaPlayerPreferences(Dictionary<string, PingInstancePreference>, List<int>) Properties PingPreferences PinnedTechTypes"
  },
  "api/NitroxModel.DataStructures.GameLogic.TimeData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.TimeData.-ctor.html",
    "title": "Constructor TimeData | Nitrox",
    "keywords": "Constructor TimeData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll TimeData(TimeChange, AuroraEventData) public TimeData(TimeChange timePacket, AuroraEventData auroraEventData) Parameters timePacket TimeChange auroraEventData AuroraEventData"
  },
  "api/NitroxModel.DataStructures.GameLogic.TimeData.AuroraEventData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.TimeData.AuroraEventData.html",
    "title": "Field AuroraEventData | Nitrox",
    "keywords": "Field AuroraEventData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll public AuroraEventData AuroraEventData Returns AuroraEventData"
  },
  "api/NitroxModel.DataStructures.GameLogic.TimeData.TimePacket.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.TimeData.TimePacket.html",
    "title": "Field TimePacket | Nitrox",
    "keywords": "Field TimePacket Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll public TimeChange TimePacket Returns TimeChange"
  },
  "api/NitroxModel.DataStructures.GameLogic.TimeData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.TimeData.html",
    "title": "Class TimeData | Nitrox",
    "keywords": "Class TimeData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] public class TimeData Inheritance object TimeData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeData(TimeChange, AuroraEventData) Fields AuroraEventData TimePacket"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.-ctor.html",
    "title": "Constructor VehicleMovementData | Nitrox",
    "keywords": "Constructor VehicleMovementData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll VehicleMovementData() [IgnoreConstructor] protected VehicleMovementData() VehicleMovementData(NitroxTechType, NitroxId, NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxVector3, float, float, bool, NitroxVector3?) public VehicleMovementData(NitroxTechType techType, NitroxId id, NitroxVector3 position, NitroxQuaternion rotation, NitroxVector3 velocity, NitroxVector3 angularVelocity, float steeringWheelYaw, float steeringWheelPitch, bool appliedThrottle, NitroxVector3? driverPosition = null) Parameters techType NitroxTechType id NitroxId position NitroxVector3 rotation NitroxQuaternion velocity NitroxVector3 angularVelocity NitroxVector3 steeringWheelYaw float steeringWheelPitch float appliedThrottle bool driverPosition NitroxVector3? VehicleMovementData(NitroxTechType, NitroxId, NitroxVector3, NitroxQuaternion) public VehicleMovementData(NitroxTechType techType, NitroxId id, NitroxVector3 position, NitroxQuaternion rotation) Parameters techType NitroxTechType id NitroxId position NitroxVector3 rotation NitroxQuaternion"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.AngularVelocity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.AngularVelocity.html",
    "title": "Property AngularVelocity | Nitrox",
    "keywords": "Property AngularVelocity Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll AngularVelocity [DataMember(Order = 6)] public NitroxVector3 AngularVelocity { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.AppliedThrottle.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.AppliedThrottle.html",
    "title": "Property AppliedThrottle | Nitrox",
    "keywords": "Property AppliedThrottle Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll AppliedThrottle [DataMember(Order = 9)] public bool AppliedThrottle { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.DriverPosition.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.DriverPosition.html",
    "title": "Property DriverPosition | Nitrox",
    "keywords": "Property DriverPosition Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll DriverPosition [DataMember(Order = 10)] public NitroxVector3? DriverPosition { get; set; } Property Value NitroxVector3?"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.Id.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Id [DataMember(Order = 2)] public NitroxId Id { get; set; } Property Value NitroxId"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.Position.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Position [DataMember(Order = 3)] public NitroxVector3 Position { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.Rotation.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.Rotation.html",
    "title": "Property Rotation | Nitrox",
    "keywords": "Property Rotation Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Rotation [DataMember(Order = 4)] public NitroxQuaternion Rotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.SteeringWheelPitch.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.SteeringWheelPitch.html",
    "title": "Property SteeringWheelPitch | Nitrox",
    "keywords": "Property SteeringWheelPitch Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll SteeringWheelPitch [DataMember(Order = 8)] public float SteeringWheelPitch { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.SteeringWheelYaw.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.SteeringWheelYaw.html",
    "title": "Property SteeringWheelYaw | Nitrox",
    "keywords": "Property SteeringWheelYaw Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll SteeringWheelYaw [DataMember(Order = 7)] public float SteeringWheelYaw { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.TechType.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll TechType [DataMember(Order = 1)] public NitroxTechType TechType { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.ToString.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.Velocity.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.Velocity.html",
    "title": "Property Velocity | Nitrox",
    "keywords": "Property Velocity Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll Velocity [DataMember(Order = 5)] public NitroxVector3 Velocity { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.VehicleMovementData.html",
    "title": "Class VehicleMovementData | Nitrox",
    "keywords": "Class VehicleMovementData Namespace NitroxModel.DataStructures.GameLogic Assembly NitroxModel.dll [Serializable] [DataContract] public abstract class VehicleMovementData Inheritance object VehicleMovementData Derived BasicVehicleMovementData ExosuitMovementData Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleMovementData() VehicleMovementData(NitroxTechType, NitroxId, NitroxVector3, NitroxQuaternion) VehicleMovementData(NitroxTechType, NitroxId, NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxVector3, float, float, bool, NitroxVector3?) Properties AngularVelocity AppliedThrottle DriverPosition Id Position Rotation SteeringWheelPitch SteeringWheelYaw TechType Velocity Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.GameLogic.html": {
    "href": "api/NitroxModel.DataStructures.GameLogic.html",
    "title": "Namespace NitroxModel.DataStructures.GameLogic | Nitrox",
    "keywords": "Namespace NitroxModel.DataStructures.GameLogic Namespaces NitroxModel.DataStructures.GameLogic.Bases NitroxModel.DataStructures.GameLogic.Entities Classes AbsoluteEntityCell AuroraEventData Aurora events data BasicItemData BasicVehicleMovementData DamageTakenData Entity EquippedItemData InitialPDAData InitialStoryGoalData ItemData NitroxScheduledGoal NitroxTechType TechType is the enum used in Subnautica for defining all the spawnable objects in the world. This includes food, enemies and bases. PDAEntry PDALogEntry PingInstancePreference PlantableItemData PlayerStatsData RandomStartGenerator SubnauticaPlayerPreferences TimeData VehicleMovementData Enums Perms PermsFlag"
  },
  "api/NitroxModel.DataStructures.NitroxId.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.NitroxId.-ctor.html",
    "title": "Constructor NitroxId | Nitrox",
    "keywords": "Constructor NitroxId Namespace NitroxModel.DataStructures Assembly NitroxModel.dll NitroxId() [IgnoreConstructor] public NitroxId() NitroxId(string) Create a NitroxId from a string public NitroxId(string str) Parameters str string a NitroxID as string NitroxId(Guid) public NitroxId(Guid guid) Parameters guid Guid NitroxId(byte[]) public NitroxId(byte[] bytes) Parameters bytes byte[] NitroxId(SerializationInfo, StreamingContext) protected NitroxId(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext"
  },
  "api/NitroxModel.DataStructures.NitroxId.CompareTo.html": {
    "href": "api/NitroxModel.DataStructures.NitroxId.CompareTo.html",
    "title": "Method CompareTo | Nitrox",
    "keywords": "Method CompareTo Namespace NitroxModel.DataStructures Assembly NitroxModel.dll CompareTo(NitroxId) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. public int CompareTo(NitroxId other) Parameters other NitroxId An object to compare with this instance. Returns int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes other in the sort order. Zero This instance occurs in the same position in the sort order as other. Greater than zero This instance follows other in the sort order."
  },
  "api/NitroxModel.DataStructures.NitroxId.Equals.html": {
    "href": "api/NitroxModel.DataStructures.NitroxId.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. Equals(NitroxId) Indicates whether the current object is equal to another object of the same type. public bool Equals(NitroxId other) Parameters other NitroxId An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false."
  },
  "api/NitroxModel.DataStructures.NitroxId.GetHashCode.html": {
    "href": "api/NitroxModel.DataStructures.NitroxId.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxModel.DataStructures Assembly NitroxModel.dll GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/NitroxModel.DataStructures.NitroxId.GetObjectData.html": {
    "href": "api/NitroxModel.DataStructures.NitroxId.GetObjectData.html",
    "title": "Method GetObjectData | Nitrox",
    "keywords": "Method GetObjectData Namespace NitroxModel.DataStructures Assembly NitroxModel.dll GetObjectData(SerializationInfo, StreamingContext) Populates a SerializationInfo with the data needed to serialize the target object. [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)] public virtual void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The SerializationInfo to populate with data. context StreamingContext The destination (see StreamingContext) for this serialization. Exceptions SecurityException The caller does not have the required permission."
  },
  "api/NitroxModel.DataStructures.NitroxId.Increment.html": {
    "href": "api/NitroxModel.DataStructures.NitroxId.Increment.html",
    "title": "Method Increment | Nitrox",
    "keywords": "Method Increment Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Increment() public NitroxId Increment() Returns NitroxId"
  },
  "api/NitroxModel.DataStructures.NitroxId.ToString.html": {
    "href": "api/NitroxModel.DataStructures.NitroxId.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.NitroxId.html": {
    "href": "api/NitroxModel.DataStructures.NitroxId.html",
    "title": "Class NitroxId | Nitrox",
    "keywords": "Class NitroxId Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Used to reference a Unity GameObject and makes it possible to synchronize a GameObject between connected players. [Serializable] [DataContract] public class NitroxId : ISerializable, IEquatable<NitroxId>, IComparable<NitroxId> Inheritance object NitroxId Implements ISerializable IEquatable<NitroxId> IComparable<NitroxId> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors NitroxId() NitroxId(byte[]) NitroxId(Guid) NitroxId(SerializationInfo, StreamingContext) NitroxId(string) Create a NitroxId from a string Methods CompareTo(NitroxId) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Equals(NitroxId) Indicates whether the current object is equal to another object of the same type. Equals(object) Determines whether the specified object is equal to the current object. GetHashCode() Serves as the default hash function. GetObjectData(SerializationInfo, StreamingContext) Populates a SerializationInfo with the data needed to serialize the target object. Increment() ToString() Returns a string that represents the current object. Operators operator ==(NitroxId, NitroxId) operator !=(NitroxId, NitroxId)"
  },
  "api/NitroxModel.DataStructures.NitroxId.op_Equality.html": {
    "href": "api/NitroxModel.DataStructures.NitroxId.op_Equality.html",
    "title": "Operator operator == | Nitrox",
    "keywords": "Operator operator == Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator ==(NitroxId, NitroxId) public static bool operator ==(NitroxId id1, NitroxId id2) Parameters id1 NitroxId id2 NitroxId Returns bool"
  },
  "api/NitroxModel.DataStructures.NitroxId.op_Inequality.html": {
    "href": "api/NitroxModel.DataStructures.NitroxId.op_Inequality.html",
    "title": "Operator operator != | Nitrox",
    "keywords": "Operator operator != Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator !=(NitroxId, NitroxId) public static bool operator !=(NitroxId id1, NitroxId id2) Parameters id1 NitroxId id2 NitroxId Returns bool"
  },
  "api/NitroxModel.DataStructures.NitroxIdTest.BothNullEquality.html": {
    "href": "api/NitroxModel.DataStructures.NitroxIdTest.BothNullEquality.html",
    "title": "Method BothNullEquality | Nitrox",
    "keywords": "Method BothNullEquality Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll BothNullEquality() [TestMethod] public void BothNullEquality()"
  },
  "api/NitroxModel.DataStructures.NitroxIdTest.NullGuidEquality.html": {
    "href": "api/NitroxModel.DataStructures.NitroxIdTest.NullGuidEquality.html",
    "title": "Method NullGuidEquality | Nitrox",
    "keywords": "Method NullGuidEquality Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll NullGuidEquality() [TestMethod] public void NullGuidEquality()"
  },
  "api/NitroxModel.DataStructures.NitroxIdTest.SameGuidEquality.html": {
    "href": "api/NitroxModel.DataStructures.NitroxIdTest.SameGuidEquality.html",
    "title": "Method SameGuidEquality | Nitrox",
    "keywords": "Method SameGuidEquality Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll SameGuidEquality() [TestMethod] public void SameGuidEquality()"
  },
  "api/NitroxModel.DataStructures.NitroxIdTest.html": {
    "href": "api/NitroxModel.DataStructures.NitroxIdTest.html",
    "title": "Class NitroxIdTest | Nitrox",
    "keywords": "Class NitroxIdTest Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll [TestClass] public class NitroxIdTest Inheritance object NitroxIdTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods BothNullEquality() NullGuidEquality() SameGuidEquality()"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.-ctor.html",
    "title": "Constructor NitroxInt3 | Nitrox",
    "keywords": "Constructor NitroxInt3 Namespace NitroxModel.DataStructures Assembly NitroxModel.dll NitroxInt3(int, int, int) public NitroxInt3(int x, int y, int z) Parameters x int y int z int"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.Ceil.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.Ceil.html",
    "title": "Method Ceil | Nitrox",
    "keywords": "Method Ceil Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Ceil(float, float, float) public static NitroxInt3 Ceil(float x, float y, float z) Parameters x float y float z float Returns NitroxInt3 Ceil(NitroxVector3) public static NitroxInt3 Ceil(NitroxVector3 vector) Parameters vector NitroxVector3 Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.Equals.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Equals(NitroxInt3) Indicates whether the current object is equal to another object of the same type. public bool Equals(NitroxInt3 other) Parameters other NitroxInt3 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false."
  },
  "api/NitroxModel.DataStructures.NitroxInt3.Floor.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.Floor.html",
    "title": "Method Floor | Nitrox",
    "keywords": "Method Floor Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Floor(float, float, float) public static NitroxInt3 Floor(float x, float y, float z) Parameters x float y float z float Returns NitroxInt3 Floor(NitroxVector3) public static NitroxInt3 Floor(NitroxVector3 vector) Parameters vector NitroxVector3 Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.GetHashCode.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxModel.DataStructures Assembly NitroxModel.dll GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance."
  },
  "api/NitroxModel.DataStructures.NitroxInt3.ToString.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxModel.DataStructures.NitroxInt3.X.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.X.html",
    "title": "Property X | Nitrox",
    "keywords": "Property X Namespace NitroxModel.DataStructures Assembly NitroxModel.dll X [DataMember(Order = 1)] public int X { readonly get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.Y.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.Y.html",
    "title": "Property Y | Nitrox",
    "keywords": "Property Y Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Y [DataMember(Order = 2)] public int Y { readonly get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.Z.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.Z.html",
    "title": "Property Z | Nitrox",
    "keywords": "Property Z Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Z [DataMember(Order = 3)] public int Z { readonly get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.html",
    "title": "Struct NitroxInt3 | Nitrox",
    "keywords": "Struct NitroxInt3 Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Model to allow NitroxModel to be decoupled from Assembly-csharp-firstpass (i.e. game code). [Serializable] [DataContract] public struct NitroxInt3 : IEquatable<NitroxInt3> Implements IEquatable<NitroxInt3> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors NitroxInt3(int, int, int) Properties X Y Z Methods Ceil(NitroxVector3) Ceil(float, float, float) Equals(NitroxInt3) Indicates whether the current object is equal to another object of the same type. Equals(object) Indicates whether this instance and a specified object are equal. Floor(NitroxVector3) Floor(float, float, float) GetHashCode() Returns the hash code for this instance. ToString() Returns the fully qualified type name of this instance. Operators operator +(NitroxInt3, NitroxInt3) operator +(NitroxInt3, NitroxVector3) operator +(NitroxInt3, int) operator /(NitroxInt3, NitroxInt3) operator /(NitroxInt3, int) operator ==(NitroxInt3, NitroxInt3) operator >(NitroxInt3, NitroxInt3) operator >=(NitroxInt3, NitroxInt3) implicit operator NitroxVector3(NitroxInt3) operator !=(NitroxInt3, NitroxInt3) operator <<(NitroxInt3, int) operator <(NitroxInt3, NitroxInt3) operator <=(NitroxInt3, NitroxInt3) operator *(NitroxInt3, NitroxInt3) operator *(NitroxInt3, int) operator >>(NitroxInt3, int) operator -(NitroxInt3, NitroxInt3) operator -(NitroxInt3, int)"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_Addition.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_Addition.html",
    "title": "Operator operator + | Nitrox",
    "keywords": "Operator operator + Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator +(NitroxInt3, NitroxInt3) public static NitroxInt3 operator +(NitroxInt3 u, NitroxInt3 v) Parameters u NitroxInt3 v NitroxInt3 Returns NitroxInt3 operator +(NitroxInt3, int) public static NitroxInt3 operator +(NitroxInt3 u, int s) Parameters u NitroxInt3 s int Returns NitroxInt3 operator +(NitroxInt3, NitroxVector3) public static NitroxVector3 operator +(NitroxInt3 u, NitroxVector3 v) Parameters u NitroxInt3 v NitroxVector3 Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_Division.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_Division.html",
    "title": "Operator operator / | Nitrox",
    "keywords": "Operator operator / Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator /(NitroxInt3, NitroxInt3) public static NitroxInt3 operator /(NitroxInt3 u, NitroxInt3 v) Parameters u NitroxInt3 v NitroxInt3 Returns NitroxInt3 operator /(NitroxInt3, int) public static NitroxInt3 operator /(NitroxInt3 u, int s) Parameters u NitroxInt3 s int Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_Equality.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_Equality.html",
    "title": "Operator operator == | Nitrox",
    "keywords": "Operator operator == Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator ==(NitroxInt3, NitroxInt3) public static bool operator ==(NitroxInt3 u, NitroxInt3 v) Parameters u NitroxInt3 v NitroxInt3 Returns bool"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_GreaterThan.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_GreaterThan.html",
    "title": "Operator operator > | Nitrox",
    "keywords": "Operator operator > Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator >(NitroxInt3, NitroxInt3) public static bool operator >(NitroxInt3 u, NitroxInt3 v) Parameters u NitroxInt3 v NitroxInt3 Returns bool"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_GreaterThanOrEqual.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_GreaterThanOrEqual.html",
    "title": "Operator operator >= | Nitrox",
    "keywords": "Operator operator >= Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator >=(NitroxInt3, NitroxInt3) public static bool operator >=(NitroxInt3 u, NitroxInt3 v) Parameters u NitroxInt3 v NitroxInt3 Returns bool"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_Implicit.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_Implicit.html",
    "title": "Operator implicit operator | Nitrox",
    "keywords": "Operator implicit operator Namespace NitroxModel.DataStructures Assembly NitroxModel.dll implicit operator NitroxVector3(NitroxInt3) public static implicit operator NitroxVector3(NitroxInt3 v) Parameters v NitroxInt3 Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_Inequality.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_Inequality.html",
    "title": "Operator operator != | Nitrox",
    "keywords": "Operator operator != Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator !=(NitroxInt3, NitroxInt3) public static bool operator !=(NitroxInt3 u, NitroxInt3 v) Parameters u NitroxInt3 v NitroxInt3 Returns bool"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_LeftShift.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_LeftShift.html",
    "title": "Operator operator << | Nitrox",
    "keywords": "Operator operator << Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator <<(NitroxInt3, int) public static NitroxInt3 operator <<(NitroxInt3 u, int s) Parameters u NitroxInt3 s int Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_LessThan.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_LessThan.html",
    "title": "Operator operator < | Nitrox",
    "keywords": "Operator operator < Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator <(NitroxInt3, NitroxInt3) public static bool operator <(NitroxInt3 u, NitroxInt3 v) Parameters u NitroxInt3 v NitroxInt3 Returns bool"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_LessThanOrEqual.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_LessThanOrEqual.html",
    "title": "Operator operator <= | Nitrox",
    "keywords": "Operator operator <= Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator <=(NitroxInt3, NitroxInt3) public static bool operator <=(NitroxInt3 u, NitroxInt3 v) Parameters u NitroxInt3 v NitroxInt3 Returns bool"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_Multiply.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_Multiply.html",
    "title": "Operator operator * | Nitrox",
    "keywords": "Operator operator * Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator *(NitroxInt3, NitroxInt3) public static NitroxInt3 operator *(NitroxInt3 u, NitroxInt3 v) Parameters u NitroxInt3 v NitroxInt3 Returns NitroxInt3 operator *(NitroxInt3, int) public static NitroxInt3 operator *(NitroxInt3 u, int s) Parameters u NitroxInt3 s int Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_RightShift.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_RightShift.html",
    "title": "Operator operator >> | Nitrox",
    "keywords": "Operator operator >> Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator >>(NitroxInt3, int) public static NitroxInt3 operator >>(NitroxInt3 u, int s) Parameters u NitroxInt3 s int Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.NitroxInt3.op_Subtraction.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3.op_Subtraction.html",
    "title": "Operator operator - | Nitrox",
    "keywords": "Operator operator - Namespace NitroxModel.DataStructures Assembly NitroxModel.dll operator -(NitroxInt3, NitroxInt3) public static NitroxInt3 operator -(NitroxInt3 u, NitroxInt3 v) Parameters u NitroxInt3 v NitroxInt3 Returns NitroxInt3 operator -(NitroxInt3, int) public static NitroxInt3 operator -(NitroxInt3 u, int s) Parameters u NitroxInt3 s int Returns NitroxInt3"
  },
  "api/NitroxModel.DataStructures.NitroxInt3Test.Ceil.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3Test.Ceil.html",
    "title": "Method Ceil | Nitrox",
    "keywords": "Method Ceil Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Ceil() [TestMethod] public void Ceil()"
  },
  "api/NitroxModel.DataStructures.NitroxInt3Test.Equals.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3Test.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Equals() [TestMethod] public void Equals()"
  },
  "api/NitroxModel.DataStructures.NitroxInt3Test.Floor.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3Test.Floor.html",
    "title": "Method Floor | Nitrox",
    "keywords": "Method Floor Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Floor() [TestMethod] public void Floor()"
  },
  "api/NitroxModel.DataStructures.NitroxInt3Test.Setup.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3Test.Setup.html",
    "title": "Method Setup | Nitrox",
    "keywords": "Method Setup Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Setup() [TestInitialize] public void Setup()"
  },
  "api/NitroxModel.DataStructures.NitroxInt3Test.html": {
    "href": "api/NitroxModel.DataStructures.NitroxInt3Test.html",
    "title": "Class NitroxInt3Test | Nitrox",
    "keywords": "Class NitroxInt3Test Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll [TestClass] public class NitroxInt3Test Inheritance object NitroxInt3Test Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Ceil() Equals() Floor() Setup()"
  },
  "api/NitroxModel.DataStructures.NitroxVersion.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.NitroxVersion.-ctor.html",
    "title": "Constructor NitroxVersion | Nitrox",
    "keywords": "Constructor NitroxVersion Namespace NitroxModel.DataStructures Assembly NitroxModel.dll NitroxVersion(ushort, ushort) public NitroxVersion(ushort major, ushort minor) Parameters major ushort minor ushort NitroxVersion(int, int) public NitroxVersion(int major, int minor) Parameters major int minor int"
  },
  "api/NitroxModel.DataStructures.NitroxVersion.CompareTo.html": {
    "href": "api/NitroxModel.DataStructures.NitroxVersion.CompareTo.html",
    "title": "Method CompareTo | Nitrox",
    "keywords": "Method CompareTo Namespace NitroxModel.DataStructures Assembly NitroxModel.dll CompareTo(NitroxVersion) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. public int CompareTo(NitroxVersion other) Parameters other NitroxVersion An object to compare with this instance. Returns int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes other in the sort order. Zero This instance occurs in the same position in the sort order as other. Greater than zero This instance follows other in the sort order."
  },
  "api/NitroxModel.DataStructures.NitroxVersion.Major.html": {
    "href": "api/NitroxModel.DataStructures.NitroxVersion.Major.html",
    "title": "Property Major | Nitrox",
    "keywords": "Property Major Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Major public ushort Major { get; init; } Property Value ushort"
  },
  "api/NitroxModel.DataStructures.NitroxVersion.Minor.html": {
    "href": "api/NitroxModel.DataStructures.NitroxVersion.Minor.html",
    "title": "Property Minor | Nitrox",
    "keywords": "Property Minor Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Minor public ushort Minor { get; init; } Property Value ushort"
  },
  "api/NitroxModel.DataStructures.NitroxVersion.ToString.html": {
    "href": "api/NitroxModel.DataStructures.NitroxVersion.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxModel.DataStructures.NitroxVersion.html": {
    "href": "api/NitroxModel.DataStructures.NitroxVersion.html",
    "title": "Struct NitroxVersion | Nitrox",
    "keywords": "Struct NitroxVersion Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Serializable version of Version with only major and minor properties. [Serializable] public readonly struct NitroxVersion : IComparable<NitroxVersion> Implements IComparable<NitroxVersion> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors NitroxVersion(int, int) NitroxVersion(ushort, ushort) Properties Major Minor Methods CompareTo(NitroxVersion) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. ToString() Returns the fully qualified type name of this instance."
  },
  "api/NitroxModel.DataStructures.NitroxVersionTest.Compare.html": {
    "href": "api/NitroxModel.DataStructures.NitroxVersionTest.Compare.html",
    "title": "Method Compare | Nitrox",
    "keywords": "Method Compare Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Compare() [TestMethod] public void Compare()"
  },
  "api/NitroxModel.DataStructures.NitroxVersionTest.Equals.html": {
    "href": "api/NitroxModel.DataStructures.NitroxVersionTest.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Equals() [TestMethod] public void Equals()"
  },
  "api/NitroxModel.DataStructures.NitroxVersionTest.html": {
    "href": "api/NitroxModel.DataStructures.NitroxVersionTest.html",
    "title": "Class NitroxVersionTest | Nitrox",
    "keywords": "Class NitroxVersionTest Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll [TestClass] public class NitroxVersionTest Inheritance object NitroxVersionTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Compare() Equals()"
  },
  "api/NitroxModel.DataStructures.PriorityChain-1.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.PriorityChain-1.-ctor.html",
    "title": "Constructor PriorityChain | Nitrox",
    "keywords": "Constructor PriorityChain Namespace NitroxModel.DataStructures Assembly NitroxModel.dll PriorityChain(int) public PriorityChain(int priority) Parameters priority int"
  },
  "api/NitroxModel.DataStructures.PriorityChain-1.Count.html": {
    "href": "api/NitroxModel.DataStructures.PriorityChain-1.Count.html",
    "title": "Property Count | Nitrox",
    "keywords": "Property Count Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Count public int Count { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.PriorityChain-1.Head.html": {
    "href": "api/NitroxModel.DataStructures.PriorityChain-1.Head.html",
    "title": "Property Head | Nitrox",
    "keywords": "Property Head Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Head public PriorityItem<T> Head { get; set; } Property Value PriorityItem<T>"
  },
  "api/NitroxModel.DataStructures.PriorityChain-1.Priority.html": {
    "href": "api/NitroxModel.DataStructures.PriorityChain-1.Priority.html",
    "title": "Property Priority | Nitrox",
    "keywords": "Property Priority Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Priority public int Priority { get; set; } Property Value int"
  },
  "api/NitroxModel.DataStructures.PriorityChain-1.Tail.html": {
    "href": "api/NitroxModel.DataStructures.PriorityChain-1.Tail.html",
    "title": "Property Tail | Nitrox",
    "keywords": "Property Tail Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Tail public PriorityItem<T> Tail { get; set; } Property Value PriorityItem<T>"
  },
  "api/NitroxModel.DataStructures.PriorityChain-1.html": {
    "href": "api/NitroxModel.DataStructures.PriorityChain-1.html",
    "title": "Class PriorityChain<T> | Nitrox",
    "keywords": "Class PriorityChain<T> Namespace NitroxModel.DataStructures Assembly NitroxModel.dll public class PriorityChain<T> Type Parameters T Inheritance object PriorityChain<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PriorityChain(int) Properties Count Head Priority Tail"
  },
  "api/NitroxModel.DataStructures.PriorityItem-1.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.PriorityItem-1.-ctor.html",
    "title": "Constructor PriorityItem | Nitrox",
    "keywords": "Constructor PriorityItem Namespace NitroxModel.DataStructures Assembly NitroxModel.dll PriorityItem(T) public PriorityItem(T data) Parameters data T"
  },
  "api/NitroxModel.DataStructures.PriorityItem-1.Data.html": {
    "href": "api/NitroxModel.DataStructures.PriorityItem-1.Data.html",
    "title": "Property Data | Nitrox",
    "keywords": "Property Data Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Data public T Data { get; } Property Value T"
  },
  "api/NitroxModel.DataStructures.PriorityItem-1.IsQueued.html": {
    "href": "api/NitroxModel.DataStructures.PriorityItem-1.IsQueued.html",
    "title": "Property IsQueued | Nitrox",
    "keywords": "Property IsQueued Namespace NitroxModel.DataStructures Assembly NitroxModel.dll IsQueued public bool IsQueued { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.PriorityItem-1.html": {
    "href": "api/NitroxModel.DataStructures.PriorityItem-1.html",
    "title": "Class PriorityItem<T> | Nitrox",
    "keywords": "Class PriorityItem<T> Namespace NitroxModel.DataStructures Assembly NitroxModel.dll public class PriorityItem<T> Type Parameters T Inheritance object PriorityItem<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PriorityItem(T) Properties Data IsQueued"
  },
  "api/NitroxModel.DataStructures.PriorityQueue-1.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueue-1.-ctor.html",
    "title": "Constructor PriorityQueue | Nitrox",
    "keywords": "Constructor PriorityQueue Namespace NitroxModel.DataStructures Assembly NitroxModel.dll PriorityQueue() public PriorityQueue()"
  },
  "api/NitroxModel.DataStructures.PriorityQueue-1.ChangeItemPriority.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueue-1.ChangeItemPriority.html",
    "title": "Method ChangeItemPriority | Nitrox",
    "keywords": "Method ChangeItemPriority Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ChangeItemPriority(PriorityItem<T>, int) public void ChangeItemPriority(PriorityItem<T> item, int priority) Parameters item PriorityItem<T> priority int"
  },
  "api/NitroxModel.DataStructures.PriorityQueue-1.Count.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueue-1.Count.html",
    "title": "Property Count | Nitrox",
    "keywords": "Property Count Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Count public int Count { get; } Property Value int"
  },
  "api/NitroxModel.DataStructures.PriorityQueue-1.Dequeue.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueue-1.Dequeue.html",
    "title": "Method Dequeue | Nitrox",
    "keywords": "Method Dequeue Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Dequeue() public T Dequeue() Returns T"
  },
  "api/NitroxModel.DataStructures.PriorityQueue-1.Enqueue.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueue-1.Enqueue.html",
    "title": "Method Enqueue | Nitrox",
    "keywords": "Method Enqueue Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Enqueue(int, T) public PriorityItem<T> Enqueue(int priority, T data) Parameters priority int data T Returns PriorityItem<T>"
  },
  "api/NitroxModel.DataStructures.PriorityQueue-1.MaxPriority.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueue-1.MaxPriority.html",
    "title": "Property MaxPriority | Nitrox",
    "keywords": "Property MaxPriority Namespace NitroxModel.DataStructures Assembly NitroxModel.dll MaxPriority public int MaxPriority { get; } Property Value int"
  },
  "api/NitroxModel.DataStructures.PriorityQueue-1.Peek.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueue-1.Peek.html",
    "title": "Method Peek | Nitrox",
    "keywords": "Method Peek Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Peek() public T Peek() Returns T"
  },
  "api/NitroxModel.DataStructures.PriorityQueue-1.RemoveItem.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueue-1.RemoveItem.html",
    "title": "Method RemoveItem | Nitrox",
    "keywords": "Method RemoveItem Namespace NitroxModel.DataStructures Assembly NitroxModel.dll RemoveItem(PriorityItem<T>) public void RemoveItem(PriorityItem<T> item) Parameters item PriorityItem<T>"
  },
  "api/NitroxModel.DataStructures.PriorityQueue-1.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueue-1.html",
    "title": "Class PriorityQueue<T> | Nitrox",
    "keywords": "Class PriorityQueue<T> Namespace NitroxModel.DataStructures Assembly NitroxModel.dll public class PriorityQueue<T> Type Parameters T Inheritance object PriorityQueue<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PriorityQueue() Properties Count MaxPriority Methods ChangeItemPriority(PriorityItem<T>, int) Dequeue() Enqueue(int, T) Peek() RemoveItem(PriorityItem<T>)"
  },
  "api/NitroxModel.DataStructures.PriorityQueueTest.CountSanity.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueueTest.CountSanity.html",
    "title": "Method CountSanity | Nitrox",
    "keywords": "Method CountSanity Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll CountSanity() [TestMethod] public void CountSanity()"
  },
  "api/NitroxModel.DataStructures.PriorityQueueTest.DifferentOrder.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueueTest.DifferentOrder.html",
    "title": "Method DifferentOrder | Nitrox",
    "keywords": "Method DifferentOrder Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll DifferentOrder() [TestMethod] public void DifferentOrder()"
  },
  "api/NitroxModel.DataStructures.PriorityQueueTest.PrioritySanity.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueueTest.PrioritySanity.html",
    "title": "Method PrioritySanity | Nitrox",
    "keywords": "Method PrioritySanity Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll PrioritySanity() [TestMethod] public void PrioritySanity()"
  },
  "api/NitroxModel.DataStructures.PriorityQueueTest.SameOrder.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueueTest.SameOrder.html",
    "title": "Method SameOrder | Nitrox",
    "keywords": "Method SameOrder Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll SameOrder() [TestMethod] public void SameOrder()"
  },
  "api/NitroxModel.DataStructures.PriorityQueueTest.SomeAreSameOrder.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueueTest.SomeAreSameOrder.html",
    "title": "Method SomeAreSameOrder | Nitrox",
    "keywords": "Method SomeAreSameOrder Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll SomeAreSameOrder() [TestMethod] public void SomeAreSameOrder()"
  },
  "api/NitroxModel.DataStructures.PriorityQueueTest.html": {
    "href": "api/NitroxModel.DataStructures.PriorityQueueTest.html",
    "title": "Class PriorityQueueTest | Nitrox",
    "keywords": "Class PriorityQueueTest Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll [TestClass] public class PriorityQueueTest Inheritance object PriorityQueueTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CountSanity() DifferentOrder() PrioritySanity() SameOrder() SomeAreSameOrder()"
  },
  "api/NitroxModel.DataStructures.SimulatedEntity.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.SimulatedEntity.-ctor.html",
    "title": "Constructor SimulatedEntity | Nitrox",
    "keywords": "Constructor SimulatedEntity Namespace NitroxModel.DataStructures Assembly NitroxModel.dll SimulatedEntity(NitroxId, ushort, bool, SimulationLockType) public SimulatedEntity(NitroxId id, ushort playerId, bool changesPosition, SimulationLockType lockType) Parameters id NitroxId playerId ushort changesPosition bool lockType SimulationLockType"
  },
  "api/NitroxModel.DataStructures.SimulatedEntity.ChangesPosition.html": {
    "href": "api/NitroxModel.DataStructures.SimulatedEntity.ChangesPosition.html",
    "title": "Property ChangesPosition | Nitrox",
    "keywords": "Property ChangesPosition Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ChangesPosition True if entity isn't static (e.g. welded to world). public bool ChangesPosition { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.SimulatedEntity.Id.html": {
    "href": "api/NitroxModel.DataStructures.SimulatedEntity.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.DataStructures.SimulatedEntity.LockType.html": {
    "href": "api/NitroxModel.DataStructures.SimulatedEntity.LockType.html",
    "title": "Property LockType | Nitrox",
    "keywords": "Property LockType Namespace NitroxModel.DataStructures Assembly NitroxModel.dll LockType public SimulationLockType LockType { get; } Property Value SimulationLockType"
  },
  "api/NitroxModel.DataStructures.SimulatedEntity.PlayerId.html": {
    "href": "api/NitroxModel.DataStructures.SimulatedEntity.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.DataStructures Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.DataStructures.SimulatedEntity.ToString.html": {
    "href": "api/NitroxModel.DataStructures.SimulatedEntity.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.SimulatedEntity.html": {
    "href": "api/NitroxModel.DataStructures.SimulatedEntity.html",
    "title": "Class SimulatedEntity | Nitrox",
    "keywords": "Class SimulatedEntity Namespace NitroxModel.DataStructures Assembly NitroxModel.dll A simulated entity that is tracked by the Nitrox server so that it knows which connected game client owns (and simulates) the entity. See SimulationLockType for more information. [Serializable] public class SimulatedEntity Inheritance object SimulatedEntity Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SimulatedEntity(NitroxId, ushort, bool, SimulationLockType) Properties ChangesPosition True if entity isn't static (e.g. welded to world). Id LockType PlayerId Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.SimulationLockType.html": {
    "href": "api/NitroxModel.DataStructures.SimulationLockType.html",
    "title": "Enum SimulationLockType | Nitrox",
    "keywords": "Enum SimulationLockType Namespace NitroxModel.DataStructures Assembly NitroxModel.dll [Serializable] public enum SimulationLockType Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields EXCLUSIVE = 0 Exclusive locks: These are typically requested by a player to hold exclusive, unbreaking control over the simulation of an entity. An example of this could be a player piloting the cyclops. These can either be removed or downgraded when no longer needed. TRANSIENT = 1 Transient locks: A lock that allows a player to control the simulation of an entity. Other players can steal this lock by requesting exclusive access. An example can be the following: a player is no longer piloting a cyclops but still simulating its movement. A second player can request exclusive control to pilot the cyclops. Doing so will revoke the transient lock and grant the second player an exclusive lock."
  },
  "api/NitroxModel.DataStructures.Surrogates.SerializationSurrogate-1.GetObjectData.html": {
    "href": "api/NitroxModel.DataStructures.Surrogates.SerializationSurrogate-1.GetObjectData.html",
    "title": "Method GetObjectData | Nitrox",
    "keywords": "Method GetObjectData Namespace NitroxModel.DataStructures.Surrogates Assembly NitroxModel.dll GetObjectData(object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. public void GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters obj object The object to serialize. info SerializationInfo The SerializationInfo to populate with data. context StreamingContext The destination (see StreamingContext) for this serialization. Exceptions SecurityException The caller does not have the required permission. GetObjectData(T, SerializationInfo) protected abstract void GetObjectData(T obj, SerializationInfo info) Parameters obj T info SerializationInfo"
  },
  "api/NitroxModel.DataStructures.Surrogates.SerializationSurrogate-1.SetObjectData.html": {
    "href": "api/NitroxModel.DataStructures.Surrogates.SerializationSurrogate-1.SetObjectData.html",
    "title": "Method SetObjectData | Nitrox",
    "keywords": "Method SetObjectData Namespace NitroxModel.DataStructures.Surrogates Assembly NitroxModel.dll SetObjectData(object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the object using the information in the SerializationInfo. public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters obj object The object to populate. info SerializationInfo The information to populate the object. context StreamingContext The source from which the object is deserialized. selector ISurrogateSelector The surrogate selector where the search for a compatible surrogate begins. Returns object The populated deserialized object. Exceptions SecurityException The caller does not have the required permission. SetObjectData(T, SerializationInfo) protected abstract T SetObjectData(T obj, SerializationInfo info) Parameters obj T info SerializationInfo Returns T"
  },
  "api/NitroxModel.DataStructures.Surrogates.SerializationSurrogate-1.html": {
    "href": "api/NitroxModel.DataStructures.Surrogates.SerializationSurrogate-1.html",
    "title": "Class SerializationSurrogate<T> | Nitrox",
    "keywords": "Class SerializationSurrogate<T> Namespace NitroxModel.DataStructures.Surrogates Assembly NitroxModel.dll public abstract class SerializationSurrogate<T> : ISerializationSurrogate Type Parameters T Inheritance object SerializationSurrogate<T> Implements ISerializationSurrogate Derived ColorSurrogate QuaternionSurrogate TechTypeSurrogate Vector3Surrogate Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetObjectData(object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. GetObjectData(T, SerializationInfo) SetObjectData(object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the object using the information in the SerializationInfo. SetObjectData(T, SerializationInfo)"
  },
  "api/NitroxModel.DataStructures.Surrogates.html": {
    "href": "api/NitroxModel.DataStructures.Surrogates.html",
    "title": "Namespace NitroxModel.DataStructures.Surrogates | Nitrox",
    "keywords": "Namespace NitroxModel.DataStructures.Surrogates Classes SerializationSurrogate<T>"
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.-ctor.html",
    "title": "Constructor ThreadSafeDictionary | Nitrox",
    "keywords": "Constructor ThreadSafeDictionary Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ThreadSafeDictionary() public ThreadSafeDictionary() ThreadSafeDictionary(IDictionary<TKey, TValue>, bool) public ThreadSafeDictionary(IDictionary<TKey, TValue> dictionary, bool createCopy = true) Parameters dictionary IDictionary<TKey, TValue> createCopy bool"
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Add.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Add.html",
    "title": "Method Add | Nitrox",
    "keywords": "Method Add Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Add(KeyValuePair<TKey, TValue>) Adds an item to the ICollection<T>. public void Add(KeyValuePair<TKey, TValue> item) Parameters item KeyValuePair<TKey, TValue> The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(TKey, TValue) Adds an element with the provided key and value to the IDictionary<TKey, TValue>. public void Add(TKey key, TValue value) Parameters key TKey The object to use as the key of the element to add. value TValue The object to use as the value of the element to add. Exceptions ArgumentNullException key is null. ArgumentException An element with the same key already exists in the IDictionary<TKey, TValue>. NotSupportedException The IDictionary<TKey, TValue> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Clear.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Clear.html",
    "title": "Method Clear | Nitrox",
    "keywords": "Method Clear Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Contains.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Contains.html",
    "title": "Method Contains | Nitrox",
    "keywords": "Method Contains Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Contains(KeyValuePair<TKey, TValue>) Determines whether the ICollection<T> contains a specific value. public bool Contains(KeyValuePair<TKey, TValue> item) Parameters item KeyValuePair<TKey, TValue> The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.ContainsKey.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.ContainsKey.html",
    "title": "Method ContainsKey | Nitrox",
    "keywords": "Method ContainsKey Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ContainsKey(TKey) Determines whether the IDictionary<TKey, TValue> contains an element with the specified key. public bool ContainsKey(TKey key) Parameters key TKey The key to locate in the IDictionary<TKey, TValue>. Returns bool true if the IDictionary<TKey, TValue> contains an element with the key; otherwise, false. Exceptions ArgumentNullException key is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.CopyTo.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.CopyTo.html",
    "title": "Method CopyTo | Nitrox",
    "keywords": "Method CopyTo Namespace NitroxModel.DataStructures Assembly NitroxModel.dll CopyTo(KeyValuePair<TKey, TValue>[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex) Parameters array KeyValuePair<TKey, TValue>[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Count.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Count.html",
    "title": "Property Count | Nitrox",
    "keywords": "Property Count Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Entries.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Entries.html",
    "title": "Property Entries | Nitrox",
    "keywords": "Property Entries Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Entries [IgnoreDataMember] public ICollection<KeyValuePair<TKey, TValue>> Entries { get; } Property Value ICollection<KeyValuePair<TKey, TValue>>"
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.GetEnumerator.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.GetEnumerator.html",
    "title": "Method GetEnumerator | Nitrox",
    "keywords": "Method GetEnumerator Namespace NitroxModel.DataStructures Assembly NitroxModel.dll GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns IEnumerator<KeyValuePair<TKey, TValue>> An enumerator that can be used to iterate through the collection."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.IsReadOnly.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.IsReadOnly.html",
    "title": "Property IsReadOnly | Nitrox",
    "keywords": "Property IsReadOnly Namespace NitroxModel.DataStructures Assembly NitroxModel.dll IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Item.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Item.html",
    "title": "Property this | Nitrox",
    "keywords": "Property this Namespace NitroxModel.DataStructures Assembly NitroxModel.dll this[TKey] Gets or sets the element with the specified key. public TValue this[TKey key] { get; set; } Parameters key TKey The key of the element to get or set. Property Value TValue The element with the specified key. Exceptions ArgumentNullException key is null. KeyNotFoundException The property is retrieved and key is not found. NotSupportedException The property is set and the IDictionary<TKey, TValue> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Keys.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Keys.html",
    "title": "Property Keys | Nitrox",
    "keywords": "Property Keys Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Keys Gets an ICollection<T> containing the keys of the IDictionary<TKey, TValue>. [IgnoreDataMember] public ICollection<TKey> Keys { get; } Property Value ICollection<TKey> An ICollection<T> containing the keys of the object that implements IDictionary<TKey, TValue>."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Remove.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Remove.html",
    "title": "Method Remove | Nitrox",
    "keywords": "Method Remove Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Remove(KeyValuePair<TKey, TValue>) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(KeyValuePair<TKey, TValue> item) Parameters item KeyValuePair<TKey, TValue> The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(TKey) Removes the element with the specified key from the IDictionary<TKey, TValue>. public bool Remove(TKey key) Parameters key TKey The key of the element to remove. Returns bool true if the element is successfully removed; otherwise, false. This method also returns false if key was not found in the original IDictionary<TKey, TValue>. Exceptions ArgumentNullException key is null. NotSupportedException The IDictionary<TKey, TValue> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.TryGetValue.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.TryGetValue.html",
    "title": "Method TryGetValue | Nitrox",
    "keywords": "Method TryGetValue Namespace NitroxModel.DataStructures Assembly NitroxModel.dll TryGetValue(TKey, out TValue) Gets the value associated with the specified key. public bool TryGetValue(TKey key, out TValue value) Parameters key TKey The key whose value to get. value TValue When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized. Returns bool true if the object that implements IDictionary<TKey, TValue> contains an element with the specified key; otherwise, false. Exceptions ArgumentNullException key is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Values.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.Values.html",
    "title": "Property Values | Nitrox",
    "keywords": "Property Values Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Values Gets an ICollection<T> containing the values in the IDictionary<TKey, TValue>. [IgnoreDataMember] public ICollection<TValue> Values { get; } Property Value ICollection<TValue> An ICollection<T> containing the values in the object that implements IDictionary<TKey, TValue>."
  },
  "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeDictionary-2.html",
    "title": "Class ThreadSafeDictionary<TKey, TValue> | Nitrox",
    "keywords": "Class ThreadSafeDictionary<TKey, TValue> Namespace NitroxModel.DataStructures Assembly NitroxModel.dll [DataContract] public class ThreadSafeDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable Type Parameters TKey TValue Inheritance object ThreadSafeDictionary<TKey, TValue> Implements IDictionary<TKey, TValue> ICollection<KeyValuePair<TKey, TValue>> IEnumerable<KeyValuePair<TKey, TValue>> IEnumerable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods Extensions.RemoveWhere<TKey, TValue, TParameter>(IDictionary<TKey, TValue>, TParameter, Func<TValue, TParameter, bool>) Extensions.SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) Constructors ThreadSafeDictionary() ThreadSafeDictionary(IDictionary<TKey, TValue>, bool) Properties Count Gets the number of elements contained in the ICollection<T>. Entries IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. this[TKey] Gets or sets the element with the specified key. Keys Gets an ICollection<T> containing the keys of the IDictionary<TKey, TValue>. Values Gets an ICollection<T> containing the values in the IDictionary<TKey, TValue>. Methods Add(KeyValuePair<TKey, TValue>) Adds an item to the ICollection<T>. Add(TKey, TValue) Adds an element with the provided key and value to the IDictionary<TKey, TValue>. Clear() Removes all items from the ICollection<T>. Contains(KeyValuePair<TKey, TValue>) Determines whether the ICollection<T> contains a specific value. ContainsKey(TKey) Determines whether the IDictionary<TKey, TValue> contains an element with the specified key. CopyTo(KeyValuePair<TKey, TValue>[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. GetEnumerator() Returns an enumerator that iterates through the collection. Remove(KeyValuePair<TKey, TValue>) Removes the first occurrence of a specific object from the ICollection<T>. Remove(TKey) Removes the element with the specified key from the IDictionary<TKey, TValue>. TryGetValue(TKey, out TValue) Gets the value associated with the specified key."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.-ctor.html",
    "title": "Constructor ThreadSafeList | Nitrox",
    "keywords": "Constructor ThreadSafeList Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ThreadSafeList() public ThreadSafeList() ThreadSafeList(int) public ThreadSafeList(int initialCapacity) Parameters initialCapacity int ThreadSafeList(IEnumerable<T>) public ThreadSafeList(IEnumerable<T> values) Parameters values IEnumerable<T> ThreadSafeList(List<T>, bool) public ThreadSafeList(List<T> list, bool createCopy = true) Parameters list List<T> createCopy bool"
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.Add.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.Add.html",
    "title": "Method Add | Nitrox",
    "keywords": "Method Add Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Add(T) Adds an item to the ICollection<T>. public void Add(T item) Parameters item T The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.AddRange.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.AddRange.html",
    "title": "Method AddRange | Nitrox",
    "keywords": "Method AddRange Namespace NitroxModel.DataStructures Assembly NitroxModel.dll AddRange(IEnumerable<T>) public void AddRange(IEnumerable<T> collection) Parameters collection IEnumerable<T>"
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.Clear.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.Clear.html",
    "title": "Method Clear | Nitrox",
    "keywords": "Method Clear Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.Clone.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.Clone.html",
    "title": "Method Clone | Nitrox",
    "keywords": "Method Clone Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Clone() public IEnumerable<T> Clone() Returns IEnumerable<T>"
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.Contains.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.Contains.html",
    "title": "Method Contains | Nitrox",
    "keywords": "Method Contains Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Contains(T) Determines whether the ICollection<T> contains a specific value. public bool Contains(T item) Parameters item T The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.CopyTo.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.CopyTo.html",
    "title": "Method CopyTo | Nitrox",
    "keywords": "Method CopyTo Namespace NitroxModel.DataStructures Assembly NitroxModel.dll CopyTo(T[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(T[] array, int arrayIndex) Parameters array T[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.Count.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.Count.html",
    "title": "Property Count | Nitrox",
    "keywords": "Property Count Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.Find.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.Find.html",
    "title": "Method Find | Nitrox",
    "keywords": "Method Find Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Find(Predicate<T>) public T Find(Predicate<T> predicate) Parameters predicate Predicate<T> Returns T"
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.GetEnumerator.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.GetEnumerator.html",
    "title": "Method GetEnumerator | Nitrox",
    "keywords": "Method GetEnumerator Namespace NitroxModel.DataStructures Assembly NitroxModel.dll GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<T> GetEnumerator() Returns IEnumerator<T> An enumerator that can be used to iterate through the collection."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.IndexOf.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.IndexOf.html",
    "title": "Method IndexOf | Nitrox",
    "keywords": "Method IndexOf Namespace NitroxModel.DataStructures Assembly NitroxModel.dll IndexOf(T) Determines the index of a specific item in the IList<T>. public int IndexOf(T item) Parameters item T The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.Insert.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.Insert.html",
    "title": "Method Insert | Nitrox",
    "keywords": "Method Insert Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Insert(int, T) Inserts an item to the IList<T> at the specified index. public void Insert(int index, T item) Parameters index int The zero-based index at which item should be inserted. item T The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.IsReadOnly.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.IsReadOnly.html",
    "title": "Property IsReadOnly | Nitrox",
    "keywords": "Property IsReadOnly Namespace NitroxModel.DataStructures Assembly NitroxModel.dll IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.Item.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.Item.html",
    "title": "Property this | Nitrox",
    "keywords": "Property this Namespace NitroxModel.DataStructures Assembly NitroxModel.dll this[int] Gets or sets the element at the specified index. public T this[int i] { get; set; } Parameters i int Property Value T The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.Remove.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.Remove.html",
    "title": "Method Remove | Nitrox",
    "keywords": "Method Remove Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Remove(T) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(T item) Parameters item T The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.RemoveAll.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.RemoveAll.html",
    "title": "Method RemoveAll | Nitrox",
    "keywords": "Method RemoveAll Namespace NitroxModel.DataStructures Assembly NitroxModel.dll RemoveAll(Predicate<T>) public void RemoveAll(Predicate<T> predicate) Parameters predicate Predicate<T>"
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.RemoveAt.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.RemoveAt.html",
    "title": "Method RemoveAt | Nitrox",
    "keywords": "Method RemoveAt Namespace NitroxModel.DataStructures Assembly NitroxModel.dll RemoveAt(int) public bool RemoveAt(int index) Parameters index int Returns bool"
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.Set.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.Set.html",
    "title": "Method Set | Nitrox",
    "keywords": "Method Set Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Set(IEnumerable<T>) Clears the list and adds the given items. public void Set(IEnumerable<T> items) Parameters items IEnumerable<T> Items to add onto the empty list."
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.ToList.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.ToList.html",
    "title": "Method ToList | Nitrox",
    "keywords": "Method ToList Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ToList() public List<T> ToList() Returns List<T>"
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.TryGetValue.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.TryGetValue.html",
    "title": "Method TryGetValue | Nitrox",
    "keywords": "Method TryGetValue Namespace NitroxModel.DataStructures Assembly NitroxModel.dll TryGetValue(int, out T) public bool TryGetValue(int index, out T item) Parameters index int item T Returns bool"
  },
  "api/NitroxModel.DataStructures.ThreadSafeList-1.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeList-1.html",
    "title": "Class ThreadSafeList<T> | Nitrox",
    "keywords": "Class ThreadSafeList<T> Namespace NitroxModel.DataStructures Assembly NitroxModel.dll [DataContract] [Serializable] public class ThreadSafeList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable Type Parameters T Inheritance object ThreadSafeList<T> Implements IList<T> ICollection<T> IEnumerable<T> IEnumerable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods Extensions.SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) Extensions.RemoveAllFast<TItem, TParameter>(IList<TItem>, TParameter, Func<TItem, TParameter, bool>) Constructors ThreadSafeList() ThreadSafeList(IEnumerable<T>) ThreadSafeList(List<T>, bool) ThreadSafeList(int) Properties Count Gets the number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. this[int] Gets or sets the element at the specified index. Methods Add(T) Adds an item to the ICollection<T>. AddRange(IEnumerable<T>) Clear() Removes all items from the ICollection<T>. Clone() Contains(T) Determines whether the ICollection<T> contains a specific value. CopyTo(T[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. Find(Predicate<T>) GetEnumerator() Returns an enumerator that iterates through the collection. IndexOf(T) Determines the index of a specific item in the IList<T>. Insert(int, T) Inserts an item to the IList<T> at the specified index. Remove(T) Removes the first occurrence of a specific object from the ICollection<T>. RemoveAll(Predicate<T>) RemoveAt(int) Set(IEnumerable<T>) Clears the list and adds the given items. ToList() TryGetValue(int, out T)"
  },
  "api/NitroxModel.DataStructures.ThreadSafeListTest.Find.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeListTest.Find.html",
    "title": "Method Find | Nitrox",
    "keywords": "Method Find Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Find() [TestMethod] public void Find()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeListTest.Insert.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeListTest.Insert.html",
    "title": "Method Insert | Nitrox",
    "keywords": "Method Insert Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Insert() [TestMethod] public void Insert()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeListTest.IterateAndAdd.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeListTest.IterateAndAdd.html",
    "title": "Method IterateAndAdd | Nitrox",
    "keywords": "Method IterateAndAdd Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll IterateAndAdd() [TestMethod] public void IterateAndAdd()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeListTest.IterateAndAddSimultaneous.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeListTest.IterateAndAddSimultaneous.html",
    "title": "Method IterateAndAddSimultaneous | Nitrox",
    "keywords": "Method IterateAndAddSimultaneous Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll IterateAndAddSimultaneous() [TestMethod] public void IterateAndAddSimultaneous()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeListTest.ReadAndWriteSimultaneous.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeListTest.ReadAndWriteSimultaneous.html",
    "title": "Method ReadAndWriteSimultaneous | Nitrox",
    "keywords": "Method ReadAndWriteSimultaneous Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll ReadAndWriteSimultaneous() [TestMethod] public void ReadAndWriteSimultaneous()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeListTest.Remove.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeListTest.Remove.html",
    "title": "Method Remove | Nitrox",
    "keywords": "Method Remove Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Remove() [TestMethod] public void Remove()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeListTest.RemoveAt.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeListTest.RemoveAt.html",
    "title": "Method RemoveAt | Nitrox",
    "keywords": "Method RemoveAt Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll RemoveAt() [TestMethod] public void RemoveAt()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeListTest.Setup.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeListTest.Setup.html",
    "title": "Method Setup | Nitrox",
    "keywords": "Method Setup Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Setup() [TestInitialize] public void Setup()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeListTest.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeListTest.html",
    "title": "Class ThreadSafeListTest | Nitrox",
    "keywords": "Class ThreadSafeListTest Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll [TestClass] public class ThreadSafeListTest Inheritance object ThreadSafeListTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Find() Insert() IterateAndAdd() IterateAndAddSimultaneous() ReadAndWriteSimultaneous() Remove() RemoveAt() Setup()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.-ctor.html",
    "title": "Constructor ThreadSafeQueue | Nitrox",
    "keywords": "Constructor ThreadSafeQueue Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ThreadSafeQueue() public ThreadSafeQueue() ThreadSafeQueue(int) public ThreadSafeQueue(int initialCapacity) Parameters initialCapacity int ThreadSafeQueue(IEnumerable<T>) public ThreadSafeQueue(IEnumerable<T> values) Parameters values IEnumerable<T> ThreadSafeQueue(Queue<T>, bool) public ThreadSafeQueue(Queue<T> queue, bool createCopy = true) Parameters queue Queue<T> createCopy bool"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Clear.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Clear.html",
    "title": "Method Clear | Nitrox",
    "keywords": "Method Clear Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Clear() public void Clear()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Clone.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Clone.html",
    "title": "Method Clone | Nitrox",
    "keywords": "Method Clone Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Clone() public IEnumerable<T> Clone() Returns IEnumerable<T>"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Contains.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Contains.html",
    "title": "Method Contains | Nitrox",
    "keywords": "Method Contains Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Contains(T) public bool Contains(T item) Parameters item T Returns bool"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.CopyTo.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.CopyTo.html",
    "title": "Method CopyTo | Nitrox",
    "keywords": "Method CopyTo Namespace NitroxModel.DataStructures Assembly NitroxModel.dll CopyTo(T[], int) public void CopyTo(T[] array, int arrayIndex) Parameters array T[] arrayIndex int"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Count.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Count.html",
    "title": "Property Count | Nitrox",
    "keywords": "Property Count Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Count Gets the number of elements in the collection. public int Count { get; } Property Value int The number of elements in the collection."
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Dequeue.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Dequeue.html",
    "title": "Method Dequeue | Nitrox",
    "keywords": "Method Dequeue Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Dequeue() public T Dequeue() Returns T"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Enqueue.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Enqueue.html",
    "title": "Method Enqueue | Nitrox",
    "keywords": "Method Enqueue Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Enqueue(T) public void Enqueue(T item) Parameters item T"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.GetEnumerator.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.GetEnumerator.html",
    "title": "Method GetEnumerator | Nitrox",
    "keywords": "Method GetEnumerator Namespace NitroxModel.DataStructures Assembly NitroxModel.dll GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<T> GetEnumerator() Returns IEnumerator<T> An enumerator that can be used to iterate through the collection."
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Peek.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.Peek.html",
    "title": "Method Peek | Nitrox",
    "keywords": "Method Peek Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Peek() public T Peek() Returns T"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.ToArray.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.ToArray.html",
    "title": "Method ToArray | Nitrox",
    "keywords": "Method ToArray Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ToArray() public T[] ToArray() Returns T[]"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.TrimExcess.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.TrimExcess.html",
    "title": "Method TrimExcess | Nitrox",
    "keywords": "Method TrimExcess Namespace NitroxModel.DataStructures Assembly NitroxModel.dll TrimExcess() public void TrimExcess()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueue-1.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueue-1.html",
    "title": "Class ThreadSafeQueue<T> | Nitrox",
    "keywords": "Class ThreadSafeQueue<T> Namespace NitroxModel.DataStructures Assembly NitroxModel.dll [DataContract] [Serializable] public class ThreadSafeQueue<T> : IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters T Inheritance object ThreadSafeQueue<T> Implements IReadOnlyCollection<T> IEnumerable<T> IEnumerable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods Extensions.SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) Constructors ThreadSafeQueue() ThreadSafeQueue(IEnumerable<T>) ThreadSafeQueue(Queue<T>, bool) ThreadSafeQueue(int) Properties Count Gets the number of elements in the collection. Methods Clear() Clone() Contains(T) CopyTo(T[], int) Dequeue() Enqueue(T) GetEnumerator() Returns an enumerator that iterates through the collection. Peek() ToArray() TrimExcess()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Clear.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Clear.html",
    "title": "Method Clear | Nitrox",
    "keywords": "Method Clear Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Clear() [TestMethod] public void Clear()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Contains.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Contains.html",
    "title": "Method Contains | Nitrox",
    "keywords": "Method Contains Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Contains() [TestMethod] public void Contains()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Dequeue.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Dequeue.html",
    "title": "Method Dequeue | Nitrox",
    "keywords": "Method Dequeue Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Dequeue() [TestMethod] public void Dequeue()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Enqueue.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Enqueue.html",
    "title": "Method Enqueue | Nitrox",
    "keywords": "Method Enqueue Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Enqueue() [TestMethod] public void Enqueue()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Peek.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Peek.html",
    "title": "Method Peek | Nitrox",
    "keywords": "Method Peek Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Peek() [TestMethod] public void Peek()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Setup.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueueTest.Setup.html",
    "title": "Method Setup | Nitrox",
    "keywords": "Method Setup Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Setup() [TestInitialize] public void Setup()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeQueueTest.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeQueueTest.html",
    "title": "Class ThreadSafeQueueTest | Nitrox",
    "keywords": "Class ThreadSafeQueueTest Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll [TestClass] public class ThreadSafeQueueTest Inheritance object ThreadSafeQueueTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Clear() Contains() Dequeue() Enqueue() Peek() Setup()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.-ctor.html",
    "title": "Constructor ThreadSafeSet | Nitrox",
    "keywords": "Constructor ThreadSafeSet Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ThreadSafeSet() public ThreadSafeSet() ThreadSafeSet(HashSet<T>, bool) public ThreadSafeSet(HashSet<T> set, bool createCopy = true) Parameters set HashSet<T> createCopy bool ThreadSafeSet(params T[]) public ThreadSafeSet(params T[] values) Parameters values T[]"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.Add.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.Add.html",
    "title": "Method Add | Nitrox",
    "keywords": "Method Add Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Add(T) public bool Add(T item) Parameters item T Returns bool"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.Clear.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.Clear.html",
    "title": "Method Clear | Nitrox",
    "keywords": "Method Clear Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.Clone.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.Clone.html",
    "title": "Method Clone | Nitrox",
    "keywords": "Method Clone Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Clone() public IEnumerable<T> Clone() Returns IEnumerable<T>"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.Contains.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.Contains.html",
    "title": "Method Contains | Nitrox",
    "keywords": "Method Contains Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Contains(T) Determines whether the ICollection<T> contains a specific value. public bool Contains(T item) Parameters item T The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.CopyTo.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.CopyTo.html",
    "title": "Method CopyTo | Nitrox",
    "keywords": "Method CopyTo Namespace NitroxModel.DataStructures Assembly NitroxModel.dll CopyTo(T[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(T[] array, int arrayIndex) Parameters array T[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.Count.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.Count.html",
    "title": "Property Count | Nitrox",
    "keywords": "Property Count Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.ExceptWith.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.ExceptWith.html",
    "title": "Method ExceptWith | Nitrox",
    "keywords": "Method ExceptWith Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ExceptWith(IEnumerable<T>) Removes all elements in the specified collection from the current set. public void ExceptWith(IEnumerable<T> other) Parameters other IEnumerable<T> The collection of items to remove from the set. Exceptions ArgumentNullException other is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.GetEnumerator.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.GetEnumerator.html",
    "title": "Method GetEnumerator | Nitrox",
    "keywords": "Method GetEnumerator Namespace NitroxModel.DataStructures Assembly NitroxModel.dll GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<T> GetEnumerator() Returns IEnumerator<T> An enumerator that can be used to iterate through the collection."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.IntersectWith.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.IntersectWith.html",
    "title": "Method IntersectWith | Nitrox",
    "keywords": "Method IntersectWith Namespace NitroxModel.DataStructures Assembly NitroxModel.dll IntersectWith(IEnumerable<T>) Modifies the current set so that it contains only elements that are also in a specified collection. public void IntersectWith(IEnumerable<T> other) Parameters other IEnumerable<T> The collection to compare to the current set. Exceptions ArgumentNullException other is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.IsProperSubsetOf.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.IsProperSubsetOf.html",
    "title": "Method IsProperSubsetOf | Nitrox",
    "keywords": "Method IsProperSubsetOf Namespace NitroxModel.DataStructures Assembly NitroxModel.dll IsProperSubsetOf(IEnumerable<T>) Determines whether the current set is a proper (strict) subset of a specified collection. public bool IsProperSubsetOf(IEnumerable<T> other) Parameters other IEnumerable<T> The collection to compare to the current set. Returns bool true if the current set is a proper subset of other; otherwise, false. Exceptions ArgumentNullException other is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.IsProperSupersetOf.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.IsProperSupersetOf.html",
    "title": "Method IsProperSupersetOf | Nitrox",
    "keywords": "Method IsProperSupersetOf Namespace NitroxModel.DataStructures Assembly NitroxModel.dll IsProperSupersetOf(IEnumerable<T>) Determines whether the current set is a proper (strict) superset of a specified collection. public bool IsProperSupersetOf(IEnumerable<T> other) Parameters other IEnumerable<T> The collection to compare to the current set. Returns bool true if the current set is a proper superset of other; otherwise, false. Exceptions ArgumentNullException other is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.IsReadOnly.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.IsReadOnly.html",
    "title": "Property IsReadOnly | Nitrox",
    "keywords": "Property IsReadOnly Namespace NitroxModel.DataStructures Assembly NitroxModel.dll IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.IsSubsetOf.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.IsSubsetOf.html",
    "title": "Method IsSubsetOf | Nitrox",
    "keywords": "Method IsSubsetOf Namespace NitroxModel.DataStructures Assembly NitroxModel.dll IsSubsetOf(IEnumerable<T>) Determines whether a set is a subset of a specified collection. public bool IsSubsetOf(IEnumerable<T> other) Parameters other IEnumerable<T> The collection to compare to the current set. Returns bool true if the current set is a subset of other; otherwise, false. Exceptions ArgumentNullException other is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.IsSupersetOf.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.IsSupersetOf.html",
    "title": "Method IsSupersetOf | Nitrox",
    "keywords": "Method IsSupersetOf Namespace NitroxModel.DataStructures Assembly NitroxModel.dll IsSupersetOf(IEnumerable<T>) Determines whether the current set is a superset of a specified collection. public bool IsSupersetOf(IEnumerable<T> other) Parameters other IEnumerable<T> The collection to compare to the current set. Returns bool true if the current set is a superset of other; otherwise, false. Exceptions ArgumentNullException other is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.Overlaps.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.Overlaps.html",
    "title": "Method Overlaps | Nitrox",
    "keywords": "Method Overlaps Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Overlaps(IEnumerable<T>) Determines whether the current set overlaps with the specified collection. public bool Overlaps(IEnumerable<T> other) Parameters other IEnumerable<T> The collection to compare to the current set. Returns bool true if the current set and other share at least one common element; otherwise, false. Exceptions ArgumentNullException other is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.Remove.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.Remove.html",
    "title": "Method Remove | Nitrox",
    "keywords": "Method Remove Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Remove(T) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(T item) Parameters item T The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.RemoveAll.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.RemoveAll.html",
    "title": "Method RemoveAll | Nitrox",
    "keywords": "Method RemoveAll Namespace NitroxModel.DataStructures Assembly NitroxModel.dll RemoveAll(Predicate<T>) public void RemoveAll(Predicate<T> predicate) Parameters predicate Predicate<T>"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.Set.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.Set.html",
    "title": "Method Set | Nitrox",
    "keywords": "Method Set Namespace NitroxModel.DataStructures Assembly NitroxModel.dll Set(IEnumerable<T>) Clears the set and adds the given items. public void Set(IEnumerable<T> items) Parameters items IEnumerable<T> Items to add onto the empty set."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.SetEquals.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.SetEquals.html",
    "title": "Method SetEquals | Nitrox",
    "keywords": "Method SetEquals Namespace NitroxModel.DataStructures Assembly NitroxModel.dll SetEquals(IEnumerable<T>) Determines whether the current set and the specified collection contain the same elements. public bool SetEquals(IEnumerable<T> other) Parameters other IEnumerable<T> The collection to compare to the current set. Returns bool true if the current set is equal to other; otherwise, false. Exceptions ArgumentNullException other is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.SymmetricExceptWith.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.SymmetricExceptWith.html",
    "title": "Method SymmetricExceptWith | Nitrox",
    "keywords": "Method SymmetricExceptWith Namespace NitroxModel.DataStructures Assembly NitroxModel.dll SymmetricExceptWith(IEnumerable<T>) Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both. public void SymmetricExceptWith(IEnumerable<T> other) Parameters other IEnumerable<T> The collection to compare to the current set. Exceptions ArgumentNullException other is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.ToList.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.ToList.html",
    "title": "Method ToList | Nitrox",
    "keywords": "Method ToList Namespace NitroxModel.DataStructures Assembly NitroxModel.dll ToList() public List<T> ToList() Returns List<T>"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.UnionWith.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.UnionWith.html",
    "title": "Method UnionWith | Nitrox",
    "keywords": "Method UnionWith Namespace NitroxModel.DataStructures Assembly NitroxModel.dll UnionWith(IEnumerable<T>) Modifies the current set so that it contains all elements that are present in the current set, in the specified collection, or in both. public void UnionWith(IEnumerable<T> other) Parameters other IEnumerable<T> The collection to compare to the current set. Exceptions ArgumentNullException other is null."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSet-1.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSet-1.html",
    "title": "Class ThreadSafeSet<T> | Nitrox",
    "keywords": "Class ThreadSafeSet<T> Namespace NitroxModel.DataStructures Assembly NitroxModel.dll [DataContract] [Serializable] public class ThreadSafeSet<T> : ISet<T>, ICollection<T>, IEnumerable<T>, IEnumerable Type Parameters T Inheritance object ThreadSafeSet<T> Implements ISet<T> ICollection<T> IEnumerable<T> IEnumerable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods Extensions.SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) Constructors ThreadSafeSet() ThreadSafeSet(HashSet<T>, bool) ThreadSafeSet(params T[]) Properties Count Gets the number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. Methods Add(T) Clear() Removes all items from the ICollection<T>. Clone() Contains(T) Determines whether the ICollection<T> contains a specific value. CopyTo(T[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. ExceptWith(IEnumerable<T>) Removes all elements in the specified collection from the current set. GetEnumerator() Returns an enumerator that iterates through the collection. IntersectWith(IEnumerable<T>) Modifies the current set so that it contains only elements that are also in a specified collection. IsProperSubsetOf(IEnumerable<T>) Determines whether the current set is a proper (strict) subset of a specified collection. IsProperSupersetOf(IEnumerable<T>) Determines whether the current set is a proper (strict) superset of a specified collection. IsSubsetOf(IEnumerable<T>) Determines whether a set is a subset of a specified collection. IsSupersetOf(IEnumerable<T>) Determines whether the current set is a superset of a specified collection. Overlaps(IEnumerable<T>) Determines whether the current set overlaps with the specified collection. Remove(T) Removes the first occurrence of a specific object from the ICollection<T>. RemoveAll(Predicate<T>) Set(IEnumerable<T>) Clears the set and adds the given items. SetEquals(IEnumerable<T>) Determines whether the current set and the specified collection contain the same elements. SymmetricExceptWith(IEnumerable<T>) Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both. ToList() UnionWith(IEnumerable<T>) Modifies the current set so that it contains all elements that are present in the current set, in the specified collection, or in both."
  },
  "api/NitroxModel.DataStructures.ThreadSafeSetTest.Contains.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSetTest.Contains.html",
    "title": "Method Contains | Nitrox",
    "keywords": "Method Contains Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Contains() [TestMethod] public void Contains()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSetTest.Except.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSetTest.Except.html",
    "title": "Method Except | Nitrox",
    "keywords": "Method Except Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Except() [TestMethod] public void Except()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSetTest.IterateAndAdd.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSetTest.IterateAndAdd.html",
    "title": "Method IterateAndAdd | Nitrox",
    "keywords": "Method IterateAndAdd Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll IterateAndAdd() [TestMethod] public void IterateAndAdd()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSetTest.IterateAndAddSimultaneous.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSetTest.IterateAndAddSimultaneous.html",
    "title": "Method IterateAndAddSimultaneous | Nitrox",
    "keywords": "Method IterateAndAddSimultaneous Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll IterateAndAddSimultaneous() [TestMethod] public void IterateAndAddSimultaneous()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSetTest.ReadAndWriteSimultaneous.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSetTest.ReadAndWriteSimultaneous.html",
    "title": "Method ReadAndWriteSimultaneous | Nitrox",
    "keywords": "Method ReadAndWriteSimultaneous Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll ReadAndWriteSimultaneous() [TestMethod] public void ReadAndWriteSimultaneous()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSetTest.Remove.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSetTest.Remove.html",
    "title": "Method Remove | Nitrox",
    "keywords": "Method Remove Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Remove() [TestMethod] public void Remove()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSetTest.Setup.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSetTest.Setup.html",
    "title": "Method Setup | Nitrox",
    "keywords": "Method Setup Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll Setup() [TestInitialize] public void Setup()"
  },
  "api/NitroxModel.DataStructures.ThreadSafeSetTest.html": {
    "href": "api/NitroxModel.DataStructures.ThreadSafeSetTest.html",
    "title": "Class ThreadSafeSetTest | Nitrox",
    "keywords": "Class ThreadSafeSetTest Namespace NitroxModel.DataStructures Assembly Nitrox.Test.dll [TestClass] public class ThreadSafeSetTest Inheritance object ThreadSafeSetTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Contains() Except() IterateAndAdd() IterateAndAddSimultaneous() ReadAndWriteSimultaneous() Remove() Setup()"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxColor.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxColor.-ctor.html",
    "title": "Constructor NitroxColor | Nitrox",
    "keywords": "Constructor NitroxColor Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll NitroxColor(float, float, float, float) public NitroxColor(float r, float g, float b, float a = 1) Parameters r float g float b float a float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxColor.A.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxColor.A.html",
    "title": "Property A | Nitrox",
    "keywords": "Property A Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll A [DataMember(Order = 4)] public readonly float A { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxColor.B.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxColor.B.html",
    "title": "Property B | Nitrox",
    "keywords": "Property B Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll B [DataMember(Order = 3)] public readonly float B { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxColor.G.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxColor.G.html",
    "title": "Property G | Nitrox",
    "keywords": "Property G Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll G [DataMember(Order = 2)] public readonly float G { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxColor.R.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxColor.R.html",
    "title": "Property R | Nitrox",
    "keywords": "Property R Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll R [DataMember(Order = 1)] public readonly float R { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxColor.ToString.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxColor.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxModel.DataStructures.Unity.NitroxColor.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxColor.html",
    "title": "Struct NitroxColor | Nitrox",
    "keywords": "Struct NitroxColor Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataContract] [Serializable] public struct NitroxColor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors NitroxColor(float, float, float, float) Properties A B G R Methods ToString() Returns the fully qualified type name of this instance."
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.-ctor.html",
    "title": "Constructor NitroxQuaternion | Nitrox",
    "keywords": "Constructor NitroxQuaternion Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll NitroxQuaternion(float, float, float, float) public NitroxQuaternion(float x, float y, float z, float w) Parameters x float y float z float w float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.Equals.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. Equals(NitroxQuaternion) Indicates whether the current object is equal to another object of the same type. public bool Equals(NitroxQuaternion other) Parameters other NitroxQuaternion An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(NitroxQuaternion, float) public bool Equals(NitroxQuaternion other, float tolerance) Parameters other NitroxQuaternion tolerance float Returns bool"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.FromEuler.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.FromEuler.html",
    "title": "Method FromEuler | Nitrox",
    "keywords": "Method FromEuler Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll FromEuler(NitroxVector3) public static NitroxQuaternion FromEuler(NitroxVector3 vector) Parameters vector NitroxVector3 Returns NitroxQuaternion FromEuler(float, float, float) public static NitroxQuaternion FromEuler(float x, float y, float z) Parameters x float y float z float Returns NitroxQuaternion"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.GetHashCode.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance."
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.Identity.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.Identity.html",
    "title": "Property Identity | Nitrox",
    "keywords": "Property Identity Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Identity public static NitroxQuaternion Identity { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.Normalize.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.Normalize.html",
    "title": "Method Normalize | Nitrox",
    "keywords": "Method Normalize Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Normalize(NitroxQuaternion) public static NitroxQuaternion Normalize(NitroxQuaternion value) Parameters value NitroxQuaternion Returns NitroxQuaternion"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.NormalizeEuler.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.NormalizeEuler.html",
    "title": "Method NormalizeEuler | Nitrox",
    "keywords": "Method NormalizeEuler Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll NormalizeEuler(ref NitroxVector3) public static void NormalizeEuler(ref NitroxVector3 vector3) Parameters vector3 NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.ToEuler.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.ToEuler.html",
    "title": "Method ToEuler | Nitrox",
    "keywords": "Method ToEuler Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll ToEuler() public NitroxVector3 ToEuler() Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.ToString.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.W.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.W.html",
    "title": "Field W | Nitrox",
    "keywords": "Field W Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataMember(Order = 4)] public float W Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.X.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.X.html",
    "title": "Field X | Nitrox",
    "keywords": "Field X Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataMember(Order = 1)] public float X Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.Y.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.Y.html",
    "title": "Field Y | Nitrox",
    "keywords": "Field Y Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataMember(Order = 2)] public float Y Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.Z.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.Z.html",
    "title": "Field Z | Nitrox",
    "keywords": "Field Z Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataMember(Order = 3)] public float Z Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.html",
    "title": "Struct NitroxQuaternion | Nitrox",
    "keywords": "Struct NitroxQuaternion Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataContract] [Serializable] public struct NitroxQuaternion : IEquatable<NitroxQuaternion> Implements IEquatable<NitroxQuaternion> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors NitroxQuaternion(float, float, float, float) Fields W X Y Z Properties Identity Methods Equals(NitroxQuaternion) Indicates whether the current object is equal to another object of the same type. Equals(NitroxQuaternion, float) Equals(object) Indicates whether this instance and a specified object are equal. FromEuler(NitroxVector3) FromEuler(float, float, float) GetHashCode() Returns the hash code for this instance. Normalize(NitroxQuaternion) NormalizeEuler(ref NitroxVector3) ToEuler() ToString() Returns the fully qualified type name of this instance. Operators operator ==(NitroxQuaternion, NitroxQuaternion) explicit operator Quaternion(NitroxQuaternion) explicit operator NitroxQuaternion(Quaternion) operator !=(NitroxQuaternion, NitroxQuaternion) operator *(NitroxQuaternion, NitroxQuaternion)"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.op_Equality.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.op_Equality.html",
    "title": "Operator operator == | Nitrox",
    "keywords": "Operator operator == Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll operator ==(NitroxQuaternion, NitroxQuaternion) public static bool operator ==(NitroxQuaternion left, NitroxQuaternion right) Parameters left NitroxQuaternion right NitroxQuaternion Returns bool"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.op_Explicit.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.op_Explicit.html",
    "title": "Operator explicit operator | Nitrox",
    "keywords": "Operator explicit operator Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll explicit operator Quaternion(NitroxQuaternion) public static explicit operator Quaternion(NitroxQuaternion q) Parameters q NitroxQuaternion Returns Quaternion explicit operator NitroxQuaternion(Quaternion) public static explicit operator NitroxQuaternion(Quaternion q) Parameters q Quaternion Returns NitroxQuaternion"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.op_Inequality.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.op_Inequality.html",
    "title": "Operator operator != | Nitrox",
    "keywords": "Operator operator != Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll operator !=(NitroxQuaternion, NitroxQuaternion) public static bool operator !=(NitroxQuaternion left, NitroxQuaternion right) Parameters left NitroxQuaternion right NitroxQuaternion Returns bool"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.op_Multiply.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternion.op_Multiply.html",
    "title": "Operator operator * | Nitrox",
    "keywords": "Operator operator * Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll operator *(NitroxQuaternion, NitroxQuaternion) public static NitroxQuaternion operator *(NitroxQuaternion lhs, NitroxQuaternion rhs) Parameters lhs NitroxQuaternion rhs NitroxQuaternion Returns NitroxQuaternion"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.Init.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.Init.html",
    "title": "Method Init | Nitrox",
    "keywords": "Method Init Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll Init() [TestInitialize] public void Init()"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.TestEquality.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.TestEquality.html",
    "title": "Method TestEquality | Nitrox",
    "keywords": "Method TestEquality Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll TestEquality() [TestMethod] public void TestEquality()"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.TestFromEuler.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.TestFromEuler.html",
    "title": "Method TestFromEuler | Nitrox",
    "keywords": "Method TestFromEuler Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll TestFromEuler() [TestMethod] public void TestFromEuler()"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.TestMultiplication.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.TestMultiplication.html",
    "title": "Method TestMultiplication | Nitrox",
    "keywords": "Method TestMultiplication Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll TestMultiplication() [TestMethod] public void TestMultiplication()"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.TestToEuler.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.TestToEuler.html",
    "title": "Method TestToEuler | Nitrox",
    "keywords": "Method TestToEuler Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll TestToEuler() [TestMethod] public void TestToEuler()"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxQuaternionTest.html",
    "title": "Class NitroxQuaternionTest | Nitrox",
    "keywords": "Class NitroxQuaternionTest Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll [TestClass] public class NitroxQuaternionTest Inheritance object NitroxQuaternionTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Init() TestEquality() TestFromEuler() TestMultiplication() TestToEuler()"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.-ctor.html",
    "title": "Constructor NitroxTransform | Nitrox",
    "keywords": "Constructor NitroxTransform Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll NitroxTransform() public NitroxTransform() NitroxTransform(NitroxVector3, NitroxQuaternion, NitroxVector3) public NitroxTransform(NitroxVector3 localPosition, NitroxQuaternion localRotation, NitroxVector3 scale) Parameters localPosition NitroxVector3 localRotation NitroxQuaternion scale NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.LocalPosition.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.LocalPosition.html",
    "title": "Field LocalPosition | Nitrox",
    "keywords": "Field LocalPosition Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataMember(Order = 1)] public NitroxVector3 LocalPosition Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.LocalRotation.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.LocalRotation.html",
    "title": "Field LocalRotation | Nitrox",
    "keywords": "Field LocalRotation Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataMember(Order = 2)] public NitroxQuaternion LocalRotation Returns NitroxQuaternion"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.LocalScale.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.LocalScale.html",
    "title": "Field LocalScale | Nitrox",
    "keywords": "Field LocalScale Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataMember(Order = 3)] public NitroxVector3 LocalScale Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.LocalToWorldMatrix.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.LocalToWorldMatrix.html",
    "title": "Property LocalToWorldMatrix | Nitrox",
    "keywords": "Property LocalToWorldMatrix Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll LocalToWorldMatrix public Matrix4x4 LocalToWorldMatrix { get; } Property Value Matrix4x4"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.Parent.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.Parent.html",
    "title": "Field Parent | Nitrox",
    "keywords": "Field Parent Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll public NitroxTransform Parent Returns NitroxTransform"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.Position.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Position [IgnoredMember] public NitroxVector3 Position { get; set; } Property Value NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.Rotation.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.Rotation.html",
    "title": "Property Rotation | Nitrox",
    "keywords": "Property Rotation Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Rotation [IgnoredMember] public NitroxQuaternion Rotation { get; set; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.SetParent.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.SetParent.html",
    "title": "Method SetParent | Nitrox",
    "keywords": "Method SetParent Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll SetParent(NitroxTransform, bool) public void SetParent(NitroxTransform parent, bool worldPositionStays = true) Parameters parent NitroxTransform worldPositionStays bool"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.ToString.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransform.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransform.html",
    "title": "Class NitroxTransform | Nitrox",
    "keywords": "Class NitroxTransform Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataContract] [Serializable] public class NitroxTransform Inheritance object NitroxTransform Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxTransform() NitroxTransform(NitroxVector3, NitroxQuaternion, NitroxVector3) Fields LocalPosition LocalRotation LocalScale Parent Properties LocalToWorldMatrix Position Rotation Methods SetParent(NitroxTransform, bool) ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransformTest.ChangingTransformTest.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransformTest.ChangingTransformTest.html",
    "title": "Method ChangingTransformTest | Nitrox",
    "keywords": "Method ChangingTransformTest Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll ChangingTransformTest() [TestMethod] public void ChangingTransformTest()"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransformTest.PositionTest.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransformTest.PositionTest.html",
    "title": "Method PositionTest | Nitrox",
    "keywords": "Method PositionTest Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll PositionTest() [TestMethod] public void PositionTest()"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransformTest.RotationTest.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransformTest.RotationTest.html",
    "title": "Method RotationTest | Nitrox",
    "keywords": "Method RotationTest Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll RotationTest() [TestMethod] public void RotationTest()"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransformTest.Setup.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransformTest.Setup.html",
    "title": "Method Setup | Nitrox",
    "keywords": "Method Setup Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll Setup(TestContext) [ClassInitialize] public static void Setup(TestContext testContext) Parameters testContext TestContext"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxTransformTest.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxTransformTest.html",
    "title": "Class NitroxTransformTest | Nitrox",
    "keywords": "Class NitroxTransformTest Namespace NitroxModel.DataStructures.Unity Assembly Nitrox.Test.dll [TestClass] public class NitroxTransformTest Inheritance object NitroxTransformTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ChangingTransformTest() PositionTest() RotationTest() Setup(TestContext)"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.-ctor.html",
    "title": "Constructor NitroxVector3 | Nitrox",
    "keywords": "Constructor NitroxVector3 Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll NitroxVector3(float, float, float) public NitroxVector3(float x, float y, float z) Parameters x float y float z float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.Cross.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.Cross.html",
    "title": "Method Cross | Nitrox",
    "keywords": "Method Cross Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Cross(NitroxVector3, NitroxVector3) public static NitroxVector3 Cross(NitroxVector3 vector1, NitroxVector3 vector2) Parameters vector1 NitroxVector3 vector2 NitroxVector3 Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.Distance.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.Distance.html",
    "title": "Method Distance | Nitrox",
    "keywords": "Method Distance Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Distance(NitroxVector3, NitroxVector3) public static float Distance(NitroxVector3 lhs, NitroxVector3 rhs) Parameters lhs NitroxVector3 rhs NitroxVector3 Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.Equals.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. Equals(NitroxVector3) Indicates whether the current object is equal to another object of the same type. public bool Equals(NitroxVector3 other) Parameters other NitroxVector3 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(NitroxVector3, float) public bool Equals(NitroxVector3 other, float tolerance) Parameters other NitroxVector3 tolerance float Returns bool"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.GetHashCode.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance."
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.Length.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.Length.html",
    "title": "Method Length | Nitrox",
    "keywords": "Method Length Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Length(NitroxVector3) public static float Length(NitroxVector3 value) Parameters value NitroxVector3 Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.Magnitude.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.Magnitude.html",
    "title": "Property Magnitude | Nitrox",
    "keywords": "Property Magnitude Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Magnitude public float Magnitude { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.Normalize.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.Normalize.html",
    "title": "Method Normalize | Nitrox",
    "keywords": "Method Normalize Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Normalize(NitroxVector3) public static NitroxVector3 Normalize(NitroxVector3 value) Parameters value NitroxVector3 Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.One.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.One.html",
    "title": "Property One | Nitrox",
    "keywords": "Property One Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll One public static NitroxVector3 One { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.ToString.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.X.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.X.html",
    "title": "Field X | Nitrox",
    "keywords": "Field X Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataMember(Order = 1)] public float X Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.Y.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.Y.html",
    "title": "Field Y | Nitrox",
    "keywords": "Field Y Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataMember(Order = 2)] public float Y Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.Z.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.Z.html",
    "title": "Field Z | Nitrox",
    "keywords": "Field Z Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataMember(Order = 3)] public float Z Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.Zero.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.Zero.html",
    "title": "Property Zero | Nitrox",
    "keywords": "Property Zero Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Zero public static NitroxVector3 Zero { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.html",
    "title": "Struct NitroxVector3 | Nitrox",
    "keywords": "Struct NitroxVector3 Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll [DataContract] [Serializable] public struct NitroxVector3 : IEquatable<NitroxVector3> Implements IEquatable<NitroxVector3> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors NitroxVector3(float, float, float) Fields X Y Z Properties Magnitude One Zero Methods Cross(NitroxVector3, NitroxVector3) Distance(NitroxVector3, NitroxVector3) Equals(NitroxVector3) Indicates whether the current object is equal to another object of the same type. Equals(NitroxVector3, float) Equals(object) Indicates whether this instance and a specified object are equal. GetHashCode() Returns the hash code for this instance. Length(NitroxVector3) Normalize(NitroxVector3) ToString() Returns the fully qualified type name of this instance. Operators operator +(NitroxVector3, NitroxVector3) operator /(NitroxVector3, float) operator ==(NitroxVector3, NitroxVector3) explicit operator Vector3(NitroxVector3) explicit operator NitroxVector3(Vector3) operator !=(NitroxVector3, NitroxVector3) operator *(NitroxVector3, float) operator -(NitroxVector3, NitroxVector3) operator -(NitroxVector3)"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Addition.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Addition.html",
    "title": "Operator operator + | Nitrox",
    "keywords": "Operator operator + Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll operator +(NitroxVector3, NitroxVector3) public static NitroxVector3 operator +(NitroxVector3 a, NitroxVector3 b) Parameters a NitroxVector3 b NitroxVector3 Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Division.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Division.html",
    "title": "Operator operator / | Nitrox",
    "keywords": "Operator operator / Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll operator /(NitroxVector3, float) public static NitroxVector3 operator /(NitroxVector3 lhs, float rhs) Parameters lhs NitroxVector3 rhs float Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Equality.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Equality.html",
    "title": "Operator operator == | Nitrox",
    "keywords": "Operator operator == Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll operator ==(NitroxVector3, NitroxVector3) public static bool operator ==(NitroxVector3 left, NitroxVector3 right) Parameters left NitroxVector3 right NitroxVector3 Returns bool"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Explicit.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Explicit.html",
    "title": "Operator explicit operator | Nitrox",
    "keywords": "Operator explicit operator Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll explicit operator Vector3(NitroxVector3) public static explicit operator Vector3(NitroxVector3 v) Parameters v NitroxVector3 Returns Vector3 explicit operator NitroxVector3(Vector3) public static explicit operator NitroxVector3(Vector3 v) Parameters v Vector3 Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Inequality.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Inequality.html",
    "title": "Operator operator != | Nitrox",
    "keywords": "Operator operator != Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll operator !=(NitroxVector3, NitroxVector3) public static bool operator !=(NitroxVector3 left, NitroxVector3 right) Parameters left NitroxVector3 right NitroxVector3 Returns bool"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Multiply.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Multiply.html",
    "title": "Operator operator * | Nitrox",
    "keywords": "Operator operator * Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll operator *(NitroxVector3, float) public static NitroxVector3 operator *(NitroxVector3 lhs, float rhs) Parameters lhs NitroxVector3 rhs float Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Subtraction.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_Subtraction.html",
    "title": "Operator operator - | Nitrox",
    "keywords": "Operator operator - Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll operator -(NitroxVector3, NitroxVector3) public static NitroxVector3 operator -(NitroxVector3 a, NitroxVector3 b) Parameters a NitroxVector3 b NitroxVector3 Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_UnaryNegation.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector3.op_UnaryNegation.html",
    "title": "Operator operator - | Nitrox",
    "keywords": "Operator operator - Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll operator -(NitroxVector3) public static NitroxVector3 operator -(NitroxVector3 a) Parameters a NitroxVector3 Returns NitroxVector3"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector4.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector4.-ctor.html",
    "title": "Constructor NitroxVector4 | Nitrox",
    "keywords": "Constructor NitroxVector4 Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll NitroxVector4(float, float, float, float) public NitroxVector4(float x, float y, float z, float w) Parameters x float y float z float w float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector4.Magnitude.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector4.Magnitude.html",
    "title": "Property Magnitude | Nitrox",
    "keywords": "Property Magnitude Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll Magnitude public float Magnitude { get; } Property Value float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector4.W.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector4.W.html",
    "title": "Field W | Nitrox",
    "keywords": "Field W Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll public float W Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector4.X.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector4.X.html",
    "title": "Field X | Nitrox",
    "keywords": "Field X Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll public float X Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector4.Y.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector4.Y.html",
    "title": "Field Y | Nitrox",
    "keywords": "Field Y Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll public float Y Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector4.Z.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector4.Z.html",
    "title": "Field Z | Nitrox",
    "keywords": "Field Z Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll public float Z Returns float"
  },
  "api/NitroxModel.DataStructures.Unity.NitroxVector4.html": {
    "href": "api/NitroxModel.DataStructures.Unity.NitroxVector4.html",
    "title": "Struct NitroxVector4 | Nitrox",
    "keywords": "Struct NitroxVector4 Namespace NitroxModel.DataStructures.Unity Assembly NitroxModel.dll public struct NitroxVector4 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors NitroxVector4(float, float, float, float) Fields W X Y Z Properties Magnitude"
  },
  "api/NitroxModel.DataStructures.Unity.html": {
    "href": "api/NitroxModel.DataStructures.Unity.html",
    "title": "Namespace NitroxModel.DataStructures.Unity | Nitrox",
    "keywords": "Namespace NitroxModel.DataStructures.Unity Classes NitroxQuaternionTest NitroxTransform NitroxTransformTest Structs NitroxColor NitroxQuaternion NitroxVector3 NitroxVector4"
  },
  "api/NitroxModel.DataStructures.Util.Optional-1.GetObjectData.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional-1.GetObjectData.html",
    "title": "Method GetObjectData | Nitrox",
    "keywords": "Method GetObjectData Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll GetObjectData(SerializationInfo, StreamingContext) Populates a SerializationInfo with the data needed to serialize the target object. [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)] public void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The SerializationInfo to populate with data. context StreamingContext The destination (see StreamingContext) for this serialization. Exceptions SecurityException The caller does not have the required permission."
  },
  "api/NitroxModel.DataStructures.Util.Optional-1.HasValue.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional-1.HasValue.html",
    "title": "Property HasValue | Nitrox",
    "keywords": "Property HasValue Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll HasValue public bool HasValue { get; } Property Value bool"
  },
  "api/NitroxModel.DataStructures.Util.Optional-1.OrElse.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional-1.OrElse.html",
    "title": "Method OrElse | Nitrox",
    "keywords": "Method OrElse Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll OrElse(T) public T OrElse(T elseValue) Parameters elseValue T Returns T OrElse(Func<T>) public Optional<T> OrElse(Func<T> elseValue) Parameters elseValue Func<T> Returns Optional<T>"
  },
  "api/NitroxModel.DataStructures.Util.Optional-1.OrNull.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional-1.OrNull.html",
    "title": "Method OrNull | Nitrox",
    "keywords": "Method OrNull Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll OrNull() public T OrNull() Returns T"
  },
  "api/NitroxModel.DataStructures.Util.Optional-1.ToString.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional-1.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxModel.DataStructures.Util.Optional-1.Value.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional-1.Value.html",
    "title": "Property Value | Nitrox",
    "keywords": "Property Value Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll Value [DataMember(Order = 1)] public readonly T Value { get; } Property Value T"
  },
  "api/NitroxModel.DataStructures.Util.Optional-1.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional-1.html",
    "title": "Struct Optional<T> | Nitrox",
    "keywords": "Struct Optional<T> Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll Used to give context on whether the wrapped value is nullable and to improve error logging. [Serializable] [DataContract] public struct Optional<T> : ISerializable where T : class Type Parameters T Implements ISerializable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Remarks Used some hacks to circumvent C#' lack of reverse type inference (usually need to specify the type when returning a value using a generic method). Code from https://tyrrrz.me/blog/return-type-inference Properties HasValue Value Methods GetObjectData(SerializationInfo, StreamingContext) Populates a SerializationInfo with the data needed to serialize the target object. OrElse(Func<T>) OrElse(T) OrNull() ToString() Returns the fully qualified type name of this instance. Operators explicit operator T(Optional<T>) implicit operator Optional<T>(OptionalEmpty) implicit operator Optional<T>(T) implicit operator Optional<T>?(T)"
  },
  "api/NitroxModel.DataStructures.Util.Optional-1.op_Explicit.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional-1.op_Explicit.html",
    "title": "Operator explicit operator | Nitrox",
    "keywords": "Operator explicit operator Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll explicit operator T(Optional<T>) public static explicit operator T(Optional<T> value) Parameters value Optional<T> Returns T"
  },
  "api/NitroxModel.DataStructures.Util.Optional-1.op_Implicit.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional-1.op_Implicit.html",
    "title": "Operator implicit operator | Nitrox",
    "keywords": "Operator implicit operator Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll implicit operator Optional<T>(OptionalEmpty) public static implicit operator Optional<T>(OptionalEmpty none) Parameters none OptionalEmpty Returns Optional<T> implicit operator Optional<T>?(T) public static implicit operator Optional<T>?(T obj) Parameters obj T Returns Optional<T>? implicit operator Optional<T>(T) public static implicit operator Optional<T>(T obj) Parameters obj T Returns Optional<T>"
  },
  "api/NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional.ApplyHasValueCondition.html",
    "title": "Method ApplyHasValueCondition | Nitrox",
    "keywords": "Method ApplyHasValueCondition Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll ApplyHasValueCondition<T>(Func<T, bool>) Adds a condition to the optional of the given type that is checked whenever HasValue is checked. public static void ApplyHasValueCondition<T>(Func<T, bool> hasValueCondition) where T : class Parameters hasValueCondition Func<T, bool> Condition to add to the HasValue check. Type Parameters T"
  },
  "api/NitroxModel.DataStructures.Util.Optional.Empty.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional.Empty.html",
    "title": "Property Empty | Nitrox",
    "keywords": "Property Empty Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll Empty public static OptionalEmpty Empty { get; } Property Value OptionalEmpty"
  },
  "api/NitroxModel.DataStructures.Util.Optional.Of.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional.Of.html",
    "title": "Method Of | Nitrox",
    "keywords": "Method Of Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll Of<T>(T) public static Optional<T> Of<T>(T value) where T : class Parameters value T Returns Optional<T> Type Parameters T"
  },
  "api/NitroxModel.DataStructures.Util.Optional.OfNullable.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional.OfNullable.html",
    "title": "Method OfNullable | Nitrox",
    "keywords": "Method OfNullable Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll OfNullable<T>(T) public static Optional<T> OfNullable<T>(T value) where T : class Parameters value T Returns Optional<T> Type Parameters T"
  },
  "api/NitroxModel.DataStructures.Util.Optional.html": {
    "href": "api/NitroxModel.DataStructures.Util.Optional.html",
    "title": "Class Optional | Nitrox",
    "keywords": "Class Optional Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll public static class Optional Inheritance object Optional Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Empty Methods ApplyHasValueCondition<T>(Func<T, bool>) Adds a condition to the optional of the given type that is checked whenever HasValue is checked. OfNullable<T>(T) Of<T>(T)"
  },
  "api/NitroxModel.DataStructures.Util.OptionalEmpty.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalEmpty.-ctor.html",
    "title": "Constructor OptionalEmpty | Nitrox",
    "keywords": "Constructor OptionalEmpty Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll OptionalEmpty() public OptionalEmpty()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalEmpty.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalEmpty.html",
    "title": "Struct OptionalEmpty | Nitrox",
    "keywords": "Struct OptionalEmpty Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll [Obsolete(\"Use Optional.Empty instead. This struct is required to trick the compiler for the lack of reverse type inference.\")] public struct OptionalEmpty Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors OptionalEmpty()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalEmptyException-1.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalEmptyException-1.-ctor.html",
    "title": "Constructor OptionalEmptyException | Nitrox",
    "keywords": "Constructor OptionalEmptyException Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll OptionalEmptyException() public OptionalEmptyException() OptionalEmptyException(string) public OptionalEmptyException(string message) Parameters message string"
  },
  "api/NitroxModel.DataStructures.Util.OptionalEmptyException-1.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalEmptyException-1.html",
    "title": "Class OptionalEmptyException<T> | Nitrox",
    "keywords": "Class OptionalEmptyException<T> Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll [Serializable] public sealed class OptionalEmptyException<T> : Exception, ISerializable, _Exception Type Parameters T Inheritance object Exception OptionalEmptyException<T> Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Extensions.GetFirstNonAggregateMessage(Exception) Constructors OptionalEmptyException() OptionalEmptyException(string)"
  },
  "api/NitroxModel.DataStructures.Util.OptionalNullException-1.-ctor.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalNullException-1.-ctor.html",
    "title": "Constructor OptionalNullException | Nitrox",
    "keywords": "Constructor OptionalNullException Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll OptionalNullException() public OptionalNullException() OptionalNullException(string) public OptionalNullException(string message) Parameters message string"
  },
  "api/NitroxModel.DataStructures.Util.OptionalNullException-1.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalNullException-1.html",
    "title": "Class OptionalNullException<T> | Nitrox",
    "keywords": "Class OptionalNullException<T> Namespace NitroxModel.DataStructures.Util Assembly NitroxModel.dll public sealed class OptionalNullException<T> : Exception, ISerializable, _Exception Type Parameters T Inheritance object Exception OptionalNullException<T> Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Extensions.GetFirstNonAggregateMessage(Exception) Constructors OptionalNullException() OptionalNullException(string)"
  },
  "api/NitroxModel.DataStructures.Util.OptionalTest.Init.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalTest.Init.html",
    "title": "Method Init | Nitrox",
    "keywords": "Method Init Namespace NitroxModel.DataStructures.Util Assembly Nitrox.Test.dll Init() These optional additions should be in OptionalHasValueDynamicChecks() test method but MSTest reuses instances which causes Optional{T}.HasValue to be called before the new conditions are added. [TestInitialize] public static void Init()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalEmpty.html",
    "title": "Method OptionalEmpty | Nitrox",
    "keywords": "Method OptionalEmpty Namespace NitroxModel.DataStructures.Util Assembly Nitrox.Test.dll OptionalEmpty() [TestMethod] public void OptionalEmpty()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalGet.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalGet.html",
    "title": "Method OptionalGet | Nitrox",
    "keywords": "Method OptionalGet Namespace NitroxModel.DataStructures.Util Assembly Nitrox.Test.dll OptionalGet() [TestMethod] public void OptionalGet()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalHasValueDynamicChecks.html",
    "title": "Method OptionalHasValueDynamicChecks | Nitrox",
    "keywords": "Method OptionalHasValueDynamicChecks Namespace NitroxModel.DataStructures.Util Assembly Nitrox.Test.dll OptionalHasValueDynamicChecks() [TestMethod] public void OptionalHasValueDynamicChecks()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalIsNotPresent.html",
    "title": "Method OptionalIsNotPresent | Nitrox",
    "keywords": "Method OptionalIsNotPresent Namespace NitroxModel.DataStructures.Util Assembly Nitrox.Test.dll OptionalIsNotPresent() [TestMethod] public void OptionalIsNotPresent()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalIsPresent.html",
    "title": "Method OptionalIsPresent | Nitrox",
    "keywords": "Method OptionalIsPresent Namespace NitroxModel.DataStructures.Util Assembly Nitrox.Test.dll OptionalIsPresent() [TestMethod] public void OptionalIsPresent()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseNoValue.html",
    "title": "Method OptionalOrElseNoValue | Nitrox",
    "keywords": "Method OptionalOrElseNoValue Namespace NitroxModel.DataStructures.Util Assembly Nitrox.Test.dll OptionalOrElseNoValue() [TestMethod] public void OptionalOrElseNoValue()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalOrElseValidValue.html",
    "title": "Method OptionalOrElseValidValue | Nitrox",
    "keywords": "Method OptionalOrElseValidValue Namespace NitroxModel.DataStructures.Util Assembly Nitrox.Test.dll OptionalOrElseValidValue() [TestMethod] public void OptionalOrElseValidValue()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalTest.OptionalSetValueNull.html",
    "title": "Method OptionalSetValueNull | Nitrox",
    "keywords": "Method OptionalSetValueNull Namespace NitroxModel.DataStructures.Util Assembly Nitrox.Test.dll OptionalSetValueNull() [TestMethod] public void OptionalSetValueNull()"
  },
  "api/NitroxModel.DataStructures.Util.OptionalTest.html": {
    "href": "api/NitroxModel.DataStructures.Util.OptionalTest.html",
    "title": "Class OptionalTest | Nitrox",
    "keywords": "Class OptionalTest Namespace NitroxModel.DataStructures.Util Assembly Nitrox.Test.dll [TestClass] public class OptionalTest Inheritance object OptionalTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Init() These optional additions should be in OptionalHasValueDynamicChecks() test method but MSTest reuses instances which causes Optional{T}.HasValue to be called before the new conditions are added. OptionalEmpty() OptionalGet() OptionalHasValueDynamicChecks() OptionalIsNotPresent() OptionalIsPresent() OptionalOrElseNoValue() OptionalOrElseValidValue() OptionalSetValueNull()"
  },
  "api/NitroxModel.DataStructures.Util.html": {
    "href": "api/NitroxModel.DataStructures.Util.html",
    "title": "Namespace NitroxModel.DataStructures.Util | Nitrox",
    "keywords": "Namespace NitroxModel.DataStructures.Util Classes Optional OptionalEmptyException<T> OptionalNullException<T> OptionalTest Structs OptionalEmpty Optional<T> Used to give context on whether the wrapped value is nullable and to improve error logging."
  },
  "api/NitroxModel.DataStructures.html": {
    "href": "api/NitroxModel.DataStructures.html",
    "title": "Namespace NitroxModel.DataStructures | Nitrox",
    "keywords": "Namespace NitroxModel.DataStructures Namespaces NitroxModel.DataStructures.GameLogic NitroxModel.DataStructures.Surrogates NitroxModel.DataStructures.Unity NitroxModel.DataStructures.Util Classes NitroxId Used to reference a Unity GameObject and makes it possible to synchronize a GameObject between connected players. NitroxIdTest NitroxInt3Test NitroxVersionTest PriorityChain<T> PriorityItem<T> PriorityQueueTest PriorityQueue<T> SimulatedEntity A simulated entity that is tracked by the Nitrox server so that it knows which connected game client owns (and simulates) the entity. See SimulationLockType for more information. ThreadSafeDictionary<TKey, TValue> ThreadSafeListTest ThreadSafeList<T> ThreadSafeQueueTest ThreadSafeQueue<T> ThreadSafeSetTest ThreadSafeSet<T> Structs NitroxInt3 Model to allow NitroxModel to be decoupled from Assembly-csharp-firstpass (i.e. game code). NitroxVersion Serializable version of Version with only major and minor properties. Enums SimulationLockType"
  },
  "api/NitroxModel.Discovery.GameInstallData.-ctor.html": {
    "href": "api/NitroxModel.Discovery.GameInstallData.-ctor.html",
    "title": "Constructor GameInstallData | Nitrox",
    "keywords": "Constructor GameInstallData Namespace NitroxModel.Discovery Assembly NitroxModel.dll GameInstallData(string) public GameInstallData(string installDir) Parameters installDir string"
  },
  "api/NitroxModel.Discovery.GameInstallData.InstallDir.html": {
    "href": "api/NitroxModel.Discovery.GameInstallData.InstallDir.html",
    "title": "Property InstallDir | Nitrox",
    "keywords": "Property InstallDir Namespace NitroxModel.Discovery Assembly NitroxModel.dll InstallDir public string InstallDir { get; } Property Value string"
  },
  "api/NitroxModel.Discovery.GameInstallData.ManagedDllsDir.html": {
    "href": "api/NitroxModel.Discovery.GameInstallData.ManagedDllsDir.html",
    "title": "Property ManagedDllsDir | Nitrox",
    "keywords": "Property ManagedDllsDir Namespace NitroxModel.Discovery Assembly NitroxModel.dll ManagedDllsDir public string ManagedDllsDir { get; } Property Value string"
  },
  "api/NitroxModel.Discovery.GameInstallData.TryFrom.html": {
    "href": "api/NitroxModel.Discovery.GameInstallData.TryFrom.html",
    "title": "Method TryFrom | Nitrox",
    "keywords": "Method TryFrom Namespace NitroxModel.Discovery Assembly NitroxModel.dll TryFrom(string, out GameInstallData) public static bool TryFrom(string path, out GameInstallData result) Parameters path string result GameInstallData Returns bool"
  },
  "api/NitroxModel.Discovery.GameInstallData.TrySave.html": {
    "href": "api/NitroxModel.Discovery.GameInstallData.TrySave.html",
    "title": "Method TrySave | Nitrox",
    "keywords": "Method TrySave Namespace NitroxModel.Discovery Assembly NitroxModel.dll TrySave(string) public void TrySave(string path) Parameters path string"
  },
  "api/NitroxModel.Discovery.GameInstallData.html": {
    "href": "api/NitroxModel.Discovery.GameInstallData.html",
    "title": "Class GameInstallData | Nitrox",
    "keywords": "Class GameInstallData Namespace NitroxModel.Discovery Assembly NitroxModel.dll Game definition data gathered from Steam's files. public class GameInstallData Inheritance object GameInstallData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GameInstallData(string) Properties InstallDir ManagedDllsDir Methods TryFrom(string, out GameInstallData) TrySave(string)"
  },
  "api/NitroxModel.Discovery.GameInstallationFinder.FindGame.html": {
    "href": "api/NitroxModel.Discovery.GameInstallationFinder.FindGame.html",
    "title": "Method FindGame | Nitrox",
    "keywords": "Method FindGame Namespace NitroxModel.Discovery Assembly NitroxModel.dll FindGame(IList<string>) Searches for Subnautica installation directory. public string FindGame(IList<string> errors = null) Parameters errors IList<string> Error messages that can be set if it failed to find the game. Returns string Nullable path to the Subnautica installation path."
  },
  "api/NitroxModel.Discovery.GameInstallationFinder.Instance.html": {
    "href": "api/NitroxModel.Discovery.GameInstallationFinder.Instance.html",
    "title": "Property Instance | Nitrox",
    "keywords": "Property Instance Namespace NitroxModel.Discovery Assembly NitroxModel.dll Instance public static GameInstallationFinder Instance { get; } Property Value GameInstallationFinder"
  },
  "api/NitroxModel.Discovery.GameInstallationFinder.IsSubnauticaDirectory.html": {
    "href": "api/NitroxModel.Discovery.GameInstallationFinder.IsSubnauticaDirectory.html",
    "title": "Method IsSubnauticaDirectory | Nitrox",
    "keywords": "Method IsSubnauticaDirectory Namespace NitroxModel.Discovery Assembly NitroxModel.dll IsSubnauticaDirectory(string) public static bool IsSubnauticaDirectory(string directory) Parameters directory string Returns bool"
  },
  "api/NitroxModel.Discovery.GameInstallationFinder.html": {
    "href": "api/NitroxModel.Discovery.GameInstallationFinder.html",
    "title": "Class GameInstallationFinder | Nitrox",
    "keywords": "Class GameInstallationFinder Namespace NitroxModel.Discovery Assembly NitroxModel.dll Main game installation finder that will use all available methods of detection to find the Subnautica installation directory. public class GameInstallationFinder : IFindGameInstallation Inheritance object GameInstallationFinder Implements IFindGameInstallation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Instance Methods FindGame(IList<string>) Searches for Subnautica installation directory. IsSubnauticaDirectory(string)"
  },
  "api/NitroxModel.Discovery.IFindGameInstallation.FindGame.html": {
    "href": "api/NitroxModel.Discovery.IFindGameInstallation.FindGame.html",
    "title": "Method FindGame | Nitrox",
    "keywords": "Method FindGame Namespace NitroxModel.Discovery Assembly NitroxModel.dll FindGame(IList<string>) Searches for Subnautica installation directory. string FindGame(IList<string> errors = null) Parameters errors IList<string> Error messages that can be set if it failed to find the game. Returns string Nullable path to the Subnautica installation path."
  },
  "api/NitroxModel.Discovery.IFindGameInstallation.html": {
    "href": "api/NitroxModel.Discovery.IFindGameInstallation.html",
    "title": "Interface IFindGameInstallation | Nitrox",
    "keywords": "Interface IFindGameInstallation Namespace NitroxModel.Discovery Assembly NitroxModel.dll public interface IFindGameInstallation Methods FindGame(IList<string>) Searches for Subnautica installation directory."
  },
  "api/NitroxModel.Discovery.InstallationFinders.ConfigGameFinder.FindGame.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.ConfigGameFinder.FindGame.html",
    "title": "Method FindGame | Nitrox",
    "keywords": "Method FindGame Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll FindGame(IList<string>) Searches for Subnautica installation directory. public string FindGame(IList<string> errors = null) Parameters errors IList<string> Error messages that can be set if it failed to find the game. Returns string Nullable path to the Subnautica installation path."
  },
  "api/NitroxModel.Discovery.InstallationFinders.ConfigGameFinder.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.ConfigGameFinder.html",
    "title": "Class ConfigGameFinder | Nitrox",
    "keywords": "Class ConfigGameFinder Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll Tries to read a local config value that contains the installation directory of Subnautica. public class ConfigGameFinder : IFindGameInstallation Inheritance object ConfigGameFinder Implements IFindGameInstallation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FindGame(IList<string>) Searches for Subnautica installation directory."
  },
  "api/NitroxModel.Discovery.InstallationFinders.DiscordGameFinder.FindGame.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.DiscordGameFinder.FindGame.html",
    "title": "Method FindGame | Nitrox",
    "keywords": "Method FindGame Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll FindGame(IList<string>) Subnautica Discord is either in appdata or in C:. So for now we just check these 2 paths until we have a better way. Discord stores game files in a subfolder called \"content\" while the parent folder is used to store Discord related files instead. public string FindGame(IList<string> errors = null) Parameters errors IList<string> Returns string"
  },
  "api/NitroxModel.Discovery.InstallationFinders.DiscordGameFinder.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.DiscordGameFinder.html",
    "title": "Class DiscordGameFinder | Nitrox",
    "keywords": "Class DiscordGameFinder Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll public class DiscordGameFinder : IFindGameInstallation Inheritance object DiscordGameFinder Implements IFindGameInstallation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FindGame(IList<string>) Subnautica Discord is either in appdata or in C:. So for now we just check these 2 paths until we have a better way. Discord stores game files in a subfolder called \"content\" while the parent folder is used to store Discord related files instead."
  },
  "api/NitroxModel.Discovery.InstallationFinders.EnvironmentGameFinder.FindGame.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.EnvironmentGameFinder.FindGame.html",
    "title": "Method FindGame | Nitrox",
    "keywords": "Method FindGame Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll FindGame(IList<string>) Searches for Subnautica installation directory. public string FindGame(IList<string> errors = null) Parameters errors IList<string> Error messages that can be set if it failed to find the game. Returns string Nullable path to the Subnautica installation path."
  },
  "api/NitroxModel.Discovery.InstallationFinders.EnvironmentGameFinder.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.EnvironmentGameFinder.html",
    "title": "Class EnvironmentGameFinder | Nitrox",
    "keywords": "Class EnvironmentGameFinder Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll Trying to find the path in environment variables by the key SUBNAUTICA_INSTALLATION_PATH that contains the installation directory of Subnautica. public class EnvironmentGameFinder : IFindGameInstallation Inheritance object EnvironmentGameFinder Implements IFindGameInstallation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FindGame(IList<string>) Searches for Subnautica installation directory."
  },
  "api/NitroxModel.Discovery.InstallationFinders.EpicGamesInstallationFinder.FindGame.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.EpicGamesInstallationFinder.FindGame.html",
    "title": "Method FindGame | Nitrox",
    "keywords": "Method FindGame Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll FindGame(IList<string>) Searches for Subnautica installation directory. public string FindGame(IList<string> errors = null) Parameters errors IList<string> Error messages that can be set if it failed to find the game. Returns string Nullable path to the Subnautica installation path."
  },
  "api/NitroxModel.Discovery.InstallationFinders.EpicGamesInstallationFinder.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.EpicGamesInstallationFinder.html",
    "title": "Class EpicGamesInstallationFinder | Nitrox",
    "keywords": "Class EpicGamesInstallationFinder Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll public class EpicGamesInstallationFinder : IFindGameInstallation Inheritance object EpicGamesInstallationFinder Implements IFindGameInstallation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FindGame(IList<string>) Searches for Subnautica installation directory."
  },
  "api/NitroxModel.Discovery.InstallationFinders.GameInCurrentDirectoryFinder.FindGame.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.GameInCurrentDirectoryFinder.FindGame.html",
    "title": "Method FindGame | Nitrox",
    "keywords": "Method FindGame Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll FindGame(IList<string>) Searches for Subnautica installation directory. public string FindGame(IList<string> errors = null) Parameters errors IList<string> Error messages that can be set if it failed to find the game. Returns string Nullable path to the Subnautica installation path."
  },
  "api/NitroxModel.Discovery.InstallationFinders.GameInCurrentDirectoryFinder.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.GameInCurrentDirectoryFinder.html",
    "title": "Class GameInCurrentDirectoryFinder | Nitrox",
    "keywords": "Class GameInCurrentDirectoryFinder Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll public class GameInCurrentDirectoryFinder : IFindGameInstallation Inheritance object GameInCurrentDirectoryFinder Implements IFindGameInstallation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FindGame(IList<string>) Searches for Subnautica installation directory."
  },
  "api/NitroxModel.Discovery.InstallationFinders.SteamGameRegistryFinder.FindGame.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.SteamGameRegistryFinder.FindGame.html",
    "title": "Method FindGame | Nitrox",
    "keywords": "Method FindGame Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll FindGame(IList<string>) Searches for Subnautica installation directory. public string FindGame(IList<string> errors = null) Parameters errors IList<string> Error messages that can be set if it failed to find the game. Returns string Nullable path to the Subnautica installation path."
  },
  "api/NitroxModel.Discovery.InstallationFinders.SteamGameRegistryFinder.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.SteamGameRegistryFinder.html",
    "title": "Class SteamGameRegistryFinder | Nitrox",
    "keywords": "Class SteamGameRegistryFinder Namespace NitroxModel.Discovery.InstallationFinders Assembly NitroxModel.dll public class SteamGameRegistryFinder : IFindGameInstallation Inheritance object SteamGameRegistryFinder Implements IFindGameInstallation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FindGame(IList<string>) Searches for Subnautica installation directory."
  },
  "api/NitroxModel.Discovery.InstallationFinders.html": {
    "href": "api/NitroxModel.Discovery.InstallationFinders.html",
    "title": "Namespace NitroxModel.Discovery.InstallationFinders | Nitrox",
    "keywords": "Namespace NitroxModel.Discovery.InstallationFinders Classes ConfigGameFinder Tries to read a local config value that contains the installation directory of Subnautica. DiscordGameFinder EnvironmentGameFinder Trying to find the path in environment variables by the key SUBNAUTICA_INSTALLATION_PATH that contains the installation directory of Subnautica. EpicGamesInstallationFinder GameInCurrentDirectoryFinder SteamGameRegistryFinder"
  },
  "api/NitroxModel.Discovery.Platform.html": {
    "href": "api/NitroxModel.Discovery.Platform.html",
    "title": "Enum Platform | Nitrox",
    "keywords": "Enum Platform Namespace NitroxModel.Discovery Assembly NitroxModel.dll public enum Platform Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields DISCORD = 5 EPIC = 2 MICROSOFT = 4 NONE = 0 PIRATED = 1 STEAM = 3"
  },
  "api/NitroxModel.Discovery.html": {
    "href": "api/NitroxModel.Discovery.html",
    "title": "Namespace NitroxModel.Discovery | Nitrox",
    "keywords": "Namespace NitroxModel.Discovery Namespaces NitroxModel.Discovery.InstallationFinders Classes GameInstallData Game definition data gathered from Steam's files. GameInstallationFinder Main game installation finder that will use all available methods of detection to find the Subnautica installation directory. Interfaces IFindGameInstallation Enums Platform"
  },
  "api/NitroxModel.Extensions.AsByteUnitText.html": {
    "href": "api/NitroxModel.Extensions.AsByteUnitText.html",
    "title": "Method AsByteUnitText | Nitrox",
    "keywords": "Method AsByteUnitText Namespace NitroxModel Assembly NitroxModel.dll AsByteUnitText(uint) public static string AsByteUnitText(this uint byteSize) Parameters byteSize uint Returns string"
  },
  "api/NitroxModel.Extensions.GetAttribute.html": {
    "href": "api/NitroxModel.Extensions.GetAttribute.html",
    "title": "Method GetAttribute | Nitrox",
    "keywords": "Method GetAttribute Namespace NitroxModel Assembly NitroxModel.dll GetAttribute<TAttribute>(Enum) public static TAttribute GetAttribute<TAttribute>(this Enum value) where TAttribute : Attribute Parameters value Enum Returns TAttribute Type Parameters TAttribute"
  },
  "api/NitroxModel.Extensions.GetFirstNonAggregateMessage.html": {
    "href": "api/NitroxModel.Extensions.GetFirstNonAggregateMessage.html",
    "title": "Method GetFirstNonAggregateMessage | Nitrox",
    "keywords": "Method GetFirstNonAggregateMessage Namespace NitroxModel Assembly NitroxModel.dll GetFirstNonAggregateMessage(Exception) public static string GetFirstNonAggregateMessage(this Exception exception) Parameters exception Exception Returns string"
  },
  "api/NitroxModel.Extensions.GetIndex.html": {
    "href": "api/NitroxModel.Extensions.GetIndex.html",
    "title": "Method GetIndex | Nitrox",
    "keywords": "Method GetIndex Namespace NitroxModel Assembly NitroxModel.dll GetIndex<T>(T[], T) public static int GetIndex<T>(this T[] list, T itemToFind) Parameters list T[] itemToFind T Returns int Type Parameters T"
  },
  "api/NitroxModel.Extensions.RemoveAllFast.html": {
    "href": "api/NitroxModel.Extensions.RemoveAllFast.html",
    "title": "Method RemoveAllFast | Nitrox",
    "keywords": "Method RemoveAllFast Namespace NitroxModel Assembly NitroxModel.dll RemoveAllFast<TItem, TParameter>(IList<TItem>, TParameter, Func<TItem, TParameter, bool>) Removes all items from the list when the predicate returns true. public static void RemoveAllFast<TItem, TParameter>(this IList<TItem> list, TParameter extraParameter, Func<TItem, TParameter, bool> predicate) Parameters list IList<TItem> The list to remove items from. extraParameter TParameter An extra parameter to supply to the predicate. predicate Func<TItem, TParameter, bool> The predicate that tests each item in the list for removal. Type Parameters TItem TParameter"
  },
  "api/NitroxModel.Extensions.RemoveWhere.html": {
    "href": "api/NitroxModel.Extensions.RemoveWhere.html",
    "title": "Method RemoveWhere | Nitrox",
    "keywords": "Method RemoveWhere Namespace NitroxModel Assembly NitroxModel.dll RemoveWhere<TKey, TValue, TParameter>(IDictionary<TKey, TValue>, TParameter, Func<TValue, TParameter, bool>) public static void RemoveWhere<TKey, TValue, TParameter>(this IDictionary<TKey, TValue> dictionary, TParameter extraParameter, Func<TValue, TParameter, bool> predicate) Parameters dictionary IDictionary<TKey, TValue> extraParameter TParameter predicate Func<TValue, TParameter, bool> Type Parameters TKey TValue TParameter"
  },
  "api/NitroxModel.Extensions.SequenceEqualOrBothNull.html": {
    "href": "api/NitroxModel.Extensions.SequenceEqualOrBothNull.html",
    "title": "Method SequenceEqualOrBothNull | Nitrox",
    "keywords": "Method SequenceEqualOrBothNull Namespace NitroxModel Assembly NitroxModel.dll SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) Determines whether two sequences are equal by comparing the elements by using the default equality comparer for their type. public static bool SequenceEqualOrBothNull<TSource>(this IEnumerable<TSource> first, IEnumerable<TSource> second) Parameters first IEnumerable<TSource> An IEnumerable<T> to compare to second. second IEnumerable<TSource> An IEnumerable<T> to compare to the first sequence. Returns bool true if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, false. true if both IEnumerables are null. Type Parameters TSource The type of the elements of the input sequences. Remarks ArgumentNullException can't be thrown because of first or second being null. Exceptions ArgumentNullException first or second is null."
  },
  "api/NitroxModel.Extensions.html": {
    "href": "api/NitroxModel.Extensions.html",
    "title": "Class Extensions | Nitrox",
    "keywords": "Class Extensions Namespace NitroxModel Assembly NitroxModel.dll public static class Extensions Inheritance object Extensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AsByteUnitText(uint) GetAttribute<TAttribute>(Enum) GetFirstNonAggregateMessage(Exception) GetIndex<T>(T[], T) RemoveAllFast<TItem, TParameter>(IList<TItem>, TParameter, Func<TItem, TParameter, bool>) Removes all items from the list when the predicate returns true. RemoveWhere<TKey, TValue, TParameter>(IDictionary<TKey, TValue>, TParameter, Func<TValue, TParameter, bool>) SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) Determines whether two sequences are equal by comparing the elements by using the default equality comparer for their type."
  },
  "api/NitroxModel.ExtensionsTest.RemoveAllFast_CanRemoveAllItems.html": {
    "href": "api/NitroxModel.ExtensionsTest.RemoveAllFast_CanRemoveAllItems.html",
    "title": "Method RemoveAllFast_CanRemoveAllItems | Nitrox",
    "keywords": "Method RemoveAllFast_CanRemoveAllItems Namespace NitroxModel Assembly Nitrox.Test.dll RemoveAllFast_CanRemoveAllItems() [TestMethod] public void RemoveAllFast_CanRemoveAllItems()"
  },
  "api/NitroxModel.ExtensionsTest.RemoveAllFast_CanRemoveEndItem.html": {
    "href": "api/NitroxModel.ExtensionsTest.RemoveAllFast_CanRemoveEndItem.html",
    "title": "Method RemoveAllFast_CanRemoveEndItem | Nitrox",
    "keywords": "Method RemoveAllFast_CanRemoveEndItem Namespace NitroxModel Assembly Nitrox.Test.dll RemoveAllFast_CanRemoveEndItem() [TestMethod] public void RemoveAllFast_CanRemoveEndItem()"
  },
  "api/NitroxModel.ExtensionsTest.RemoveAllFast_CanRemoveFirstItem.html": {
    "href": "api/NitroxModel.ExtensionsTest.RemoveAllFast_CanRemoveFirstItem.html",
    "title": "Method RemoveAllFast_CanRemoveFirstItem | Nitrox",
    "keywords": "Method RemoveAllFast_CanRemoveFirstItem Namespace NitroxModel Assembly Nitrox.Test.dll RemoveAllFast_CanRemoveFirstItem() [TestMethod] public void RemoveAllFast_CanRemoveFirstItem()"
  },
  "api/NitroxModel.ExtensionsTest.RemoveAllFast_CanRemoveItemsWithExtraParameterInPredicate.html": {
    "href": "api/NitroxModel.ExtensionsTest.RemoveAllFast_CanRemoveItemsWithExtraParameterInPredicate.html",
    "title": "Method RemoveAllFast_CanRemoveItemsWithExtraParameterInPredicate | Nitrox",
    "keywords": "Method RemoveAllFast_CanRemoveItemsWithExtraParameterInPredicate Namespace NitroxModel Assembly Nitrox.Test.dll RemoveAllFast_CanRemoveItemsWithExtraParameterInPredicate() [TestMethod] public void RemoveAllFast_CanRemoveItemsWithExtraParameterInPredicate()"
  },
  "api/NitroxModel.ExtensionsTest.RemoveAllFast_CanRemoveMidItems.html": {
    "href": "api/NitroxModel.ExtensionsTest.RemoveAllFast_CanRemoveMidItems.html",
    "title": "Method RemoveAllFast_CanRemoveMidItems | Nitrox",
    "keywords": "Method RemoveAllFast_CanRemoveMidItems Namespace NitroxModel Assembly Nitrox.Test.dll RemoveAllFast_CanRemoveMidItems() [TestMethod] public void RemoveAllFast_CanRemoveMidItems()"
  },
  "api/NitroxModel.ExtensionsTest.RemoveAllFast_ShouldDoNothingWhenAlwaysFalsePredicate.html": {
    "href": "api/NitroxModel.ExtensionsTest.RemoveAllFast_ShouldDoNothingWhenAlwaysFalsePredicate.html",
    "title": "Method RemoveAllFast_ShouldDoNothingWhenAlwaysFalsePredicate | Nitrox",
    "keywords": "Method RemoveAllFast_ShouldDoNothingWhenAlwaysFalsePredicate Namespace NitroxModel Assembly Nitrox.Test.dll RemoveAllFast_ShouldDoNothingWhenAlwaysFalsePredicate() [TestMethod] public void RemoveAllFast_ShouldDoNothingWhenAlwaysFalsePredicate()"
  },
  "api/NitroxModel.ExtensionsTest.RemoveAllFast_ShouldDoNothingWhenEmptyList.html": {
    "href": "api/NitroxModel.ExtensionsTest.RemoveAllFast_ShouldDoNothingWhenEmptyList.html",
    "title": "Method RemoveAllFast_ShouldDoNothingWhenEmptyList | Nitrox",
    "keywords": "Method RemoveAllFast_ShouldDoNothingWhenEmptyList Namespace NitroxModel Assembly Nitrox.Test.dll RemoveAllFast_ShouldDoNothingWhenEmptyList() [TestMethod] public void RemoveAllFast_ShouldDoNothingWhenEmptyList()"
  },
  "api/NitroxModel.ExtensionsTest.RemoveAllFast_ThrowsErrorIfFixedSizeList.html": {
    "href": "api/NitroxModel.ExtensionsTest.RemoveAllFast_ThrowsErrorIfFixedSizeList.html",
    "title": "Method RemoveAllFast_ThrowsErrorIfFixedSizeList | Nitrox",
    "keywords": "Method RemoveAllFast_ThrowsErrorIfFixedSizeList Namespace NitroxModel Assembly Nitrox.Test.dll RemoveAllFast_ThrowsErrorIfFixedSizeList() [TestMethod] public void RemoveAllFast_ThrowsErrorIfFixedSizeList()"
  },
  "api/NitroxModel.ExtensionsTest.html": {
    "href": "api/NitroxModel.ExtensionsTest.html",
    "title": "Class ExtensionsTest | Nitrox",
    "keywords": "Class ExtensionsTest Namespace NitroxModel Assembly Nitrox.Test.dll [TestClass] public class ExtensionsTest Inheritance object ExtensionsTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods RemoveAllFast_CanRemoveAllItems() RemoveAllFast_CanRemoveEndItem() RemoveAllFast_CanRemoveFirstItem() RemoveAllFast_CanRemoveItemsWithExtraParameterInPredicate() RemoveAllFast_CanRemoveMidItems() RemoveAllFast_ShouldDoNothingWhenAlwaysFalsePredicate() RemoveAllFast_ShouldDoNothingWhenEmptyList() RemoveAllFast_ThrowsErrorIfFixedSizeList()"
  },
  "api/NitroxModel.GameInfo.ExeName.html": {
    "href": "api/NitroxModel.GameInfo.ExeName.html",
    "title": "Property ExeName | Nitrox",
    "keywords": "Property ExeName Namespace NitroxModel Assembly NitroxModel.dll ExeName public string ExeName { get; } Property Value string"
  },
  "api/NitroxModel.GameInfo.FullName.html": {
    "href": "api/NitroxModel.GameInfo.FullName.html",
    "title": "Property FullName | Nitrox",
    "keywords": "Property FullName Namespace NitroxModel Assembly NitroxModel.dll FullName public string FullName { get; } Property Value string"
  },
  "api/NitroxModel.GameInfo.MsStoreStartUrl.html": {
    "href": "api/NitroxModel.GameInfo.MsStoreStartUrl.html",
    "title": "Property MsStoreStartUrl | Nitrox",
    "keywords": "Property MsStoreStartUrl Namespace NitroxModel Assembly NitroxModel.dll MsStoreStartUrl public string MsStoreStartUrl { get; } Property Value string"
  },
  "api/NitroxModel.GameInfo.Name.html": {
    "href": "api/NitroxModel.GameInfo.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel Assembly NitroxModel.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxModel.GameInfo.SteamAppId.html": {
    "href": "api/NitroxModel.GameInfo.SteamAppId.html",
    "title": "Property SteamAppId | Nitrox",
    "keywords": "Property SteamAppId Namespace NitroxModel Assembly NitroxModel.dll SteamAppId public int SteamAppId { get; } Property Value int"
  },
  "api/NitroxModel.GameInfo.Subnautica.html": {
    "href": "api/NitroxModel.GameInfo.Subnautica.html",
    "title": "Field Subnautica | Nitrox",
    "keywords": "Field Subnautica Namespace NitroxModel Assembly NitroxModel.dll public static readonly GameInfo Subnautica Returns GameInfo"
  },
  "api/NitroxModel.GameInfo.SubnauticaBelowZero.html": {
    "href": "api/NitroxModel.GameInfo.SubnauticaBelowZero.html",
    "title": "Field SubnauticaBelowZero | Nitrox",
    "keywords": "Field SubnauticaBelowZero Namespace NitroxModel Assembly NitroxModel.dll public static readonly GameInfo SubnauticaBelowZero Returns GameInfo"
  },
  "api/NitroxModel.GameInfo.html": {
    "href": "api/NitroxModel.GameInfo.html",
    "title": "Class GameInfo | Nitrox",
    "keywords": "Class GameInfo Namespace NitroxModel Assembly NitroxModel.dll public sealed class GameInfo Inheritance object GameInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields Subnautica SubnauticaBelowZero Properties ExeName FullName MsStoreStartUrl Name SteamAppId"
  },
  "api/NitroxModel.Helper.IMap.BatchDimensionCenter.html": {
    "href": "api/NitroxModel.Helper.IMap.BatchDimensionCenter.html",
    "title": "Property BatchDimensionCenter | Nitrox",
    "keywords": "Property BatchDimensionCenter Namespace NitroxModel.Helper Assembly NitroxModel.dll BatchDimensionCenter NitroxInt3 BatchDimensionCenter { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel.Helper.IMap.BatchDimensions.html": {
    "href": "api/NitroxModel.Helper.IMap.BatchDimensions.html",
    "title": "Property BatchDimensions | Nitrox",
    "keywords": "Property BatchDimensions Namespace NitroxModel.Helper Assembly NitroxModel.dll BatchDimensions NitroxInt3 BatchDimensions { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel.Helper.IMap.BatchSize.html": {
    "href": "api/NitroxModel.Helper.IMap.BatchSize.html",
    "title": "Property BatchSize | Nitrox",
    "keywords": "Property BatchSize Namespace NitroxModel.Helper Assembly NitroxModel.dll BatchSize int BatchSize { get; } Property Value int"
  },
  "api/NitroxModel.Helper.IMap.DimensionsInBatches.html": {
    "href": "api/NitroxModel.Helper.IMap.DimensionsInBatches.html",
    "title": "Property DimensionsInBatches | Nitrox",
    "keywords": "Property DimensionsInBatches Namespace NitroxModel.Helper Assembly NitroxModel.dll DimensionsInBatches NitroxInt3 DimensionsInBatches { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel.Helper.IMap.DimensionsInMeters.html": {
    "href": "api/NitroxModel.Helper.IMap.DimensionsInMeters.html",
    "title": "Property DimensionsInMeters | Nitrox",
    "keywords": "Property DimensionsInMeters Namespace NitroxModel.Helper Assembly NitroxModel.dll DimensionsInMeters NitroxInt3 DimensionsInMeters { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel.Helper.IMap.GlobalRootTechTypes.html": {
    "href": "api/NitroxModel.Helper.IMap.GlobalRootTechTypes.html",
    "title": "Property GlobalRootTechTypes | Nitrox",
    "keywords": "Property GlobalRootTechTypes Namespace NitroxModel.Helper Assembly NitroxModel.dll GlobalRootTechTypes List<NitroxTechType> GlobalRootTechTypes { get; } Property Value List<NitroxTechType>"
  },
  "api/NitroxModel.Helper.IMap.ItemLevelOfDetail.html": {
    "href": "api/NitroxModel.Helper.IMap.ItemLevelOfDetail.html",
    "title": "Property ItemLevelOfDetail | Nitrox",
    "keywords": "Property ItemLevelOfDetail Namespace NitroxModel.Helper Assembly NitroxModel.dll ItemLevelOfDetail int ItemLevelOfDetail { get; } Property Value int"
  },
  "api/NitroxModel.Helper.IMap.html": {
    "href": "api/NitroxModel.Helper.IMap.html",
    "title": "Interface IMap | Nitrox",
    "keywords": "Interface IMap Namespace NitroxModel.Helper Assembly NitroxModel.dll public interface IMap Properties BatchDimensionCenter BatchDimensions BatchSize DimensionsInBatches DimensionsInMeters GlobalRootTechTypes ItemLevelOfDetail"
  },
  "api/NitroxModel.Helper.Mathf.Asin.html": {
    "href": "api/NitroxModel.Helper.Mathf.Asin.html",
    "title": "Method Asin | Nitrox",
    "keywords": "Method Asin Namespace NitroxModel.Helper Assembly NitroxModel.dll Asin(float) public static float Asin(float p) Parameters p float Returns float"
  },
  "api/NitroxModel.Helper.Mathf.Atan2.html": {
    "href": "api/NitroxModel.Helper.Mathf.Atan2.html",
    "title": "Method Atan2 | Nitrox",
    "keywords": "Method Atan2 Namespace NitroxModel.Helper Assembly NitroxModel.dll Atan2(float, float) public static float Atan2(float p1, float p2) Parameters p1 float p2 float Returns float"
  },
  "api/NitroxModel.Helper.Mathf.Clamp.html": {
    "href": "api/NitroxModel.Helper.Mathf.Clamp.html",
    "title": "Method Clamp | Nitrox",
    "keywords": "Method Clamp Namespace NitroxModel.Helper Assembly NitroxModel.dll Clamp<T>(T, T, T) public static T Clamp<T>(T val, T min, T max) where T : IComparable<T> Parameters val T min T max T Returns T Type Parameters T"
  },
  "api/NitroxModel.Helper.Mathf.Clamp01.html": {
    "href": "api/NitroxModel.Helper.Mathf.Clamp01.html",
    "title": "Method Clamp01 | Nitrox",
    "keywords": "Method Clamp01 Namespace NitroxModel.Helper Assembly NitroxModel.dll Clamp01(float) Clamps the given value between 0 and 1. public static float Clamp01(float value) Parameters value float Returns float"
  },
  "api/NitroxModel.Helper.Mathf.DEG2RAD.html": {
    "href": "api/NitroxModel.Helper.Mathf.DEG2RAD.html",
    "title": "Field DEG2RAD | Nitrox",
    "keywords": "Field DEG2RAD Namespace NitroxModel.Helper Assembly NitroxModel.dll public const float DEG2RAD = 0.017453292 Returns float"
  },
  "api/NitroxModel.Helper.Mathf.Lerp.html": {
    "href": "api/NitroxModel.Helper.Mathf.Lerp.html",
    "title": "Method Lerp | Nitrox",
    "keywords": "Method Lerp Namespace NitroxModel.Helper Assembly NitroxModel.dll Lerp(float, float, float) public static float Lerp(float a, float b, float t) Parameters a float b float t float Returns float"
  },
  "api/NitroxModel.Helper.Mathf.PI.html": {
    "href": "api/NitroxModel.Helper.Mathf.PI.html",
    "title": "Field PI | Nitrox",
    "keywords": "Field PI Namespace NitroxModel.Helper Assembly NitroxModel.dll public const float PI = 3.1415927 Returns float"
  },
  "api/NitroxModel.Helper.Mathf.Pow.html": {
    "href": "api/NitroxModel.Helper.Mathf.Pow.html",
    "title": "Method Pow | Nitrox",
    "keywords": "Method Pow Namespace NitroxModel.Helper Assembly NitroxModel.dll Pow(float, float) public static float Pow(float p1, float p2) Parameters p1 float p2 float Returns float"
  },
  "api/NitroxModel.Helper.Mathf.RAD2DEG.html": {
    "href": "api/NitroxModel.Helper.Mathf.RAD2DEG.html",
    "title": "Field RAD2DEG | Nitrox",
    "keywords": "Field RAD2DEG Namespace NitroxModel.Helper Assembly NitroxModel.dll public const float RAD2DEG = 57.29578 Returns float"
  },
  "api/NitroxModel.Helper.Mathf.Round.html": {
    "href": "api/NitroxModel.Helper.Mathf.Round.html",
    "title": "Method Round | Nitrox",
    "keywords": "Method Round Namespace NitroxModel.Helper Assembly NitroxModel.dll Round(float, int) public static float Round(float value, int digits = 0) Parameters value float digits int Returns float Exceptions ArgumentOutOfRangeException digits is less than 0 or greater than 15."
  },
  "api/NitroxModel.Helper.Mathf.Sqrt.html": {
    "href": "api/NitroxModel.Helper.Mathf.Sqrt.html",
    "title": "Method Sqrt | Nitrox",
    "keywords": "Method Sqrt Namespace NitroxModel.Helper Assembly NitroxModel.dll Sqrt(float) public static float Sqrt(float ls) Parameters ls float Returns float"
  },
  "api/NitroxModel.Helper.Mathf.html": {
    "href": "api/NitroxModel.Helper.Mathf.html",
    "title": "Class Mathf | Nitrox",
    "keywords": "Class Mathf Namespace NitroxModel.Helper Assembly NitroxModel.dll public class Mathf Inheritance object Mathf Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields DEG2RAD PI RAD2DEG Methods Asin(float) Atan2(float, float) Clamp01(float) Clamps the given value between 0 and 1. Clamp<T>(T, T, T) Lerp(float, float, float) Pow(float, float) Round(float, int) Sqrt(float)"
  },
  "api/NitroxModel.Helper.Matrix4x4Extension.Compose.html": {
    "href": "api/NitroxModel.Helper.Matrix4x4Extension.Compose.html",
    "title": "Method Compose | Nitrox",
    "keywords": "Method Compose Namespace NitroxModel.Helper Assembly NitroxModel.dll Compose(NitroxVector3, NitroxQuaternion, NitroxVector3) public static Matrix4x4 Compose(NitroxVector3 localPosition, NitroxQuaternion localRotation, NitroxVector3 localScale) Parameters localPosition NitroxVector3 localRotation NitroxQuaternion localScale NitroxVector3 Returns Matrix4x4"
  },
  "api/NitroxModel.Helper.Matrix4x4Extension.Invert.html": {
    "href": "api/NitroxModel.Helper.Matrix4x4Extension.Invert.html",
    "title": "Method Invert | Nitrox",
    "keywords": "Method Invert Namespace NitroxModel.Helper Assembly NitroxModel.dll Invert(Matrix4x4) public static Matrix4x4 Invert(this Matrix4x4 m) Parameters m Matrix4x4 Returns Matrix4x4"
  },
  "api/NitroxModel.Helper.Matrix4x4Extension.Transform.html": {
    "href": "api/NitroxModel.Helper.Matrix4x4Extension.Transform.html",
    "title": "Method Transform | Nitrox",
    "keywords": "Method Transform Namespace NitroxModel.Helper Assembly NitroxModel.dll Transform(Matrix4x4, NitroxVector3) public static NitroxVector3 Transform(this Matrix4x4 m, NitroxVector3 v) Parameters m Matrix4x4 v NitroxVector3 Returns NitroxVector3"
  },
  "api/NitroxModel.Helper.Matrix4x4Extension.html": {
    "href": "api/NitroxModel.Helper.Matrix4x4Extension.html",
    "title": "Class Matrix4x4Extension | Nitrox",
    "keywords": "Class Matrix4x4Extension Namespace NitroxModel.Helper Assembly NitroxModel.dll public static class Matrix4x4Extension Inheritance object Matrix4x4Extension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Compose(NitroxVector3, NitroxQuaternion, NitroxVector3) Invert(Matrix4x4) Transform(Matrix4x4, NitroxVector3)"
  },
  "api/NitroxModel.Helper.NatHelper.AddPortMappingAsync.html": {
    "href": "api/NitroxModel.Helper.NatHelper.AddPortMappingAsync.html",
    "title": "Method AddPortMappingAsync | Nitrox",
    "keywords": "Method AddPortMappingAsync Namespace NitroxModel.Helper Assembly NitroxModel.dll AddPortMappingAsync(ushort, Protocol) public static Task<NatHelper.ResultCodes> AddPortMappingAsync(ushort port, Protocol protocol) Parameters port ushort protocol Protocol Returns Task<NatHelper.ResultCodes>"
  },
  "api/NitroxModel.Helper.NatHelper.DeletePortMappingAsync.html": {
    "href": "api/NitroxModel.Helper.NatHelper.DeletePortMappingAsync.html",
    "title": "Method DeletePortMappingAsync | Nitrox",
    "keywords": "Method DeletePortMappingAsync Namespace NitroxModel.Helper Assembly NitroxModel.dll DeletePortMappingAsync(ushort, Protocol) public static Task<bool> DeletePortMappingAsync(ushort port, Protocol protocol) Parameters port ushort protocol Protocol Returns Task<bool>"
  },
  "api/NitroxModel.Helper.NatHelper.GetExternalIpAsync.html": {
    "href": "api/NitroxModel.Helper.NatHelper.GetExternalIpAsync.html",
    "title": "Method GetExternalIpAsync | Nitrox",
    "keywords": "Method GetExternalIpAsync Namespace NitroxModel.Helper Assembly NitroxModel.dll GetExternalIpAsync() public static Task<IPAddress> GetExternalIpAsync() Returns Task<IPAddress>"
  },
  "api/NitroxModel.Helper.NatHelper.GetPortMappingAsync.html": {
    "href": "api/NitroxModel.Helper.NatHelper.GetPortMappingAsync.html",
    "title": "Method GetPortMappingAsync | Nitrox",
    "keywords": "Method GetPortMappingAsync Namespace NitroxModel.Helper Assembly NitroxModel.dll GetPortMappingAsync(ushort, Protocol) public static Task<Mapping> GetPortMappingAsync(ushort port, Protocol protocol) Parameters port ushort protocol Protocol Returns Task<Mapping>"
  },
  "api/NitroxModel.Helper.NatHelper.ResultCodes.html": {
    "href": "api/NitroxModel.Helper.NatHelper.ResultCodes.html",
    "title": "Enum NatHelper.ResultCodes | Nitrox",
    "keywords": "Enum NatHelper.ResultCodes Namespace NitroxModel.Helper Assembly NitroxModel.dll public enum NatHelper.ResultCodes Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields CONFLICT_IN_MAPPING_ENTRY = 1 SUCCESS = 0 UNKNOWN_ERROR = 2"
  },
  "api/NitroxModel.Helper.NatHelper.html": {
    "href": "api/NitroxModel.Helper.NatHelper.html",
    "title": "Class NatHelper | Nitrox",
    "keywords": "Class NatHelper Namespace NitroxModel.Helper Assembly NitroxModel.dll public static class NatHelper Inheritance object NatHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AddPortMappingAsync(ushort, Protocol) DeletePortMappingAsync(ushort, Protocol) GetExternalIpAsync() GetPortMappingAsync(ushort, Protocol)"
  },
  "api/NitroxModel.Helper.NetHelper.GetHamachiIp.html": {
    "href": "api/NitroxModel.Helper.NetHelper.GetHamachiIp.html",
    "title": "Method GetHamachiIp | Nitrox",
    "keywords": "Method GetHamachiIp Namespace NitroxModel.Helper Assembly NitroxModel.dll GetHamachiIp() public static IPAddress GetHamachiIp() Returns IPAddress"
  },
  "api/NitroxModel.Helper.NetHelper.GetInternetInterfaces.html": {
    "href": "api/NitroxModel.Helper.NetHelper.GetInternetInterfaces.html",
    "title": "Method GetInternetInterfaces | Nitrox",
    "keywords": "Method GetInternetInterfaces Namespace NitroxModel.Helper Assembly NitroxModel.dll GetInternetInterfaces() Gets the network interfaces used for going onto the internet. This is done by filtering for \"Ethernet\" and \"Wi-Fi\" network interfaces where \"Ethernet\" is returned earlier. public static IEnumerable<NetworkInterface> GetInternetInterfaces() Returns IEnumerable<NetworkInterface> Network interfaces used to go onto the internet."
  },
  "api/NitroxModel.Helper.NetHelper.GetLanIp.html": {
    "href": "api/NitroxModel.Helper.NetHelper.GetLanIp.html",
    "title": "Method GetLanIp | Nitrox",
    "keywords": "Method GetLanIp Namespace NitroxModel.Helper Assembly NitroxModel.dll GetLanIp() public static IPAddress GetLanIp() Returns IPAddress"
  },
  "api/NitroxModel.Helper.NetHelper.GetWanIpAsync.html": {
    "href": "api/NitroxModel.Helper.NetHelper.GetWanIpAsync.html",
    "title": "Method GetWanIpAsync | Nitrox",
    "keywords": "Method GetWanIpAsync Namespace NitroxModel.Helper Assembly NitroxModel.dll GetWanIpAsync() public static Task<IPAddress> GetWanIpAsync() Returns Task<IPAddress>"
  },
  "api/NitroxModel.Helper.NetHelper.IsLocalhost.html": {
    "href": "api/NitroxModel.Helper.NetHelper.IsLocalhost.html",
    "title": "Method IsLocalhost | Nitrox",
    "keywords": "Method IsLocalhost Namespace NitroxModel.Helper Assembly NitroxModel.dll IsLocalhost(IPAddress) Returns true if the IP address points to the executing machine. public static bool IsLocalhost(this IPAddress address) Parameters address IPAddress Returns bool"
  },
  "api/NitroxModel.Helper.NetHelper.IsPrivate.html": {
    "href": "api/NitroxModel.Helper.NetHelper.IsPrivate.html",
    "title": "Method IsPrivate | Nitrox",
    "keywords": "Method IsPrivate Namespace NitroxModel.Helper Assembly NitroxModel.dll IsPrivate(IPAddress) Returns true if the given IP address is reserved for private networks. public static bool IsPrivate(this IPAddress address) Parameters address IPAddress Returns bool"
  },
  "api/NitroxModel.Helper.NetHelper.html": {
    "href": "api/NitroxModel.Helper.NetHelper.html",
    "title": "Class NetHelper | Nitrox",
    "keywords": "Class NetHelper Namespace NitroxModel.Helper Assembly NitroxModel.dll public static class NetHelper Inheritance object NetHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetHamachiIp() GetInternetInterfaces() Gets the network interfaces used for going onto the internet. This is done by filtering for \"Ethernet\" and \"Wi-Fi\" network interfaces where \"Ethernet\" is returned earlier. GetLanIp() GetWanIpAsync() IsLocalhost(IPAddress) Returns true if the IP address points to the executing machine. IsPrivate(IPAddress) Returns true if the given IP address is reserved for private networks."
  },
  "api/NitroxModel.Helper.NetHelperTest.ShouldMatchLocalhostIps.html": {
    "href": "api/NitroxModel.Helper.NetHelperTest.ShouldMatchLocalhostIps.html",
    "title": "Method ShouldMatchLocalhostIps | Nitrox",
    "keywords": "Method ShouldMatchLocalhostIps Namespace NitroxModel.Helper Assembly Nitrox.Test.dll ShouldMatchLocalhostIps() [TestMethod] public void ShouldMatchLocalhostIps()"
  },
  "api/NitroxModel.Helper.NetHelperTest.ShouldMatchPrivateIps.html": {
    "href": "api/NitroxModel.Helper.NetHelperTest.ShouldMatchPrivateIps.html",
    "title": "Method ShouldMatchPrivateIps | Nitrox",
    "keywords": "Method ShouldMatchPrivateIps Namespace NitroxModel.Helper Assembly Nitrox.Test.dll ShouldMatchPrivateIps() [TestMethod] public void ShouldMatchPrivateIps()"
  },
  "api/NitroxModel.Helper.NetHelperTest.html": {
    "href": "api/NitroxModel.Helper.NetHelperTest.html",
    "title": "Class NetHelperTest | Nitrox",
    "keywords": "Class NetHelperTest Namespace NitroxModel.Helper Assembly Nitrox.Test.dll [TestClass] public class NetHelperTest Inheritance object NetHelperTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ShouldMatchLocalhostIps() ShouldMatchPrivateIps()"
  },
  "api/NitroxModel.Helper.NitroxEnvironment.BuildDate.html": {
    "href": "api/NitroxModel.Helper.NitroxEnvironment.BuildDate.html",
    "title": "Property BuildDate | Nitrox",
    "keywords": "Property BuildDate Namespace NitroxModel.Helper Assembly NitroxModel.dll BuildDate public static DateTime BuildDate { get; } Property Value DateTime"
  },
  "api/NitroxModel.Helper.NitroxEnvironment.IsNormal.html": {
    "href": "api/NitroxModel.Helper.NitroxEnvironment.IsNormal.html",
    "title": "Property IsNormal | Nitrox",
    "keywords": "Property IsNormal Namespace NitroxModel.Helper Assembly NitroxModel.dll IsNormal public static bool IsNormal { get; } Property Value bool"
  },
  "api/NitroxModel.Helper.NitroxEnvironment.IsReleaseMode.html": {
    "href": "api/NitroxModel.Helper.NitroxEnvironment.IsReleaseMode.html",
    "title": "Property IsReleaseMode | Nitrox",
    "keywords": "Property IsReleaseMode Namespace NitroxModel.Helper Assembly NitroxModel.dll IsReleaseMode public static bool IsReleaseMode { get; } Property Value bool"
  },
  "api/NitroxModel.Helper.NitroxEnvironment.IsTesting.html": {
    "href": "api/NitroxModel.Helper.NitroxEnvironment.IsTesting.html",
    "title": "Property IsTesting | Nitrox",
    "keywords": "Property IsTesting Namespace NitroxModel.Helper Assembly NitroxModel.dll IsTesting public static bool IsTesting { get; } Property Value bool"
  },
  "api/NitroxModel.Helper.NitroxEnvironment.ReleasePhase.html": {
    "href": "api/NitroxModel.Helper.NitroxEnvironment.ReleasePhase.html",
    "title": "Property ReleasePhase | Nitrox",
    "keywords": "Property ReleasePhase Namespace NitroxModel.Helper Assembly NitroxModel.dll ReleasePhase public static string ReleasePhase { get; } Property Value string"
  },
  "api/NitroxModel.Helper.NitroxEnvironment.Set.html": {
    "href": "api/NitroxModel.Helper.NitroxEnvironment.Set.html",
    "title": "Method Set | Nitrox",
    "keywords": "Method Set Namespace NitroxModel.Helper Assembly NitroxModel.dll Set(Types) public static void Set(NitroxEnvironment.Types value) Parameters value NitroxEnvironment.Types"
  },
  "api/NitroxModel.Helper.NitroxEnvironment.Type.html": {
    "href": "api/NitroxModel.Helper.NitroxEnvironment.Type.html",
    "title": "Property Type | Nitrox",
    "keywords": "Property Type Namespace NitroxModel.Helper Assembly NitroxModel.dll Type public static NitroxEnvironment.Types Type { get; } Property Value NitroxEnvironment.Types"
  },
  "api/NitroxModel.Helper.NitroxEnvironment.Types.html": {
    "href": "api/NitroxModel.Helper.NitroxEnvironment.Types.html",
    "title": "Enum NitroxEnvironment.Types | Nitrox",
    "keywords": "Enum NitroxEnvironment.Types Namespace NitroxModel.Helper Assembly NitroxModel.dll public enum NitroxEnvironment.Types Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields NORMAL = 0 TESTING = 1"
  },
  "api/NitroxModel.Helper.NitroxEnvironment.Version.html": {
    "href": "api/NitroxModel.Helper.NitroxEnvironment.Version.html",
    "title": "Property Version | Nitrox",
    "keywords": "Property Version Namespace NitroxModel.Helper Assembly NitroxModel.dll Version public static Version Version { get; } Property Value Version"
  },
  "api/NitroxModel.Helper.NitroxEnvironment.html": {
    "href": "api/NitroxModel.Helper.NitroxEnvironment.html",
    "title": "Class NitroxEnvironment | Nitrox",
    "keywords": "Class NitroxEnvironment Namespace NitroxModel.Helper Assembly NitroxModel.dll Environment helper for getting meta data about where and how Nitrox is running. public static class NitroxEnvironment Inheritance object NitroxEnvironment Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties BuildDate IsNormal IsReleaseMode IsTesting ReleasePhase Type Version Methods Set(Types)"
  },
  "api/NitroxModel.Helper.NitroxUser.AppDataPath.html": {
    "href": "api/NitroxModel.Helper.NitroxUser.AppDataPath.html",
    "title": "Property AppDataPath | Nitrox",
    "keywords": "Property AppDataPath Namespace NitroxModel.Helper Assembly NitroxModel.dll AppDataPath public static string AppDataPath { get; } Property Value string"
  },
  "api/NitroxModel.Helper.NitroxUser.AssetsPath.html": {
    "href": "api/NitroxModel.Helper.NitroxUser.AssetsPath.html",
    "title": "Property AssetsPath | Nitrox",
    "keywords": "Property AssetsPath Namespace NitroxModel.Helper Assembly NitroxModel.dll AssetsPath public static string AssetsPath { get; } Property Value string"
  },
  "api/NitroxModel.Helper.NitroxUser.GamePath.html": {
    "href": "api/NitroxModel.Helper.NitroxUser.GamePath.html",
    "title": "Property GamePath | Nitrox",
    "keywords": "Property GamePath Namespace NitroxModel.Helper Assembly NitroxModel.dll GamePath public static string GamePath { get; set; } Property Value string"
  },
  "api/NitroxModel.Helper.NitroxUser.GamePlatform.html": {
    "href": "api/NitroxModel.Helper.NitroxUser.GamePlatform.html",
    "title": "Property GamePlatform | Nitrox",
    "keywords": "Property GamePlatform Namespace NitroxModel.Helper Assembly NitroxModel.dll GamePlatform public static IGamePlatform GamePlatform { get; } Property Value IGamePlatform"
  },
  "api/NitroxModel.Helper.NitroxUser.LAUNCHER_PATH_ENV_KEY.html": {
    "href": "api/NitroxModel.Helper.NitroxUser.LAUNCHER_PATH_ENV_KEY.html",
    "title": "Field LAUNCHER_PATH_ENV_KEY | Nitrox",
    "keywords": "Field LAUNCHER_PATH_ENV_KEY Namespace NitroxModel.Helper Assembly NitroxModel.dll public const string LAUNCHER_PATH_ENV_KEY = \"NITROX_LAUNCHER_PATH\" Returns string"
  },
  "api/NitroxModel.Helper.NitroxUser.LauncherPath.html": {
    "href": "api/NitroxModel.Helper.NitroxUser.LauncherPath.html",
    "title": "Property LauncherPath | Nitrox",
    "keywords": "Property LauncherPath Namespace NitroxModel.Helper Assembly NitroxModel.dll LauncherPath Tries to get the launcher path that was previously saved by other Nitrox code. public static string LauncherPath { get; } Property Value string"
  },
  "api/NitroxModel.Helper.NitroxUser.PreferredGamePath.html": {
    "href": "api/NitroxModel.Helper.NitroxUser.PreferredGamePath.html",
    "title": "Property PreferredGamePath | Nitrox",
    "keywords": "Property PreferredGamePath Namespace NitroxModel.Helper Assembly NitroxModel.dll PreferredGamePath public static string PreferredGamePath { get; set; } Property Value string"
  },
  "api/NitroxModel.Helper.NitroxUser.html": {
    "href": "api/NitroxModel.Helper.NitroxUser.html",
    "title": "Class NitroxUser | Nitrox",
    "keywords": "Class NitroxUser Namespace NitroxModel.Helper Assembly NitroxModel.dll public static class NitroxUser Inheritance object NitroxUser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields LAUNCHER_PATH_ENV_KEY Properties AppDataPath AssetsPath GamePath GamePlatform LauncherPath Tries to get the launcher path that was previously saved by other Nitrox code. PreferredGamePath"
  },
  "api/NitroxModel.Helper.PirateDetection.HasTriggered.html": {
    "href": "api/NitroxModel.Helper.PirateDetection.HasTriggered.html",
    "title": "Property HasTriggered | Nitrox",
    "keywords": "Property HasTriggered Namespace NitroxModel.Helper Assembly NitroxModel.dll HasTriggered public static bool HasTriggered { get; } Property Value bool"
  },
  "api/NitroxModel.Helper.PirateDetection.PirateDetected.html": {
    "href": "api/NitroxModel.Helper.PirateDetection.PirateDetected.html",
    "title": "Event PirateDetected | Nitrox",
    "keywords": "Event PirateDetected Namespace NitroxModel.Helper Assembly NitroxModel.dll Event that calls subscribers if the pirate detection triggered successfully. New subscribers are immediately invoked if the pirate flag has been set at the time of subscription. public static event EventHandler PirateDetected Returns EventHandler"
  },
  "api/NitroxModel.Helper.PirateDetection.TriggerOnDirectory.html": {
    "href": "api/NitroxModel.Helper.PirateDetection.TriggerOnDirectory.html",
    "title": "Method TriggerOnDirectory | Nitrox",
    "keywords": "Method TriggerOnDirectory Namespace NitroxModel.Helper Assembly NitroxModel.dll TriggerOnDirectory(string) public static bool TriggerOnDirectory(string subnauticaRoot) Parameters subnauticaRoot string Returns bool"
  },
  "api/NitroxModel.Helper.PirateDetection.html": {
    "href": "api/NitroxModel.Helper.PirateDetection.html",
    "title": "Class PirateDetection | Nitrox",
    "keywords": "Class PirateDetection Namespace NitroxModel.Helper Assembly NitroxModel.dll public static class PirateDetection Inheritance object PirateDetection Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties HasTriggered Methods TriggerOnDirectory(string) Events PirateDetected Event that calls subscribers if the pirate detection triggered successfully. New subscribers are immediately invoked if the pirate flag has been set at the time of subscription."
  },
  "api/NitroxModel.Helper.Reflect.Constructor.html": {
    "href": "api/NitroxModel.Helper.Reflect.Constructor.html",
    "title": "Method Constructor | Nitrox",
    "keywords": "Method Constructor Namespace NitroxModel.Helper Assembly NitroxModel.dll Constructor(Expression<Action>) public static ConstructorInfo Constructor(Expression<Action> expression) Parameters expression Expression<Action> Returns ConstructorInfo"
  },
  "api/NitroxModel.Helper.Reflect.Field.html": {
    "href": "api/NitroxModel.Helper.Reflect.Field.html",
    "title": "Method Field | Nitrox",
    "keywords": "Method Field Namespace NitroxModel.Helper Assembly NitroxModel.dll Field<T>(Expression<Func<T>>) public static FieldInfo Field<T>(Expression<Func<T>> expression) Parameters expression Expression<Func<T>> Returns FieldInfo Type Parameters T Field<T>(Expression<Func<T, object>>) public static FieldInfo Field<T>(Expression<Func<T, object>> expression) Parameters expression Expression<Func<T, object>> Returns FieldInfo Type Parameters T"
  },
  "api/NitroxModel.Helper.Reflect.Method.html": {
    "href": "api/NitroxModel.Helper.Reflect.Method.html",
    "title": "Method Method | Nitrox",
    "keywords": "Method Method Namespace NitroxModel.Helper Assembly NitroxModel.dll Method(Expression<Action>) Given a lambda expression that calls a method, returns the method info. If method has parameters then anything can be supplied, the actual method won't be called. public static MethodInfo Method(Expression<Action> expression) Parameters expression Expression<Action> The expression. Returns MethodInfo Method<T>(Expression<Action<T>>) Given a lambda expression that calls a method, returns the method info. If method has parameters then anything can be supplied, the actual method won't be called. public static MethodInfo Method<T>(Expression<Action<T>> expression) Parameters expression Expression<Action<T>> The expression. Returns MethodInfo Type Parameters T Method<T, TResult>(Expression<Func<T, TResult>>) Given a lambda expression that calls a method, returns the method info. If method has parameters then anything can be supplied, the actual method won't be called. public static MethodInfo Method<T, TResult>(Expression<Func<T, TResult>> expression) Parameters expression Expression<Func<T, TResult>> The expression. Returns MethodInfo Type Parameters T TResult"
  },
  "api/NitroxModel.Helper.Reflect.Property.html": {
    "href": "api/NitroxModel.Helper.Reflect.Property.html",
    "title": "Method Property | Nitrox",
    "keywords": "Method Property Namespace NitroxModel.Helper Assembly NitroxModel.dll Property<T>(Expression<Func<T>>) public static PropertyInfo Property<T>(Expression<Func<T>> expression) Parameters expression Expression<Func<T>> Returns PropertyInfo Type Parameters T Property<T>(Expression<Func<T, object>>) public static PropertyInfo Property<T>(Expression<Func<T, object>> expression) Parameters expression Expression<Func<T, object>> Returns PropertyInfo Type Parameters T"
  },
  "api/NitroxModel.Helper.Reflect.Ref-1.Field.html": {
    "href": "api/NitroxModel.Helper.Reflect.Ref-1.Field.html",
    "title": "Field Field | Nitrox",
    "keywords": "Field Field Namespace NitroxModel.Helper Assembly NitroxModel.dll public static T Field Returns T"
  },
  "api/NitroxModel.Helper.Reflect.Ref-1.html": {
    "href": "api/NitroxModel.Helper.Reflect.Ref-1.html",
    "title": "Struct Reflect.Ref<T> | Nitrox",
    "keywords": "Struct Reflect.Ref<T> Namespace NitroxModel.Helper Assembly NitroxModel.dll Used to supplement ref/out/in parameters when using the Reflect API. public struct Reflect.Ref<T> Type Parameters T Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields Field"
  },
  "api/NitroxModel.Helper.Reflect.html": {
    "href": "api/NitroxModel.Helper.Reflect.html",
    "title": "Class Reflect | Nitrox",
    "keywords": "Class Reflect Namespace NitroxModel.Helper Assembly NitroxModel.dll Utility class for reflection API. public static class Reflect Inheritance object Reflect Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks This class should be used when requiring MethodInfo or MemberInfo like information from code. This will ensure that compilation only succeeds when reflection is used properly. Methods Constructor(Expression<Action>) Field<T>(Expression<Func<T, object>>) Field<T>(Expression<Func<T>>) Method(Expression<Action>) Given a lambda expression that calls a method, returns the method info. If method has parameters then anything can be supplied, the actual method won't be called. Method<T>(Expression<Action<T>>) Given a lambda expression that calls a method, returns the method info. If method has parameters then anything can be supplied, the actual method won't be called. Method<T, TResult>(Expression<Func<T, TResult>>) Given a lambda expression that calls a method, returns the method info. If method has parameters then anything can be supplied, the actual method won't be called. Property<T>(Expression<Func<T, object>>) Property<T>(Expression<Func<T>>)"
  },
  "api/NitroxModel.Helper.ReflectTest.Constructor.html": {
    "href": "api/NitroxModel.Helper.ReflectTest.Constructor.html",
    "title": "Method Constructor | Nitrox",
    "keywords": "Method Constructor Namespace NitroxModel.Helper Assembly Nitrox.Test.dll Constructor() [TestMethod] public void Constructor()"
  },
  "api/NitroxModel.Helper.ReflectTest.Field.html": {
    "href": "api/NitroxModel.Helper.ReflectTest.Field.html",
    "title": "Method Field | Nitrox",
    "keywords": "Method Field Namespace NitroxModel.Helper Assembly Nitrox.Test.dll Field() [TestMethod] public void Field()"
  },
  "api/NitroxModel.Helper.ReflectTest.Method.html": {
    "href": "api/NitroxModel.Helper.ReflectTest.Method.html",
    "title": "Method Method | Nitrox",
    "keywords": "Method Method Namespace NitroxModel.Helper Assembly Nitrox.Test.dll Method() [TestMethod] public void Method()"
  },
  "api/NitroxModel.Helper.ReflectTest.Property.html": {
    "href": "api/NitroxModel.Helper.ReflectTest.Property.html",
    "title": "Method Property | Nitrox",
    "keywords": "Method Property Namespace NitroxModel.Helper Assembly Nitrox.Test.dll Property() [TestMethod] public void Property()"
  },
  "api/NitroxModel.Helper.ReflectTest.html": {
    "href": "api/NitroxModel.Helper.ReflectTest.html",
    "title": "Class ReflectTest | Nitrox",
    "keywords": "Class ReflectTest Namespace NitroxModel.Helper Assembly Nitrox.Test.dll [TestClass] public class ReflectTest Inheritance object ReflectTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Constructor() Field() Method() Property()"
  },
  "api/NitroxModel.Helper.StringHelper.GenerateRandomString.html": {
    "href": "api/NitroxModel.Helper.StringHelper.GenerateRandomString.html",
    "title": "Method GenerateRandomString | Nitrox",
    "keywords": "Method GenerateRandomString Namespace NitroxModel.Helper Assembly NitroxModel.dll GenerateRandomString(int) public static string GenerateRandomString(int size) Parameters size int Returns string"
  },
  "api/NitroxModel.Helper.StringHelper.html": {
    "href": "api/NitroxModel.Helper.StringHelper.html",
    "title": "Class StringHelper | Nitrox",
    "keywords": "Class StringHelper Namespace NitroxModel.Helper Assembly NitroxModel.dll public static class StringHelper Inheritance object StringHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GenerateRandomString(int)"
  },
  "api/NitroxModel.Helper.Validate.IsFalse.html": {
    "href": "api/NitroxModel.Helper.Validate.IsFalse.html",
    "title": "Method IsFalse | Nitrox",
    "keywords": "Method IsFalse Namespace NitroxModel.Helper Assembly NitroxModel.dll IsFalse(bool, string) public static void IsFalse(bool b, string argumentExpression = null) Parameters b bool argumentExpression string"
  },
  "api/NitroxModel.Helper.Validate.IsPresent.html": {
    "href": "api/NitroxModel.Helper.Validate.IsPresent.html",
    "title": "Method IsPresent | Nitrox",
    "keywords": "Method IsPresent Namespace NitroxModel.Helper Assembly NitroxModel.dll IsPresent<T>(Optional<T>) public static T IsPresent<T>(Optional<T> opt) where T : class Parameters opt Optional<T> Returns T Type Parameters T IsPresent<T>(Optional<T>, string) public static T IsPresent<T>(Optional<T> opt, string message) where T : class Parameters opt Optional<T> message string Returns T Type Parameters T"
  },
  "api/NitroxModel.Helper.Validate.IsTrue.html": {
    "href": "api/NitroxModel.Helper.Validate.IsTrue.html",
    "title": "Method IsTrue | Nitrox",
    "keywords": "Method IsTrue Namespace NitroxModel.Helper Assembly NitroxModel.dll IsTrue(bool, string) public static void IsTrue(bool b, string argumentExpression = null) Parameters b bool argumentExpression string"
  },
  "api/NitroxModel.Helper.Validate.NotNull.html": {
    "href": "api/NitroxModel.Helper.Validate.NotNull.html",
    "title": "Method NotNull | Nitrox",
    "keywords": "Method NotNull Namespace NitroxModel.Helper Assembly NitroxModel.dll NotNull<T>(T, string) [ContractAnnotation(\"o:null => halt\")] public static void NotNull<T>(T o, string argumentExpression = null) where T : class Parameters o T argumentExpression string Type Parameters T"
  },
  "api/NitroxModel.Helper.Validate.html": {
    "href": "api/NitroxModel.Helper.Validate.html",
    "title": "Class Validate | Nitrox",
    "keywords": "Class Validate Namespace NitroxModel.Helper Assembly NitroxModel.dll public static class Validate Inheritance object Validate Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods IsFalse(bool, string) IsPresent<T>(Optional<T>) IsPresent<T>(Optional<T>, string) IsTrue(bool, string) NotNull<T>(T, string)"
  },
  "api/NitroxModel.Helper.html": {
    "href": "api/NitroxModel.Helper.html",
    "title": "Namespace NitroxModel.Helper | Nitrox",
    "keywords": "Namespace NitroxModel.Helper Classes Mathf Matrix4x4Extension NatHelper NetHelper NetHelperTest NitroxEnvironment Environment helper for getting meta data about where and how Nitrox is running. NitroxUser PirateDetection Reflect Utility class for reflection API. ReflectTest StringHelper Validate Structs Reflect.Ref<T> Used to supplement ref/out/in parameters when using the Reflect API. Interfaces IMap Enums NatHelper.ResultCodes NitroxEnvironment.Types"
  },
  "api/NitroxModel.Logger.ColoredConsoleSink.-ctor.html": {
    "href": "api/NitroxModel.Logger.ColoredConsoleSink.-ctor.html",
    "title": "Constructor ColoredConsoleSink | Nitrox",
    "keywords": "Constructor ColoredConsoleSink Namespace NitroxModel.Logger Assembly NitroxModel.dll ColoredConsoleSink(ITextFormatter) public ColoredConsoleSink(ITextFormatter formatter) Parameters formatter ITextFormatter"
  },
  "api/NitroxModel.Logger.ColoredConsoleSink.Emit.html": {
    "href": "api/NitroxModel.Logger.ColoredConsoleSink.Emit.html",
    "title": "Method Emit | Nitrox",
    "keywords": "Method Emit Namespace NitroxModel.Logger Assembly NitroxModel.dll Emit(LogEvent) Emit the provided log event to the sink. public void Emit(LogEvent logEvent) Parameters logEvent LogEvent The log event to write."
  },
  "api/NitroxModel.Logger.ColoredConsoleSink.html": {
    "href": "api/NitroxModel.Logger.ColoredConsoleSink.html",
    "title": "Class ColoredConsoleSink | Nitrox",
    "keywords": "Class ColoredConsoleSink Namespace NitroxModel.Logger Assembly NitroxModel.dll public class ColoredConsoleSink : ILogEventSink Inheritance object ColoredConsoleSink Implements ILogEventSink Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ColoredConsoleSink(ITextFormatter) Methods Emit(LogEvent) Emit the provided log event to the sink."
  },
  "api/NitroxModel.Logger.ColoredConsoleSinkExtensions.ColoredConsole.html": {
    "href": "api/NitroxModel.Logger.ColoredConsoleSinkExtensions.ColoredConsole.html",
    "title": "Method ColoredConsole | Nitrox",
    "keywords": "Method ColoredConsole Namespace NitroxModel.Logger Assembly NitroxModel.dll ColoredConsole(LoggerSinkConfiguration, LogEventLevel, string, IFormatProvider) public static LoggerConfiguration ColoredConsole(this LoggerSinkConfiguration loggerConfiguration, LogEventLevel minimumLevel = LogEventLevel.Verbose, string outputTemplate = \"[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}\", IFormatProvider formatProvider = null) Parameters loggerConfiguration LoggerSinkConfiguration minimumLevel LogEventLevel outputTemplate string formatProvider IFormatProvider Returns LoggerConfiguration"
  },
  "api/NitroxModel.Logger.ColoredConsoleSinkExtensions.html": {
    "href": "api/NitroxModel.Logger.ColoredConsoleSinkExtensions.html",
    "title": "Class ColoredConsoleSinkExtensions | Nitrox",
    "keywords": "Class ColoredConsoleSinkExtensions Namespace NitroxModel.Logger Assembly NitroxModel.dll public static class ColoredConsoleSinkExtensions Inheritance object ColoredConsoleSinkExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ColoredConsole(LoggerSinkConfiguration, LogEventLevel, string, IFormatProvider)"
  },
  "api/NitroxModel.Logger.InGameLogger.Log.html": {
    "href": "api/NitroxModel.Logger.InGameLogger.Log.html",
    "title": "Method Log | Nitrox",
    "keywords": "Method Log Namespace NitroxModel.Logger Assembly NitroxModel.dll Log(object) void Log(object message) Parameters message object Log(string) void Log(string message) Parameters message string"
  },
  "api/NitroxModel.Logger.InGameLogger.html": {
    "href": "api/NitroxModel.Logger.InGameLogger.html",
    "title": "Interface InGameLogger | Nitrox",
    "keywords": "Interface InGameLogger Namespace NitroxModel.Logger Assembly NitroxModel.dll public interface InGameLogger Methods Log(object) Log(string)"
  },
  "api/NitroxModel.Logger.LiteNetLibLogger.WriteNet.html": {
    "href": "api/NitroxModel.Logger.LiteNetLibLogger.WriteNet.html",
    "title": "Method WriteNet | Nitrox",
    "keywords": "Method WriteNet Namespace NitroxModel.Logger Assembly NitroxModel.dll WriteNet(NetLogLevel, string, params object[]) public void WriteNet(NetLogLevel level, string str, params object[] args) Parameters level NetLogLevel str string args object[]"
  },
  "api/NitroxModel.Logger.LiteNetLibLogger.html": {
    "href": "api/NitroxModel.Logger.LiteNetLibLogger.html",
    "title": "Class LiteNetLibLogger | Nitrox",
    "keywords": "Class LiteNetLibLogger Namespace NitroxModel.Logger Assembly NitroxModel.dll public class LiteNetLibLogger : INetLogger Inheritance object LiteNetLibLogger Implements INetLogger Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods WriteNet(NetLogLevel, string, params object[])"
  },
  "api/NitroxModel.Logger.Log.Debug.html": {
    "href": "api/NitroxModel.Logger.Log.Debug.html",
    "title": "Method Debug | Nitrox",
    "keywords": "Method Debug Namespace NitroxModel.Logger Assembly NitroxModel.dll Debug(string) [Conditional(\"DEBUG\")] public static void Debug(string message) Parameters message string Debug(object) [Conditional(\"DEBUG\")] public static void Debug(object message) Parameters message object"
  },
  "api/NitroxModel.Logger.Log.DebugSensitive.html": {
    "href": "api/NitroxModel.Logger.Log.DebugSensitive.html",
    "title": "Method DebugSensitive | Nitrox",
    "keywords": "Method DebugSensitive Namespace NitroxModel.Logger Assembly NitroxModel.dll DebugSensitive(string, params object[]) [Conditional(\"DEBUG\")] public static void DebugSensitive(string message, params object[] args) Parameters message string args object[]"
  },
  "api/NitroxModel.Logger.Log.Error.html": {
    "href": "api/NitroxModel.Logger.Log.Error.html",
    "title": "Method Error | Nitrox",
    "keywords": "Method Error Namespace NitroxModel.Logger Assembly NitroxModel.dll Error(Exception) public static void Error(Exception ex) Parameters ex Exception Error(Exception, string) public static void Error(Exception ex, string message) Parameters ex Exception message string Error(string) public static void Error(string message) Parameters message string"
  },
  "api/NitroxModel.Logger.Log.ErrorOnce.html": {
    "href": "api/NitroxModel.Logger.Log.ErrorOnce.html",
    "title": "Method ErrorOnce | Nitrox",
    "keywords": "Method ErrorOnce Namespace NitroxModel.Logger Assembly NitroxModel.dll ErrorOnce(string) public static void ErrorOnce(string message) Parameters message string"
  },
  "api/NitroxModel.Logger.Log.ErrorSensitive.html": {
    "href": "api/NitroxModel.Logger.Log.ErrorSensitive.html",
    "title": "Method ErrorSensitive | Nitrox",
    "keywords": "Method ErrorSensitive Namespace NitroxModel.Logger Assembly NitroxModel.dll ErrorSensitive(Exception, string, params object[]) public static void ErrorSensitive(Exception ex, string message, params object[] args) Parameters ex Exception message string args object[] ErrorSensitive(string, params object[]) public static void ErrorSensitive(string message, params object[] args) Parameters message string args object[]"
  },
  "api/NitroxModel.Logger.Log.ErrorUnity.html": {
    "href": "api/NitroxModel.Logger.Log.ErrorUnity.html",
    "title": "Method ErrorUnity | Nitrox",
    "keywords": "Method ErrorUnity Namespace NitroxModel.Logger Assembly NitroxModel.dll ErrorUnity(string) public static void ErrorUnity(string message) Parameters message string"
  },
  "api/NitroxModel.Logger.Log.GetMostRecentLogFile.html": {
    "href": "api/NitroxModel.Logger.Log.GetMostRecentLogFile.html",
    "title": "Method GetMostRecentLogFile | Nitrox",
    "keywords": "Method GetMostRecentLogFile Namespace NitroxModel.Logger Assembly NitroxModel.dll GetMostRecentLogFile() public static string GetMostRecentLogFile() Returns string"
  },
  "api/NitroxModel.Logger.Log.InGame.html": {
    "href": "api/NitroxModel.Logger.Log.InGame.html",
    "title": "Method InGame | Nitrox",
    "keywords": "Method InGame Namespace NitroxModel.Logger Assembly NitroxModel.dll InGame(string) public static void InGame(string message) Parameters message string"
  },
  "api/NitroxModel.Logger.Log.Info.html": {
    "href": "api/NitroxModel.Logger.Log.Info.html",
    "title": "Method Info | Nitrox",
    "keywords": "Method Info Namespace NitroxModel.Logger Assembly NitroxModel.dll Info(string) public static void Info(string message) Parameters message string Info(object) public static void Info(object message) Parameters message object"
  },
  "api/NitroxModel.Logger.Log.InfoSensitive.html": {
    "href": "api/NitroxModel.Logger.Log.InfoSensitive.html",
    "title": "Method InfoSensitive | Nitrox",
    "keywords": "Method InfoSensitive Namespace NitroxModel.Logger Assembly NitroxModel.dll InfoSensitive(string, params object[]) public static void InfoSensitive(string message, params object[] args) Parameters message string args object[]"
  },
  "api/NitroxModel.Logger.Log.LogDirectory.html": {
    "href": "api/NitroxModel.Logger.Log.LogDirectory.html",
    "title": "Property LogDirectory | Nitrox",
    "keywords": "Property LogDirectory Namespace NitroxModel.Logger Assembly NitroxModel.dll LogDirectory public static string LogDirectory { get; } Property Value string"
  },
  "api/NitroxModel.Logger.Log.PlayerName.html": {
    "href": "api/NitroxModel.Logger.Log.PlayerName.html",
    "title": "Property PlayerName | Nitrox",
    "keywords": "Property PlayerName Namespace NitroxModel.Logger Assembly NitroxModel.dll PlayerName public static string PlayerName { set; } Property Value string"
  },
  "api/NitroxModel.Logger.Log.Setup.html": {
    "href": "api/NitroxModel.Logger.Log.Setup.html",
    "title": "Method Setup | Nitrox",
    "keywords": "Method Setup Namespace NitroxModel.Logger Assembly NitroxModel.dll Setup(bool, InGameLogger, bool, bool) public static void Setup(bool asyncConsoleWriter = false, InGameLogger gameLogger = null, bool isConsoleApp = false, bool useConsoleLogging = true) Parameters asyncConsoleWriter bool gameLogger InGameLogger isConsoleApp bool useConsoleLogging bool"
  },
  "api/NitroxModel.Logger.Log.Verbose.html": {
    "href": "api/NitroxModel.Logger.Log.Verbose.html",
    "title": "Method Verbose | Nitrox",
    "keywords": "Method Verbose Namespace NitroxModel.Logger Assembly NitroxModel.dll Verbose(string) public static void Verbose(string message) Parameters message string"
  },
  "api/NitroxModel.Logger.Log.Warn.html": {
    "href": "api/NitroxModel.Logger.Log.Warn.html",
    "title": "Method Warn | Nitrox",
    "keywords": "Method Warn Namespace NitroxModel.Logger Assembly NitroxModel.dll Warn(string) public static void Warn(string message) Parameters message string Warn(object) public static void Warn(object message) Parameters message object"
  },
  "api/NitroxModel.Logger.Log.WarnOnce.html": {
    "href": "api/NitroxModel.Logger.Log.WarnOnce.html",
    "title": "Method WarnOnce | Nitrox",
    "keywords": "Method WarnOnce Namespace NitroxModel.Logger Assembly NitroxModel.dll WarnOnce(string) Only logs the message one time. The messages must be the same for this function to work. public static void WarnOnce(string message) Parameters message string"
  },
  "api/NitroxModel.Logger.Log.WarnSensitive.html": {
    "href": "api/NitroxModel.Logger.Log.WarnSensitive.html",
    "title": "Method WarnSensitive | Nitrox",
    "keywords": "Method WarnSensitive Namespace NitroxModel.Logger Assembly NitroxModel.dll WarnSensitive(string, params object[]) public static void WarnSensitive(string message, params object[] args) Parameters message string args object[]"
  },
  "api/NitroxModel.Logger.Log.Write.html": {
    "href": "api/NitroxModel.Logger.Log.Write.html",
    "title": "Method Write | Nitrox",
    "keywords": "Method Write Namespace NitroxModel.Logger Assembly NitroxModel.dll Write(LogLevel, string) public static void Write(LogLevel level, string message) Parameters level LogLevel message string"
  },
  "api/NitroxModel.Logger.Log.html": {
    "href": "api/NitroxModel.Logger.Log.html",
    "title": "Class Log | Nitrox",
    "keywords": "Class Log Namespace NitroxModel.Logger Assembly NitroxModel.dll public static class Log Inheritance object Log Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties LogDirectory PlayerName Methods Debug(object) Debug(string) DebugSensitive(string, params object[]) Error(Exception) Error(Exception, string) Error(string) ErrorOnce(string) ErrorSensitive(Exception, string, params object[]) ErrorSensitive(string, params object[]) ErrorUnity(string) GetMostRecentLogFile() InGame(string) Info(object) Info(string) InfoSensitive(string, params object[]) Setup(bool, InGameLogger, bool, bool) Verbose(string) Warn(object) Warn(string) WarnOnce(string) Only logs the message one time. The messages must be the same for this function to work. WarnSensitive(string, params object[]) Write(LogLevel, string)"
  },
  "api/NitroxModel.Logger.LogLevel.html": {
    "href": "api/NitroxModel.Logger.LogLevel.html",
    "title": "Enum LogLevel | Nitrox",
    "keywords": "Enum LogLevel Namespace NitroxModel.Logger Assembly NitroxModel.dll public enum LogLevel Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields Debug = 1 Error = 4 Information = 2 Verbose = 0 Warning = 3"
  },
  "api/NitroxModel.Logger.MessageSink.-ctor.html": {
    "href": "api/NitroxModel.Logger.MessageSink.-ctor.html",
    "title": "Constructor MessageSink | Nitrox",
    "keywords": "Constructor MessageSink Namespace NitroxModel.Logger Assembly NitroxModel.dll MessageSink(ITextFormatter, Action<string>) public MessageSink(ITextFormatter formatter, Action<string> writer) Parameters formatter ITextFormatter writer Action<string>"
  },
  "api/NitroxModel.Logger.MessageSink.Emit.html": {
    "href": "api/NitroxModel.Logger.MessageSink.Emit.html",
    "title": "Method Emit | Nitrox",
    "keywords": "Method Emit Namespace NitroxModel.Logger Assembly NitroxModel.dll Emit(LogEvent) Emit the provided log event to the sink. public void Emit(LogEvent logEvent) Parameters logEvent LogEvent The log event to write."
  },
  "api/NitroxModel.Logger.MessageSink.html": {
    "href": "api/NitroxModel.Logger.MessageSink.html",
    "title": "Class MessageSink | Nitrox",
    "keywords": "Class MessageSink Namespace NitroxModel.Logger Assembly NitroxModel.dll public class MessageSink : ILogEventSink Inheritance object MessageSink Implements ILogEventSink Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MessageSink(ITextFormatter, Action<string>) Methods Emit(LogEvent) Emit the provided log event to the sink."
  },
  "api/NitroxModel.Logger.MessageSinkExtensions.Message.html": {
    "href": "api/NitroxModel.Logger.MessageSinkExtensions.Message.html",
    "title": "Method Message | Nitrox",
    "keywords": "Method Message Namespace NitroxModel.Logger Assembly NitroxModel.dll Message(LoggerSinkConfiguration, Action<string>, LogEventLevel, string, IFormatProvider) public static LoggerConfiguration Message(this LoggerSinkConfiguration loggerConfiguration, Action<string> writer, LogEventLevel minimumLevel = LogEventLevel.Verbose, string outputTemplate = \"{Message}\", IFormatProvider formatProvider = null) Parameters loggerConfiguration LoggerSinkConfiguration writer Action<string> minimumLevel LogEventLevel outputTemplate string formatProvider IFormatProvider Returns LoggerConfiguration"
  },
  "api/NitroxModel.Logger.MessageSinkExtensions.html": {
    "href": "api/NitroxModel.Logger.MessageSinkExtensions.html",
    "title": "Class MessageSinkExtensions | Nitrox",
    "keywords": "Class MessageSinkExtensions Namespace NitroxModel.Logger Assembly NitroxModel.dll public static class MessageSinkExtensions Inheritance object MessageSinkExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Message(LoggerSinkConfiguration, Action<string>, LogEventLevel, string, IFormatProvider)"
  },
  "api/NitroxModel.Logger.html": {
    "href": "api/NitroxModel.Logger.html",
    "title": "Namespace NitroxModel.Logger | Nitrox",
    "keywords": "Namespace NitroxModel.Logger Classes ColoredConsoleSink ColoredConsoleSinkExtensions LiteNetLibLogger Log MessageSink MessageSinkExtensions Interfaces InGameLogger Enums LogLevel"
  },
  "api/NitroxModel.MultiplayerSession.AuthenticationContext.-ctor.html": {
    "href": "api/NitroxModel.MultiplayerSession.AuthenticationContext.-ctor.html",
    "title": "Constructor AuthenticationContext | Nitrox",
    "keywords": "Constructor AuthenticationContext Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll AuthenticationContext(string, Optional<string>) public AuthenticationContext(string username, Optional<string> serverPassword) Parameters username string serverPassword Optional<string>"
  },
  "api/NitroxModel.MultiplayerSession.AuthenticationContext.ServerPassword.html": {
    "href": "api/NitroxModel.MultiplayerSession.AuthenticationContext.ServerPassword.html",
    "title": "Property ServerPassword | Nitrox",
    "keywords": "Property ServerPassword Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll ServerPassword public Optional<string> ServerPassword { get; } Property Value Optional<string>"
  },
  "api/NitroxModel.MultiplayerSession.AuthenticationContext.Username.html": {
    "href": "api/NitroxModel.MultiplayerSession.AuthenticationContext.Username.html",
    "title": "Property Username | Nitrox",
    "keywords": "Property Username Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll Username public string Username { get; } Property Value string"
  },
  "api/NitroxModel.MultiplayerSession.AuthenticationContext.html": {
    "href": "api/NitroxModel.MultiplayerSession.AuthenticationContext.html",
    "title": "Class AuthenticationContext | Nitrox",
    "keywords": "Class AuthenticationContext Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll [Serializable] public class AuthenticationContext Inheritance object AuthenticationContext Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AuthenticationContext(string, Optional<string>) Properties ServerPassword Username"
  },
  "api/NitroxModel.MultiplayerSession.MultiplayerSessionAuthenticationAuthority.html": {
    "href": "api/NitroxModel.MultiplayerSession.MultiplayerSessionAuthenticationAuthority.html",
    "title": "Enum MultiplayerSessionAuthenticationAuthority | Nitrox",
    "keywords": "Enum MultiplayerSessionAuthenticationAuthority Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll public enum MultiplayerSessionAuthenticationAuthority Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields OTHER = 1 SERVER = 0"
  },
  "api/NitroxModel.MultiplayerSession.MultiplayerSessionReservationState.html": {
    "href": "api/NitroxModel.MultiplayerSession.MultiplayerSessionReservationState.html",
    "title": "Enum MultiplayerSessionReservationState | Nitrox",
    "keywords": "Enum MultiplayerSessionReservationState Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll [Flags] public enum MultiplayerSessionReservationState Extension Methods MultiplayerSessionReservationStateExtensions.Describe(MultiplayerSessionReservationState) MultiplayerSessionReservationStateExtensions.HasStateFlag(MultiplayerSessionReservationState, MultiplayerSessionReservationState) Extensions.GetAttribute<TAttribute>(Enum) Fields AUTHENTICATION_FAILED = 8 ENQUEUED_IN_JOIN_QUEUE = 32 HARDCORE_PLAYER_DEAD = 16 INCORRECT_USERNAME = 64 REJECTED = 1 RESERVED = 0 SERVER_PLAYER_CAPACITY_REACHED = 4 UNIQUE_PLAYER_NAME_CONSTRAINT_VIOLATED = 2"
  },
  "api/NitroxModel.MultiplayerSession.MultiplayerSessionReservationStateExtensions.Describe.html": {
    "href": "api/NitroxModel.MultiplayerSession.MultiplayerSessionReservationStateExtensions.Describe.html",
    "title": "Method Describe | Nitrox",
    "keywords": "Method Describe Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll Describe(MultiplayerSessionReservationState) public static string Describe(this MultiplayerSessionReservationState currentState) Parameters currentState MultiplayerSessionReservationState Returns string"
  },
  "api/NitroxModel.MultiplayerSession.MultiplayerSessionReservationStateExtensions.HasStateFlag.html": {
    "href": "api/NitroxModel.MultiplayerSession.MultiplayerSessionReservationStateExtensions.HasStateFlag.html",
    "title": "Method HasStateFlag | Nitrox",
    "keywords": "Method HasStateFlag Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll HasStateFlag(MultiplayerSessionReservationState, MultiplayerSessionReservationState) public static bool HasStateFlag(this MultiplayerSessionReservationState currentState, MultiplayerSessionReservationState checkedState) Parameters currentState MultiplayerSessionReservationState checkedState MultiplayerSessionReservationState Returns bool"
  },
  "api/NitroxModel.MultiplayerSession.MultiplayerSessionReservationStateExtensions.html": {
    "href": "api/NitroxModel.MultiplayerSession.MultiplayerSessionReservationStateExtensions.html",
    "title": "Class MultiplayerSessionReservationStateExtensions | Nitrox",
    "keywords": "Class MultiplayerSessionReservationStateExtensions Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll public static class MultiplayerSessionReservationStateExtensions Inheritance object MultiplayerSessionReservationStateExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Describe(MultiplayerSessionReservationState) HasStateFlag(MultiplayerSessionReservationState, MultiplayerSessionReservationState)"
  },
  "api/NitroxModel.MultiplayerSession.PlayerContext.-ctor.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerContext.-ctor.html",
    "title": "Constructor PlayerContext | Nitrox",
    "keywords": "Constructor PlayerContext Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll PlayerContext(string, ushort, NitroxId, bool, PlayerSettings, bool, NitroxGameMode) public PlayerContext(string playerName, ushort playerId, NitroxId playerNitroxId, bool wasBrandNewPlayer, PlayerSettings playerSettings, bool isMuted, NitroxGameMode gameMode) Parameters playerName string playerId ushort playerNitroxId NitroxId wasBrandNewPlayer bool playerSettings PlayerSettings isMuted bool gameMode NitroxGameMode"
  },
  "api/NitroxModel.MultiplayerSession.PlayerContext.GameMode.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerContext.GameMode.html",
    "title": "Property GameMode | Nitrox",
    "keywords": "Property GameMode Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll GameMode public NitroxGameMode GameMode { get; set; } Property Value NitroxGameMode"
  },
  "api/NitroxModel.MultiplayerSession.PlayerContext.IsMuted.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerContext.IsMuted.html",
    "title": "Property IsMuted | Nitrox",
    "keywords": "Property IsMuted Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll IsMuted public bool IsMuted { get; set; } Property Value bool"
  },
  "api/NitroxModel.MultiplayerSession.PlayerContext.PlayerId.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerContext.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.MultiplayerSession.PlayerContext.PlayerName.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerContext.PlayerName.html",
    "title": "Property PlayerName | Nitrox",
    "keywords": "Property PlayerName Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll PlayerName public string PlayerName { get; } Property Value string"
  },
  "api/NitroxModel.MultiplayerSession.PlayerContext.PlayerNitroxId.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerContext.PlayerNitroxId.html",
    "title": "Property PlayerNitroxId | Nitrox",
    "keywords": "Property PlayerNitroxId Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll PlayerNitroxId public NitroxId PlayerNitroxId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.MultiplayerSession.PlayerContext.PlayerSettings.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerContext.PlayerSettings.html",
    "title": "Property PlayerSettings | Nitrox",
    "keywords": "Property PlayerSettings Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll PlayerSettings public PlayerSettings PlayerSettings { get; } Property Value PlayerSettings"
  },
  "api/NitroxModel.MultiplayerSession.PlayerContext.ToString.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerContext.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.MultiplayerSession.PlayerContext.WasBrandNewPlayer.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerContext.WasBrandNewPlayer.html",
    "title": "Property WasBrandNewPlayer | Nitrox",
    "keywords": "Property WasBrandNewPlayer Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll WasBrandNewPlayer public bool WasBrandNewPlayer { get; } Property Value bool"
  },
  "api/NitroxModel.MultiplayerSession.PlayerContext.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerContext.html",
    "title": "Class PlayerContext | Nitrox",
    "keywords": "Class PlayerContext Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll [Serializable] public class PlayerContext Inheritance object PlayerContext Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerContext(string, ushort, NitroxId, bool, PlayerSettings, bool, NitroxGameMode) Properties GameMode IsMuted PlayerId PlayerName PlayerNitroxId PlayerSettings WasBrandNewPlayer Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.MultiplayerSession.PlayerSettings.-ctor.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerSettings.-ctor.html",
    "title": "Constructor PlayerSettings | Nitrox",
    "keywords": "Constructor PlayerSettings Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll PlayerSettings(NitroxColor) public PlayerSettings(NitroxColor playerColor) Parameters playerColor NitroxColor"
  },
  "api/NitroxModel.MultiplayerSession.PlayerSettings.PlayerColor.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerSettings.PlayerColor.html",
    "title": "Property PlayerColor | Nitrox",
    "keywords": "Property PlayerColor Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll PlayerColor public NitroxColor PlayerColor { get; } Property Value NitroxColor"
  },
  "api/NitroxModel.MultiplayerSession.PlayerSettings.ToString.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerSettings.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.MultiplayerSession.PlayerSettings.html": {
    "href": "api/NitroxModel.MultiplayerSession.PlayerSettings.html",
    "title": "Class PlayerSettings | Nitrox",
    "keywords": "Class PlayerSettings Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll [Serializable] public class PlayerSettings Inheritance object PlayerSettings Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerSettings(NitroxColor) Properties PlayerColor Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.MultiplayerSession.RandomColorGenerator.GenerateColor.html": {
    "href": "api/NitroxModel.MultiplayerSession.RandomColorGenerator.GenerateColor.html",
    "title": "Method GenerateColor | Nitrox",
    "keywords": "Method GenerateColor Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll GenerateColor() public static NitroxColor GenerateColor() Returns NitroxColor"
  },
  "api/NitroxModel.MultiplayerSession.RandomColorGenerator.html": {
    "href": "api/NitroxModel.MultiplayerSession.RandomColorGenerator.html",
    "title": "Class RandomColorGenerator | Nitrox",
    "keywords": "Class RandomColorGenerator Namespace NitroxModel.MultiplayerSession Assembly NitroxModel.dll public static class RandomColorGenerator Inheritance object RandomColorGenerator Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GenerateColor()"
  },
  "api/NitroxModel.MultiplayerSession.html": {
    "href": "api/NitroxModel.MultiplayerSession.html",
    "title": "Namespace NitroxModel.MultiplayerSession | Nitrox",
    "keywords": "Namespace NitroxModel.MultiplayerSession Classes AuthenticationContext MultiplayerSessionReservationStateExtensions PlayerContext PlayerSettings RandomColorGenerator Enums MultiplayerSessionAuthenticationAuthority MultiplayerSessionReservationState"
  },
  "api/NitroxModel.Networking.NitroxDeliveryMethod.DeliveryMethod.html": {
    "href": "api/NitroxModel.Networking.NitroxDeliveryMethod.DeliveryMethod.html",
    "title": "Enum NitroxDeliveryMethod.DeliveryMethod | Nitrox",
    "keywords": "Enum NitroxDeliveryMethod.DeliveryMethod Namespace NitroxModel.Networking Assembly NitroxModel.dll public enum NitroxDeliveryMethod.DeliveryMethod Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields RELIABLE_ORDERED = 1 UNRELIABLE_SEQUENCED = 0"
  },
  "api/NitroxModel.Networking.NitroxDeliveryMethod.ToLiteNetLib.html": {
    "href": "api/NitroxModel.Networking.NitroxDeliveryMethod.ToLiteNetLib.html",
    "title": "Method ToLiteNetLib | Nitrox",
    "keywords": "Method ToLiteNetLib Namespace NitroxModel.Networking Assembly NitroxModel.dll ToLiteNetLib(DeliveryMethod) public static DeliveryMethod ToLiteNetLib(NitroxDeliveryMethod.DeliveryMethod deliveryMethod) Parameters deliveryMethod NitroxDeliveryMethod.DeliveryMethod Returns DeliveryMethod"
  },
  "api/NitroxModel.Networking.NitroxDeliveryMethod.html": {
    "href": "api/NitroxModel.Networking.NitroxDeliveryMethod.html",
    "title": "Class NitroxDeliveryMethod | Nitrox",
    "keywords": "Class NitroxDeliveryMethod Namespace NitroxModel.Networking Assembly NitroxModel.dll public class NitroxDeliveryMethod Inheritance object NitroxDeliveryMethod Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ToLiteNetLib(DeliveryMethod)"
  },
  "api/NitroxModel.Networking.html": {
    "href": "api/NitroxModel.Networking.html",
    "title": "Namespace NitroxModel.Networking | Nitrox",
    "keywords": "Namespace NitroxModel.Networking Classes NitroxDeliveryMethod Enums NitroxDeliveryMethod.DeliveryMethod"
  },
  "api/NitroxModel.Packets.AnimationChangeEvent.-ctor.html": {
    "href": "api/NitroxModel.Packets.AnimationChangeEvent.-ctor.html",
    "title": "Constructor AnimationChangeEvent | Nitrox",
    "keywords": "Constructor AnimationChangeEvent Namespace NitroxModel.Packets Assembly NitroxModel.dll AnimationChangeEvent(ushort, int, int) public AnimationChangeEvent(ushort playerId, int type, int state) Parameters playerId ushort type int state int"
  },
  "api/NitroxModel.Packets.AnimationChangeEvent.PlayerId.html": {
    "href": "api/NitroxModel.Packets.AnimationChangeEvent.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.AnimationChangeEvent.State.html": {
    "href": "api/NitroxModel.Packets.AnimationChangeEvent.State.html",
    "title": "Property State | Nitrox",
    "keywords": "Property State Namespace NitroxModel.Packets Assembly NitroxModel.dll State public int State { get; } Property Value int"
  },
  "api/NitroxModel.Packets.AnimationChangeEvent.Type.html": {
    "href": "api/NitroxModel.Packets.AnimationChangeEvent.Type.html",
    "title": "Property Type | Nitrox",
    "keywords": "Property Type Namespace NitroxModel.Packets Assembly NitroxModel.dll Type public int Type { get; } Property Value int"
  },
  "api/NitroxModel.Packets.AnimationChangeEvent.html": {
    "href": "api/NitroxModel.Packets.AnimationChangeEvent.html",
    "title": "Class AnimationChangeEvent | Nitrox",
    "keywords": "Class AnimationChangeEvent Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class AnimationChangeEvent : Packet Inheritance object Packet AnimationChangeEvent Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AnimationChangeEvent(ushort, int, int) Properties PlayerId State Type"
  },
  "api/NitroxModel.Packets.AuroraAndTimeUpdate.-ctor.html": {
    "href": "api/NitroxModel.Packets.AuroraAndTimeUpdate.-ctor.html",
    "title": "Constructor AuroraAndTimeUpdate | Nitrox",
    "keywords": "Constructor AuroraAndTimeUpdate Namespace NitroxModel.Packets Assembly NitroxModel.dll AuroraAndTimeUpdate(TimeData, bool) public AuroraAndTimeUpdate(TimeData timeData, bool restore) Parameters timeData TimeData restore bool"
  },
  "api/NitroxModel.Packets.AuroraAndTimeUpdate.Restore.html": {
    "href": "api/NitroxModel.Packets.AuroraAndTimeUpdate.Restore.html",
    "title": "Property Restore | Nitrox",
    "keywords": "Property Restore Namespace NitroxModel.Packets Assembly NitroxModel.dll Restore public bool Restore { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.AuroraAndTimeUpdate.TimeData.html": {
    "href": "api/NitroxModel.Packets.AuroraAndTimeUpdate.TimeData.html",
    "title": "Property TimeData | Nitrox",
    "keywords": "Property TimeData Namespace NitroxModel.Packets Assembly NitroxModel.dll TimeData public TimeData TimeData { get; } Property Value TimeData"
  },
  "api/NitroxModel.Packets.AuroraAndTimeUpdate.html": {
    "href": "api/NitroxModel.Packets.AuroraAndTimeUpdate.html",
    "title": "Class AuroraAndTimeUpdate | Nitrox",
    "keywords": "Class AuroraAndTimeUpdate Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class AuroraAndTimeUpdate : Packet Inheritance object Packet AuroraAndTimeUpdate Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AuroraAndTimeUpdate(TimeData, bool) Properties Restore TimeData"
  },
  "api/NitroxModel.Packets.BaseDeconstructed.-ctor.html": {
    "href": "api/NitroxModel.Packets.BaseDeconstructed.-ctor.html",
    "title": "Constructor BaseDeconstructed | Nitrox",
    "keywords": "Constructor BaseDeconstructed Namespace NitroxModel.Packets Assembly NitroxModel.dll BaseDeconstructed(NitroxId, GhostEntity) public BaseDeconstructed(NitroxId formerBaseId, GhostEntity replacerGhost) Parameters formerBaseId NitroxId replacerGhost GhostEntity"
  },
  "api/NitroxModel.Packets.BaseDeconstructed.FormerBaseId.html": {
    "href": "api/NitroxModel.Packets.BaseDeconstructed.FormerBaseId.html",
    "title": "Property FormerBaseId | Nitrox",
    "keywords": "Property FormerBaseId Namespace NitroxModel.Packets Assembly NitroxModel.dll FormerBaseId public NitroxId FormerBaseId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.BaseDeconstructed.ReplacerGhost.html": {
    "href": "api/NitroxModel.Packets.BaseDeconstructed.ReplacerGhost.html",
    "title": "Property ReplacerGhost | Nitrox",
    "keywords": "Property ReplacerGhost Namespace NitroxModel.Packets Assembly NitroxModel.dll ReplacerGhost public GhostEntity ReplacerGhost { get; } Property Value GhostEntity"
  },
  "api/NitroxModel.Packets.BaseDeconstructed.html": {
    "href": "api/NitroxModel.Packets.BaseDeconstructed.html",
    "title": "Class BaseDeconstructed | Nitrox",
    "keywords": "Class BaseDeconstructed Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public sealed class BaseDeconstructed : Packet Inheritance object Packet BaseDeconstructed Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors BaseDeconstructed(NitroxId, GhostEntity) Properties FormerBaseId ReplacerGhost"
  },
  "api/NitroxModel.Packets.BatchVisibilityChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.BatchVisibilityChanged.-ctor.html",
    "title": "Constructor BatchVisibilityChanged | Nitrox",
    "keywords": "Constructor BatchVisibilityChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll BatchVisibilityChanged(ushort, NitroxInt3[], NitroxInt3[]) public BatchVisibilityChanged(ushort playerId, NitroxInt3[] added, NitroxInt3[] removed) Parameters playerId ushort added NitroxInt3[] removed NitroxInt3[]"
  },
  "api/NitroxModel.Packets.BatchVisibilityChanged.Added.html": {
    "href": "api/NitroxModel.Packets.BatchVisibilityChanged.Added.html",
    "title": "Property Added | Nitrox",
    "keywords": "Property Added Namespace NitroxModel.Packets Assembly NitroxModel.dll Added public NitroxInt3[] Added { get; } Property Value NitroxInt3[]"
  },
  "api/NitroxModel.Packets.BatchVisibilityChanged.PlayerId.html": {
    "href": "api/NitroxModel.Packets.BatchVisibilityChanged.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.BatchVisibilityChanged.Removed.html": {
    "href": "api/NitroxModel.Packets.BatchVisibilityChanged.Removed.html",
    "title": "Property Removed | Nitrox",
    "keywords": "Property Removed Namespace NitroxModel.Packets Assembly NitroxModel.dll Removed public NitroxInt3[] Removed { get; } Property Value NitroxInt3[]"
  },
  "api/NitroxModel.Packets.BatchVisibilityChanged.html": {
    "href": "api/NitroxModel.Packets.BatchVisibilityChanged.html",
    "title": "Class BatchVisibilityChanged | Nitrox",
    "keywords": "Class BatchVisibilityChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class BatchVisibilityChanged : Packet Inheritance object Packet BatchVisibilityChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BatchVisibilityChanged(ushort, NitroxInt3[], NitroxInt3[]) Properties Added PlayerId Removed"
  },
  "api/NitroxModel.Packets.BedEnter.html": {
    "href": "api/NitroxModel.Packets.BedEnter.html",
    "title": "Class BedEnter | Nitrox",
    "keywords": "Class BedEnter Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class BedEnter : Packet Inheritance object Packet BedEnter Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxModel.Packets.BuildingDesyncWarning.-ctor.html": {
    "href": "api/NitroxModel.Packets.BuildingDesyncWarning.-ctor.html",
    "title": "Constructor BuildingDesyncWarning | Nitrox",
    "keywords": "Constructor BuildingDesyncWarning Namespace NitroxModel.Packets Assembly NitroxModel.dll BuildingDesyncWarning(Dictionary<NitroxId, int>) public BuildingDesyncWarning(Dictionary<NitroxId, int> operations) Parameters operations Dictionary<NitroxId, int>"
  },
  "api/NitroxModel.Packets.BuildingDesyncWarning.Operations.html": {
    "href": "api/NitroxModel.Packets.BuildingDesyncWarning.Operations.html",
    "title": "Property Operations | Nitrox",
    "keywords": "Property Operations Namespace NitroxModel.Packets Assembly NitroxModel.dll Operations public Dictionary<NitroxId, int> Operations { get; } Property Value Dictionary<NitroxId, int>"
  },
  "api/NitroxModel.Packets.BuildingDesyncWarning.html": {
    "href": "api/NitroxModel.Packets.BuildingDesyncWarning.html",
    "title": "Class BuildingDesyncWarning | Nitrox",
    "keywords": "Class BuildingDesyncWarning Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public sealed class BuildingDesyncWarning : Packet Inheritance object Packet BuildingDesyncWarning Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors BuildingDesyncWarning(Dictionary<NitroxId, int>) Properties Operations"
  },
  "api/NitroxModel.Packets.BuildingResync.-ctor.html": {
    "href": "api/NitroxModel.Packets.BuildingResync.-ctor.html",
    "title": "Constructor BuildingResync | Nitrox",
    "keywords": "Constructor BuildingResync Namespace NitroxModel.Packets Assembly NitroxModel.dll BuildingResync(Dictionary<BuildEntity, int>, Dictionary<ModuleEntity, int>) public BuildingResync(Dictionary<BuildEntity, int> buildEntities, Dictionary<ModuleEntity, int> moduleEntities) Parameters buildEntities Dictionary<BuildEntity, int> moduleEntities Dictionary<ModuleEntity, int>"
  },
  "api/NitroxModel.Packets.BuildingResync.BuildEntities.html": {
    "href": "api/NitroxModel.Packets.BuildingResync.BuildEntities.html",
    "title": "Property BuildEntities | Nitrox",
    "keywords": "Property BuildEntities Namespace NitroxModel.Packets Assembly NitroxModel.dll BuildEntities public Dictionary<BuildEntity, int> BuildEntities { get; } Property Value Dictionary<BuildEntity, int>"
  },
  "api/NitroxModel.Packets.BuildingResync.ModuleEntities.html": {
    "href": "api/NitroxModel.Packets.BuildingResync.ModuleEntities.html",
    "title": "Property ModuleEntities | Nitrox",
    "keywords": "Property ModuleEntities Namespace NitroxModel.Packets Assembly NitroxModel.dll ModuleEntities public Dictionary<ModuleEntity, int> ModuleEntities { get; } Property Value Dictionary<ModuleEntity, int>"
  },
  "api/NitroxModel.Packets.BuildingResync.html": {
    "href": "api/NitroxModel.Packets.BuildingResync.html",
    "title": "Class BuildingResync | Nitrox",
    "keywords": "Class BuildingResync Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public sealed class BuildingResync : Packet Inheritance object Packet BuildingResync Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors BuildingResync(Dictionary<BuildEntity, int>, Dictionary<ModuleEntity, int>) Properties BuildEntities ModuleEntities"
  },
  "api/NitroxModel.Packets.BuildingResyncRequest.-ctor.html": {
    "href": "api/NitroxModel.Packets.BuildingResyncRequest.-ctor.html",
    "title": "Constructor BuildingResyncRequest | Nitrox",
    "keywords": "Constructor BuildingResyncRequest Namespace NitroxModel.Packets Assembly NitroxModel.dll BuildingResyncRequest(NitroxId, bool) public BuildingResyncRequest(NitroxId entityId = null, bool resyncEverything = true) Parameters entityId NitroxId resyncEverything bool"
  },
  "api/NitroxModel.Packets.BuildingResyncRequest.EntityId.html": {
    "href": "api/NitroxModel.Packets.BuildingResyncRequest.EntityId.html",
    "title": "Property EntityId | Nitrox",
    "keywords": "Property EntityId Namespace NitroxModel.Packets Assembly NitroxModel.dll EntityId public NitroxId EntityId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.BuildingResyncRequest.ResyncEverything.html": {
    "href": "api/NitroxModel.Packets.BuildingResyncRequest.ResyncEverything.html",
    "title": "Property ResyncEverything | Nitrox",
    "keywords": "Property ResyncEverything Namespace NitroxModel.Packets Assembly NitroxModel.dll ResyncEverything public bool ResyncEverything { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.BuildingResyncRequest.html": {
    "href": "api/NitroxModel.Packets.BuildingResyncRequest.html",
    "title": "Class BuildingResyncRequest | Nitrox",
    "keywords": "Class BuildingResyncRequest Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public sealed class BuildingResyncRequest : Packet Inheritance object Packet BuildingResyncRequest Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors BuildingResyncRequest(NitroxId, bool) Properties EntityId ResyncEverything"
  },
  "api/NitroxModel.Packets.CellVisibilityChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.CellVisibilityChanged.-ctor.html",
    "title": "Constructor CellVisibilityChanged | Nitrox",
    "keywords": "Constructor CellVisibilityChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll CellVisibilityChanged(ushort, AbsoluteEntityCell[], AbsoluteEntityCell[]) public CellVisibilityChanged(ushort playerId, AbsoluteEntityCell[] added, AbsoluteEntityCell[] removed) Parameters playerId ushort added AbsoluteEntityCell[] removed AbsoluteEntityCell[]"
  },
  "api/NitroxModel.Packets.CellVisibilityChanged.Added.html": {
    "href": "api/NitroxModel.Packets.CellVisibilityChanged.Added.html",
    "title": "Property Added | Nitrox",
    "keywords": "Property Added Namespace NitroxModel.Packets Assembly NitroxModel.dll Added public AbsoluteEntityCell[] Added { get; } Property Value AbsoluteEntityCell[]"
  },
  "api/NitroxModel.Packets.CellVisibilityChanged.PlayerId.html": {
    "href": "api/NitroxModel.Packets.CellVisibilityChanged.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.CellVisibilityChanged.Removed.html": {
    "href": "api/NitroxModel.Packets.CellVisibilityChanged.Removed.html",
    "title": "Property Removed | Nitrox",
    "keywords": "Property Removed Namespace NitroxModel.Packets Assembly NitroxModel.dll Removed public AbsoluteEntityCell[] Removed { get; } Property Value AbsoluteEntityCell[]"
  },
  "api/NitroxModel.Packets.CellVisibilityChanged.html": {
    "href": "api/NitroxModel.Packets.CellVisibilityChanged.html",
    "title": "Class CellVisibilityChanged | Nitrox",
    "keywords": "Class CellVisibilityChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class CellVisibilityChanged : Packet Inheritance object Packet CellVisibilityChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CellVisibilityChanged(ushort, AbsoluteEntityCell[], AbsoluteEntityCell[]) Properties Added PlayerId Removed"
  },
  "api/NitroxModel.Packets.ChatMessage.-ctor.html": {
    "href": "api/NitroxModel.Packets.ChatMessage.-ctor.html",
    "title": "Constructor ChatMessage | Nitrox",
    "keywords": "Constructor ChatMessage Namespace NitroxModel.Packets Assembly NitroxModel.dll ChatMessage(ushort, string) public ChatMessage(ushort playerId, string text) Parameters playerId ushort text string"
  },
  "api/NitroxModel.Packets.ChatMessage.PlayerId.html": {
    "href": "api/NitroxModel.Packets.ChatMessage.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.ChatMessage.SERVER_ID.html": {
    "href": "api/NitroxModel.Packets.ChatMessage.SERVER_ID.html",
    "title": "Field SERVER_ID | Nitrox",
    "keywords": "Field SERVER_ID Namespace NitroxModel.Packets Assembly NitroxModel.dll public const ushort SERVER_ID = 65535 Returns ushort"
  },
  "api/NitroxModel.Packets.ChatMessage.Text.html": {
    "href": "api/NitroxModel.Packets.ChatMessage.Text.html",
    "title": "Property Text | Nitrox",
    "keywords": "Property Text Namespace NitroxModel.Packets Assembly NitroxModel.dll Text public string Text { get; } Property Value string"
  },
  "api/NitroxModel.Packets.ChatMessage.html": {
    "href": "api/NitroxModel.Packets.ChatMessage.html",
    "title": "Class ChatMessage | Nitrox",
    "keywords": "Class ChatMessage Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class ChatMessage : Packet Inheritance object Packet ChatMessage Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ChatMessage(ushort, string) Fields SERVER_ID Properties PlayerId Text"
  },
  "api/NitroxModel.Packets.CorrelatedPacket.-ctor.html": {
    "href": "api/NitroxModel.Packets.CorrelatedPacket.-ctor.html",
    "title": "Constructor CorrelatedPacket | Nitrox",
    "keywords": "Constructor CorrelatedPacket Namespace NitroxModel.Packets Assembly NitroxModel.dll CorrelatedPacket(string) protected CorrelatedPacket(string correlationId) Parameters correlationId string"
  },
  "api/NitroxModel.Packets.CorrelatedPacket.CorrelationId.html": {
    "href": "api/NitroxModel.Packets.CorrelatedPacket.CorrelationId.html",
    "title": "Property CorrelationId | Nitrox",
    "keywords": "Property CorrelationId Namespace NitroxModel.Packets Assembly NitroxModel.dll CorrelationId public string CorrelationId { get; protected set; } Property Value string"
  },
  "api/NitroxModel.Packets.CorrelatedPacket.html": {
    "href": "api/NitroxModel.Packets.CorrelatedPacket.html",
    "title": "Class CorrelatedPacket | Nitrox",
    "keywords": "Class CorrelatedPacket Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public abstract class CorrelatedPacket : Packet Inheritance object Packet CorrelatedPacket Derived MultiplayerSessionPolicy MultiplayerSessionPolicyRequest MultiplayerSessionReservation MultiplayerSessionReservationRequest PlayerJoiningMultiplayerSession Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CorrelatedPacket(string) Properties CorrelationId"
  },
  "api/NitroxModel.Packets.DebugStartMapPacket.-ctor.html": {
    "href": "api/NitroxModel.Packets.DebugStartMapPacket.-ctor.html",
    "title": "Constructor DebugStartMapPacket | Nitrox",
    "keywords": "Constructor DebugStartMapPacket Namespace NitroxModel.Packets Assembly NitroxModel.dll DebugStartMapPacket(List<NitroxVector3>) public DebugStartMapPacket(List<NitroxVector3> startPositions) Parameters startPositions List<NitroxVector3>"
  },
  "api/NitroxModel.Packets.DebugStartMapPacket.StartPositions.html": {
    "href": "api/NitroxModel.Packets.DebugStartMapPacket.StartPositions.html",
    "title": "Property StartPositions | Nitrox",
    "keywords": "Property StartPositions Namespace NitroxModel.Packets Assembly NitroxModel.dll StartPositions public List<NitroxVector3> StartPositions { get; } Property Value List<NitroxVector3>"
  },
  "api/NitroxModel.Packets.DebugStartMapPacket.html": {
    "href": "api/NitroxModel.Packets.DebugStartMapPacket.html",
    "title": "Class DebugStartMapPacket | Nitrox",
    "keywords": "Class DebugStartMapPacket Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class DebugStartMapPacket : Packet Inheritance object Packet DebugStartMapPacket Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DebugStartMapPacket(List<NitroxVector3>) Properties StartPositions"
  },
  "api/NitroxModel.Packets.DeconstructionBegin.-ctor.html": {
    "href": "api/NitroxModel.Packets.DeconstructionBegin.-ctor.html",
    "title": "Constructor DeconstructionBegin | Nitrox",
    "keywords": "Constructor DeconstructionBegin Namespace NitroxModel.Packets Assembly NitroxModel.dll DeconstructionBegin(NitroxId) public DeconstructionBegin(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxModel.Packets.DeconstructionBegin.Id.html": {
    "href": "api/NitroxModel.Packets.DeconstructionBegin.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.DeconstructionBegin.html": {
    "href": "api/NitroxModel.Packets.DeconstructionBegin.html",
    "title": "Class DeconstructionBegin | Nitrox",
    "keywords": "Class DeconstructionBegin Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class DeconstructionBegin : Packet Inheritance object Packet DeconstructionBegin Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DeconstructionBegin(NitroxId) Properties Id"
  },
  "api/NitroxModel.Packets.Disconnect.-ctor.html": {
    "href": "api/NitroxModel.Packets.Disconnect.-ctor.html",
    "title": "Constructor Disconnect | Nitrox",
    "keywords": "Constructor Disconnect Namespace NitroxModel.Packets Assembly NitroxModel.dll Disconnect(ushort) public Disconnect(ushort playerId) Parameters playerId ushort"
  },
  "api/NitroxModel.Packets.Disconnect.PlayerId.html": {
    "href": "api/NitroxModel.Packets.Disconnect.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.Disconnect.html": {
    "href": "api/NitroxModel.Packets.Disconnect.html",
    "title": "Class Disconnect | Nitrox",
    "keywords": "Class Disconnect Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class Disconnect : Packet Inheritance object Packet Disconnect Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Disconnect(ushort) Properties PlayerId"
  },
  "api/NitroxModel.Packets.DiscordRequestIP.-ctor.html": {
    "href": "api/NitroxModel.Packets.DiscordRequestIP.-ctor.html",
    "title": "Constructor DiscordRequestIP | Nitrox",
    "keywords": "Constructor DiscordRequestIP Namespace NitroxModel.Packets Assembly NitroxModel.dll DiscordRequestIP(string) public DiscordRequestIP(string ipPort) Parameters ipPort string"
  },
  "api/NitroxModel.Packets.DiscordRequestIP.IpPort.html": {
    "href": "api/NitroxModel.Packets.DiscordRequestIP.IpPort.html",
    "title": "Property IpPort | Nitrox",
    "keywords": "Property IpPort Namespace NitroxModel.Packets Assembly NitroxModel.dll IpPort public string IpPort { get; set; } Property Value string"
  },
  "api/NitroxModel.Packets.DiscordRequestIP.html": {
    "href": "api/NitroxModel.Packets.DiscordRequestIP.html",
    "title": "Class DiscordRequestIP | Nitrox",
    "keywords": "Class DiscordRequestIP Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class DiscordRequestIP : Packet Inheritance object Packet DiscordRequestIP Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DiscordRequestIP(string) Properties IpPort"
  },
  "api/NitroxModel.Packets.EntityDestroyed.-ctor.html": {
    "href": "api/NitroxModel.Packets.EntityDestroyed.-ctor.html",
    "title": "Constructor EntityDestroyed | Nitrox",
    "keywords": "Constructor EntityDestroyed Namespace NitroxModel.Packets Assembly NitroxModel.dll EntityDestroyed(NitroxId) public EntityDestroyed(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxModel.Packets.EntityDestroyed.Id.html": {
    "href": "api/NitroxModel.Packets.EntityDestroyed.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.EntityDestroyed.html": {
    "href": "api/NitroxModel.Packets.EntityDestroyed.html",
    "title": "Class EntityDestroyed | Nitrox",
    "keywords": "Class EntityDestroyed Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class EntityDestroyed : Packet Inheritance object Packet EntityDestroyed Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityDestroyed(NitroxId) Properties Id"
  },
  "api/NitroxModel.Packets.EntityMetadataUpdate.-ctor.html": {
    "href": "api/NitroxModel.Packets.EntityMetadataUpdate.-ctor.html",
    "title": "Constructor EntityMetadataUpdate | Nitrox",
    "keywords": "Constructor EntityMetadataUpdate Namespace NitroxModel.Packets Assembly NitroxModel.dll EntityMetadataUpdate(NitroxId, EntityMetadata) public EntityMetadataUpdate(NitroxId id, EntityMetadata newValue) Parameters id NitroxId newValue EntityMetadata"
  },
  "api/NitroxModel.Packets.EntityMetadataUpdate.Id.html": {
    "href": "api/NitroxModel.Packets.EntityMetadataUpdate.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.EntityMetadataUpdate.NewValue.html": {
    "href": "api/NitroxModel.Packets.EntityMetadataUpdate.NewValue.html",
    "title": "Property NewValue | Nitrox",
    "keywords": "Property NewValue Namespace NitroxModel.Packets Assembly NitroxModel.dll NewValue public EntityMetadata NewValue { get; } Property Value EntityMetadata"
  },
  "api/NitroxModel.Packets.EntityMetadataUpdate.html": {
    "href": "api/NitroxModel.Packets.EntityMetadataUpdate.html",
    "title": "Class EntityMetadataUpdate | Nitrox",
    "keywords": "Class EntityMetadataUpdate Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class EntityMetadataUpdate : Packet Inheritance object Packet EntityMetadataUpdate Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityMetadataUpdate(NitroxId, EntityMetadata) Properties Id NewValue"
  },
  "api/NitroxModel.Packets.EntityReparented.-ctor.html": {
    "href": "api/NitroxModel.Packets.EntityReparented.-ctor.html",
    "title": "Constructor EntityReparented | Nitrox",
    "keywords": "Constructor EntityReparented Namespace NitroxModel.Packets Assembly NitroxModel.dll EntityReparented(NitroxId, NitroxId) public EntityReparented(NitroxId id, NitroxId newParentId) Parameters id NitroxId newParentId NitroxId"
  },
  "api/NitroxModel.Packets.EntityReparented.Id.html": {
    "href": "api/NitroxModel.Packets.EntityReparented.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.EntityReparented.NewParentId.html": {
    "href": "api/NitroxModel.Packets.EntityReparented.NewParentId.html",
    "title": "Property NewParentId | Nitrox",
    "keywords": "Property NewParentId Namespace NitroxModel.Packets Assembly NitroxModel.dll NewParentId public NitroxId NewParentId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.EntityReparented.html": {
    "href": "api/NitroxModel.Packets.EntityReparented.html",
    "title": "Class EntityReparented | Nitrox",
    "keywords": "Class EntityReparented Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class EntityReparented : Packet Inheritance object Packet EntityReparented Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityReparented(NitroxId, NitroxId) Properties Id NewParentId"
  },
  "api/NitroxModel.Packets.EntitySpawnedByClient.-ctor.html": {
    "href": "api/NitroxModel.Packets.EntitySpawnedByClient.-ctor.html",
    "title": "Constructor EntitySpawnedByClient | Nitrox",
    "keywords": "Constructor EntitySpawnedByClient Namespace NitroxModel.Packets Assembly NitroxModel.dll EntitySpawnedByClient(Entity, bool) public EntitySpawnedByClient(Entity entity, bool requireRespawn = false) Parameters entity Entity requireRespawn bool"
  },
  "api/NitroxModel.Packets.EntitySpawnedByClient.Entity.html": {
    "href": "api/NitroxModel.Packets.EntitySpawnedByClient.Entity.html",
    "title": "Property Entity | Nitrox",
    "keywords": "Property Entity Namespace NitroxModel.Packets Assembly NitroxModel.dll Entity public Entity Entity { get; } Property Value Entity"
  },
  "api/NitroxModel.Packets.EntitySpawnedByClient.RequireRespawn.html": {
    "href": "api/NitroxModel.Packets.EntitySpawnedByClient.RequireRespawn.html",
    "title": "Property RequireRespawn | Nitrox",
    "keywords": "Property RequireRespawn Namespace NitroxModel.Packets Assembly NitroxModel.dll RequireRespawn public bool RequireRespawn { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.EntitySpawnedByClient.html": {
    "href": "api/NitroxModel.Packets.EntitySpawnedByClient.html",
    "title": "Class EntitySpawnedByClient | Nitrox",
    "keywords": "Class EntitySpawnedByClient Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class EntitySpawnedByClient : Packet Inheritance object Packet EntitySpawnedByClient Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntitySpawnedByClient(Entity, bool) Properties Entity RequireRespawn"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.-ctor.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.-ctor.html",
    "title": "Constructor EntityTransformUpdates | Nitrox",
    "keywords": "Constructor EntityTransformUpdates Namespace NitroxModel.Packets Assembly NitroxModel.dll EntityTransformUpdates(List<EntityTransformUpdate>) public EntityTransformUpdates(List<EntityTransformUpdates.EntityTransformUpdate> updates) Parameters updates List<EntityTransformUpdates.EntityTransformUpdate>"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.EntityTransformUpdate.-ctor.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.EntityTransformUpdate.-ctor.html",
    "title": "Constructor EntityTransformUpdate | Nitrox",
    "keywords": "Constructor EntityTransformUpdate Namespace NitroxModel.Packets Assembly NitroxModel.dll EntityTransformUpdate(NitroxId, NitroxVector3, NitroxQuaternion) public EntityTransformUpdate(NitroxId id, NitroxVector3 position, NitroxQuaternion rotation) Parameters id NitroxId position NitroxVector3 rotation NitroxQuaternion"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.EntityTransformUpdate.Id.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.EntityTransformUpdate.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.EntityTransformUpdate.Position.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.EntityTransformUpdate.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel.Packets Assembly NitroxModel.dll Position public NitroxVector3 Position { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.EntityTransformUpdate.Rotation.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.EntityTransformUpdate.Rotation.html",
    "title": "Property Rotation | Nitrox",
    "keywords": "Property Rotation Namespace NitroxModel.Packets Assembly NitroxModel.dll Rotation public NitroxQuaternion Rotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.EntityTransformUpdate.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.EntityTransformUpdate.html",
    "title": "Class EntityTransformUpdates.EntityTransformUpdate | Nitrox",
    "keywords": "Class EntityTransformUpdates.EntityTransformUpdate Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public abstract class EntityTransformUpdates.EntityTransformUpdate Inheritance object EntityTransformUpdates.EntityTransformUpdate Derived EntityTransformUpdates.RawTransformUpdate EntityTransformUpdates.SplineTransformUpdate Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityTransformUpdate(NitroxId, NitroxVector3, NitroxQuaternion) Properties Id Position Rotation"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.RawTransformUpdate.-ctor.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.RawTransformUpdate.-ctor.html",
    "title": "Constructor RawTransformUpdate | Nitrox",
    "keywords": "Constructor RawTransformUpdate Namespace NitroxModel.Packets Assembly NitroxModel.dll RawTransformUpdate(NitroxId, NitroxVector3, NitroxQuaternion) public RawTransformUpdate(NitroxId id, NitroxVector3 position, NitroxQuaternion rotation) Parameters id NitroxId position NitroxVector3 rotation NitroxQuaternion"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.RawTransformUpdate.ToString.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.RawTransformUpdate.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.Packets Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.RawTransformUpdate.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.RawTransformUpdate.html",
    "title": "Class EntityTransformUpdates.RawTransformUpdate | Nitrox",
    "keywords": "Class EntityTransformUpdates.RawTransformUpdate Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class EntityTransformUpdates.RawTransformUpdate : EntityTransformUpdates.EntityTransformUpdate Inheritance object EntityTransformUpdates.EntityTransformUpdate EntityTransformUpdates.RawTransformUpdate Inherited Members EntityTransformUpdates.EntityTransformUpdate.Id EntityTransformUpdates.EntityTransformUpdate.Position EntityTransformUpdates.EntityTransformUpdate.Rotation object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RawTransformUpdate(NitroxId, NitroxVector3, NitroxQuaternion) Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.-ctor.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.-ctor.html",
    "title": "Constructor SplineTransformUpdate | Nitrox",
    "keywords": "Constructor SplineTransformUpdate Namespace NitroxModel.Packets Assembly NitroxModel.dll SplineTransformUpdate(NitroxId, NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxVector3, float) public SplineTransformUpdate(NitroxId id, NitroxVector3 position, NitroxQuaternion rotation, NitroxVector3 destinationPosition, NitroxVector3 destinationDirection, float velocity) Parameters id NitroxId position NitroxVector3 rotation NitroxQuaternion destinationPosition NitroxVector3 destinationDirection NitroxVector3 velocity float"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.DestinationDirection.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.DestinationDirection.html",
    "title": "Property DestinationDirection | Nitrox",
    "keywords": "Property DestinationDirection Namespace NitroxModel.Packets Assembly NitroxModel.dll DestinationDirection public NitroxVector3 DestinationDirection { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.DestinationPosition.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.DestinationPosition.html",
    "title": "Property DestinationPosition | Nitrox",
    "keywords": "Property DestinationPosition Namespace NitroxModel.Packets Assembly NitroxModel.dll DestinationPosition public NitroxVector3 DestinationPosition { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.ToString.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.Packets Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.Velocity.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.Velocity.html",
    "title": "Property Velocity | Nitrox",
    "keywords": "Property Velocity Namespace NitroxModel.Packets Assembly NitroxModel.dll Velocity public float Velocity { get; } Property Value float"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.SplineTransformUpdate.html",
    "title": "Class EntityTransformUpdates.SplineTransformUpdate | Nitrox",
    "keywords": "Class EntityTransformUpdates.SplineTransformUpdate Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class EntityTransformUpdates.SplineTransformUpdate : EntityTransformUpdates.EntityTransformUpdate Inheritance object EntityTransformUpdates.EntityTransformUpdate EntityTransformUpdates.SplineTransformUpdate Inherited Members EntityTransformUpdates.EntityTransformUpdate.Id EntityTransformUpdates.EntityTransformUpdate.Position EntityTransformUpdates.EntityTransformUpdate.Rotation object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SplineTransformUpdate(NitroxId, NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxVector3, float) Properties DestinationDirection DestinationPosition Velocity Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.ToString.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.Packets Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.Updates.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.Updates.html",
    "title": "Property Updates | Nitrox",
    "keywords": "Property Updates Namespace NitroxModel.Packets Assembly NitroxModel.dll Updates public List<EntityTransformUpdates.EntityTransformUpdate> Updates { get; } Property Value List<EntityTransformUpdates.EntityTransformUpdate>"
  },
  "api/NitroxModel.Packets.EntityTransformUpdates.html": {
    "href": "api/NitroxModel.Packets.EntityTransformUpdates.html",
    "title": "Class EntityTransformUpdates | Nitrox",
    "keywords": "Class EntityTransformUpdates Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class EntityTransformUpdates : Packet Inheritance object Packet EntityTransformUpdates Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityTransformUpdates(List<EntityTransformUpdate>) Properties Updates Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.Packets.EscapePodChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.EscapePodChanged.-ctor.html",
    "title": "Constructor EscapePodChanged | Nitrox",
    "keywords": "Constructor EscapePodChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll EscapePodChanged(ushort, Optional<NitroxId>) public EscapePodChanged(ushort playerId, Optional<NitroxId> escapePodId) Parameters playerId ushort escapePodId Optional<NitroxId>"
  },
  "api/NitroxModel.Packets.EscapePodChanged.EscapePodId.html": {
    "href": "api/NitroxModel.Packets.EscapePodChanged.EscapePodId.html",
    "title": "Property EscapePodId | Nitrox",
    "keywords": "Property EscapePodId Namespace NitroxModel.Packets Assembly NitroxModel.dll EscapePodId public Optional<NitroxId> EscapePodId { get; } Property Value Optional<NitroxId>"
  },
  "api/NitroxModel.Packets.EscapePodChanged.PlayerId.html": {
    "href": "api/NitroxModel.Packets.EscapePodChanged.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.EscapePodChanged.html": {
    "href": "api/NitroxModel.Packets.EscapePodChanged.html",
    "title": "Class EscapePodChanged | Nitrox",
    "keywords": "Class EscapePodChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class EscapePodChanged : Packet Inheritance object Packet EscapePodChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EscapePodChanged(ushort, Optional<NitroxId>) Properties EscapePodId PlayerId"
  },
  "api/NitroxModel.Packets.Exceptions.UncorrelatedPacketException.-ctor.html": {
    "href": "api/NitroxModel.Packets.Exceptions.UncorrelatedPacketException.-ctor.html",
    "title": "Constructor UncorrelatedPacketException | Nitrox",
    "keywords": "Constructor UncorrelatedPacketException Namespace NitroxModel.Packets.Exceptions Assembly NitroxModel.dll UncorrelatedPacketException(CorrelatedPacket, string) public UncorrelatedPacketException(CorrelatedPacket invalidPacket, string expectedCorrelationId) Parameters invalidPacket CorrelatedPacket expectedCorrelationId string UncorrelatedPacketException(string, CorrelatedPacket, string) public UncorrelatedPacketException(string message, CorrelatedPacket invalidPacket, string expectedCorrelationId) Parameters message string invalidPacket CorrelatedPacket expectedCorrelationId string UncorrelatedPacketException(string, Exception, CorrelatedPacket, string) public UncorrelatedPacketException(string message, Exception innerException, CorrelatedPacket invalidPacket, string expectedCorrelationId) Parameters message string innerException Exception invalidPacket CorrelatedPacket expectedCorrelationId string UncorrelatedPacketException(SerializationInfo, StreamingContext, CorrelatedPacket, string) protected UncorrelatedPacketException(SerializationInfo info, StreamingContext context, CorrelatedPacket invalidPacket, string expectedCorrelationId) Parameters info SerializationInfo context StreamingContext invalidPacket CorrelatedPacket expectedCorrelationId string"
  },
  "api/NitroxModel.Packets.Exceptions.UncorrelatedPacketException.ExpectedCorrelationId.html": {
    "href": "api/NitroxModel.Packets.Exceptions.UncorrelatedPacketException.ExpectedCorrelationId.html",
    "title": "Property ExpectedCorrelationId | Nitrox",
    "keywords": "Property ExpectedCorrelationId Namespace NitroxModel.Packets.Exceptions Assembly NitroxModel.dll ExpectedCorrelationId public string ExpectedCorrelationId { get; } Property Value string"
  },
  "api/NitroxModel.Packets.Exceptions.UncorrelatedPacketException.InvalidPacket.html": {
    "href": "api/NitroxModel.Packets.Exceptions.UncorrelatedPacketException.InvalidPacket.html",
    "title": "Property InvalidPacket | Nitrox",
    "keywords": "Property InvalidPacket Namespace NitroxModel.Packets.Exceptions Assembly NitroxModel.dll InvalidPacket public CorrelatedPacket InvalidPacket { get; } Property Value CorrelatedPacket"
  },
  "api/NitroxModel.Packets.Exceptions.UncorrelatedPacketException.html": {
    "href": "api/NitroxModel.Packets.Exceptions.UncorrelatedPacketException.html",
    "title": "Class UncorrelatedPacketException | Nitrox",
    "keywords": "Class UncorrelatedPacketException Namespace NitroxModel.Packets.Exceptions Assembly NitroxModel.dll public class UncorrelatedPacketException : Exception, ISerializable, _Exception Inheritance object Exception UncorrelatedPacketException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Extension Methods Extensions.GetFirstNonAggregateMessage(Exception) Constructors UncorrelatedPacketException(CorrelatedPacket, string) UncorrelatedPacketException(SerializationInfo, StreamingContext, CorrelatedPacket, string) UncorrelatedPacketException(string, CorrelatedPacket, string) UncorrelatedPacketException(string, Exception, CorrelatedPacket, string) Properties ExpectedCorrelationId InvalidPacket"
  },
  "api/NitroxModel.Packets.Exceptions.html": {
    "href": "api/NitroxModel.Packets.Exceptions.html",
    "title": "Namespace NitroxModel.Packets.Exceptions | Nitrox",
    "keywords": "Namespace NitroxModel.Packets.Exceptions Classes UncorrelatedPacketException"
  },
  "api/NitroxModel.Packets.FireDoused.-ctor.html": {
    "href": "api/NitroxModel.Packets.FireDoused.-ctor.html",
    "title": "Constructor FireDoused | Nitrox",
    "keywords": "Constructor FireDoused Namespace NitroxModel.Packets Assembly NitroxModel.dll FireDoused(NitroxId, float) public FireDoused(NitroxId id, float douseAmount) Parameters id NitroxId The Fire id douseAmount float The amount to douse the fire by. A large number will extinguish the fire. A large number still calls the same method, Fire.Douse(float), which will call Fire.Extinguish if the douse amount would extinguish it."
  },
  "api/NitroxModel.Packets.FireDoused.DouseAmount.html": {
    "href": "api/NitroxModel.Packets.FireDoused.DouseAmount.html",
    "title": "Property DouseAmount | Nitrox",
    "keywords": "Property DouseAmount Namespace NitroxModel.Packets Assembly NitroxModel.dll DouseAmount public float DouseAmount { get; } Property Value float"
  },
  "api/NitroxModel.Packets.FireDoused.Id.html": {
    "href": "api/NitroxModel.Packets.FireDoused.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.FireDoused.html": {
    "href": "api/NitroxModel.Packets.FireDoused.html",
    "title": "Class FireDoused | Nitrox",
    "keywords": "Class FireDoused Namespace NitroxModel.Packets Assembly NitroxModel.dll Triggered when a fire has been doused. Fire growth is a static thing, so we only need to track dousing [Serializable] public class FireDoused : Packet Inheritance object Packet FireDoused Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FireDoused(NitroxId, float) Properties DouseAmount Id"
  },
  "api/NitroxModel.Packets.GameModeChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.GameModeChanged.-ctor.html",
    "title": "Constructor GameModeChanged | Nitrox",
    "keywords": "Constructor GameModeChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll GameModeChanged(ushort, bool, NitroxGameMode) public GameModeChanged(ushort playerId, bool allPlayers, NitroxGameMode gameMode) Parameters playerId ushort allPlayers bool gameMode NitroxGameMode"
  },
  "api/NitroxModel.Packets.GameModeChanged.AllPlayers.html": {
    "href": "api/NitroxModel.Packets.GameModeChanged.AllPlayers.html",
    "title": "Property AllPlayers | Nitrox",
    "keywords": "Property AllPlayers Namespace NitroxModel.Packets Assembly NitroxModel.dll AllPlayers public bool AllPlayers { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.GameModeChanged.ForAllPlayers.html": {
    "href": "api/NitroxModel.Packets.GameModeChanged.ForAllPlayers.html",
    "title": "Method ForAllPlayers | Nitrox",
    "keywords": "Method ForAllPlayers Namespace NitroxModel.Packets Assembly NitroxModel.dll ForAllPlayers(NitroxGameMode) public static GameModeChanged ForAllPlayers(NitroxGameMode gameMode) Parameters gameMode NitroxGameMode Returns GameModeChanged"
  },
  "api/NitroxModel.Packets.GameModeChanged.ForPlayer.html": {
    "href": "api/NitroxModel.Packets.GameModeChanged.ForPlayer.html",
    "title": "Method ForPlayer | Nitrox",
    "keywords": "Method ForPlayer Namespace NitroxModel.Packets Assembly NitroxModel.dll ForPlayer(ushort, NitroxGameMode) public static GameModeChanged ForPlayer(ushort playerId, NitroxGameMode gameMode) Parameters playerId ushort gameMode NitroxGameMode Returns GameModeChanged"
  },
  "api/NitroxModel.Packets.GameModeChanged.GameMode.html": {
    "href": "api/NitroxModel.Packets.GameModeChanged.GameMode.html",
    "title": "Property GameMode | Nitrox",
    "keywords": "Property GameMode Namespace NitroxModel.Packets Assembly NitroxModel.dll GameMode public NitroxGameMode GameMode { get; } Property Value NitroxGameMode"
  },
  "api/NitroxModel.Packets.GameModeChanged.PlayerId.html": {
    "href": "api/NitroxModel.Packets.GameModeChanged.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.GameModeChanged.html": {
    "href": "api/NitroxModel.Packets.GameModeChanged.html",
    "title": "Class GameModeChanged | Nitrox",
    "keywords": "Class GameModeChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class GameModeChanged : Packet Inheritance object Packet GameModeChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GameModeChanged(ushort, bool, NitroxGameMode) Properties AllPlayers GameMode PlayerId Methods ForAllPlayers(NitroxGameMode) ForPlayer(ushort, NitroxGameMode)"
  },
  "api/NitroxModel.Packets.GoalCompleted.-ctor.html": {
    "href": "api/NitroxModel.Packets.GoalCompleted.-ctor.html",
    "title": "Constructor GoalCompleted | Nitrox",
    "keywords": "Constructor GoalCompleted Namespace NitroxModel.Packets Assembly NitroxModel.dll GoalCompleted(string, float) public GoalCompleted(string completedGoal, float completionTime) Parameters completedGoal string completionTime float"
  },
  "api/NitroxModel.Packets.GoalCompleted.CompletedGoal.html": {
    "href": "api/NitroxModel.Packets.GoalCompleted.CompletedGoal.html",
    "title": "Property CompletedGoal | Nitrox",
    "keywords": "Property CompletedGoal Namespace NitroxModel.Packets Assembly NitroxModel.dll CompletedGoal public string CompletedGoal { get; } Property Value string"
  },
  "api/NitroxModel.Packets.GoalCompleted.CompletionTime.html": {
    "href": "api/NitroxModel.Packets.GoalCompleted.CompletionTime.html",
    "title": "Property CompletionTime | Nitrox",
    "keywords": "Property CompletionTime Namespace NitroxModel.Packets Assembly NitroxModel.dll CompletionTime public float CompletionTime { get; } Property Value float"
  },
  "api/NitroxModel.Packets.GoalCompleted.html": {
    "href": "api/NitroxModel.Packets.GoalCompleted.html",
    "title": "Class GoalCompleted | Nitrox",
    "keywords": "Class GoalCompleted Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class GoalCompleted : Packet Inheritance object Packet GoalCompleted Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GoalCompleted(string, float) Properties CompletedGoal CompletionTime"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.-ctor.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.-ctor.html",
    "title": "Constructor InitialPlayerSync | Nitrox",
    "keywords": "Constructor InitialPlayerSync Namespace NitroxModel.Packets Assembly NitroxModel.dll InitialPlayerSync(NitroxId, bool, NitroxId, IEnumerable<EquippedItemData>, IEnumerable<NitroxTechType>, Optional<NitroxId>[], InitialPDAData, InitialStoryGoalData, NitroxVector3, NitroxQuaternion, Optional<NitroxId>, PlayerStatsData, IEnumerable<PlayerContext>, IEnumerable<Entity>, IEnumerable<NitroxId>, NitroxGameMode, Perms, SubnauticaPlayerPreferences, TimeData, Dictionary<NitroxId, int>) public InitialPlayerSync(NitroxId playerGameObjectId, bool firstTimeConnecting, NitroxId assignedEscapePodId, IEnumerable<EquippedItemData> equipment, IEnumerable<NitroxTechType> usedItems, Optional<NitroxId>[] quickSlotsBindingIds, InitialPDAData pdaData, InitialStoryGoalData storyGoalData, NitroxVector3 playerSpawnData, NitroxQuaternion playerSpawnRotation, Optional<NitroxId> playerSubRootId, PlayerStatsData playerStatsData, IEnumerable<PlayerContext> otherPlayers, IEnumerable<Entity> globalRootEntities, IEnumerable<NitroxId> initialSimulationOwnerships, NitroxGameMode gameMode, Perms perms, SubnauticaPlayerPreferences preferences, TimeData timeData, Dictionary<NitroxId, int> buildOperationIds) Parameters playerGameObjectId NitroxId firstTimeConnecting bool assignedEscapePodId NitroxId equipment IEnumerable<EquippedItemData> usedItems IEnumerable<NitroxTechType> quickSlotsBindingIds Optional<NitroxId>[] pdaData InitialPDAData storyGoalData InitialStoryGoalData playerSpawnData NitroxVector3 playerSpawnRotation NitroxQuaternion playerSubRootId Optional<NitroxId> playerStatsData PlayerStatsData otherPlayers IEnumerable<PlayerContext> globalRootEntities IEnumerable<Entity> initialSimulationOwnerships IEnumerable<NitroxId> gameMode NitroxGameMode perms Perms preferences SubnauticaPlayerPreferences timeData TimeData buildOperationIds Dictionary<NitroxId, int> InitialPlayerSync(NitroxId, List<EquippedItemData>, List<NitroxTechType>, Optional<NitroxId>[], NitroxId, bool, InitialPDAData, InitialStoryGoalData, NitroxVector3, NitroxQuaternion, Optional<NitroxId>, PlayerStatsData, List<PlayerContext>, List<Entity>, List<NitroxId>, NitroxGameMode, Perms, SubnauticaPlayerPreferences, TimeData, Dictionary<NitroxId, int>) public InitialPlayerSync(NitroxId assignedEscapePodId, List<EquippedItemData> equippedItems, List<NitroxTechType> usedItems, Optional<NitroxId>[] quickSlotsBindingIds, NitroxId playerGameObjectId, bool firstTimeConnecting, InitialPDAData pdaData, InitialStoryGoalData storyGoalData, NitroxVector3 playerSpawnData, NitroxQuaternion playerSpawnRotation, Optional<NitroxId> playerSubRootId, PlayerStatsData playerStatsData, List<PlayerContext> otherPlayers, List<Entity> globalRootEntities, List<NitroxId> initialSimulationOwnerships, NitroxGameMode gameMode, Perms permissions, SubnauticaPlayerPreferences preferences, TimeData timeData, Dictionary<NitroxId, int> buildOperationIds) Parameters assignedEscapePodId NitroxId equippedItems List<EquippedItemData> usedItems List<NitroxTechType> quickSlotsBindingIds Optional<NitroxId>[] playerGameObjectId NitroxId firstTimeConnecting bool pdaData InitialPDAData storyGoalData InitialStoryGoalData playerSpawnData NitroxVector3 playerSpawnRotation NitroxQuaternion playerSubRootId Optional<NitroxId> playerStatsData PlayerStatsData otherPlayers List<PlayerContext> globalRootEntities List<Entity> initialSimulationOwnerships List<NitroxId> gameMode NitroxGameMode permissions Perms preferences SubnauticaPlayerPreferences timeData TimeData buildOperationIds Dictionary<NitroxId, int> Remarks Used for deserialization"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.AssignedEscapePodId.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.AssignedEscapePodId.html",
    "title": "Property AssignedEscapePodId | Nitrox",
    "keywords": "Property AssignedEscapePodId Namespace NitroxModel.Packets Assembly NitroxModel.dll AssignedEscapePodId public NitroxId AssignedEscapePodId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.BuildOperationIds.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.BuildOperationIds.html",
    "title": "Property BuildOperationIds | Nitrox",
    "keywords": "Property BuildOperationIds Namespace NitroxModel.Packets Assembly NitroxModel.dll BuildOperationIds public Dictionary<NitroxId, int> BuildOperationIds { get; } Property Value Dictionary<NitroxId, int>"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.EquippedItems.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.EquippedItems.html",
    "title": "Property EquippedItems | Nitrox",
    "keywords": "Property EquippedItems Namespace NitroxModel.Packets Assembly NitroxModel.dll EquippedItems public List<EquippedItemData> EquippedItems { get; } Property Value List<EquippedItemData>"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.FirstTimeConnecting.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.FirstTimeConnecting.html",
    "title": "Property FirstTimeConnecting | Nitrox",
    "keywords": "Property FirstTimeConnecting Namespace NitroxModel.Packets Assembly NitroxModel.dll FirstTimeConnecting public bool FirstTimeConnecting { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.GameMode.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.GameMode.html",
    "title": "Property GameMode | Nitrox",
    "keywords": "Property GameMode Namespace NitroxModel.Packets Assembly NitroxModel.dll GameMode public NitroxGameMode GameMode { get; } Property Value NitroxGameMode"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.GlobalRootEntities.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.GlobalRootEntities.html",
    "title": "Property GlobalRootEntities | Nitrox",
    "keywords": "Property GlobalRootEntities Namespace NitroxModel.Packets Assembly NitroxModel.dll GlobalRootEntities public List<Entity> GlobalRootEntities { get; } Property Value List<Entity>"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.InitialSimulationOwnerships.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.InitialSimulationOwnerships.html",
    "title": "Property InitialSimulationOwnerships | Nitrox",
    "keywords": "Property InitialSimulationOwnerships Namespace NitroxModel.Packets Assembly NitroxModel.dll InitialSimulationOwnerships public List<NitroxId> InitialSimulationOwnerships { get; } Property Value List<NitroxId>"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.OtherPlayers.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.OtherPlayers.html",
    "title": "Property OtherPlayers | Nitrox",
    "keywords": "Property OtherPlayers Namespace NitroxModel.Packets Assembly NitroxModel.dll OtherPlayers public List<PlayerContext> OtherPlayers { get; } Property Value List<PlayerContext>"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.PDAData.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.PDAData.html",
    "title": "Property PDAData | Nitrox",
    "keywords": "Property PDAData Namespace NitroxModel.Packets Assembly NitroxModel.dll PDAData public InitialPDAData PDAData { get; } Property Value InitialPDAData"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.Permissions.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.Permissions.html",
    "title": "Property Permissions | Nitrox",
    "keywords": "Property Permissions Namespace NitroxModel.Packets Assembly NitroxModel.dll Permissions public Perms Permissions { get; } Property Value Perms"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.PlayerGameObjectId.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.PlayerGameObjectId.html",
    "title": "Property PlayerGameObjectId | Nitrox",
    "keywords": "Property PlayerGameObjectId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerGameObjectId public NitroxId PlayerGameObjectId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.PlayerSpawnData.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.PlayerSpawnData.html",
    "title": "Property PlayerSpawnData | Nitrox",
    "keywords": "Property PlayerSpawnData Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerSpawnData public NitroxVector3 PlayerSpawnData { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.PlayerSpawnRotation.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.PlayerSpawnRotation.html",
    "title": "Property PlayerSpawnRotation | Nitrox",
    "keywords": "Property PlayerSpawnRotation Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerSpawnRotation public NitroxQuaternion PlayerSpawnRotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.PlayerStatsData.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.PlayerStatsData.html",
    "title": "Property PlayerStatsData | Nitrox",
    "keywords": "Property PlayerStatsData Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerStatsData public PlayerStatsData PlayerStatsData { get; } Property Value PlayerStatsData"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.PlayerSubRootId.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.PlayerSubRootId.html",
    "title": "Property PlayerSubRootId | Nitrox",
    "keywords": "Property PlayerSubRootId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerSubRootId public Optional<NitroxId> PlayerSubRootId { get; } Property Value Optional<NitroxId>"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.Preferences.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.Preferences.html",
    "title": "Property Preferences | Nitrox",
    "keywords": "Property Preferences Namespace NitroxModel.Packets Assembly NitroxModel.dll Preferences public SubnauticaPlayerPreferences Preferences { get; } Property Value SubnauticaPlayerPreferences"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.QuickSlotsBindingIds.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.QuickSlotsBindingIds.html",
    "title": "Property QuickSlotsBindingIds | Nitrox",
    "keywords": "Property QuickSlotsBindingIds Namespace NitroxModel.Packets Assembly NitroxModel.dll QuickSlotsBindingIds public Optional<NitroxId>[] QuickSlotsBindingIds { get; } Property Value Optional<NitroxId>[]"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.StoryGoalData.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.StoryGoalData.html",
    "title": "Property StoryGoalData | Nitrox",
    "keywords": "Property StoryGoalData Namespace NitroxModel.Packets Assembly NitroxModel.dll StoryGoalData public InitialStoryGoalData StoryGoalData { get; } Property Value InitialStoryGoalData"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.TimeData.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.TimeData.html",
    "title": "Property TimeData | Nitrox",
    "keywords": "Property TimeData Namespace NitroxModel.Packets Assembly NitroxModel.dll TimeData public TimeData TimeData { get; } Property Value TimeData"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.UsedItems.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.UsedItems.html",
    "title": "Property UsedItems | Nitrox",
    "keywords": "Property UsedItems Namespace NitroxModel.Packets Assembly NitroxModel.dll UsedItems public List<NitroxTechType> UsedItems { get; } Property Value List<NitroxTechType>"
  },
  "api/NitroxModel.Packets.InitialPlayerSync.html": {
    "href": "api/NitroxModel.Packets.InitialPlayerSync.html",
    "title": "Class InitialPlayerSync | Nitrox",
    "keywords": "Class InitialPlayerSync Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class InitialPlayerSync : Packet Inheritance object Packet InitialPlayerSync Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InitialPlayerSync(NitroxId, bool, NitroxId, IEnumerable<EquippedItemData>, IEnumerable<NitroxTechType>, Optional<NitroxId>[], InitialPDAData, InitialStoryGoalData, NitroxVector3, NitroxQuaternion, Optional<NitroxId>, PlayerStatsData, IEnumerable<PlayerContext>, IEnumerable<Entity>, IEnumerable<NitroxId>, NitroxGameMode, Perms, SubnauticaPlayerPreferences, TimeData, Dictionary<NitroxId, int>) InitialPlayerSync(NitroxId, List<EquippedItemData>, List<NitroxTechType>, Optional<NitroxId>[], NitroxId, bool, InitialPDAData, InitialStoryGoalData, NitroxVector3, NitroxQuaternion, Optional<NitroxId>, PlayerStatsData, List<PlayerContext>, List<Entity>, List<NitroxId>, NitroxGameMode, Perms, SubnauticaPlayerPreferences, TimeData, Dictionary<NitroxId, int>) Properties AssignedEscapePodId BuildOperationIds EquippedItems FirstTimeConnecting GameMode GlobalRootEntities InitialSimulationOwnerships OtherPlayers PDAData Permissions PlayerGameObjectId PlayerSpawnData PlayerSpawnRotation PlayerStatsData PlayerSubRootId Preferences QuickSlotsBindingIds StoryGoalData TimeData UsedItems"
  },
  "api/NitroxModel.Packets.ItemPosition.-ctor.html": {
    "href": "api/NitroxModel.Packets.ItemPosition.-ctor.html",
    "title": "Constructor ItemPosition | Nitrox",
    "keywords": "Constructor ItemPosition Namespace NitroxModel.Packets Assembly NitroxModel.dll ItemPosition(NitroxId, NitroxVector3, NitroxQuaternion) public ItemPosition(NitroxId id, NitroxVector3 position, NitroxQuaternion rotation) Parameters id NitroxId position NitroxVector3 rotation NitroxQuaternion"
  },
  "api/NitroxModel.Packets.ItemPosition.Id.html": {
    "href": "api/NitroxModel.Packets.ItemPosition.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.ItemPosition.Position.html": {
    "href": "api/NitroxModel.Packets.ItemPosition.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel.Packets Assembly NitroxModel.dll Position public NitroxVector3 Position { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.ItemPosition.Rotation.html": {
    "href": "api/NitroxModel.Packets.ItemPosition.Rotation.html",
    "title": "Property Rotation | Nitrox",
    "keywords": "Property Rotation Namespace NitroxModel.Packets Assembly NitroxModel.dll Rotation public NitroxQuaternion Rotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.Packets.ItemPosition.html": {
    "href": "api/NitroxModel.Packets.ItemPosition.html",
    "title": "Class ItemPosition | Nitrox",
    "keywords": "Class ItemPosition Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class ItemPosition : Packet Inheritance object Packet ItemPosition Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemPosition(NitroxId, NitroxVector3, NitroxQuaternion) Properties Id Position Rotation"
  },
  "api/NitroxModel.Packets.KnownTechEntryAdd.-ctor.html": {
    "href": "api/NitroxModel.Packets.KnownTechEntryAdd.-ctor.html",
    "title": "Constructor KnownTechEntryAdd | Nitrox",
    "keywords": "Constructor KnownTechEntryAdd Namespace NitroxModel.Packets Assembly NitroxModel.dll KnownTechEntryAdd(EntryCategory, NitroxTechType, bool, List<NitroxTechType>) public KnownTechEntryAdd(KnownTechEntryAdd.EntryCategory category, NitroxTechType techType, bool verbose, List<NitroxTechType> partialTechTypesToRemove = null) Parameters category KnownTechEntryAdd.EntryCategory techType NitroxTechType verbose bool partialTechTypesToRemove List<NitroxTechType>"
  },
  "api/NitroxModel.Packets.KnownTechEntryAdd.Category.html": {
    "href": "api/NitroxModel.Packets.KnownTechEntryAdd.Category.html",
    "title": "Property Category | Nitrox",
    "keywords": "Property Category Namespace NitroxModel.Packets Assembly NitroxModel.dll Category public KnownTechEntryAdd.EntryCategory Category { get; } Property Value KnownTechEntryAdd.EntryCategory"
  },
  "api/NitroxModel.Packets.KnownTechEntryAdd.EntryCategory.html": {
    "href": "api/NitroxModel.Packets.KnownTechEntryAdd.EntryCategory.html",
    "title": "Enum KnownTechEntryAdd.EntryCategory | Nitrox",
    "keywords": "Enum KnownTechEntryAdd.EntryCategory Namespace NitroxModel.Packets Assembly NitroxModel.dll public enum KnownTechEntryAdd.EntryCategory Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields ANALYZED = 1 KnownTech.analyzedTech Tech items that you find in the world and acquire. They often show a notification saying you found/learned about them. (Fish, Resources, etc) KNOWN = 0 KnownTech.knownTech Tech items that you learn about after fulfilling a requirement. Often times, discovering a new KnownTech.analyzedTech item will provide 1 or more KnownTech.knownTech items. (Peeper -> CookedPeeper)"
  },
  "api/NitroxModel.Packets.KnownTechEntryAdd.PartialTechTypesToRemove.html": {
    "href": "api/NitroxModel.Packets.KnownTechEntryAdd.PartialTechTypesToRemove.html",
    "title": "Property PartialTechTypesToRemove | Nitrox",
    "keywords": "Property PartialTechTypesToRemove Namespace NitroxModel.Packets Assembly NitroxModel.dll PartialTechTypesToRemove public List<NitroxTechType> PartialTechTypesToRemove { get; } Property Value List<NitroxTechType>"
  },
  "api/NitroxModel.Packets.KnownTechEntryAdd.TechType.html": {
    "href": "api/NitroxModel.Packets.KnownTechEntryAdd.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.Packets Assembly NitroxModel.dll TechType public NitroxTechType TechType { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.Packets.KnownTechEntryAdd.Verbose.html": {
    "href": "api/NitroxModel.Packets.KnownTechEntryAdd.Verbose.html",
    "title": "Property Verbose | Nitrox",
    "keywords": "Property Verbose Namespace NitroxModel.Packets Assembly NitroxModel.dll Verbose public bool Verbose { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.KnownTechEntryAdd.html": {
    "href": "api/NitroxModel.Packets.KnownTechEntryAdd.html",
    "title": "Class KnownTechEntryAdd | Nitrox",
    "keywords": "Class KnownTechEntryAdd Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class KnownTechEntryAdd : Packet Inheritance object Packet KnownTechEntryAdd Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KnownTechEntryAdd(EntryCategory, NitroxTechType, bool, List<NitroxTechType>) Properties Category PartialTechTypesToRemove TechType Verbose"
  },
  "api/NitroxModel.Packets.MedicalCabinetClicked.-ctor.html": {
    "href": "api/NitroxModel.Packets.MedicalCabinetClicked.-ctor.html",
    "title": "Constructor MedicalCabinetClicked | Nitrox",
    "keywords": "Constructor MedicalCabinetClicked Namespace NitroxModel.Packets Assembly NitroxModel.dll MedicalCabinetClicked(NitroxId, bool, bool, float) public MedicalCabinetClicked(NitroxId id, bool doorOpen, bool hasMedKit, float nextSpawnTime) Parameters id NitroxId doorOpen bool hasMedKit bool nextSpawnTime float"
  },
  "api/NitroxModel.Packets.MedicalCabinetClicked.DoorOpen.html": {
    "href": "api/NitroxModel.Packets.MedicalCabinetClicked.DoorOpen.html",
    "title": "Property DoorOpen | Nitrox",
    "keywords": "Property DoorOpen Namespace NitroxModel.Packets Assembly NitroxModel.dll DoorOpen public bool DoorOpen { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.MedicalCabinetClicked.HasMedKit.html": {
    "href": "api/NitroxModel.Packets.MedicalCabinetClicked.HasMedKit.html",
    "title": "Property HasMedKit | Nitrox",
    "keywords": "Property HasMedKit Namespace NitroxModel.Packets Assembly NitroxModel.dll HasMedKit public bool HasMedKit { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.MedicalCabinetClicked.Id.html": {
    "href": "api/NitroxModel.Packets.MedicalCabinetClicked.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.MedicalCabinetClicked.NextSpawnTime.html": {
    "href": "api/NitroxModel.Packets.MedicalCabinetClicked.NextSpawnTime.html",
    "title": "Property NextSpawnTime | Nitrox",
    "keywords": "Property NextSpawnTime Namespace NitroxModel.Packets Assembly NitroxModel.dll NextSpawnTime public float NextSpawnTime { get; } Property Value float"
  },
  "api/NitroxModel.Packets.MedicalCabinetClicked.html": {
    "href": "api/NitroxModel.Packets.MedicalCabinetClicked.html",
    "title": "Class MedicalCabinetClicked | Nitrox",
    "keywords": "Class MedicalCabinetClicked Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class MedicalCabinetClicked : Packet Inheritance object Packet MedicalCabinetClicked Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MedicalCabinetClicked(NitroxId, bool, bool, float) Properties DoorOpen HasMedKit Id NextSpawnTime"
  },
  "api/NitroxModel.Packets.ModifyConstructedAmount.-ctor.html": {
    "href": "api/NitroxModel.Packets.ModifyConstructedAmount.-ctor.html",
    "title": "Constructor ModifyConstructedAmount | Nitrox",
    "keywords": "Constructor ModifyConstructedAmount Namespace NitroxModel.Packets Assembly NitroxModel.dll ModifyConstructedAmount(NitroxId, float) public ModifyConstructedAmount(NitroxId ghostId, float constructedAmount) Parameters ghostId NitroxId constructedAmount float"
  },
  "api/NitroxModel.Packets.ModifyConstructedAmount.ConstructedAmount.html": {
    "href": "api/NitroxModel.Packets.ModifyConstructedAmount.ConstructedAmount.html",
    "title": "Property ConstructedAmount | Nitrox",
    "keywords": "Property ConstructedAmount Namespace NitroxModel.Packets Assembly NitroxModel.dll ConstructedAmount public float ConstructedAmount { get; } Property Value float"
  },
  "api/NitroxModel.Packets.ModifyConstructedAmount.GhostId.html": {
    "href": "api/NitroxModel.Packets.ModifyConstructedAmount.GhostId.html",
    "title": "Property GhostId | Nitrox",
    "keywords": "Property GhostId Namespace NitroxModel.Packets Assembly NitroxModel.dll GhostId public NitroxId GhostId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.ModifyConstructedAmount.html": {
    "href": "api/NitroxModel.Packets.ModifyConstructedAmount.html",
    "title": "Class ModifyConstructedAmount | Nitrox",
    "keywords": "Class ModifyConstructedAmount Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public sealed class ModifyConstructedAmount : Packet Inheritance object Packet ModifyConstructedAmount Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors ModifyConstructedAmount(NitroxId, float) Properties ConstructedAmount GhostId"
  },
  "api/NitroxModel.Packets.ModuleAdded.-ctor.html": {
    "href": "api/NitroxModel.Packets.ModuleAdded.-ctor.html",
    "title": "Constructor ModuleAdded | Nitrox",
    "keywords": "Constructor ModuleAdded Namespace NitroxModel.Packets Assembly NitroxModel.dll ModuleAdded(NitroxId, NitroxId, string) public ModuleAdded(NitroxId id, NitroxId parentId, string slot) Parameters id NitroxId parentId NitroxId slot string"
  },
  "api/NitroxModel.Packets.ModuleAdded.Id.html": {
    "href": "api/NitroxModel.Packets.ModuleAdded.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.ModuleAdded.ParentId.html": {
    "href": "api/NitroxModel.Packets.ModuleAdded.ParentId.html",
    "title": "Property ParentId | Nitrox",
    "keywords": "Property ParentId Namespace NitroxModel.Packets Assembly NitroxModel.dll ParentId public NitroxId ParentId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.ModuleAdded.Slot.html": {
    "href": "api/NitroxModel.Packets.ModuleAdded.Slot.html",
    "title": "Property Slot | Nitrox",
    "keywords": "Property Slot Namespace NitroxModel.Packets Assembly NitroxModel.dll Slot public string Slot { get; } Property Value string"
  },
  "api/NitroxModel.Packets.ModuleAdded.html": {
    "href": "api/NitroxModel.Packets.ModuleAdded.html",
    "title": "Class ModuleAdded | Nitrox",
    "keywords": "Class ModuleAdded Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class ModuleAdded : Packet Inheritance object Packet ModuleAdded Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ModuleAdded(NitroxId, NitroxId, string) Properties Id ParentId Slot"
  },
  "api/NitroxModel.Packets.ModuleRemoved.-ctor.html": {
    "href": "api/NitroxModel.Packets.ModuleRemoved.-ctor.html",
    "title": "Constructor ModuleRemoved | Nitrox",
    "keywords": "Constructor ModuleRemoved Namespace NitroxModel.Packets Assembly NitroxModel.dll ModuleRemoved(NitroxId, NitroxId) public ModuleRemoved(NitroxId id, NitroxId newParentId) Parameters id NitroxId newParentId NitroxId"
  },
  "api/NitroxModel.Packets.ModuleRemoved.Id.html": {
    "href": "api/NitroxModel.Packets.ModuleRemoved.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.ModuleRemoved.NewParentId.html": {
    "href": "api/NitroxModel.Packets.ModuleRemoved.NewParentId.html",
    "title": "Property NewParentId | Nitrox",
    "keywords": "Property NewParentId Namespace NitroxModel.Packets Assembly NitroxModel.dll NewParentId public NitroxId NewParentId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.ModuleRemoved.html": {
    "href": "api/NitroxModel.Packets.ModuleRemoved.html",
    "title": "Class ModuleRemoved | Nitrox",
    "keywords": "Class ModuleRemoved Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class ModuleRemoved : Packet Inheritance object Packet ModuleRemoved Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ModuleRemoved(NitroxId, NitroxId) Properties Id NewParentId"
  },
  "api/NitroxModel.Packets.Movement.AimingRotation.html": {
    "href": "api/NitroxModel.Packets.Movement.AimingRotation.html",
    "title": "Property AimingRotation | Nitrox",
    "keywords": "Property AimingRotation Namespace NitroxModel.Packets Assembly NitroxModel.dll AimingRotation public abstract NitroxQuaternion AimingRotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.Packets.Movement.BodyRotation.html": {
    "href": "api/NitroxModel.Packets.Movement.BodyRotation.html",
    "title": "Property BodyRotation | Nitrox",
    "keywords": "Property BodyRotation Namespace NitroxModel.Packets Assembly NitroxModel.dll BodyRotation public abstract NitroxQuaternion BodyRotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.Packets.Movement.PlayerId.html": {
    "href": "api/NitroxModel.Packets.Movement.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public abstract ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.Movement.Position.html": {
    "href": "api/NitroxModel.Packets.Movement.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel.Packets Assembly NitroxModel.dll Position public abstract NitroxVector3 Position { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.Movement.Velocity.html": {
    "href": "api/NitroxModel.Packets.Movement.Velocity.html",
    "title": "Property Velocity | Nitrox",
    "keywords": "Property Velocity Namespace NitroxModel.Packets Assembly NitroxModel.dll Velocity public abstract NitroxVector3 Velocity { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.Movement.html": {
    "href": "api/NitroxModel.Packets.Movement.html",
    "title": "Class Movement | Nitrox",
    "keywords": "Class Movement Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public abstract class Movement : Packet Inheritance object Packet Movement Derived PlayerMovement VehicleMovement Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties AimingRotation BodyRotation PlayerId Position Velocity"
  },
  "api/NitroxModel.Packets.MultiplayerSessionPolicy.-ctor.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionPolicy.-ctor.html",
    "title": "Constructor MultiplayerSessionPolicy | Nitrox",
    "keywords": "Constructor MultiplayerSessionPolicy Namespace NitroxModel.Packets Assembly NitroxModel.dll MultiplayerSessionPolicy(string, bool, int, bool) public MultiplayerSessionPolicy(string correlationId, bool disableConsole, int maxConnections, bool requiresServerPassword) Parameters correlationId string disableConsole bool maxConnections int requiresServerPassword bool MultiplayerSessionPolicy(string, bool, MultiplayerSessionAuthenticationAuthority, bool, int, NitroxVersion) public MultiplayerSessionPolicy(string correlationId, bool requiresServerPassword, MultiplayerSessionAuthenticationAuthority authenticationAuthority, bool disableConsole, int maxConnections, NitroxVersion nitroxVersionAllowed) Parameters correlationId string requiresServerPassword bool authenticationAuthority MultiplayerSessionAuthenticationAuthority disableConsole bool maxConnections int nitroxVersionAllowed NitroxVersion Remarks Used for deserialization"
  },
  "api/NitroxModel.Packets.MultiplayerSessionPolicy.AuthenticationAuthority.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionPolicy.AuthenticationAuthority.html",
    "title": "Property AuthenticationAuthority | Nitrox",
    "keywords": "Property AuthenticationAuthority Namespace NitroxModel.Packets Assembly NitroxModel.dll AuthenticationAuthority public MultiplayerSessionAuthenticationAuthority AuthenticationAuthority { get; } Property Value MultiplayerSessionAuthenticationAuthority"
  },
  "api/NitroxModel.Packets.MultiplayerSessionPolicy.DisableConsole.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionPolicy.DisableConsole.html",
    "title": "Property DisableConsole | Nitrox",
    "keywords": "Property DisableConsole Namespace NitroxModel.Packets Assembly NitroxModel.dll DisableConsole public bool DisableConsole { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.MultiplayerSessionPolicy.MaxConnections.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionPolicy.MaxConnections.html",
    "title": "Property MaxConnections | Nitrox",
    "keywords": "Property MaxConnections Namespace NitroxModel.Packets Assembly NitroxModel.dll MaxConnections public int MaxConnections { get; } Property Value int"
  },
  "api/NitroxModel.Packets.MultiplayerSessionPolicy.NitroxVersionAllowed.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionPolicy.NitroxVersionAllowed.html",
    "title": "Property NitroxVersionAllowed | Nitrox",
    "keywords": "Property NitroxVersionAllowed Namespace NitroxModel.Packets Assembly NitroxModel.dll NitroxVersionAllowed public NitroxVersion NitroxVersionAllowed { get; } Property Value NitroxVersion"
  },
  "api/NitroxModel.Packets.MultiplayerSessionPolicy.RequiresServerPassword.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionPolicy.RequiresServerPassword.html",
    "title": "Property RequiresServerPassword | Nitrox",
    "keywords": "Property RequiresServerPassword Namespace NitroxModel.Packets Assembly NitroxModel.dll RequiresServerPassword public bool RequiresServerPassword { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.MultiplayerSessionPolicy.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionPolicy.html",
    "title": "Class MultiplayerSessionPolicy | Nitrox",
    "keywords": "Class MultiplayerSessionPolicy Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class MultiplayerSessionPolicy : CorrelatedPacket Inheritance object Packet CorrelatedPacket MultiplayerSessionPolicy Inherited Members CorrelatedPacket.CorrelationId Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MultiplayerSessionPolicy(string, bool, MultiplayerSessionAuthenticationAuthority, bool, int, NitroxVersion) MultiplayerSessionPolicy(string, bool, int, bool) Properties AuthenticationAuthority DisableConsole MaxConnections NitroxVersionAllowed RequiresServerPassword"
  },
  "api/NitroxModel.Packets.MultiplayerSessionPolicyRequest.-ctor.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionPolicyRequest.-ctor.html",
    "title": "Constructor MultiplayerSessionPolicyRequest | Nitrox",
    "keywords": "Constructor MultiplayerSessionPolicyRequest Namespace NitroxModel.Packets Assembly NitroxModel.dll MultiplayerSessionPolicyRequest(string) public MultiplayerSessionPolicyRequest(string correlationId) Parameters correlationId string"
  },
  "api/NitroxModel.Packets.MultiplayerSessionPolicyRequest.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionPolicyRequest.html",
    "title": "Class MultiplayerSessionPolicyRequest | Nitrox",
    "keywords": "Class MultiplayerSessionPolicyRequest Namespace NitroxModel.Packets Assembly NitroxModel.dll This is a packet that we use to \"ping\" a server to let it know that we'd like more information on the current requirements to submit a reservation to the ongoing game session. [Serializable] public class MultiplayerSessionPolicyRequest : CorrelatedPacket Inheritance object Packet CorrelatedPacket MultiplayerSessionPolicyRequest Inherited Members CorrelatedPacket.CorrelationId Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MultiplayerSessionPolicyRequest(string)"
  },
  "api/NitroxModel.Packets.MultiplayerSessionReservation.-ctor.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionReservation.-ctor.html",
    "title": "Constructor MultiplayerSessionReservation | Nitrox",
    "keywords": "Constructor MultiplayerSessionReservation Namespace NitroxModel.Packets Assembly NitroxModel.dll MultiplayerSessionReservation(string, MultiplayerSessionReservationState) public MultiplayerSessionReservation(string correlationId, MultiplayerSessionReservationState reservationState) Parameters correlationId string reservationState MultiplayerSessionReservationState MultiplayerSessionReservation(string, ushort, string, MultiplayerSessionReservationState) public MultiplayerSessionReservation(string correlationId, ushort playerId, string reservationKey, MultiplayerSessionReservationState reservationState = MultiplayerSessionReservationState.RESERVED) Parameters correlationId string playerId ushort reservationKey string reservationState MultiplayerSessionReservationState"
  },
  "api/NitroxModel.Packets.MultiplayerSessionReservation.PlayerId.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionReservation.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.MultiplayerSessionReservation.ReservationKey.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionReservation.ReservationKey.html",
    "title": "Property ReservationKey | Nitrox",
    "keywords": "Property ReservationKey Namespace NitroxModel.Packets Assembly NitroxModel.dll ReservationKey public string ReservationKey { get; } Property Value string"
  },
  "api/NitroxModel.Packets.MultiplayerSessionReservation.ReservationState.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionReservation.ReservationState.html",
    "title": "Property ReservationState | Nitrox",
    "keywords": "Property ReservationState Namespace NitroxModel.Packets Assembly NitroxModel.dll ReservationState public MultiplayerSessionReservationState ReservationState { get; } Property Value MultiplayerSessionReservationState"
  },
  "api/NitroxModel.Packets.MultiplayerSessionReservation.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionReservation.html",
    "title": "Class MultiplayerSessionReservation | Nitrox",
    "keywords": "Class MultiplayerSessionReservation Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class MultiplayerSessionReservation : CorrelatedPacket Inheritance object Packet CorrelatedPacket MultiplayerSessionReservation Inherited Members CorrelatedPacket.CorrelationId Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MultiplayerSessionReservation(string, MultiplayerSessionReservationState) MultiplayerSessionReservation(string, ushort, string, MultiplayerSessionReservationState) Properties PlayerId ReservationKey ReservationState"
  },
  "api/NitroxModel.Packets.MultiplayerSessionReservationRequest.-ctor.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionReservationRequest.-ctor.html",
    "title": "Constructor MultiplayerSessionReservationRequest | Nitrox",
    "keywords": "Constructor MultiplayerSessionReservationRequest Namespace NitroxModel.Packets Assembly NitroxModel.dll MultiplayerSessionReservationRequest(string, PlayerSettings, AuthenticationContext) public MultiplayerSessionReservationRequest(string correlationId, PlayerSettings playerSettings, AuthenticationContext authenticationContext) Parameters correlationId string playerSettings PlayerSettings authenticationContext AuthenticationContext"
  },
  "api/NitroxModel.Packets.MultiplayerSessionReservationRequest.AuthenticationContext.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionReservationRequest.AuthenticationContext.html",
    "title": "Property AuthenticationContext | Nitrox",
    "keywords": "Property AuthenticationContext Namespace NitroxModel.Packets Assembly NitroxModel.dll AuthenticationContext public AuthenticationContext AuthenticationContext { get; } Property Value AuthenticationContext"
  },
  "api/NitroxModel.Packets.MultiplayerSessionReservationRequest.PlayerSettings.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionReservationRequest.PlayerSettings.html",
    "title": "Property PlayerSettings | Nitrox",
    "keywords": "Property PlayerSettings Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerSettings public PlayerSettings PlayerSettings { get; } Property Value PlayerSettings"
  },
  "api/NitroxModel.Packets.MultiplayerSessionReservationRequest.html": {
    "href": "api/NitroxModel.Packets.MultiplayerSessionReservationRequest.html",
    "title": "Class MultiplayerSessionReservationRequest | Nitrox",
    "keywords": "Class MultiplayerSessionReservationRequest Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class MultiplayerSessionReservationRequest : CorrelatedPacket Inheritance object Packet CorrelatedPacket MultiplayerSessionReservationRequest Inherited Members CorrelatedPacket.CorrelationId Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MultiplayerSessionReservationRequest(string, PlayerSettings, AuthenticationContext) Properties AuthenticationContext PlayerSettings"
  },
  "api/NitroxModel.Packets.MutePlayer.-ctor.html": {
    "href": "api/NitroxModel.Packets.MutePlayer.-ctor.html",
    "title": "Constructor MutePlayer | Nitrox",
    "keywords": "Constructor MutePlayer Namespace NitroxModel.Packets Assembly NitroxModel.dll MutePlayer(ushort, bool) public MutePlayer(ushort playerId, bool muted) Parameters playerId ushort muted bool"
  },
  "api/NitroxModel.Packets.MutePlayer.Muted.html": {
    "href": "api/NitroxModel.Packets.MutePlayer.Muted.html",
    "title": "Field Muted | Nitrox",
    "keywords": "Field Muted Namespace NitroxModel.Packets Assembly NitroxModel.dll public bool Muted Returns bool"
  },
  "api/NitroxModel.Packets.MutePlayer.PlayerId.html": {
    "href": "api/NitroxModel.Packets.MutePlayer.PlayerId.html",
    "title": "Field PlayerId | Nitrox",
    "keywords": "Field PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll public ushort PlayerId Returns ushort"
  },
  "api/NitroxModel.Packets.MutePlayer.html": {
    "href": "api/NitroxModel.Packets.MutePlayer.html",
    "title": "Class MutePlayer | Nitrox",
    "keywords": "Class MutePlayer Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class MutePlayer : Packet Inheritance object Packet MutePlayer Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MutePlayer(ushort, bool) Fields Muted PlayerId"
  },
  "api/NitroxModel.Packets.OpenableStateChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.OpenableStateChanged.-ctor.html",
    "title": "Constructor OpenableStateChanged | Nitrox",
    "keywords": "Constructor OpenableStateChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll OpenableStateChanged(NitroxId, bool, float) public OpenableStateChanged(NitroxId id, bool isOpen, float duration) Parameters id NitroxId isOpen bool duration float"
  },
  "api/NitroxModel.Packets.OpenableStateChanged.Duration.html": {
    "href": "api/NitroxModel.Packets.OpenableStateChanged.Duration.html",
    "title": "Property Duration | Nitrox",
    "keywords": "Property Duration Namespace NitroxModel.Packets Assembly NitroxModel.dll Duration public float Duration { get; } Property Value float"
  },
  "api/NitroxModel.Packets.OpenableStateChanged.Id.html": {
    "href": "api/NitroxModel.Packets.OpenableStateChanged.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.OpenableStateChanged.IsOpen.html": {
    "href": "api/NitroxModel.Packets.OpenableStateChanged.IsOpen.html",
    "title": "Property IsOpen | Nitrox",
    "keywords": "Property IsOpen Namespace NitroxModel.Packets Assembly NitroxModel.dll IsOpen public bool IsOpen { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.OpenableStateChanged.html": {
    "href": "api/NitroxModel.Packets.OpenableStateChanged.html",
    "title": "Class OpenableStateChanged | Nitrox",
    "keywords": "Class OpenableStateChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class OpenableStateChanged : Packet Inheritance object Packet OpenableStateChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors OpenableStateChanged(NitroxId, bool, float) Properties Duration Id IsOpen"
  },
  "api/NitroxModel.Packets.OrderedBuildPacket.-ctor.html": {
    "href": "api/NitroxModel.Packets.OrderedBuildPacket.-ctor.html",
    "title": "Constructor OrderedBuildPacket | Nitrox",
    "keywords": "Constructor OrderedBuildPacket Namespace NitroxModel.Packets Assembly NitroxModel.dll OrderedBuildPacket(int) protected OrderedBuildPacket(int operationId) Parameters operationId int"
  },
  "api/NitroxModel.Packets.OrderedBuildPacket.OperationId.html": {
    "href": "api/NitroxModel.Packets.OrderedBuildPacket.OperationId.html",
    "title": "Property OperationId | Nitrox",
    "keywords": "Property OperationId Namespace NitroxModel.Packets Assembly NitroxModel.dll OperationId public int OperationId { get; set; } Property Value int"
  },
  "api/NitroxModel.Packets.OrderedBuildPacket.html": {
    "href": "api/NitroxModel.Packets.OrderedBuildPacket.html",
    "title": "Class OrderedBuildPacket | Nitrox",
    "keywords": "Class OrderedBuildPacket Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public abstract class OrderedBuildPacket : Packet Inheritance object Packet OrderedBuildPacket Derived PieceDeconstructed UpdateBase Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors OrderedBuildPacket(int) Properties OperationId"
  },
  "api/NitroxModel.Packets.PDAEncyclopediaEntryAdd.-ctor.html": {
    "href": "api/NitroxModel.Packets.PDAEncyclopediaEntryAdd.-ctor.html",
    "title": "Constructor PDAEncyclopediaEntryAdd | Nitrox",
    "keywords": "Constructor PDAEncyclopediaEntryAdd Namespace NitroxModel.Packets Assembly NitroxModel.dll PDAEncyclopediaEntryAdd(string, bool) public PDAEncyclopediaEntryAdd(string key, bool verbose) Parameters key string verbose bool"
  },
  "api/NitroxModel.Packets.PDAEncyclopediaEntryAdd.Key.html": {
    "href": "api/NitroxModel.Packets.PDAEncyclopediaEntryAdd.Key.html",
    "title": "Property Key | Nitrox",
    "keywords": "Property Key Namespace NitroxModel.Packets Assembly NitroxModel.dll Key public string Key { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PDAEncyclopediaEntryAdd.Verbose.html": {
    "href": "api/NitroxModel.Packets.PDAEncyclopediaEntryAdd.Verbose.html",
    "title": "Property Verbose | Nitrox",
    "keywords": "Property Verbose Namespace NitroxModel.Packets Assembly NitroxModel.dll Verbose If true, shows a notification to the player. public bool Verbose { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.PDAEncyclopediaEntryAdd.html": {
    "href": "api/NitroxModel.Packets.PDAEncyclopediaEntryAdd.html",
    "title": "Class PDAEncyclopediaEntryAdd | Nitrox",
    "keywords": "Class PDAEncyclopediaEntryAdd Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PDAEncyclopediaEntryAdd : Packet Inheritance object Packet PDAEncyclopediaEntryAdd Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PDAEncyclopediaEntryAdd(string, bool) Properties Key Verbose If true, shows a notification to the player."
  },
  "api/NitroxModel.Packets.PDALogEntryAdd.-ctor.html": {
    "href": "api/NitroxModel.Packets.PDALogEntryAdd.-ctor.html",
    "title": "Constructor PDALogEntryAdd | Nitrox",
    "keywords": "Constructor PDALogEntryAdd Namespace NitroxModel.Packets Assembly NitroxModel.dll PDALogEntryAdd(string, float) public PDALogEntryAdd(string key, float timestamp) Parameters key string timestamp float"
  },
  "api/NitroxModel.Packets.PDALogEntryAdd.Key.html": {
    "href": "api/NitroxModel.Packets.PDALogEntryAdd.Key.html",
    "title": "Property Key | Nitrox",
    "keywords": "Property Key Namespace NitroxModel.Packets Assembly NitroxModel.dll Key public string Key { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PDALogEntryAdd.Timestamp.html": {
    "href": "api/NitroxModel.Packets.PDALogEntryAdd.Timestamp.html",
    "title": "Property Timestamp | Nitrox",
    "keywords": "Property Timestamp Namespace NitroxModel.Packets Assembly NitroxModel.dll Timestamp public float Timestamp { get; } Property Value float"
  },
  "api/NitroxModel.Packets.PDALogEntryAdd.html": {
    "href": "api/NitroxModel.Packets.PDALogEntryAdd.html",
    "title": "Class PDALogEntryAdd | Nitrox",
    "keywords": "Class PDALogEntryAdd Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PDALogEntryAdd : Packet Inheritance object Packet PDALogEntryAdd Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PDALogEntryAdd(string, float) Properties Key Timestamp"
  },
  "api/NitroxModel.Packets.PDAScanFinished.-ctor.html": {
    "href": "api/NitroxModel.Packets.PDAScanFinished.-ctor.html",
    "title": "Constructor PDAScanFinished | Nitrox",
    "keywords": "Constructor PDAScanFinished Namespace NitroxModel.Packets Assembly NitroxModel.dll PDAScanFinished(NitroxId, NitroxTechType, int, bool, bool, bool) public PDAScanFinished(NitroxId id, NitroxTechType techType, int unlockedAmount, bool fullyResearched, bool destroy, bool wasAlreadyResearched = false) Parameters id NitroxId techType NitroxTechType unlockedAmount int fullyResearched bool destroy bool wasAlreadyResearched bool"
  },
  "api/NitroxModel.Packets.PDAScanFinished.Destroy.html": {
    "href": "api/NitroxModel.Packets.PDAScanFinished.Destroy.html",
    "title": "Property Destroy | Nitrox",
    "keywords": "Property Destroy Namespace NitroxModel.Packets Assembly NitroxModel.dll Destroy public bool Destroy { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.PDAScanFinished.FullyResearched.html": {
    "href": "api/NitroxModel.Packets.PDAScanFinished.FullyResearched.html",
    "title": "Property FullyResearched | Nitrox",
    "keywords": "Property FullyResearched Namespace NitroxModel.Packets Assembly NitroxModel.dll FullyResearched public bool FullyResearched { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.PDAScanFinished.Id.html": {
    "href": "api/NitroxModel.Packets.PDAScanFinished.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PDAScanFinished.TechType.html": {
    "href": "api/NitroxModel.Packets.PDAScanFinished.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.Packets Assembly NitroxModel.dll TechType public NitroxTechType TechType { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.Packets.PDAScanFinished.UnlockedAmount.html": {
    "href": "api/NitroxModel.Packets.PDAScanFinished.UnlockedAmount.html",
    "title": "Property UnlockedAmount | Nitrox",
    "keywords": "Property UnlockedAmount Namespace NitroxModel.Packets Assembly NitroxModel.dll UnlockedAmount public int UnlockedAmount { get; } Property Value int"
  },
  "api/NitroxModel.Packets.PDAScanFinished.WasAlreadyResearched.html": {
    "href": "api/NitroxModel.Packets.PDAScanFinished.WasAlreadyResearched.html",
    "title": "Property WasAlreadyResearched | Nitrox",
    "keywords": "Property WasAlreadyResearched Namespace NitroxModel.Packets Assembly NitroxModel.dll WasAlreadyResearched public bool WasAlreadyResearched { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.PDAScanFinished.html": {
    "href": "api/NitroxModel.Packets.PDAScanFinished.html",
    "title": "Class PDAScanFinished | Nitrox",
    "keywords": "Class PDAScanFinished Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PDAScanFinished : Packet Inheritance object Packet PDAScanFinished Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PDAScanFinished(NitroxId, NitroxTechType, int, bool, bool, bool) Properties Destroy FullyResearched Id TechType UnlockedAmount WasAlreadyResearched"
  },
  "api/NitroxModel.Packets.Packet.DeliveryMethod.html": {
    "href": "api/NitroxModel.Packets.Packet.DeliveryMethod.html",
    "title": "Property DeliveryMethod | Nitrox",
    "keywords": "Property DeliveryMethod Namespace NitroxModel.Packets Assembly NitroxModel.dll DeliveryMethod [IgnoredMember] public NitroxDeliveryMethod.DeliveryMethod DeliveryMethod { get; protected set; } Property Value NitroxDeliveryMethod.DeliveryMethod"
  },
  "api/NitroxModel.Packets.Packet.Deserialize.html": {
    "href": "api/NitroxModel.Packets.Packet.Deserialize.html",
    "title": "Method Deserialize | Nitrox",
    "keywords": "Method Deserialize Namespace NitroxModel.Packets Assembly NitroxModel.dll Deserialize(byte[]) public static Packet Deserialize(byte[] data) Parameters data byte[] Returns Packet"
  },
  "api/NitroxModel.Packets.Packet.InitSerializer.html": {
    "href": "api/NitroxModel.Packets.Packet.InitSerializer.html",
    "title": "Method InitSerializer | Nitrox",
    "keywords": "Method InitSerializer Namespace NitroxModel.Packets Assembly NitroxModel.dll InitSerializer() public static void InitSerializer()"
  },
  "api/NitroxModel.Packets.Packet.Serialize.html": {
    "href": "api/NitroxModel.Packets.Packet.Serialize.html",
    "title": "Method Serialize | Nitrox",
    "keywords": "Method Serialize Namespace NitroxModel.Packets Assembly NitroxModel.dll Serialize() public byte[] Serialize() Returns byte[]"
  },
  "api/NitroxModel.Packets.Packet.ToString.html": {
    "href": "api/NitroxModel.Packets.Packet.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.Packets Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.Packets.Packet.UdpChannel.html": {
    "href": "api/NitroxModel.Packets.Packet.UdpChannel.html",
    "title": "Property UdpChannel | Nitrox",
    "keywords": "Property UdpChannel Namespace NitroxModel.Packets Assembly NitroxModel.dll UdpChannel [IgnoredMember] public Packet.UdpChannelId UdpChannel { get; protected set; } Property Value Packet.UdpChannelId"
  },
  "api/NitroxModel.Packets.Packet.UdpChannelId.html": {
    "href": "api/NitroxModel.Packets.Packet.UdpChannelId.html",
    "title": "Enum Packet.UdpChannelId | Nitrox",
    "keywords": "Enum Packet.UdpChannelId Namespace NitroxModel.Packets Assembly NitroxModel.dll public enum Packet.UdpChannelId Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields DEFAULT = 0 PLAYER_MOVEMENT = 1 PLAYER_STATS = 3 VEHICLE_MOVEMENT = 2"
  },
  "api/NitroxModel.Packets.Packet.Wrapper.-ctor.html": {
    "href": "api/NitroxModel.Packets.Packet.Wrapper.-ctor.html",
    "title": "Constructor Wrapper | Nitrox",
    "keywords": "Constructor Wrapper Namespace NitroxModel.Packets Assembly NitroxModel.dll Wrapper(Packet) public Wrapper(Packet packet) Parameters packet Packet"
  },
  "api/NitroxModel.Packets.Packet.Wrapper.Packet.html": {
    "href": "api/NitroxModel.Packets.Packet.Wrapper.Packet.html",
    "title": "Property Packet | Nitrox",
    "keywords": "Property Packet Namespace NitroxModel.Packets Assembly NitroxModel.dll Packet public Packet Packet { get; init; } Property Value Packet"
  },
  "api/NitroxModel.Packets.Packet.Wrapper.html": {
    "href": "api/NitroxModel.Packets.Packet.Wrapper.html",
    "title": "Struct Packet.Wrapper | Nitrox",
    "keywords": "Struct Packet.Wrapper Namespace NitroxModel.Packets Assembly NitroxModel.dll Wrapper which is used to serialize packets in BinaryPack. We cannot serialize Packets directly because 1) We will not know what type to deserialize to and 2) The root object must have a callable constructor so it can't be abstract This type solves both problems and only adds a single byte to the data. public readonly struct Packet.Wrapper Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Wrapper(Packet) Properties Packet"
  },
  "api/NitroxModel.Packets.Packet.html": {
    "href": "api/NitroxModel.Packets.Packet.html",
    "title": "Class Packet | Nitrox",
    "keywords": "Class Packet Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public abstract class Packet Inheritance object Packet Derived TestNonActionPacket AnimationChangeEvent AuroraAndTimeUpdate BaseDeconstructed BatchVisibilityChanged BedEnter BuildingDesyncWarning BuildingResync BuildingResyncRequest CellVisibilityChanged ChatMessage CorrelatedPacket DebugStartMapPacket DeconstructionBegin Disconnect DiscordRequestIP EntityDestroyed EntityMetadataUpdate EntityReparented EntitySpawnedByClient EntityTransformUpdates EscapePodChanged FireDoused GameModeChanged GoalCompleted InitialPlayerSync ItemPosition KnownTechEntryAdd MedicalCabinetClicked ModifyConstructedAmount ModuleAdded ModuleRemoved Movement MutePlayer OpenableStateChanged OrderedBuildPacket PDAEncyclopediaEntryAdd PDALogEntryAdd PDAScanFinished PermsChanged PickupItem PingRenamed PinnedRecipeMoved PlaceBase PlaceGhost PlaceModule PlayFMODAsset PlayFMODCustomEmitter PlayFMODCustomLoopingEmitter PlayFMODStudioEmitter PlaySunbeamEvent PlayerCinematicControllerCall PlayerDeathEvent PlayerHeldItemChanged PlayerJoinedMultiplayerSession PlayerKicked PlayerQuickSlotsBindingChanged PlayerStats PlayerSyncFinished PlayerTeleported RadioPlayPendingMessage RecipePinned Schedule SeamothModulesAction ServerCommand ServerStopped SignalPingPreferenceChanged SimulationOwnershipChange SimulationOwnershipRequest SimulationOwnershipResponse SpawnEntities StoryGoalExecuted SubRootChanged TimeChange ToggleLights VehicleDocking VehicleOnPilotModeChanged VehicleUndocking WeldAction CreatureActionChanged CyclopsDamage CyclopsDamagePointRepaired CyclopsDecoyLaunch CyclopsFireCreated CyclopsFireSuppression ExosuitArmActionPacket RocketLaunch RocketResync Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties DeliveryMethod UdpChannel Methods Deserialize(byte[]) InitSerializer() Serialize() ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.Packets.PacketsSerializableTest.InitSerializerTest.html": {
    "href": "api/NitroxModel.Packets.PacketsSerializableTest.InitSerializerTest.html",
    "title": "Method InitSerializerTest | Nitrox",
    "keywords": "Method InitSerializerTest Namespace NitroxModel.Packets Assembly Nitrox.Test.dll InitSerializerTest() [TestMethod] public void InitSerializerTest()"
  },
  "api/NitroxModel.Packets.PacketsSerializableTest.PacketSerializationTest.html": {
    "href": "api/NitroxModel.Packets.PacketsSerializableTest.PacketSerializationTest.html",
    "title": "Method PacketSerializationTest | Nitrox",
    "keywords": "Method PacketSerializationTest Namespace NitroxModel.Packets Assembly Nitrox.Test.dll PacketSerializationTest() [TestMethod] public void PacketSerializationTest()"
  },
  "api/NitroxModel.Packets.PacketsSerializableTest.html": {
    "href": "api/NitroxModel.Packets.PacketsSerializableTest.html",
    "title": "Class PacketsSerializableTest | Nitrox",
    "keywords": "Class PacketsSerializableTest Namespace NitroxModel.Packets Assembly Nitrox.Test.dll [TestClass] public class PacketsSerializableTest Inheritance object PacketsSerializableTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InitSerializerTest() PacketSerializationTest()"
  },
  "api/NitroxModel.Packets.PermsChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.PermsChanged.-ctor.html",
    "title": "Constructor PermsChanged | Nitrox",
    "keywords": "Constructor PermsChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll PermsChanged(Perms) public PermsChanged(Perms newPerms) Parameters newPerms Perms"
  },
  "api/NitroxModel.Packets.PermsChanged.NewPerms.html": {
    "href": "api/NitroxModel.Packets.PermsChanged.NewPerms.html",
    "title": "Field NewPerms | Nitrox",
    "keywords": "Field NewPerms Namespace NitroxModel.Packets Assembly NitroxModel.dll public Perms NewPerms Returns Perms"
  },
  "api/NitroxModel.Packets.PermsChanged.html": {
    "href": "api/NitroxModel.Packets.PermsChanged.html",
    "title": "Class PermsChanged | Nitrox",
    "keywords": "Class PermsChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PermsChanged : Packet Inheritance object Packet PermsChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PermsChanged(Perms) Fields NewPerms"
  },
  "api/NitroxModel.Packets.PickupItem.-ctor.html": {
    "href": "api/NitroxModel.Packets.PickupItem.-ctor.html",
    "title": "Constructor PickupItem | Nitrox",
    "keywords": "Constructor PickupItem Namespace NitroxModel.Packets Assembly NitroxModel.dll PickupItem(NitroxId, InventoryItemEntity) public PickupItem(NitroxId id, InventoryItemEntity item) Parameters id NitroxId item InventoryItemEntity"
  },
  "api/NitroxModel.Packets.PickupItem.Id.html": {
    "href": "api/NitroxModel.Packets.PickupItem.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PickupItem.Item.html": {
    "href": "api/NitroxModel.Packets.PickupItem.Item.html",
    "title": "Property Item | Nitrox",
    "keywords": "Property Item Namespace NitroxModel.Packets Assembly NitroxModel.dll Item public InventoryItemEntity Item { get; } Property Value InventoryItemEntity"
  },
  "api/NitroxModel.Packets.PickupItem.html": {
    "href": "api/NitroxModel.Packets.PickupItem.html",
    "title": "Class PickupItem | Nitrox",
    "keywords": "Class PickupItem Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PickupItem : Packet Inheritance object Packet PickupItem Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PickupItem(NitroxId, InventoryItemEntity) Properties Id Item"
  },
  "api/NitroxModel.Packets.PieceDeconstructed.-ctor.html": {
    "href": "api/NitroxModel.Packets.PieceDeconstructed.-ctor.html",
    "title": "Constructor PieceDeconstructed | Nitrox",
    "keywords": "Constructor PieceDeconstructed Namespace NitroxModel.Packets Assembly NitroxModel.dll PieceDeconstructed(NitroxId, NitroxId, BuildPieceIdentifier, GhostEntity, BaseData, int) public PieceDeconstructed(NitroxId baseId, NitroxId pieceId, BuildPieceIdentifier buildPieceIdentifier, GhostEntity replacerGhost, BaseData baseData, int operationId) Parameters baseId NitroxId pieceId NitroxId buildPieceIdentifier BuildPieceIdentifier replacerGhost GhostEntity baseData BaseData operationId int"
  },
  "api/NitroxModel.Packets.PieceDeconstructed.BaseData.html": {
    "href": "api/NitroxModel.Packets.PieceDeconstructed.BaseData.html",
    "title": "Property BaseData | Nitrox",
    "keywords": "Property BaseData Namespace NitroxModel.Packets Assembly NitroxModel.dll BaseData public BaseData BaseData { get; set; } Property Value BaseData"
  },
  "api/NitroxModel.Packets.PieceDeconstructed.BaseId.html": {
    "href": "api/NitroxModel.Packets.PieceDeconstructed.BaseId.html",
    "title": "Property BaseId | Nitrox",
    "keywords": "Property BaseId Namespace NitroxModel.Packets Assembly NitroxModel.dll BaseId public NitroxId BaseId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PieceDeconstructed.BuildPieceIdentifier.html": {
    "href": "api/NitroxModel.Packets.PieceDeconstructed.BuildPieceIdentifier.html",
    "title": "Property BuildPieceIdentifier | Nitrox",
    "keywords": "Property BuildPieceIdentifier Namespace NitroxModel.Packets Assembly NitroxModel.dll BuildPieceIdentifier public BuildPieceIdentifier BuildPieceIdentifier { get; } Property Value BuildPieceIdentifier"
  },
  "api/NitroxModel.Packets.PieceDeconstructed.PieceId.html": {
    "href": "api/NitroxModel.Packets.PieceDeconstructed.PieceId.html",
    "title": "Property PieceId | Nitrox",
    "keywords": "Property PieceId Namespace NitroxModel.Packets Assembly NitroxModel.dll PieceId public NitroxId PieceId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PieceDeconstructed.ReplacerGhost.html": {
    "href": "api/NitroxModel.Packets.PieceDeconstructed.ReplacerGhost.html",
    "title": "Property ReplacerGhost | Nitrox",
    "keywords": "Property ReplacerGhost Namespace NitroxModel.Packets Assembly NitroxModel.dll ReplacerGhost public GhostEntity ReplacerGhost { get; } Property Value GhostEntity"
  },
  "api/NitroxModel.Packets.PieceDeconstructed.html": {
    "href": "api/NitroxModel.Packets.PieceDeconstructed.html",
    "title": "Class PieceDeconstructed | Nitrox",
    "keywords": "Class PieceDeconstructed Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PieceDeconstructed : OrderedBuildPacket Inheritance object Packet OrderedBuildPacket PieceDeconstructed Derived WaterParkDeconstructed Inherited Members OrderedBuildPacket.OperationId Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PieceDeconstructed(NitroxId, NitroxId, BuildPieceIdentifier, GhostEntity, BaseData, int) Properties BaseData BaseId BuildPieceIdentifier PieceId ReplacerGhost"
  },
  "api/NitroxModel.Packets.PingRenamed.-ctor.html": {
    "href": "api/NitroxModel.Packets.PingRenamed.-ctor.html",
    "title": "Constructor PingRenamed | Nitrox",
    "keywords": "Constructor PingRenamed Namespace NitroxModel.Packets Assembly NitroxModel.dll PingRenamed(NitroxId, string, byte[]) public PingRenamed(NitroxId id, string name, byte[] beaconGameObjectSerialized) Parameters id NitroxId name string beaconGameObjectSerialized byte[]"
  },
  "api/NitroxModel.Packets.PingRenamed.BeaconGameObjectSerialized.html": {
    "href": "api/NitroxModel.Packets.PingRenamed.BeaconGameObjectSerialized.html",
    "title": "Property BeaconGameObjectSerialized | Nitrox",
    "keywords": "Property BeaconGameObjectSerialized Namespace NitroxModel.Packets Assembly NitroxModel.dll BeaconGameObjectSerialized public byte[] BeaconGameObjectSerialized { get; } Property Value byte[]"
  },
  "api/NitroxModel.Packets.PingRenamed.Id.html": {
    "href": "api/NitroxModel.Packets.PingRenamed.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PingRenamed.Name.html": {
    "href": "api/NitroxModel.Packets.PingRenamed.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.Packets Assembly NitroxModel.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PingRenamed.html": {
    "href": "api/NitroxModel.Packets.PingRenamed.html",
    "title": "Class PingRenamed | Nitrox",
    "keywords": "Class PingRenamed Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PingRenamed : Packet Inheritance object Packet PingRenamed Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PingRenamed(NitroxId, string, byte[]) Properties BeaconGameObjectSerialized Id Name"
  },
  "api/NitroxModel.Packets.PinnedRecipeMoved.-ctor.html": {
    "href": "api/NitroxModel.Packets.PinnedRecipeMoved.-ctor.html",
    "title": "Constructor PinnedRecipeMoved | Nitrox",
    "keywords": "Constructor PinnedRecipeMoved Namespace NitroxModel.Packets Assembly NitroxModel.dll PinnedRecipeMoved(List<int>) public PinnedRecipeMoved(List<int> recipePins) Parameters recipePins List<int>"
  },
  "api/NitroxModel.Packets.PinnedRecipeMoved.RecipePins.html": {
    "href": "api/NitroxModel.Packets.PinnedRecipeMoved.RecipePins.html",
    "title": "Property RecipePins | Nitrox",
    "keywords": "Property RecipePins Namespace NitroxModel.Packets Assembly NitroxModel.dll RecipePins public List<int> RecipePins { get; } Property Value List<int>"
  },
  "api/NitroxModel.Packets.PinnedRecipeMoved.html": {
    "href": "api/NitroxModel.Packets.PinnedRecipeMoved.html",
    "title": "Class PinnedRecipeMoved | Nitrox",
    "keywords": "Class PinnedRecipeMoved Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PinnedRecipeMoved : Packet Inheritance object Packet PinnedRecipeMoved Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PinnedRecipeMoved(List<int>) Properties RecipePins"
  },
  "api/NitroxModel.Packets.PlaceBase.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlaceBase.-ctor.html",
    "title": "Constructor PlaceBase | Nitrox",
    "keywords": "Constructor PlaceBase Namespace NitroxModel.Packets Assembly NitroxModel.dll PlaceBase(NitroxId, BuildEntity) public PlaceBase(NitroxId formerGhostId, BuildEntity buildEntity) Parameters formerGhostId NitroxId buildEntity BuildEntity"
  },
  "api/NitroxModel.Packets.PlaceBase.BuildEntity.html": {
    "href": "api/NitroxModel.Packets.PlaceBase.BuildEntity.html",
    "title": "Property BuildEntity | Nitrox",
    "keywords": "Property BuildEntity Namespace NitroxModel.Packets Assembly NitroxModel.dll BuildEntity public BuildEntity BuildEntity { get; set; } Property Value BuildEntity"
  },
  "api/NitroxModel.Packets.PlaceBase.Deflate.html": {
    "href": "api/NitroxModel.Packets.PlaceBase.Deflate.html",
    "title": "Method Deflate | Nitrox",
    "keywords": "Method Deflate Namespace NitroxModel.Packets Assembly NitroxModel.dll Deflate() public void Deflate()"
  },
  "api/NitroxModel.Packets.PlaceBase.FormerGhostId.html": {
    "href": "api/NitroxModel.Packets.PlaceBase.FormerGhostId.html",
    "title": "Property FormerGhostId | Nitrox",
    "keywords": "Property FormerGhostId Namespace NitroxModel.Packets Assembly NitroxModel.dll FormerGhostId public NitroxId FormerGhostId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PlaceBase.html": {
    "href": "api/NitroxModel.Packets.PlaceBase.html",
    "title": "Class PlaceBase | Nitrox",
    "keywords": "Class PlaceBase Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public sealed class PlaceBase : Packet Inheritance object Packet PlaceBase Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors PlaceBase(NitroxId, BuildEntity) Properties BuildEntity FormerGhostId Methods Deflate()"
  },
  "api/NitroxModel.Packets.PlaceGhost.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlaceGhost.-ctor.html",
    "title": "Constructor PlaceGhost | Nitrox",
    "keywords": "Constructor PlaceGhost Namespace NitroxModel.Packets Assembly NitroxModel.dll PlaceGhost(GhostEntity) public PlaceGhost(GhostEntity ghostEntity) Parameters ghostEntity GhostEntity"
  },
  "api/NitroxModel.Packets.PlaceGhost.GhostEntity.html": {
    "href": "api/NitroxModel.Packets.PlaceGhost.GhostEntity.html",
    "title": "Property GhostEntity | Nitrox",
    "keywords": "Property GhostEntity Namespace NitroxModel.Packets Assembly NitroxModel.dll GhostEntity public GhostEntity GhostEntity { get; } Property Value GhostEntity"
  },
  "api/NitroxModel.Packets.PlaceGhost.html": {
    "href": "api/NitroxModel.Packets.PlaceGhost.html",
    "title": "Class PlaceGhost | Nitrox",
    "keywords": "Class PlaceGhost Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public sealed class PlaceGhost : Packet Inheritance object Packet PlaceGhost Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors PlaceGhost(GhostEntity) Properties GhostEntity"
  },
  "api/NitroxModel.Packets.PlaceModule.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlaceModule.-ctor.html",
    "title": "Constructor PlaceModule | Nitrox",
    "keywords": "Constructor PlaceModule Namespace NitroxModel.Packets Assembly NitroxModel.dll PlaceModule(ModuleEntity) public PlaceModule(ModuleEntity moduleEntity) Parameters moduleEntity ModuleEntity"
  },
  "api/NitroxModel.Packets.PlaceModule.ModuleEntity.html": {
    "href": "api/NitroxModel.Packets.PlaceModule.ModuleEntity.html",
    "title": "Property ModuleEntity | Nitrox",
    "keywords": "Property ModuleEntity Namespace NitroxModel.Packets Assembly NitroxModel.dll ModuleEntity public ModuleEntity ModuleEntity { get; } Property Value ModuleEntity"
  },
  "api/NitroxModel.Packets.PlaceModule.html": {
    "href": "api/NitroxModel.Packets.PlaceModule.html",
    "title": "Class PlaceModule | Nitrox",
    "keywords": "Class PlaceModule Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public sealed class PlaceModule : Packet Inheritance object Packet PlaceModule Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors PlaceModule(ModuleEntity) Properties ModuleEntity"
  },
  "api/NitroxModel.Packets.PlayFMODAsset.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayFMODAsset.-ctor.html",
    "title": "Constructor PlayFMODAsset | Nitrox",
    "keywords": "Constructor PlayFMODAsset Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayFMODAsset(string, NitroxVector3, float, float, bool) public PlayFMODAsset(string assetPath, NitroxVector3 position, float volume, float radius, bool isGlobal) Parameters assetPath string position NitroxVector3 volume float radius float isGlobal bool"
  },
  "api/NitroxModel.Packets.PlayFMODAsset.AssetPath.html": {
    "href": "api/NitroxModel.Packets.PlayFMODAsset.AssetPath.html",
    "title": "Property AssetPath | Nitrox",
    "keywords": "Property AssetPath Namespace NitroxModel.Packets Assembly NitroxModel.dll AssetPath public string AssetPath { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PlayFMODAsset.IsGlobal.html": {
    "href": "api/NitroxModel.Packets.PlayFMODAsset.IsGlobal.html",
    "title": "Property IsGlobal | Nitrox",
    "keywords": "Property IsGlobal Namespace NitroxModel.Packets Assembly NitroxModel.dll IsGlobal public bool IsGlobal { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.PlayFMODAsset.Position.html": {
    "href": "api/NitroxModel.Packets.PlayFMODAsset.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel.Packets Assembly NitroxModel.dll Position public NitroxVector3 Position { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.PlayFMODAsset.Radius.html": {
    "href": "api/NitroxModel.Packets.PlayFMODAsset.Radius.html",
    "title": "Property Radius | Nitrox",
    "keywords": "Property Radius Namespace NitroxModel.Packets Assembly NitroxModel.dll Radius public float Radius { get; set; } Property Value float"
  },
  "api/NitroxModel.Packets.PlayFMODAsset.Volume.html": {
    "href": "api/NitroxModel.Packets.PlayFMODAsset.Volume.html",
    "title": "Property Volume | Nitrox",
    "keywords": "Property Volume Namespace NitroxModel.Packets Assembly NitroxModel.dll Volume public float Volume { get; set; } Property Value float"
  },
  "api/NitroxModel.Packets.PlayFMODAsset.html": {
    "href": "api/NitroxModel.Packets.PlayFMODAsset.html",
    "title": "Class PlayFMODAsset | Nitrox",
    "keywords": "Class PlayFMODAsset Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayFMODAsset : Packet Inheritance object Packet PlayFMODAsset Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayFMODAsset(string, NitroxVector3, float, float, bool) Properties AssetPath IsGlobal Position Radius Volume"
  },
  "api/NitroxModel.Packets.PlayFMODCustomEmitter.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayFMODCustomEmitter.-ctor.html",
    "title": "Constructor PlayFMODCustomEmitter | Nitrox",
    "keywords": "Constructor PlayFMODCustomEmitter Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayFMODCustomEmitter(NitroxId, string, bool) public PlayFMODCustomEmitter(NitroxId id, string assetPath, bool play) Parameters id NitroxId assetPath string play bool"
  },
  "api/NitroxModel.Packets.PlayFMODCustomEmitter.AssetPath.html": {
    "href": "api/NitroxModel.Packets.PlayFMODCustomEmitter.AssetPath.html",
    "title": "Property AssetPath | Nitrox",
    "keywords": "Property AssetPath Namespace NitroxModel.Packets Assembly NitroxModel.dll AssetPath public string AssetPath { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PlayFMODCustomEmitter.Id.html": {
    "href": "api/NitroxModel.Packets.PlayFMODCustomEmitter.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PlayFMODCustomEmitter.Play.html": {
    "href": "api/NitroxModel.Packets.PlayFMODCustomEmitter.Play.html",
    "title": "Property Play | Nitrox",
    "keywords": "Property Play Namespace NitroxModel.Packets Assembly NitroxModel.dll Play public bool Play { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.PlayFMODCustomEmitter.html": {
    "href": "api/NitroxModel.Packets.PlayFMODCustomEmitter.html",
    "title": "Class PlayFMODCustomEmitter | Nitrox",
    "keywords": "Class PlayFMODCustomEmitter Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayFMODCustomEmitter : Packet Inheritance object Packet PlayFMODCustomEmitter Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayFMODCustomEmitter(NitroxId, string, bool) Properties AssetPath Id Play"
  },
  "api/NitroxModel.Packets.PlayFMODCustomLoopingEmitter.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayFMODCustomLoopingEmitter.-ctor.html",
    "title": "Constructor PlayFMODCustomLoopingEmitter | Nitrox",
    "keywords": "Constructor PlayFMODCustomLoopingEmitter Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayFMODCustomLoopingEmitter(NitroxId, string) public PlayFMODCustomLoopingEmitter(NitroxId id, string assetPath) Parameters id NitroxId assetPath string"
  },
  "api/NitroxModel.Packets.PlayFMODCustomLoopingEmitter.AssetPath.html": {
    "href": "api/NitroxModel.Packets.PlayFMODCustomLoopingEmitter.AssetPath.html",
    "title": "Property AssetPath | Nitrox",
    "keywords": "Property AssetPath Namespace NitroxModel.Packets Assembly NitroxModel.dll AssetPath public string AssetPath { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PlayFMODCustomLoopingEmitter.Id.html": {
    "href": "api/NitroxModel.Packets.PlayFMODCustomLoopingEmitter.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PlayFMODCustomLoopingEmitter.html": {
    "href": "api/NitroxModel.Packets.PlayFMODCustomLoopingEmitter.html",
    "title": "Class PlayFMODCustomLoopingEmitter | Nitrox",
    "keywords": "Class PlayFMODCustomLoopingEmitter Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayFMODCustomLoopingEmitter : Packet Inheritance object Packet PlayFMODCustomLoopingEmitter Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayFMODCustomLoopingEmitter(NitroxId, string) Properties AssetPath Id"
  },
  "api/NitroxModel.Packets.PlayFMODStudioEmitter.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayFMODStudioEmitter.-ctor.html",
    "title": "Constructor PlayFMODStudioEmitter | Nitrox",
    "keywords": "Constructor PlayFMODStudioEmitter Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayFMODStudioEmitter(NitroxId, string, bool, bool) public PlayFMODStudioEmitter(NitroxId id, string assetPath, bool play, bool allowFadeout) Parameters id NitroxId assetPath string play bool allowFadeout bool"
  },
  "api/NitroxModel.Packets.PlayFMODStudioEmitter.AllowFadeout.html": {
    "href": "api/NitroxModel.Packets.PlayFMODStudioEmitter.AllowFadeout.html",
    "title": "Property AllowFadeout | Nitrox",
    "keywords": "Property AllowFadeout Namespace NitroxModel.Packets Assembly NitroxModel.dll AllowFadeout public bool AllowFadeout { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.PlayFMODStudioEmitter.AssetPath.html": {
    "href": "api/NitroxModel.Packets.PlayFMODStudioEmitter.AssetPath.html",
    "title": "Property AssetPath | Nitrox",
    "keywords": "Property AssetPath Namespace NitroxModel.Packets Assembly NitroxModel.dll AssetPath public string AssetPath { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PlayFMODStudioEmitter.Id.html": {
    "href": "api/NitroxModel.Packets.PlayFMODStudioEmitter.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PlayFMODStudioEmitter.Play.html": {
    "href": "api/NitroxModel.Packets.PlayFMODStudioEmitter.Play.html",
    "title": "Property Play | Nitrox",
    "keywords": "Property Play Namespace NitroxModel.Packets Assembly NitroxModel.dll Play public bool Play { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.PlayFMODStudioEmitter.html": {
    "href": "api/NitroxModel.Packets.PlayFMODStudioEmitter.html",
    "title": "Class PlayFMODStudioEmitter | Nitrox",
    "keywords": "Class PlayFMODStudioEmitter Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayFMODStudioEmitter : Packet Inheritance object Packet PlayFMODStudioEmitter Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayFMODStudioEmitter(NitroxId, string, bool, bool) Properties AllowFadeout AssetPath Id Play"
  },
  "api/NitroxModel.Packets.PlaySunbeamEvent.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlaySunbeamEvent.-ctor.html",
    "title": "Constructor PlaySunbeamEvent | Nitrox",
    "keywords": "Constructor PlaySunbeamEvent Namespace NitroxModel.Packets Assembly NitroxModel.dll PlaySunbeamEvent(string) public PlaySunbeamEvent(string eventKey) Parameters eventKey string"
  },
  "api/NitroxModel.Packets.PlaySunbeamEvent.EventKey.html": {
    "href": "api/NitroxModel.Packets.PlaySunbeamEvent.EventKey.html",
    "title": "Property EventKey | Nitrox",
    "keywords": "Property EventKey Namespace NitroxModel.Packets Assembly NitroxModel.dll EventKey public string EventKey { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PlaySunbeamEvent.SunbeamEvent.COUNTDOWN.html": {
    "href": "api/NitroxModel.Packets.PlaySunbeamEvent.SunbeamEvent.COUNTDOWN.html",
    "title": "Field COUNTDOWN | Nitrox",
    "keywords": "Field COUNTDOWN Namespace NitroxModel.Packets Assembly NitroxModel.dll public const string COUNTDOWN = \"OnPlayRadioSunbeam4\" Returns string"
  },
  "api/NitroxModel.Packets.PlaySunbeamEvent.SunbeamEvent.GUNAIM.html": {
    "href": "api/NitroxModel.Packets.PlaySunbeamEvent.SunbeamEvent.GUNAIM.html",
    "title": "Field GUNAIM | Nitrox",
    "keywords": "Field GUNAIM Namespace NitroxModel.Packets Assembly NitroxModel.dll public const string GUNAIM = \"PrecursorGunAimCheck\" Returns string"
  },
  "api/NitroxModel.Packets.PlaySunbeamEvent.SunbeamEvent.STORYSTART.html": {
    "href": "api/NitroxModel.Packets.PlaySunbeamEvent.SunbeamEvent.STORYSTART.html",
    "title": "Field STORYSTART | Nitrox",
    "keywords": "Field STORYSTART Namespace NitroxModel.Packets Assembly NitroxModel.dll public const string STORYSTART = \"RadioSunbeamStart\" Returns string"
  },
  "api/NitroxModel.Packets.PlaySunbeamEvent.SunbeamEvent.html": {
    "href": "api/NitroxModel.Packets.PlaySunbeamEvent.SunbeamEvent.html",
    "title": "Class PlaySunbeamEvent.SunbeamEvent | Nitrox",
    "keywords": "Class PlaySunbeamEvent.SunbeamEvent Namespace NitroxModel.Packets Assembly NitroxModel.dll Associates an understandable event name and the associated goal from SunbeamGoals. public static class PlaySunbeamEvent.SunbeamEvent Inheritance object PlaySunbeamEvent.SunbeamEvent Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields COUNTDOWN GUNAIM STORYSTART"
  },
  "api/NitroxModel.Packets.PlaySunbeamEvent.SunbeamGoals.html": {
    "href": "api/NitroxModel.Packets.PlaySunbeamEvent.SunbeamGoals.html",
    "title": "Field SunbeamGoals | Nitrox",
    "keywords": "Field SunbeamGoals Namespace NitroxModel.Packets Assembly NitroxModel.dll An ordered list of the goals forming part of the whole Sunbeam story. [NonSerialized] public static readonly string[] SunbeamGoals Returns string[] Remarks If you modify this list, make sure to accordingly modify PlaySunbeamEvent.SunbeamEvent."
  },
  "api/NitroxModel.Packets.PlaySunbeamEvent.html": {
    "href": "api/NitroxModel.Packets.PlaySunbeamEvent.html",
    "title": "Class PlaySunbeamEvent | Nitrox",
    "keywords": "Class PlaySunbeamEvent Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlaySunbeamEvent : Packet Inheritance object Packet PlaySunbeamEvent Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlaySunbeamEvent(string) Fields SunbeamGoals An ordered list of the goals forming part of the whole Sunbeam story. Properties EventKey"
  },
  "api/NitroxModel.Packets.PlayerCinematicControllerCall.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerCinematicControllerCall.-ctor.html",
    "title": "Constructor PlayerCinematicControllerCall | Nitrox",
    "keywords": "Constructor PlayerCinematicControllerCall Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerCinematicControllerCall(ushort, NitroxId, int, string, bool) public PlayerCinematicControllerCall(ushort playerId, NitroxId controllerID, int controllerNameHash, string key, bool startPlaying) Parameters playerId ushort controllerID NitroxId controllerNameHash int key string startPlaying bool"
  },
  "api/NitroxModel.Packets.PlayerCinematicControllerCall.ControllerID.html": {
    "href": "api/NitroxModel.Packets.PlayerCinematicControllerCall.ControllerID.html",
    "title": "Property ControllerID | Nitrox",
    "keywords": "Property ControllerID Namespace NitroxModel.Packets Assembly NitroxModel.dll ControllerID public NitroxId ControllerID { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PlayerCinematicControllerCall.ControllerNameHash.html": {
    "href": "api/NitroxModel.Packets.PlayerCinematicControllerCall.ControllerNameHash.html",
    "title": "Property ControllerNameHash | Nitrox",
    "keywords": "Property ControllerNameHash Namespace NitroxModel.Packets Assembly NitroxModel.dll ControllerNameHash public int ControllerNameHash { get; } Property Value int"
  },
  "api/NitroxModel.Packets.PlayerCinematicControllerCall.Key.html": {
    "href": "api/NitroxModel.Packets.PlayerCinematicControllerCall.Key.html",
    "title": "Property Key | Nitrox",
    "keywords": "Property Key Namespace NitroxModel.Packets Assembly NitroxModel.dll Key public string Key { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PlayerCinematicControllerCall.PlayerId.html": {
    "href": "api/NitroxModel.Packets.PlayerCinematicControllerCall.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.PlayerCinematicControllerCall.StartPlaying.html": {
    "href": "api/NitroxModel.Packets.PlayerCinematicControllerCall.StartPlaying.html",
    "title": "Property StartPlaying | Nitrox",
    "keywords": "Property StartPlaying Namespace NitroxModel.Packets Assembly NitroxModel.dll StartPlaying public bool StartPlaying { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.PlayerCinematicControllerCall.html": {
    "href": "api/NitroxModel.Packets.PlayerCinematicControllerCall.html",
    "title": "Class PlayerCinematicControllerCall | Nitrox",
    "keywords": "Class PlayerCinematicControllerCall Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerCinematicControllerCall : Packet Inheritance object Packet PlayerCinematicControllerCall Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerCinematicControllerCall(ushort, NitroxId, int, string, bool) Properties ControllerID ControllerNameHash Key PlayerId StartPlaying"
  },
  "api/NitroxModel.Packets.PlayerDeathEvent.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerDeathEvent.-ctor.html",
    "title": "Constructor PlayerDeathEvent | Nitrox",
    "keywords": "Constructor PlayerDeathEvent Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerDeathEvent(ushort, NitroxVector3) public PlayerDeathEvent(ushort playerId, NitroxVector3 deathPosition) Parameters playerId ushort deathPosition NitroxVector3"
  },
  "api/NitroxModel.Packets.PlayerDeathEvent.DeathPosition.html": {
    "href": "api/NitroxModel.Packets.PlayerDeathEvent.DeathPosition.html",
    "title": "Property DeathPosition | Nitrox",
    "keywords": "Property DeathPosition Namespace NitroxModel.Packets Assembly NitroxModel.dll DeathPosition public NitroxVector3 DeathPosition { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.PlayerDeathEvent.PlayerId.html": {
    "href": "api/NitroxModel.Packets.PlayerDeathEvent.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.PlayerDeathEvent.html": {
    "href": "api/NitroxModel.Packets.PlayerDeathEvent.html",
    "title": "Class PlayerDeathEvent | Nitrox",
    "keywords": "Class PlayerDeathEvent Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerDeathEvent : Packet Inheritance object Packet PlayerDeathEvent Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerDeathEvent(ushort, NitroxVector3) Properties DeathPosition PlayerId"
  },
  "api/NitroxModel.Packets.PlayerHeldItemChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerHeldItemChanged.-ctor.html",
    "title": "Constructor PlayerHeldItemChanged | Nitrox",
    "keywords": "Constructor PlayerHeldItemChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerHeldItemChanged(ushort, NitroxId, ChangeType, NitroxTechType) public PlayerHeldItemChanged(ushort playerId, NitroxId itemId, PlayerHeldItemChanged.ChangeType type, NitroxTechType isFirstTime) Parameters playerId ushort itemId NitroxId type PlayerHeldItemChanged.ChangeType isFirstTime NitroxTechType"
  },
  "api/NitroxModel.Packets.PlayerHeldItemChanged.ChangeType.html": {
    "href": "api/NitroxModel.Packets.PlayerHeldItemChanged.ChangeType.html",
    "title": "Enum PlayerHeldItemChanged.ChangeType | Nitrox",
    "keywords": "Enum PlayerHeldItemChanged.ChangeType Namespace NitroxModel.Packets Assembly NitroxModel.dll public enum PlayerHeldItemChanged.ChangeType Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields DRAW_AS_ITEM = 1 DRAW_AS_TOOL = 0 HOLSTER_AS_ITEM = 3 HOLSTER_AS_TOOL = 2"
  },
  "api/NitroxModel.Packets.PlayerHeldItemChanged.IsFirstTime.html": {
    "href": "api/NitroxModel.Packets.PlayerHeldItemChanged.IsFirstTime.html",
    "title": "Property IsFirstTime | Nitrox",
    "keywords": "Property IsFirstTime Namespace NitroxModel.Packets Assembly NitroxModel.dll IsFirstTime public NitroxTechType IsFirstTime { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.Packets.PlayerHeldItemChanged.ItemId.html": {
    "href": "api/NitroxModel.Packets.PlayerHeldItemChanged.ItemId.html",
    "title": "Property ItemId | Nitrox",
    "keywords": "Property ItemId Namespace NitroxModel.Packets Assembly NitroxModel.dll ItemId public NitroxId ItemId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.PlayerHeldItemChanged.PlayerId.html": {
    "href": "api/NitroxModel.Packets.PlayerHeldItemChanged.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.PlayerHeldItemChanged.Type.html": {
    "href": "api/NitroxModel.Packets.PlayerHeldItemChanged.Type.html",
    "title": "Property Type | Nitrox",
    "keywords": "Property Type Namespace NitroxModel.Packets Assembly NitroxModel.dll Type public PlayerHeldItemChanged.ChangeType Type { get; } Property Value PlayerHeldItemChanged.ChangeType"
  },
  "api/NitroxModel.Packets.PlayerHeldItemChanged.html": {
    "href": "api/NitroxModel.Packets.PlayerHeldItemChanged.html",
    "title": "Class PlayerHeldItemChanged | Nitrox",
    "keywords": "Class PlayerHeldItemChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerHeldItemChanged : Packet Inheritance object Packet PlayerHeldItemChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerHeldItemChanged(ushort, NitroxId, ChangeType, NitroxTechType) Properties IsFirstTime ItemId PlayerId Type"
  },
  "api/NitroxModel.Packets.PlayerJoinedMultiplayerSession.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerJoinedMultiplayerSession.-ctor.html",
    "title": "Constructor PlayerJoinedMultiplayerSession | Nitrox",
    "keywords": "Constructor PlayerJoinedMultiplayerSession Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerJoinedMultiplayerSession(PlayerContext, Optional<NitroxId>, List<NitroxTechType>) public PlayerJoinedMultiplayerSession(PlayerContext playerContext, Optional<NitroxId> subRootId, List<NitroxTechType> equippedTechTypes) Parameters playerContext PlayerContext subRootId Optional<NitroxId> equippedTechTypes List<NitroxTechType>"
  },
  "api/NitroxModel.Packets.PlayerJoinedMultiplayerSession.EquippedTechTypes.html": {
    "href": "api/NitroxModel.Packets.PlayerJoinedMultiplayerSession.EquippedTechTypes.html",
    "title": "Property EquippedTechTypes | Nitrox",
    "keywords": "Property EquippedTechTypes Namespace NitroxModel.Packets Assembly NitroxModel.dll EquippedTechTypes public List<NitroxTechType> EquippedTechTypes { get; } Property Value List<NitroxTechType>"
  },
  "api/NitroxModel.Packets.PlayerJoinedMultiplayerSession.PlayerContext.html": {
    "href": "api/NitroxModel.Packets.PlayerJoinedMultiplayerSession.PlayerContext.html",
    "title": "Property PlayerContext | Nitrox",
    "keywords": "Property PlayerContext Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerContext public PlayerContext PlayerContext { get; } Property Value PlayerContext"
  },
  "api/NitroxModel.Packets.PlayerJoinedMultiplayerSession.SubRootId.html": {
    "href": "api/NitroxModel.Packets.PlayerJoinedMultiplayerSession.SubRootId.html",
    "title": "Property SubRootId | Nitrox",
    "keywords": "Property SubRootId Namespace NitroxModel.Packets Assembly NitroxModel.dll SubRootId public Optional<NitroxId> SubRootId { get; } Property Value Optional<NitroxId>"
  },
  "api/NitroxModel.Packets.PlayerJoinedMultiplayerSession.html": {
    "href": "api/NitroxModel.Packets.PlayerJoinedMultiplayerSession.html",
    "title": "Class PlayerJoinedMultiplayerSession | Nitrox",
    "keywords": "Class PlayerJoinedMultiplayerSession Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerJoinedMultiplayerSession : Packet Inheritance object Packet PlayerJoinedMultiplayerSession Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerJoinedMultiplayerSession(PlayerContext, Optional<NitroxId>, List<NitroxTechType>) Properties EquippedTechTypes PlayerContext SubRootId"
  },
  "api/NitroxModel.Packets.PlayerJoiningMultiplayerSession.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerJoiningMultiplayerSession.-ctor.html",
    "title": "Constructor PlayerJoiningMultiplayerSession | Nitrox",
    "keywords": "Constructor PlayerJoiningMultiplayerSession Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerJoiningMultiplayerSession(string, string) public PlayerJoiningMultiplayerSession(string correlationId, string reservationKey) Parameters correlationId string reservationKey string"
  },
  "api/NitroxModel.Packets.PlayerJoiningMultiplayerSession.ReservationKey.html": {
    "href": "api/NitroxModel.Packets.PlayerJoiningMultiplayerSession.ReservationKey.html",
    "title": "Property ReservationKey | Nitrox",
    "keywords": "Property ReservationKey Namespace NitroxModel.Packets Assembly NitroxModel.dll ReservationKey public string ReservationKey { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PlayerJoiningMultiplayerSession.html": {
    "href": "api/NitroxModel.Packets.PlayerJoiningMultiplayerSession.html",
    "title": "Class PlayerJoiningMultiplayerSession | Nitrox",
    "keywords": "Class PlayerJoiningMultiplayerSession Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerJoiningMultiplayerSession : CorrelatedPacket Inheritance object Packet CorrelatedPacket PlayerJoiningMultiplayerSession Inherited Members CorrelatedPacket.CorrelationId Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerJoiningMultiplayerSession(string, string) Properties ReservationKey"
  },
  "api/NitroxModel.Packets.PlayerKicked.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerKicked.-ctor.html",
    "title": "Constructor PlayerKicked | Nitrox",
    "keywords": "Constructor PlayerKicked Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerKicked(string) public PlayerKicked(string reason) Parameters reason string"
  },
  "api/NitroxModel.Packets.PlayerKicked.Reason.html": {
    "href": "api/NitroxModel.Packets.PlayerKicked.Reason.html",
    "title": "Property Reason | Nitrox",
    "keywords": "Property Reason Namespace NitroxModel.Packets Assembly NitroxModel.dll Reason public string Reason { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PlayerKicked.html": {
    "href": "api/NitroxModel.Packets.PlayerKicked.html",
    "title": "Class PlayerKicked | Nitrox",
    "keywords": "Class PlayerKicked Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerKicked : Packet Inheritance object Packet PlayerKicked Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerKicked(string) Properties Reason"
  },
  "api/NitroxModel.Packets.PlayerMovement.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerMovement.-ctor.html",
    "title": "Constructor PlayerMovement | Nitrox",
    "keywords": "Constructor PlayerMovement Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerMovement(ushort, NitroxVector3, NitroxVector3, NitroxQuaternion, NitroxQuaternion) public PlayerMovement(ushort playerId, NitroxVector3 position, NitroxVector3 velocity, NitroxQuaternion bodyRotation, NitroxQuaternion aimingRotation) Parameters playerId ushort position NitroxVector3 velocity NitroxVector3 bodyRotation NitroxQuaternion aimingRotation NitroxQuaternion"
  },
  "api/NitroxModel.Packets.PlayerMovement.AimingRotation.html": {
    "href": "api/NitroxModel.Packets.PlayerMovement.AimingRotation.html",
    "title": "Property AimingRotation | Nitrox",
    "keywords": "Property AimingRotation Namespace NitroxModel.Packets Assembly NitroxModel.dll AimingRotation public override NitroxQuaternion AimingRotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.Packets.PlayerMovement.BodyRotation.html": {
    "href": "api/NitroxModel.Packets.PlayerMovement.BodyRotation.html",
    "title": "Property BodyRotation | Nitrox",
    "keywords": "Property BodyRotation Namespace NitroxModel.Packets Assembly NitroxModel.dll BodyRotation public override NitroxQuaternion BodyRotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.Packets.PlayerMovement.PlayerId.html": {
    "href": "api/NitroxModel.Packets.PlayerMovement.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public override ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.PlayerMovement.Position.html": {
    "href": "api/NitroxModel.Packets.PlayerMovement.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel.Packets Assembly NitroxModel.dll Position public override NitroxVector3 Position { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.PlayerMovement.Velocity.html": {
    "href": "api/NitroxModel.Packets.PlayerMovement.Velocity.html",
    "title": "Property Velocity | Nitrox",
    "keywords": "Property Velocity Namespace NitroxModel.Packets Assembly NitroxModel.dll Velocity public override NitroxVector3 Velocity { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.PlayerMovement.html": {
    "href": "api/NitroxModel.Packets.PlayerMovement.html",
    "title": "Class PlayerMovement | Nitrox",
    "keywords": "Class PlayerMovement Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerMovement : Movement Inheritance object Packet Movement PlayerMovement Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerMovement(ushort, NitroxVector3, NitroxVector3, NitroxQuaternion, NitroxQuaternion) Properties AimingRotation BodyRotation PlayerId Position Velocity"
  },
  "api/NitroxModel.Packets.PlayerQuickSlotsBindingChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerQuickSlotsBindingChanged.-ctor.html",
    "title": "Constructor PlayerQuickSlotsBindingChanged | Nitrox",
    "keywords": "Constructor PlayerQuickSlotsBindingChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerQuickSlotsBindingChanged(Optional<NitroxId>[]) public PlayerQuickSlotsBindingChanged(Optional<NitroxId>[] slotItemIds) Parameters slotItemIds Optional<NitroxId>[]"
  },
  "api/NitroxModel.Packets.PlayerQuickSlotsBindingChanged.SlotItemIds.html": {
    "href": "api/NitroxModel.Packets.PlayerQuickSlotsBindingChanged.SlotItemIds.html",
    "title": "Property SlotItemIds | Nitrox",
    "keywords": "Property SlotItemIds Namespace NitroxModel.Packets Assembly NitroxModel.dll SlotItemIds public Optional<NitroxId>[] SlotItemIds { get; } Property Value Optional<NitroxId>[]"
  },
  "api/NitroxModel.Packets.PlayerQuickSlotsBindingChanged.html": {
    "href": "api/NitroxModel.Packets.PlayerQuickSlotsBindingChanged.html",
    "title": "Class PlayerQuickSlotsBindingChanged | Nitrox",
    "keywords": "Class PlayerQuickSlotsBindingChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerQuickSlotsBindingChanged : Packet Inheritance object Packet PlayerQuickSlotsBindingChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerQuickSlotsBindingChanged(Optional<NitroxId>[]) Properties SlotItemIds"
  },
  "api/NitroxModel.Packets.PlayerStats.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerStats.-ctor.html",
    "title": "Constructor PlayerStats | Nitrox",
    "keywords": "Constructor PlayerStats Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerStats(ushort, float, float, float, float, float, float) public PlayerStats(ushort playerId, float oxygen, float maxOxygen, float health, float food, float water, float infectionAmount) Parameters playerId ushort oxygen float maxOxygen float health float food float water float infectionAmount float"
  },
  "api/NitroxModel.Packets.PlayerStats.Food.html": {
    "href": "api/NitroxModel.Packets.PlayerStats.Food.html",
    "title": "Property Food | Nitrox",
    "keywords": "Property Food Namespace NitroxModel.Packets Assembly NitroxModel.dll Food public float Food { get; } Property Value float"
  },
  "api/NitroxModel.Packets.PlayerStats.Health.html": {
    "href": "api/NitroxModel.Packets.PlayerStats.Health.html",
    "title": "Property Health | Nitrox",
    "keywords": "Property Health Namespace NitroxModel.Packets Assembly NitroxModel.dll Health public float Health { get; } Property Value float"
  },
  "api/NitroxModel.Packets.PlayerStats.InfectionAmount.html": {
    "href": "api/NitroxModel.Packets.PlayerStats.InfectionAmount.html",
    "title": "Property InfectionAmount | Nitrox",
    "keywords": "Property InfectionAmount Namespace NitroxModel.Packets Assembly NitroxModel.dll InfectionAmount public float InfectionAmount { get; } Property Value float"
  },
  "api/NitroxModel.Packets.PlayerStats.MaxOxygen.html": {
    "href": "api/NitroxModel.Packets.PlayerStats.MaxOxygen.html",
    "title": "Property MaxOxygen | Nitrox",
    "keywords": "Property MaxOxygen Namespace NitroxModel.Packets Assembly NitroxModel.dll MaxOxygen public float MaxOxygen { get; } Property Value float"
  },
  "api/NitroxModel.Packets.PlayerStats.Oxygen.html": {
    "href": "api/NitroxModel.Packets.PlayerStats.Oxygen.html",
    "title": "Property Oxygen | Nitrox",
    "keywords": "Property Oxygen Namespace NitroxModel.Packets Assembly NitroxModel.dll Oxygen public float Oxygen { get; } Property Value float"
  },
  "api/NitroxModel.Packets.PlayerStats.PlayerId.html": {
    "href": "api/NitroxModel.Packets.PlayerStats.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; set; } Property Value ushort"
  },
  "api/NitroxModel.Packets.PlayerStats.Water.html": {
    "href": "api/NitroxModel.Packets.PlayerStats.Water.html",
    "title": "Property Water | Nitrox",
    "keywords": "Property Water Namespace NitroxModel.Packets Assembly NitroxModel.dll Water public float Water { get; } Property Value float"
  },
  "api/NitroxModel.Packets.PlayerStats.html": {
    "href": "api/NitroxModel.Packets.PlayerStats.html",
    "title": "Class PlayerStats | Nitrox",
    "keywords": "Class PlayerStats Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerStats : Packet Inheritance object Packet PlayerStats Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerStats(ushort, float, float, float, float, float, float) Properties Food Health InfectionAmount MaxOxygen Oxygen PlayerId Water"
  },
  "api/NitroxModel.Packets.PlayerSyncFinished.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerSyncFinished.-ctor.html",
    "title": "Constructor PlayerSyncFinished | Nitrox",
    "keywords": "Constructor PlayerSyncFinished Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerSyncFinished() public PlayerSyncFinished()"
  },
  "api/NitroxModel.Packets.PlayerSyncFinished.html": {
    "href": "api/NitroxModel.Packets.PlayerSyncFinished.html",
    "title": "Class PlayerSyncFinished | Nitrox",
    "keywords": "Class PlayerSyncFinished Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerSyncFinished : Packet Inheritance object Packet PlayerSyncFinished Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerSyncFinished()"
  },
  "api/NitroxModel.Packets.PlayerTeleported.-ctor.html": {
    "href": "api/NitroxModel.Packets.PlayerTeleported.-ctor.html",
    "title": "Constructor PlayerTeleported | Nitrox",
    "keywords": "Constructor PlayerTeleported Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerTeleported(string, NitroxVector3, NitroxVector3, Optional<NitroxId>) public PlayerTeleported(string playerName, NitroxVector3 destinationFrom, NitroxVector3 destinationTo, Optional<NitroxId> subRootID) Parameters playerName string destinationFrom NitroxVector3 destinationTo NitroxVector3 subRootID Optional<NitroxId>"
  },
  "api/NitroxModel.Packets.PlayerTeleported.DestinationFrom.html": {
    "href": "api/NitroxModel.Packets.PlayerTeleported.DestinationFrom.html",
    "title": "Property DestinationFrom | Nitrox",
    "keywords": "Property DestinationFrom Namespace NitroxModel.Packets Assembly NitroxModel.dll DestinationFrom public NitroxVector3 DestinationFrom { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.PlayerTeleported.DestinationTo.html": {
    "href": "api/NitroxModel.Packets.PlayerTeleported.DestinationTo.html",
    "title": "Property DestinationTo | Nitrox",
    "keywords": "Property DestinationTo Namespace NitroxModel.Packets Assembly NitroxModel.dll DestinationTo public NitroxVector3 DestinationTo { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.PlayerTeleported.PlayerName.html": {
    "href": "api/NitroxModel.Packets.PlayerTeleported.PlayerName.html",
    "title": "Property PlayerName | Nitrox",
    "keywords": "Property PlayerName Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerName public string PlayerName { get; } Property Value string"
  },
  "api/NitroxModel.Packets.PlayerTeleported.SubRootID.html": {
    "href": "api/NitroxModel.Packets.PlayerTeleported.SubRootID.html",
    "title": "Property SubRootID | Nitrox",
    "keywords": "Property SubRootID Namespace NitroxModel.Packets Assembly NitroxModel.dll SubRootID public Optional<NitroxId> SubRootID { get; } Property Value Optional<NitroxId>"
  },
  "api/NitroxModel.Packets.PlayerTeleported.html": {
    "href": "api/NitroxModel.Packets.PlayerTeleported.html",
    "title": "Class PlayerTeleported | Nitrox",
    "keywords": "Class PlayerTeleported Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class PlayerTeleported : Packet Inheritance object Packet PlayerTeleported Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerTeleported(string, NitroxVector3, NitroxVector3, Optional<NitroxId>) Properties DestinationFrom DestinationTo PlayerName SubRootID"
  },
  "api/NitroxModel.Packets.Processors.Abstract.IProcessorContext.html": {
    "href": "api/NitroxModel.Packets.Processors.Abstract.IProcessorContext.html",
    "title": "Interface IProcessorContext | Nitrox",
    "keywords": "Interface IProcessorContext Namespace NitroxModel.Packets.Processors.Abstract Assembly NitroxModel.dll public interface IProcessorContext"
  },
  "api/NitroxModel.Packets.Processors.Abstract.PacketProcessor.GetProcessors.html": {
    "href": "api/NitroxModel.Packets.Processors.Abstract.PacketProcessor.GetProcessors.html",
    "title": "Method GetProcessors | Nitrox",
    "keywords": "Method GetProcessors Namespace NitroxModel.Packets.Processors.Abstract Assembly NitroxModel.dll GetProcessors(Dictionary<Type, object>, Func<Type, bool>) public static Dictionary<Type, PacketProcessor> GetProcessors(Dictionary<Type, object> processorArguments, Func<Type, bool> additionalConstraints) Parameters processorArguments Dictionary<Type, object> additionalConstraints Func<Type, bool> Returns Dictionary<Type, PacketProcessor>"
  },
  "api/NitroxModel.Packets.Processors.Abstract.PacketProcessor.ProcessPacket.html": {
    "href": "api/NitroxModel.Packets.Processors.Abstract.PacketProcessor.ProcessPacket.html",
    "title": "Method ProcessPacket | Nitrox",
    "keywords": "Method ProcessPacket Namespace NitroxModel.Packets.Processors.Abstract Assembly NitroxModel.dll ProcessPacket(Packet, IProcessorContext) public abstract void ProcessPacket(Packet packet, IProcessorContext context) Parameters packet Packet context IProcessorContext"
  },
  "api/NitroxModel.Packets.Processors.Abstract.PacketProcessor.html": {
    "href": "api/NitroxModel.Packets.Processors.Abstract.PacketProcessor.html",
    "title": "Class PacketProcessor | Nitrox",
    "keywords": "Class PacketProcessor Namespace NitroxModel.Packets.Processors.Abstract Assembly NitroxModel.dll public abstract class PacketProcessor Inheritance object PacketProcessor Derived ClientPacketProcessor<T> AuthenticatedPacketProcessor<T> UnauthenticatedPacketProcessor<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetProcessors(Dictionary<Type, object>, Func<Type, bool>) ProcessPacket(Packet, IProcessorContext)"
  },
  "api/NitroxModel.Packets.Processors.Abstract.html": {
    "href": "api/NitroxModel.Packets.Processors.Abstract.html",
    "title": "Namespace NitroxModel.Packets.Processors.Abstract | Nitrox",
    "keywords": "Namespace NitroxModel.Packets.Processors.Abstract Classes PacketProcessor Interfaces IProcessorContext"
  },
  "api/NitroxModel.Packets.Processors.PacketProcessorTest.AllPacketsAreHandled.html": {
    "href": "api/NitroxModel.Packets.Processors.PacketProcessorTest.AllPacketsAreHandled.html",
    "title": "Method AllPacketsAreHandled | Nitrox",
    "keywords": "Method AllPacketsAreHandled Namespace NitroxModel.Packets.Processors Assembly Nitrox.Test.dll AllPacketsAreHandled() [TestMethod] public void AllPacketsAreHandled()"
  },
  "api/NitroxModel.Packets.Processors.PacketProcessorTest.Cleanup.html": {
    "href": "api/NitroxModel.Packets.Processors.PacketProcessorTest.Cleanup.html",
    "title": "Method Cleanup | Nitrox",
    "keywords": "Method Cleanup Namespace NitroxModel.Packets.Processors Assembly Nitrox.Test.dll Cleanup() [TestCleanup] public void Cleanup()"
  },
  "api/NitroxModel.Packets.Processors.PacketProcessorTest.ClientPacketProcessorSanity.html": {
    "href": "api/NitroxModel.Packets.Processors.PacketProcessorTest.ClientPacketProcessorSanity.html",
    "title": "Method ClientPacketProcessorSanity | Nitrox",
    "keywords": "Method ClientPacketProcessorSanity Namespace NitroxModel.Packets.Processors Assembly Nitrox.Test.dll ClientPacketProcessorSanity() [TestMethod] public void ClientPacketProcessorSanity()"
  },
  "api/NitroxModel.Packets.Processors.PacketProcessorTest.SameAmountOfServerPacketProcessors.html": {
    "href": "api/NitroxModel.Packets.Processors.PacketProcessorTest.SameAmountOfServerPacketProcessors.html",
    "title": "Method SameAmountOfServerPacketProcessors | Nitrox",
    "keywords": "Method SameAmountOfServerPacketProcessors Namespace NitroxModel.Packets.Processors Assembly Nitrox.Test.dll SameAmountOfServerPacketProcessors() [TestMethod] public void SameAmountOfServerPacketProcessors()"
  },
  "api/NitroxModel.Packets.Processors.PacketProcessorTest.ServerPacketProcessorSanity.html": {
    "href": "api/NitroxModel.Packets.Processors.PacketProcessorTest.ServerPacketProcessorSanity.html",
    "title": "Method ServerPacketProcessorSanity | Nitrox",
    "keywords": "Method ServerPacketProcessorSanity Namespace NitroxModel.Packets.Processors Assembly Nitrox.Test.dll ServerPacketProcessorSanity() [TestMethod] public void ServerPacketProcessorSanity()"
  },
  "api/NitroxModel.Packets.Processors.PacketProcessorTest.html": {
    "href": "api/NitroxModel.Packets.Processors.PacketProcessorTest.html",
    "title": "Class PacketProcessorTest | Nitrox",
    "keywords": "Class PacketProcessorTest Namespace NitroxModel.Packets.Processors Assembly Nitrox.Test.dll [TestClass] public class PacketProcessorTest Inheritance object PacketProcessorTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AllPacketsAreHandled() Cleanup() ClientPacketProcessorSanity() SameAmountOfServerPacketProcessors() ServerPacketProcessorSanity()"
  },
  "api/NitroxModel.Packets.Processors.html": {
    "href": "api/NitroxModel.Packets.Processors.html",
    "title": "Namespace NitroxModel.Packets.Processors | Nitrox",
    "keywords": "Namespace NitroxModel.Packets.Processors Namespaces NitroxModel.Packets.Processors.Abstract Classes PacketProcessorTest"
  },
  "api/NitroxModel.Packets.RadioPlayPendingMessage.html": {
    "href": "api/NitroxModel.Packets.RadioPlayPendingMessage.html",
    "title": "Class RadioPlayPendingMessage | Nitrox",
    "keywords": "Class RadioPlayPendingMessage Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class RadioPlayPendingMessage : Packet Inheritance object Packet RadioPlayPendingMessage Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxModel.Packets.RecipePinned.-ctor.html": {
    "href": "api/NitroxModel.Packets.RecipePinned.-ctor.html",
    "title": "Constructor RecipePinned | Nitrox",
    "keywords": "Constructor RecipePinned Namespace NitroxModel.Packets Assembly NitroxModel.dll RecipePinned(int, bool) public RecipePinned(int techType, bool pinned) Parameters techType int pinned bool"
  },
  "api/NitroxModel.Packets.RecipePinned.Pinned.html": {
    "href": "api/NitroxModel.Packets.RecipePinned.Pinned.html",
    "title": "Property Pinned | Nitrox",
    "keywords": "Property Pinned Namespace NitroxModel.Packets Assembly NitroxModel.dll Pinned public bool Pinned { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.RecipePinned.TechType.html": {
    "href": "api/NitroxModel.Packets.RecipePinned.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.Packets Assembly NitroxModel.dll TechType public int TechType { get; } Property Value int"
  },
  "api/NitroxModel.Packets.RecipePinned.html": {
    "href": "api/NitroxModel.Packets.RecipePinned.html",
    "title": "Class RecipePinned | Nitrox",
    "keywords": "Class RecipePinned Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class RecipePinned : Packet Inheritance object Packet RecipePinned Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RecipePinned(int, bool) Properties Pinned TechType"
  },
  "api/NitroxModel.Packets.Schedule.-ctor.html": {
    "href": "api/NitroxModel.Packets.Schedule.-ctor.html",
    "title": "Constructor Schedule | Nitrox",
    "keywords": "Constructor Schedule Namespace NitroxModel.Packets Assembly NitroxModel.dll Schedule(float, string, int) public Schedule(float timeExecute, string key, int type) Parameters timeExecute float key string type int"
  },
  "api/NitroxModel.Packets.Schedule.Key.html": {
    "href": "api/NitroxModel.Packets.Schedule.Key.html",
    "title": "Property Key | Nitrox",
    "keywords": "Property Key Namespace NitroxModel.Packets Assembly NitroxModel.dll Key public string Key { get; } Property Value string"
  },
  "api/NitroxModel.Packets.Schedule.TimeExecute.html": {
    "href": "api/NitroxModel.Packets.Schedule.TimeExecute.html",
    "title": "Property TimeExecute | Nitrox",
    "keywords": "Property TimeExecute Namespace NitroxModel.Packets Assembly NitroxModel.dll TimeExecute public float TimeExecute { get; } Property Value float"
  },
  "api/NitroxModel.Packets.Schedule.Type.html": {
    "href": "api/NitroxModel.Packets.Schedule.Type.html",
    "title": "Property Type | Nitrox",
    "keywords": "Property Type Namespace NitroxModel.Packets Assembly NitroxModel.dll Type public int Type { get; } Property Value int"
  },
  "api/NitroxModel.Packets.Schedule.html": {
    "href": "api/NitroxModel.Packets.Schedule.html",
    "title": "Class Schedule | Nitrox",
    "keywords": "Class Schedule Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class Schedule : Packet Inheritance object Packet Schedule Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Schedule(float, string, int) Properties Key TimeExecute Type"
  },
  "api/NitroxModel.Packets.SeamothModulesAction.-ctor.html": {
    "href": "api/NitroxModel.Packets.SeamothModulesAction.-ctor.html",
    "title": "Constructor SeamothModulesAction | Nitrox",
    "keywords": "Constructor SeamothModulesAction Namespace NitroxModel.Packets Assembly NitroxModel.dll SeamothModulesAction(NitroxTechType, int, NitroxId, NitroxVector3, NitroxQuaternion) public SeamothModulesAction(NitroxTechType techType, int slotID, NitroxId id, NitroxVector3 forward, NitroxQuaternion rotation) Parameters techType NitroxTechType slotID int id NitroxId forward NitroxVector3 rotation NitroxQuaternion"
  },
  "api/NitroxModel.Packets.SeamothModulesAction.Forward.html": {
    "href": "api/NitroxModel.Packets.SeamothModulesAction.Forward.html",
    "title": "Property Forward | Nitrox",
    "keywords": "Property Forward Namespace NitroxModel.Packets Assembly NitroxModel.dll Forward public NitroxVector3 Forward { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.SeamothModulesAction.Id.html": {
    "href": "api/NitroxModel.Packets.SeamothModulesAction.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.SeamothModulesAction.Rotation.html": {
    "href": "api/NitroxModel.Packets.SeamothModulesAction.Rotation.html",
    "title": "Property Rotation | Nitrox",
    "keywords": "Property Rotation Namespace NitroxModel.Packets Assembly NitroxModel.dll Rotation public NitroxQuaternion Rotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.Packets.SeamothModulesAction.SlotID.html": {
    "href": "api/NitroxModel.Packets.SeamothModulesAction.SlotID.html",
    "title": "Property SlotID | Nitrox",
    "keywords": "Property SlotID Namespace NitroxModel.Packets Assembly NitroxModel.dll SlotID public int SlotID { get; } Property Value int"
  },
  "api/NitroxModel.Packets.SeamothModulesAction.TechType.html": {
    "href": "api/NitroxModel.Packets.SeamothModulesAction.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel.Packets Assembly NitroxModel.dll TechType public NitroxTechType TechType { get; } Property Value NitroxTechType"
  },
  "api/NitroxModel.Packets.SeamothModulesAction.html": {
    "href": "api/NitroxModel.Packets.SeamothModulesAction.html",
    "title": "Class SeamothModulesAction | Nitrox",
    "keywords": "Class SeamothModulesAction Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class SeamothModulesAction : Packet Inheritance object Packet SeamothModulesAction Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SeamothModulesAction(NitroxTechType, int, NitroxId, NitroxVector3, NitroxQuaternion) Properties Forward Id Rotation SlotID TechType"
  },
  "api/NitroxModel.Packets.ServerCommand.-ctor.html": {
    "href": "api/NitroxModel.Packets.ServerCommand.-ctor.html",
    "title": "Constructor ServerCommand | Nitrox",
    "keywords": "Constructor ServerCommand Namespace NitroxModel.Packets Assembly NitroxModel.dll ServerCommand(string) public ServerCommand(string cmd) Parameters cmd string ServerCommand(string[]) public ServerCommand(string[] cmdArgs) Parameters cmdArgs string[]"
  },
  "api/NitroxModel.Packets.ServerCommand.Cmd.html": {
    "href": "api/NitroxModel.Packets.ServerCommand.Cmd.html",
    "title": "Property Cmd | Nitrox",
    "keywords": "Property Cmd Namespace NitroxModel.Packets Assembly NitroxModel.dll Cmd public string Cmd { get; } Property Value string"
  },
  "api/NitroxModel.Packets.ServerCommand.html": {
    "href": "api/NitroxModel.Packets.ServerCommand.html",
    "title": "Class ServerCommand | Nitrox",
    "keywords": "Class ServerCommand Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class ServerCommand : Packet Inheritance object Packet ServerCommand Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerCommand(string) ServerCommand(string[]) Properties Cmd"
  },
  "api/NitroxModel.Packets.ServerStopped.html": {
    "href": "api/NitroxModel.Packets.ServerStopped.html",
    "title": "Class ServerStopped | Nitrox",
    "keywords": "Class ServerStopped Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class ServerStopped : Packet Inheritance object Packet ServerStopped Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxModel.Packets.SignalPingPreferenceChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.SignalPingPreferenceChanged.-ctor.html",
    "title": "Constructor SignalPingPreferenceChanged | Nitrox",
    "keywords": "Constructor SignalPingPreferenceChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll SignalPingPreferenceChanged(string, bool, int) public SignalPingPreferenceChanged(string pingKey, bool visible, int color) Parameters pingKey string visible bool color int"
  },
  "api/NitroxModel.Packets.SignalPingPreferenceChanged.Color.html": {
    "href": "api/NitroxModel.Packets.SignalPingPreferenceChanged.Color.html",
    "title": "Property Color | Nitrox",
    "keywords": "Property Color Namespace NitroxModel.Packets Assembly NitroxModel.dll Color public int Color { get; } Property Value int"
  },
  "api/NitroxModel.Packets.SignalPingPreferenceChanged.PingKey.html": {
    "href": "api/NitroxModel.Packets.SignalPingPreferenceChanged.PingKey.html",
    "title": "Property PingKey | Nitrox",
    "keywords": "Property PingKey Namespace NitroxModel.Packets Assembly NitroxModel.dll PingKey public string PingKey { get; } Property Value string"
  },
  "api/NitroxModel.Packets.SignalPingPreferenceChanged.Visible.html": {
    "href": "api/NitroxModel.Packets.SignalPingPreferenceChanged.Visible.html",
    "title": "Property Visible | Nitrox",
    "keywords": "Property Visible Namespace NitroxModel.Packets Assembly NitroxModel.dll Visible public bool Visible { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.SignalPingPreferenceChanged.html": {
    "href": "api/NitroxModel.Packets.SignalPingPreferenceChanged.html",
    "title": "Class SignalPingPreferenceChanged | Nitrox",
    "keywords": "Class SignalPingPreferenceChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class SignalPingPreferenceChanged : Packet Inheritance object Packet SignalPingPreferenceChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SignalPingPreferenceChanged(string, bool, int) Properties Color PingKey Visible"
  },
  "api/NitroxModel.Packets.SimulationOwnershipChange.-ctor.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipChange.-ctor.html",
    "title": "Constructor SimulationOwnershipChange | Nitrox",
    "keywords": "Constructor SimulationOwnershipChange Namespace NitroxModel.Packets Assembly NitroxModel.dll SimulationOwnershipChange(NitroxId, ushort, SimulationLockType) public SimulationOwnershipChange(NitroxId id, ushort owningPlayerId, SimulationLockType lockType) Parameters id NitroxId owningPlayerId ushort lockType SimulationLockType SimulationOwnershipChange(SimulatedEntity) public SimulationOwnershipChange(SimulatedEntity entity) Parameters entity SimulatedEntity SimulationOwnershipChange(List<SimulatedEntity>) public SimulationOwnershipChange(List<SimulatedEntity> entities) Parameters entities List<SimulatedEntity>"
  },
  "api/NitroxModel.Packets.SimulationOwnershipChange.Entities.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipChange.Entities.html",
    "title": "Property Entities | Nitrox",
    "keywords": "Property Entities Namespace NitroxModel.Packets Assembly NitroxModel.dll Entities public List<SimulatedEntity> Entities { get; } Property Value List<SimulatedEntity>"
  },
  "api/NitroxModel.Packets.SimulationOwnershipChange.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipChange.html",
    "title": "Class SimulationOwnershipChange | Nitrox",
    "keywords": "Class SimulationOwnershipChange Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class SimulationOwnershipChange : Packet Inheritance object Packet SimulationOwnershipChange Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SimulationOwnershipChange(NitroxId, ushort, SimulationLockType) SimulationOwnershipChange(SimulatedEntity) SimulationOwnershipChange(List<SimulatedEntity>) Properties Entities"
  },
  "api/NitroxModel.Packets.SimulationOwnershipRequest.-ctor.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipRequest.-ctor.html",
    "title": "Constructor SimulationOwnershipRequest | Nitrox",
    "keywords": "Constructor SimulationOwnershipRequest Namespace NitroxModel.Packets Assembly NitroxModel.dll SimulationOwnershipRequest(ushort, NitroxId, SimulationLockType) public SimulationOwnershipRequest(ushort playerId, NitroxId id, SimulationLockType lockType) Parameters playerId ushort id NitroxId lockType SimulationLockType"
  },
  "api/NitroxModel.Packets.SimulationOwnershipRequest.Id.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipRequest.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.SimulationOwnershipRequest.LockType.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipRequest.LockType.html",
    "title": "Property LockType | Nitrox",
    "keywords": "Property LockType Namespace NitroxModel.Packets Assembly NitroxModel.dll LockType public SimulationLockType LockType { get; } Property Value SimulationLockType"
  },
  "api/NitroxModel.Packets.SimulationOwnershipRequest.PlayerId.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipRequest.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.SimulationOwnershipRequest.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipRequest.html",
    "title": "Class SimulationOwnershipRequest | Nitrox",
    "keywords": "Class SimulationOwnershipRequest Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class SimulationOwnershipRequest : Packet Inheritance object Packet SimulationOwnershipRequest Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SimulationOwnershipRequest(ushort, NitroxId, SimulationLockType) Properties Id LockType PlayerId"
  },
  "api/NitroxModel.Packets.SimulationOwnershipResponse.-ctor.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipResponse.-ctor.html",
    "title": "Constructor SimulationOwnershipResponse | Nitrox",
    "keywords": "Constructor SimulationOwnershipResponse Namespace NitroxModel.Packets Assembly NitroxModel.dll SimulationOwnershipResponse(NitroxId, bool, SimulationLockType) public SimulationOwnershipResponse(NitroxId id, bool lockAcquired, SimulationLockType lockType) Parameters id NitroxId lockAcquired bool lockType SimulationLockType"
  },
  "api/NitroxModel.Packets.SimulationOwnershipResponse.Id.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipResponse.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.SimulationOwnershipResponse.LockAcquired.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipResponse.LockAcquired.html",
    "title": "Property LockAcquired | Nitrox",
    "keywords": "Property LockAcquired Namespace NitroxModel.Packets Assembly NitroxModel.dll LockAcquired public bool LockAcquired { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.SimulationOwnershipResponse.LockType.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipResponse.LockType.html",
    "title": "Property LockType | Nitrox",
    "keywords": "Property LockType Namespace NitroxModel.Packets Assembly NitroxModel.dll LockType public SimulationLockType LockType { get; } Property Value SimulationLockType"
  },
  "api/NitroxModel.Packets.SimulationOwnershipResponse.html": {
    "href": "api/NitroxModel.Packets.SimulationOwnershipResponse.html",
    "title": "Class SimulationOwnershipResponse | Nitrox",
    "keywords": "Class SimulationOwnershipResponse Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class SimulationOwnershipResponse : Packet Inheritance object Packet SimulationOwnershipResponse Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SimulationOwnershipResponse(NitroxId, bool, SimulationLockType) Properties Id LockAcquired LockType"
  },
  "api/NitroxModel.Packets.SpawnEntities.-ctor.html": {
    "href": "api/NitroxModel.Packets.SpawnEntities.-ctor.html",
    "title": "Constructor SpawnEntities | Nitrox",
    "keywords": "Constructor SpawnEntities Namespace NitroxModel.Packets Assembly NitroxModel.dll SpawnEntities(List<Entity>) public SpawnEntities(List<Entity> entities) Parameters entities List<Entity> SpawnEntities(Entity) public SpawnEntities(Entity entity) Parameters entity Entity SpawnEntities(Entity, bool) public SpawnEntities(Entity entity, bool forceRespawn) Parameters entity Entity forceRespawn bool SpawnEntities(List<Entity>, bool) public SpawnEntities(List<Entity> entities, bool forceRespawn) Parameters entities List<Entity> forceRespawn bool"
  },
  "api/NitroxModel.Packets.SpawnEntities.Entities.html": {
    "href": "api/NitroxModel.Packets.SpawnEntities.Entities.html",
    "title": "Property Entities | Nitrox",
    "keywords": "Property Entities Namespace NitroxModel.Packets Assembly NitroxModel.dll Entities public List<Entity> Entities { get; } Property Value List<Entity>"
  },
  "api/NitroxModel.Packets.SpawnEntities.ForceRespawn.html": {
    "href": "api/NitroxModel.Packets.SpawnEntities.ForceRespawn.html",
    "title": "Property ForceRespawn | Nitrox",
    "keywords": "Property ForceRespawn Namespace NitroxModel.Packets Assembly NitroxModel.dll ForceRespawn public bool ForceRespawn { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.SpawnEntities.html": {
    "href": "api/NitroxModel.Packets.SpawnEntities.html",
    "title": "Class SpawnEntities | Nitrox",
    "keywords": "Class SpawnEntities Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class SpawnEntities : Packet Inheritance object Packet SpawnEntities Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SpawnEntities(Entity) SpawnEntities(Entity, bool) SpawnEntities(List<Entity>) SpawnEntities(List<Entity>, bool) Properties Entities ForceRespawn"
  },
  "api/NitroxModel.Packets.StoryGoalExecuted.-ctor.html": {
    "href": "api/NitroxModel.Packets.StoryGoalExecuted.-ctor.html",
    "title": "Constructor StoryGoalExecuted | Nitrox",
    "keywords": "Constructor StoryGoalExecuted Namespace NitroxModel.Packets Assembly NitroxModel.dll StoryGoalExecuted(string, EventType, float?) public StoryGoalExecuted(string key, StoryGoalExecuted.EventType type, float? timestamp = null) Parameters key string type StoryGoalExecuted.EventType timestamp float?"
  },
  "api/NitroxModel.Packets.StoryGoalExecuted.EventType.html": {
    "href": "api/NitroxModel.Packets.StoryGoalExecuted.EventType.html",
    "title": "Enum StoryGoalExecuted.EventType | Nitrox",
    "keywords": "Enum StoryGoalExecuted.EventType Namespace NitroxModel.Packets Assembly NitroxModel.dll public enum StoryGoalExecuted.EventType Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields ENCYCLOPEDIA = 2 PDA = 0 RADIO = 1 STORY = 3"
  },
  "api/NitroxModel.Packets.StoryGoalExecuted.Key.html": {
    "href": "api/NitroxModel.Packets.StoryGoalExecuted.Key.html",
    "title": "Property Key | Nitrox",
    "keywords": "Property Key Namespace NitroxModel.Packets Assembly NitroxModel.dll Key public string Key { get; } Property Value string"
  },
  "api/NitroxModel.Packets.StoryGoalExecuted.Timestamp.html": {
    "href": "api/NitroxModel.Packets.StoryGoalExecuted.Timestamp.html",
    "title": "Property Timestamp | Nitrox",
    "keywords": "Property Timestamp Namespace NitroxModel.Packets Assembly NitroxModel.dll Timestamp public float? Timestamp { get; set; } Property Value float?"
  },
  "api/NitroxModel.Packets.StoryGoalExecuted.ToString.html": {
    "href": "api/NitroxModel.Packets.StoryGoalExecuted.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.Packets Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.Packets.StoryGoalExecuted.Type.html": {
    "href": "api/NitroxModel.Packets.StoryGoalExecuted.Type.html",
    "title": "Property Type | Nitrox",
    "keywords": "Property Type Namespace NitroxModel.Packets Assembly NitroxModel.dll Type public StoryGoalExecuted.EventType Type { get; } Property Value StoryGoalExecuted.EventType"
  },
  "api/NitroxModel.Packets.StoryGoalExecuted.html": {
    "href": "api/NitroxModel.Packets.StoryGoalExecuted.html",
    "title": "Class StoryGoalExecuted | Nitrox",
    "keywords": "Class StoryGoalExecuted Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class StoryGoalExecuted : Packet Inheritance object Packet StoryGoalExecuted Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StoryGoalExecuted(string, EventType, float?) Properties Key Timestamp Type Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.Packets.SubRootChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.SubRootChanged.-ctor.html",
    "title": "Constructor SubRootChanged | Nitrox",
    "keywords": "Constructor SubRootChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll SubRootChanged(ushort, Optional<NitroxId>) public SubRootChanged(ushort playerId, Optional<NitroxId> subRootId) Parameters playerId ushort subRootId Optional<NitroxId>"
  },
  "api/NitroxModel.Packets.SubRootChanged.PlayerId.html": {
    "href": "api/NitroxModel.Packets.SubRootChanged.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.SubRootChanged.SubRootId.html": {
    "href": "api/NitroxModel.Packets.SubRootChanged.SubRootId.html",
    "title": "Property SubRootId | Nitrox",
    "keywords": "Property SubRootId Namespace NitroxModel.Packets Assembly NitroxModel.dll SubRootId public Optional<NitroxId> SubRootId { get; } Property Value Optional<NitroxId>"
  },
  "api/NitroxModel.Packets.SubRootChanged.html": {
    "href": "api/NitroxModel.Packets.SubRootChanged.html",
    "title": "Class SubRootChanged | Nitrox",
    "keywords": "Class SubRootChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class SubRootChanged : Packet Inheritance object Packet SubRootChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SubRootChanged(ushort, Optional<NitroxId>) Properties PlayerId SubRootId"
  },
  "api/NitroxModel.Packets.TimeChange.-ctor.html": {
    "href": "api/NitroxModel.Packets.TimeChange.-ctor.html",
    "title": "Constructor TimeChange | Nitrox",
    "keywords": "Constructor TimeChange Namespace NitroxModel.Packets Assembly NitroxModel.dll TimeChange(double, long) public TimeChange(double currentTime, long updateTime) Parameters currentTime double updateTime long"
  },
  "api/NitroxModel.Packets.TimeChange.CurrentTime.html": {
    "href": "api/NitroxModel.Packets.TimeChange.CurrentTime.html",
    "title": "Property CurrentTime | Nitrox",
    "keywords": "Property CurrentTime Namespace NitroxModel.Packets Assembly NitroxModel.dll CurrentTime Time in seconds public double CurrentTime { get; } Property Value double"
  },
  "api/NitroxModel.Packets.TimeChange.UpdateTime.html": {
    "href": "api/NitroxModel.Packets.TimeChange.UpdateTime.html",
    "title": "Property UpdateTime | Nitrox",
    "keywords": "Property UpdateTime Namespace NitroxModel.Packets Assembly NitroxModel.dll UpdateTime Real time at which the CurrentTime was observed public long UpdateTime { get; } Property Value long"
  },
  "api/NitroxModel.Packets.TimeChange.html": {
    "href": "api/NitroxModel.Packets.TimeChange.html",
    "title": "Class TimeChange | Nitrox",
    "keywords": "Class TimeChange Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class TimeChange : Packet Inheritance object Packet TimeChange Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeChange(double, long) Properties CurrentTime Time in seconds UpdateTime Real time at which the CurrentTime was observed"
  },
  "api/NitroxModel.Packets.ToggleLights.-ctor.html": {
    "href": "api/NitroxModel.Packets.ToggleLights.-ctor.html",
    "title": "Constructor ToggleLights | Nitrox",
    "keywords": "Constructor ToggleLights Namespace NitroxModel.Packets Assembly NitroxModel.dll ToggleLights(NitroxId, bool) public ToggleLights(NitroxId id, bool isOn) Parameters id NitroxId isOn bool"
  },
  "api/NitroxModel.Packets.ToggleLights.Id.html": {
    "href": "api/NitroxModel.Packets.ToggleLights.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.ToggleLights.IsOn.html": {
    "href": "api/NitroxModel.Packets.ToggleLights.IsOn.html",
    "title": "Property IsOn | Nitrox",
    "keywords": "Property IsOn Namespace NitroxModel.Packets Assembly NitroxModel.dll IsOn public bool IsOn { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.ToggleLights.html": {
    "href": "api/NitroxModel.Packets.ToggleLights.html",
    "title": "Class ToggleLights | Nitrox",
    "keywords": "Class ToggleLights Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class ToggleLights : Packet Inheritance object Packet ToggleLights Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ToggleLights(NitroxId, bool) Properties Id IsOn"
  },
  "api/NitroxModel.Packets.UpdateBase.-ctor.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.-ctor.html",
    "title": "Constructor UpdateBase | Nitrox",
    "keywords": "Constructor UpdateBase Namespace NitroxModel.Packets Assembly NitroxModel.dll UpdateBase(NitroxId, NitroxId, BaseData, Entity, Dictionary<NitroxId, NitroxBaseFace>, Dictionary<NitroxId, NitroxInt3>, Dictionary<NitroxId, NitroxInt3>, (NitroxId, NitroxId), int) public UpdateBase(NitroxId baseId, NitroxId formerGhostId, BaseData baseData, Entity builtPieceEntity, Dictionary<NitroxId, NitroxBaseFace> updatedChildren, Dictionary<NitroxId, NitroxInt3> updatedMoonpools, Dictionary<NitroxId, NitroxInt3> updatedMapRooms, (NitroxId, NitroxId) childrenTransfer, int operationId) Parameters baseId NitroxId formerGhostId NitroxId baseData BaseData builtPieceEntity Entity updatedChildren Dictionary<NitroxId, NitroxBaseFace> updatedMoonpools Dictionary<NitroxId, NitroxInt3> updatedMapRooms Dictionary<NitroxId, NitroxInt3> childrenTransfer (NitroxId, NitroxId) operationId int"
  },
  "api/NitroxModel.Packets.UpdateBase.BaseData.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.BaseData.html",
    "title": "Property BaseData | Nitrox",
    "keywords": "Property BaseData Namespace NitroxModel.Packets Assembly NitroxModel.dll BaseData public BaseData BaseData { get; set; } Property Value BaseData"
  },
  "api/NitroxModel.Packets.UpdateBase.BaseId.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.BaseId.html",
    "title": "Property BaseId | Nitrox",
    "keywords": "Property BaseId Namespace NitroxModel.Packets Assembly NitroxModel.dll BaseId public NitroxId BaseId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.UpdateBase.BuiltPieceEntity.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.BuiltPieceEntity.html",
    "title": "Property BuiltPieceEntity | Nitrox",
    "keywords": "Property BuiltPieceEntity Namespace NitroxModel.Packets Assembly NitroxModel.dll BuiltPieceEntity public Entity BuiltPieceEntity { get; set; } Property Value Entity"
  },
  "api/NitroxModel.Packets.UpdateBase.ChildrenTransfer.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.ChildrenTransfer.html",
    "title": "Property ChildrenTransfer | Nitrox",
    "keywords": "Property ChildrenTransfer Namespace NitroxModel.Packets Assembly NitroxModel.dll ChildrenTransfer public (NitroxId, NitroxId) ChildrenTransfer { get; } Property Value (NitroxId, NitroxId)"
  },
  "api/NitroxModel.Packets.UpdateBase.Deflate.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.Deflate.html",
    "title": "Method Deflate | Nitrox",
    "keywords": "Method Deflate Namespace NitroxModel.Packets Assembly NitroxModel.dll Deflate() public void Deflate()"
  },
  "api/NitroxModel.Packets.UpdateBase.FormerGhostId.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.FormerGhostId.html",
    "title": "Property FormerGhostId | Nitrox",
    "keywords": "Property FormerGhostId Namespace NitroxModel.Packets Assembly NitroxModel.dll FormerGhostId public NitroxId FormerGhostId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.UpdateBase.UpdatedChildren.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.UpdatedChildren.html",
    "title": "Property UpdatedChildren | Nitrox",
    "keywords": "Property UpdatedChildren Namespace NitroxModel.Packets Assembly NitroxModel.dll UpdatedChildren public Dictionary<NitroxId, NitroxBaseFace> UpdatedChildren { get; set; } Property Value Dictionary<NitroxId, NitroxBaseFace>"
  },
  "api/NitroxModel.Packets.UpdateBase.UpdatedMapRooms.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.UpdatedMapRooms.html",
    "title": "Property UpdatedMapRooms | Nitrox",
    "keywords": "Property UpdatedMapRooms Namespace NitroxModel.Packets Assembly NitroxModel.dll UpdatedMapRooms public Dictionary<NitroxId, NitroxInt3> UpdatedMapRooms { get; set; } Property Value Dictionary<NitroxId, NitroxInt3>"
  },
  "api/NitroxModel.Packets.UpdateBase.UpdatedMoonpools.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.UpdatedMoonpools.html",
    "title": "Property UpdatedMoonpools | Nitrox",
    "keywords": "Property UpdatedMoonpools Namespace NitroxModel.Packets Assembly NitroxModel.dll UpdatedMoonpools public Dictionary<NitroxId, NitroxInt3> UpdatedMoonpools { get; set; } Property Value Dictionary<NitroxId, NitroxInt3>"
  },
  "api/NitroxModel.Packets.UpdateBase.html": {
    "href": "api/NitroxModel.Packets.UpdateBase.html",
    "title": "Class UpdateBase | Nitrox",
    "keywords": "Class UpdateBase Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public sealed class UpdateBase : OrderedBuildPacket Inheritance object Packet OrderedBuildPacket UpdateBase Inherited Members OrderedBuildPacket.OperationId Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors UpdateBase(NitroxId, NitroxId, BaseData, Entity, Dictionary<NitroxId, NitroxBaseFace>, Dictionary<NitroxId, NitroxInt3>, Dictionary<NitroxId, NitroxInt3>, (NitroxId, NitroxId), int) Properties BaseData BaseId BuiltPieceEntity ChildrenTransfer FormerGhostId UpdatedChildren UpdatedMapRooms UpdatedMoonpools Methods Deflate()"
  },
  "api/NitroxModel.Packets.VehicleDocking.-ctor.html": {
    "href": "api/NitroxModel.Packets.VehicleDocking.-ctor.html",
    "title": "Constructor VehicleDocking | Nitrox",
    "keywords": "Constructor VehicleDocking Namespace NitroxModel.Packets Assembly NitroxModel.dll VehicleDocking(NitroxId, NitroxId, ushort) public VehicleDocking(NitroxId vehicleId, NitroxId dockId, ushort playerId) Parameters vehicleId NitroxId dockId NitroxId playerId ushort"
  },
  "api/NitroxModel.Packets.VehicleDocking.DockId.html": {
    "href": "api/NitroxModel.Packets.VehicleDocking.DockId.html",
    "title": "Property DockId | Nitrox",
    "keywords": "Property DockId Namespace NitroxModel.Packets Assembly NitroxModel.dll DockId public NitroxId DockId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.VehicleDocking.PlayerId.html": {
    "href": "api/NitroxModel.Packets.VehicleDocking.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.VehicleDocking.VehicleId.html": {
    "href": "api/NitroxModel.Packets.VehicleDocking.VehicleId.html",
    "title": "Property VehicleId | Nitrox",
    "keywords": "Property VehicleId Namespace NitroxModel.Packets Assembly NitroxModel.dll VehicleId public NitroxId VehicleId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.VehicleDocking.html": {
    "href": "api/NitroxModel.Packets.VehicleDocking.html",
    "title": "Class VehicleDocking | Nitrox",
    "keywords": "Class VehicleDocking Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class VehicleDocking : Packet Inheritance object Packet VehicleDocking Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleDocking(NitroxId, NitroxId, ushort) Properties DockId PlayerId VehicleId"
  },
  "api/NitroxModel.Packets.VehicleMovement.-ctor.html": {
    "href": "api/NitroxModel.Packets.VehicleMovement.-ctor.html",
    "title": "Constructor VehicleMovement | Nitrox",
    "keywords": "Constructor VehicleMovement Namespace NitroxModel.Packets Assembly NitroxModel.dll VehicleMovement(ushort, VehicleMovementData) public VehicleMovement(ushort playerId, VehicleMovementData vehicleMovementData) Parameters playerId ushort vehicleMovementData VehicleMovementData"
  },
  "api/NitroxModel.Packets.VehicleMovement.AimingRotation.html": {
    "href": "api/NitroxModel.Packets.VehicleMovement.AimingRotation.html",
    "title": "Property AimingRotation | Nitrox",
    "keywords": "Property AimingRotation Namespace NitroxModel.Packets Assembly NitroxModel.dll AimingRotation [IgnoredMember] public override NitroxQuaternion AimingRotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.Packets.VehicleMovement.BodyRotation.html": {
    "href": "api/NitroxModel.Packets.VehicleMovement.BodyRotation.html",
    "title": "Property BodyRotation | Nitrox",
    "keywords": "Property BodyRotation Namespace NitroxModel.Packets Assembly NitroxModel.dll BodyRotation [IgnoredMember] public override NitroxQuaternion BodyRotation { get; } Property Value NitroxQuaternion"
  },
  "api/NitroxModel.Packets.VehicleMovement.PlayerId.html": {
    "href": "api/NitroxModel.Packets.VehicleMovement.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public override ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.VehicleMovement.Position.html": {
    "href": "api/NitroxModel.Packets.VehicleMovement.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel.Packets Assembly NitroxModel.dll Position [IgnoredMember] public override NitroxVector3 Position { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.VehicleMovement.VehicleMovementData.html": {
    "href": "api/NitroxModel.Packets.VehicleMovement.VehicleMovementData.html",
    "title": "Property VehicleMovementData | Nitrox",
    "keywords": "Property VehicleMovementData Namespace NitroxModel.Packets Assembly NitroxModel.dll VehicleMovementData public VehicleMovementData VehicleMovementData { get; } Property Value VehicleMovementData"
  },
  "api/NitroxModel.Packets.VehicleMovement.Velocity.html": {
    "href": "api/NitroxModel.Packets.VehicleMovement.Velocity.html",
    "title": "Property Velocity | Nitrox",
    "keywords": "Property Velocity Namespace NitroxModel.Packets Assembly NitroxModel.dll Velocity [IgnoredMember] public override NitroxVector3 Velocity { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel.Packets.VehicleMovement.html": {
    "href": "api/NitroxModel.Packets.VehicleMovement.html",
    "title": "Class VehicleMovement | Nitrox",
    "keywords": "Class VehicleMovement Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class VehicleMovement : Movement Inheritance object Packet Movement VehicleMovement Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleMovement(ushort, VehicleMovementData) Properties AimingRotation BodyRotation PlayerId Position VehicleMovementData Velocity"
  },
  "api/NitroxModel.Packets.VehicleOnPilotModeChanged.-ctor.html": {
    "href": "api/NitroxModel.Packets.VehicleOnPilotModeChanged.-ctor.html",
    "title": "Constructor VehicleOnPilotModeChanged | Nitrox",
    "keywords": "Constructor VehicleOnPilotModeChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll VehicleOnPilotModeChanged(NitroxId, ushort, bool) public VehicleOnPilotModeChanged(NitroxId vehicleId, ushort playerId, bool isPiloting) Parameters vehicleId NitroxId playerId ushort isPiloting bool"
  },
  "api/NitroxModel.Packets.VehicleOnPilotModeChanged.IsPiloting.html": {
    "href": "api/NitroxModel.Packets.VehicleOnPilotModeChanged.IsPiloting.html",
    "title": "Property IsPiloting | Nitrox",
    "keywords": "Property IsPiloting Namespace NitroxModel.Packets Assembly NitroxModel.dll IsPiloting public bool IsPiloting { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.VehicleOnPilotModeChanged.PlayerId.html": {
    "href": "api/NitroxModel.Packets.VehicleOnPilotModeChanged.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.VehicleOnPilotModeChanged.VehicleId.html": {
    "href": "api/NitroxModel.Packets.VehicleOnPilotModeChanged.VehicleId.html",
    "title": "Property VehicleId | Nitrox",
    "keywords": "Property VehicleId Namespace NitroxModel.Packets Assembly NitroxModel.dll VehicleId public NitroxId VehicleId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.VehicleOnPilotModeChanged.html": {
    "href": "api/NitroxModel.Packets.VehicleOnPilotModeChanged.html",
    "title": "Class VehicleOnPilotModeChanged | Nitrox",
    "keywords": "Class VehicleOnPilotModeChanged Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class VehicleOnPilotModeChanged : Packet Inheritance object Packet VehicleOnPilotModeChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleOnPilotModeChanged(NitroxId, ushort, bool) Properties IsPiloting PlayerId VehicleId"
  },
  "api/NitroxModel.Packets.VehicleUndocking.-ctor.html": {
    "href": "api/NitroxModel.Packets.VehicleUndocking.-ctor.html",
    "title": "Constructor VehicleUndocking | Nitrox",
    "keywords": "Constructor VehicleUndocking Namespace NitroxModel.Packets Assembly NitroxModel.dll VehicleUndocking(NitroxId, NitroxId, ushort, bool) public VehicleUndocking(NitroxId vehicleId, NitroxId dockId, ushort playerId, bool undockingStart) Parameters vehicleId NitroxId dockId NitroxId playerId ushort undockingStart bool"
  },
  "api/NitroxModel.Packets.VehicleUndocking.DockId.html": {
    "href": "api/NitroxModel.Packets.VehicleUndocking.DockId.html",
    "title": "Property DockId | Nitrox",
    "keywords": "Property DockId Namespace NitroxModel.Packets Assembly NitroxModel.dll DockId public NitroxId DockId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.VehicleUndocking.PlayerId.html": {
    "href": "api/NitroxModel.Packets.VehicleUndocking.PlayerId.html",
    "title": "Property PlayerId | Nitrox",
    "keywords": "Property PlayerId Namespace NitroxModel.Packets Assembly NitroxModel.dll PlayerId public ushort PlayerId { get; } Property Value ushort"
  },
  "api/NitroxModel.Packets.VehicleUndocking.UndockingStart.html": {
    "href": "api/NitroxModel.Packets.VehicleUndocking.UndockingStart.html",
    "title": "Property UndockingStart | Nitrox",
    "keywords": "Property UndockingStart Namespace NitroxModel.Packets Assembly NitroxModel.dll UndockingStart public bool UndockingStart { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.VehicleUndocking.VehicleId.html": {
    "href": "api/NitroxModel.Packets.VehicleUndocking.VehicleId.html",
    "title": "Property VehicleId | Nitrox",
    "keywords": "Property VehicleId Namespace NitroxModel.Packets Assembly NitroxModel.dll VehicleId public NitroxId VehicleId { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.VehicleUndocking.html": {
    "href": "api/NitroxModel.Packets.VehicleUndocking.html",
    "title": "Class VehicleUndocking | Nitrox",
    "keywords": "Class VehicleUndocking Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class VehicleUndocking : Packet Inheritance object Packet VehicleUndocking Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleUndocking(NitroxId, NitroxId, ushort, bool) Properties DockId PlayerId UndockingStart VehicleId"
  },
  "api/NitroxModel.Packets.WaterParkDeconstructed.-ctor.html": {
    "href": "api/NitroxModel.Packets.WaterParkDeconstructed.-ctor.html",
    "title": "Constructor WaterParkDeconstructed | Nitrox",
    "keywords": "Constructor WaterParkDeconstructed Namespace NitroxModel.Packets Assembly NitroxModel.dll WaterParkDeconstructed(NitroxId, NitroxId, BuildPieceIdentifier, GhostEntity, BaseData, InteriorPieceEntity, List<NitroxId>, bool, int) public WaterParkDeconstructed(NitroxId baseId, NitroxId pieceId, BuildPieceIdentifier buildPieceIdentifier, GhostEntity replacerGhost, BaseData baseData, InteriorPieceEntity newWaterPark, List<NitroxId> movedChildrenIds, bool transfer, int operationId) Parameters baseId NitroxId pieceId NitroxId buildPieceIdentifier BuildPieceIdentifier replacerGhost GhostEntity baseData BaseData newWaterPark InteriorPieceEntity movedChildrenIds List<NitroxId> transfer bool operationId int"
  },
  "api/NitroxModel.Packets.WaterParkDeconstructed.MovedChildrenIds.html": {
    "href": "api/NitroxModel.Packets.WaterParkDeconstructed.MovedChildrenIds.html",
    "title": "Property MovedChildrenIds | Nitrox",
    "keywords": "Property MovedChildrenIds Namespace NitroxModel.Packets Assembly NitroxModel.dll MovedChildrenIds public List<NitroxId> MovedChildrenIds { get; } Property Value List<NitroxId>"
  },
  "api/NitroxModel.Packets.WaterParkDeconstructed.NewWaterPark.html": {
    "href": "api/NitroxModel.Packets.WaterParkDeconstructed.NewWaterPark.html",
    "title": "Property NewWaterPark | Nitrox",
    "keywords": "Property NewWaterPark Namespace NitroxModel.Packets Assembly NitroxModel.dll NewWaterPark public InteriorPieceEntity NewWaterPark { get; } Property Value InteriorPieceEntity"
  },
  "api/NitroxModel.Packets.WaterParkDeconstructed.Transfer.html": {
    "href": "api/NitroxModel.Packets.WaterParkDeconstructed.Transfer.html",
    "title": "Property Transfer | Nitrox",
    "keywords": "Property Transfer Namespace NitroxModel.Packets Assembly NitroxModel.dll Transfer public bool Transfer { get; } Property Value bool"
  },
  "api/NitroxModel.Packets.WaterParkDeconstructed.html": {
    "href": "api/NitroxModel.Packets.WaterParkDeconstructed.html",
    "title": "Class WaterParkDeconstructed | Nitrox",
    "keywords": "Class WaterParkDeconstructed Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public sealed class WaterParkDeconstructed : PieceDeconstructed Inheritance object Packet OrderedBuildPacket PieceDeconstructed WaterParkDeconstructed Inherited Members PieceDeconstructed.BaseId PieceDeconstructed.PieceId PieceDeconstructed.BuildPieceIdentifier PieceDeconstructed.ReplacerGhost PieceDeconstructed.BaseData OrderedBuildPacket.OperationId Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WaterParkDeconstructed(NitroxId, NitroxId, BuildPieceIdentifier, GhostEntity, BaseData, InteriorPieceEntity, List<NitroxId>, bool, int) Properties MovedChildrenIds NewWaterPark Transfer"
  },
  "api/NitroxModel.Packets.WeldAction.-ctor.html": {
    "href": "api/NitroxModel.Packets.WeldAction.-ctor.html",
    "title": "Constructor WeldAction | Nitrox",
    "keywords": "Constructor WeldAction Namespace NitroxModel.Packets Assembly NitroxModel.dll WeldAction(NitroxId, float) public WeldAction(NitroxId id, float healthAdded) Parameters id NitroxId healthAdded float"
  },
  "api/NitroxModel.Packets.WeldAction.HealthAdded.html": {
    "href": "api/NitroxModel.Packets.WeldAction.HealthAdded.html",
    "title": "Property HealthAdded | Nitrox",
    "keywords": "Property HealthAdded Namespace NitroxModel.Packets Assembly NitroxModel.dll HealthAdded public float HealthAdded { get; } Property Value float"
  },
  "api/NitroxModel.Packets.WeldAction.Id.html": {
    "href": "api/NitroxModel.Packets.WeldAction.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Packets Assembly NitroxModel.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel.Packets.WeldAction.html": {
    "href": "api/NitroxModel.Packets.WeldAction.html",
    "title": "Class WeldAction | Nitrox",
    "keywords": "Class WeldAction Namespace NitroxModel.Packets Assembly NitroxModel.dll [Serializable] public class WeldAction : Packet Inheritance object Packet WeldAction Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WeldAction(NitroxId, float) Properties HealthAdded Id"
  },
  "api/NitroxModel.Packets.html": {
    "href": "api/NitroxModel.Packets.html",
    "title": "Namespace NitroxModel.Packets | Nitrox",
    "keywords": "Namespace NitroxModel.Packets Namespaces NitroxModel.Packets.Exceptions NitroxModel.Packets.Processors Classes AnimationChangeEvent AuroraAndTimeUpdate BaseDeconstructed BatchVisibilityChanged BedEnter BuildingDesyncWarning BuildingResync BuildingResyncRequest CellVisibilityChanged ChatMessage CorrelatedPacket DebugStartMapPacket DeconstructionBegin Disconnect DiscordRequestIP EntityDestroyed EntityMetadataUpdate EntityReparented EntitySpawnedByClient EntityTransformUpdates EntityTransformUpdates.EntityTransformUpdate EntityTransformUpdates.RawTransformUpdate EntityTransformUpdates.SplineTransformUpdate EscapePodChanged FireDoused Triggered when a fire has been doused. Fire growth is a static thing, so we only need to track dousing GameModeChanged GoalCompleted InitialPlayerSync ItemPosition KnownTechEntryAdd MedicalCabinetClicked ModifyConstructedAmount ModuleAdded ModuleRemoved Movement MultiplayerSessionPolicy MultiplayerSessionPolicyRequest This is a packet that we use to \"ping\" a server to let it know that we'd like more information on the current requirements to submit a reservation to the ongoing game session. MultiplayerSessionReservation MultiplayerSessionReservationRequest MutePlayer OpenableStateChanged OrderedBuildPacket PDAEncyclopediaEntryAdd PDALogEntryAdd PDAScanFinished Packet PacketsSerializableTest PermsChanged PickupItem PieceDeconstructed PingRenamed PinnedRecipeMoved PlaceBase PlaceGhost PlaceModule PlayFMODAsset PlayFMODCustomEmitter PlayFMODCustomLoopingEmitter PlayFMODStudioEmitter PlaySunbeamEvent PlaySunbeamEvent.SunbeamEvent Associates an understandable event name and the associated goal from SunbeamGoals. PlayerCinematicControllerCall PlayerDeathEvent PlayerHeldItemChanged PlayerJoinedMultiplayerSession PlayerJoiningMultiplayerSession PlayerKicked PlayerMovement PlayerQuickSlotsBindingChanged PlayerStats PlayerSyncFinished PlayerTeleported RadioPlayPendingMessage RecipePinned Schedule SeamothModulesAction ServerCommand ServerStopped SignalPingPreferenceChanged SimulationOwnershipChange SimulationOwnershipRequest SimulationOwnershipResponse SpawnEntities StoryGoalExecuted SubRootChanged TimeChange ToggleLights UpdateBase VehicleDocking VehicleMovement VehicleOnPilotModeChanged VehicleUndocking WaterParkDeconstructed WeldAction Structs Packet.Wrapper Wrapper which is used to serialize packets in BinaryPack. We cannot serialize Packets directly because 1) We will not know what type to deserialize to and 2) The root object must have a callable constructor so it can't be abstract This type solves both problems and only adds a single byte to the data. Enums KnownTechEntryAdd.EntryCategory Packet.UdpChannelId PlayerHeldItemChanged.ChangeType StoryGoalExecuted.EventType"
  },
  "api/NitroxModel.Platforms.OS.MacOS.MacFileSystem.GetDefaultPrograms.html": {
    "href": "api/NitroxModel.Platforms.OS.MacOS.MacFileSystem.GetDefaultPrograms.html",
    "title": "Method GetDefaultPrograms | Nitrox",
    "keywords": "Method GetDefaultPrograms Namespace NitroxModel.Platforms.OS.MacOS Assembly NitroxModel.dll GetDefaultPrograms(string) public override IEnumerable<string> GetDefaultPrograms(string file) Parameters file string Returns IEnumerable<string>"
  },
  "api/NitroxModel.Platforms.OS.MacOS.MacFileSystem.IsTrustedFile.html": {
    "href": "api/NitroxModel.Platforms.OS.MacOS.MacFileSystem.IsTrustedFile.html",
    "title": "Method IsTrustedFile | Nitrox",
    "keywords": "Method IsTrustedFile Namespace NitroxModel.Platforms.OS.MacOS Assembly NitroxModel.dll IsTrustedFile(string) public override bool IsTrustedFile(string file) Parameters file string Returns bool"
  },
  "api/NitroxModel.Platforms.OS.MacOS.MacFileSystem.SetFullAccessToCurrentUser.html": {
    "href": "api/NitroxModel.Platforms.OS.MacOS.MacFileSystem.SetFullAccessToCurrentUser.html",
    "title": "Method SetFullAccessToCurrentUser | Nitrox",
    "keywords": "Method SetFullAccessToCurrentUser Namespace NitroxModel.Platforms.OS.MacOS Assembly NitroxModel.dll SetFullAccessToCurrentUser(string) public override bool SetFullAccessToCurrentUser(string directory) Parameters directory string Returns bool"
  },
  "api/NitroxModel.Platforms.OS.MacOS.MacFileSystem.html": {
    "href": "api/NitroxModel.Platforms.OS.MacOS.MacFileSystem.html",
    "title": "Class MacFileSystem | Nitrox",
    "keywords": "Class MacFileSystem Namespace NitroxModel.Platforms.OS.MacOS Assembly NitroxModel.dll public sealed class MacFileSystem : FileSystem Inheritance object FileSystem MacFileSystem Inherited Members FileSystem.ExecutableFileExtensions FileSystem.Instance FileSystem.TextEditor FileSystem.OpenOrExecuteFile(string) FileSystem.GetFullPath(string) FileSystem.MakeRelativePath(string, string) FileSystem.ZipFilesInDirectory(string, string, string, bool) FileSystem.ReplaceFile(string, string) FileSystem.IsWritable(string) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods GetDefaultPrograms(string) IsTrustedFile(string) SetFullAccessToCurrentUser(string)"
  },
  "api/NitroxModel.Platforms.OS.MacOS.html": {
    "href": "api/NitroxModel.Platforms.OS.MacOS.html",
    "title": "Namespace NitroxModel.Platforms.OS.MacOS | Nitrox",
    "keywords": "Namespace NitroxModel.Platforms.OS.MacOS Classes MacFileSystem"
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.ExecutableFileExtensions.html",
    "title": "Property ExecutableFileExtensions | Nitrox",
    "keywords": "Property ExecutableFileExtensions Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll ExecutableFileExtensions public virtual IEnumerable<string> ExecutableFileExtensions { get; } Property Value IEnumerable<string>"
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.GetDefaultPrograms.html",
    "title": "Method GetDefaultPrograms | Nitrox",
    "keywords": "Method GetDefaultPrograms Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll GetDefaultPrograms(string) public virtual IEnumerable<string> GetDefaultPrograms(string file) Parameters file string Returns IEnumerable<string>"
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.GetFullPath.html",
    "title": "Method GetFullPath | Nitrox",
    "keywords": "Method GetFullPath Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll GetFullPath(string) Gets the full path to a file or program. Searches the PATH environment variables if file could not be found relatively. Returns null if not found. public string GetFullPath(string fileName) Parameters fileName string File or program name to get the full path from. Returns string"
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.Instance.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.Instance.html",
    "title": "Property Instance | Nitrox",
    "keywords": "Property Instance Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Instance public static FileSystem Instance { get; } Property Value FileSystem"
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.IsTrustedFile.html",
    "title": "Method IsTrustedFile | Nitrox",
    "keywords": "Method IsTrustedFile Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll IsTrustedFile(string) public abstract bool IsTrustedFile(string file) Parameters file string Returns bool"
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.IsWritable.html",
    "title": "Method IsWritable | Nitrox",
    "keywords": "Method IsWritable Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll IsWritable(string) public bool IsWritable(string directory) Parameters directory string Returns bool"
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.MakeRelativePath.html",
    "title": "Method MakeRelativePath | Nitrox",
    "keywords": "Method MakeRelativePath Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll MakeRelativePath(string, string) public string MakeRelativePath(string fromPath, string toPath) Parameters fromPath string toPath string Returns string"
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.OpenOrExecuteFile.html",
    "title": "Method OpenOrExecuteFile | Nitrox",
    "keywords": "Method OpenOrExecuteFile Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll OpenOrExecuteFile(string) Opens the file with the default associated program or the default editor of the OS. The returned Process should be disposed. public virtual Process OpenOrExecuteFile(string file) Parameters file string File or program to open or execute. Returns Process Instance of a running process. Should be disposed."
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.ReplaceFile.html",
    "title": "Method ReplaceFile | Nitrox",
    "keywords": "Method ReplaceFile Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll ReplaceFile(string, string) Replaces target file with source file. If target file does not exist then it moves the file. This falls back to a copy if the target is on a different drive. The source file will always be deleted. public bool ReplaceFile(string source, string target) Parameters source string Source file to replace with. target string Target file to replace. Returns bool True if file was moved or replaced successfully."
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.SetFullAccessToCurrentUser.html",
    "title": "Method SetFullAccessToCurrentUser | Nitrox",
    "keywords": "Method SetFullAccessToCurrentUser Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll SetFullAccessToCurrentUser(string) public abstract bool SetFullAccessToCurrentUser(string directory) Parameters directory string Returns bool"
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.TextEditor.html",
    "title": "Property TextEditor | Nitrox",
    "keywords": "Property TextEditor Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll TextEditor public virtual string TextEditor { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.ZipFilesInDirectory.html",
    "title": "Method ZipFilesInDirectory | Nitrox",
    "keywords": "Method ZipFilesInDirectory Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll ZipFilesInDirectory(string, string, string, bool) Zips the files found in the given directory. public string ZipFilesInDirectory(string dir, string outputPath = null, string fileSearchPattern = \"*\", bool replaceFile = false) Parameters dir string Directory to search for files to zip. outputPath string Name of output zip, optionally including full path. If null, uses the directory name given by dir. fileSearchPattern string Search pattern used to filter against files to zip. replaceFile bool If true, overwrites the file matching the output path. Returns string Full path to the newly created zip or null if no files are found to zip. Exceptions IOException If zip file already exists."
  },
  "api/NitroxModel.Platforms.OS.Shared.FileSystem.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.FileSystem.html",
    "title": "Class FileSystem | Nitrox",
    "keywords": "Class FileSystem Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll public abstract class FileSystem Inheritance object FileSystem Derived MacFileSystem UnixFileSystem Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ExecutableFileExtensions Instance TextEditor Methods GetDefaultPrograms(string) GetFullPath(string) Gets the full path to a file or program. Searches the PATH environment variables if file could not be found relatively. Returns null if not found. IsTrustedFile(string) IsWritable(string) MakeRelativePath(string, string) OpenOrExecuteFile(string) Opens the file with the default associated program or the default editor of the OS. The returned Process should be disposed. ReplaceFile(string, string) Replaces target file with source file. If target file does not exist then it moves the file. This falls back to a copy if the target is on a different drive. The source file will always be deleted. SetFullAccessToCurrentUser(string) ZipFilesInDirectory(string, string, string, bool) Zips the files found in the given directory."
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.-ctor.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.-ctor.html",
    "title": "Constructor ProcessEx | Nitrox",
    "keywords": "Constructor ProcessEx Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll ProcessEx(Process) public ProcessEx(Process proc) Parameters proc Process"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.CreateThread.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.CreateThread.html",
    "title": "Method CreateThread | Nitrox",
    "keywords": "Method CreateThread Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll CreateThread(IntPtr, IntPtr) public IntPtr CreateThread(IntPtr start, IntPtr parameter) Parameters start IntPtr parameter IntPtr Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Dispose.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Dispose.html",
    "title": "Method Dispose | Nitrox",
    "keywords": "Method Dispose Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.Address.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.Address.html",
    "title": "Property Address | Nitrox",
    "keywords": "Property Address Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Address public IntPtr Address { get; } Property Value IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.Name.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.Offset.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.Offset.html",
    "title": "Property Offset | Nitrox",
    "keywords": "Property Offset Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Offset Address of the function, relative to base address of the image. Use Address to get the computed (base + offset) address to function. public IntPtr Offset { get; } Property Value IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.Ordinal.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.Ordinal.html",
    "title": "Property Ordinal | Nitrox",
    "keywords": "Property Ordinal Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Ordinal public ushort Ordinal { get; } Property Value ushort"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.ToString.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ExportedFunction.html",
    "title": "Class ProcessEx.ExportedFunction | Nitrox",
    "keywords": "Class ProcessEx.ExportedFunction Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll public sealed class ProcessEx.ExportedFunction Inheritance object ProcessEx.ExportedFunction Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties Address Name Offset Address of the function, relative to base address of the image. Use Address to get the computed (base + offset) address to function. Ordinal Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.GetAddress.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.GetAddress.html",
    "title": "Method GetAddress | Nitrox",
    "keywords": "Method GetAddress Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll GetAddress(string, string) Gets the base address of a loaded module or an exported function if found. Returns Zero if module or exported function name was not found. public IntPtr GetAddress(string moduleName, string exportedFunctionName = null) Parameters moduleName string Name of the loaded module to get the base address from. exportedFunctionName string Name of the exported function on the module to get the address from. Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.GetFirstProcess.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.GetFirstProcess.html",
    "title": "Method GetFirstProcess | Nitrox",
    "keywords": "Method GetFirstProcess Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll GetFirstProcess(string, Func<ProcessEx, bool>, StringComparer) public static ProcessEx GetFirstProcess(string procName, Func<ProcessEx, bool> predicate, StringComparer comparer = null) Parameters procName string predicate Func<ProcessEx, bool> comparer StringComparer Returns ProcessEx"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Handle.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Handle.html",
    "title": "Property Handle | Nitrox",
    "keywords": "Property Handle Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Handle public SafeHandle Handle { get; init; } Property Value SafeHandle"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Id.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Id public int Id { get; } Property Value int"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Is32Bit.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Is32Bit.html",
    "title": "Property Is32Bit | Nitrox",
    "keywords": "Property Is32Bit Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Is32Bit True if targeted process is 32 bit. If it fails it will default to the bitness of the OS. public bool Is32Bit { get; } Property Value bool"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Item.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Item.html",
    "title": "Property this | Nitrox",
    "keywords": "Property this Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll this[IntPtr] public IntPtr this[IntPtr address] { get; } Parameters address IntPtr Property Value IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Kill.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Kill.html",
    "title": "Method Kill | Nitrox",
    "keywords": "Method Kill Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Kill() public void Kill()"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.MainModule.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.MainModule.html",
    "title": "Property MainModule | Nitrox",
    "keywords": "Property MainModule Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll MainModule public ProcessEx.Module MainModule { get; } Property Value ProcessEx.Module"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.MainModuleDirectory.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.MainModuleDirectory.html",
    "title": "Property MainModuleDirectory | Nitrox",
    "keywords": "Property MainModuleDirectory Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll MainModuleDirectory public string MainModuleDirectory { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.MainModuleFileName.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.MainModuleFileName.html",
    "title": "Property MainModuleFileName | Nitrox",
    "keywords": "Property MainModuleFileName Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll MainModuleFileName Tries to get the path to main executable of the process. Returns null if insufficient access. public string MainModuleFileName { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.MainThreadHandle.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.MainThreadHandle.html",
    "title": "Property MainThreadHandle | Nitrox",
    "keywords": "Property MainThreadHandle Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll MainThreadHandle public SafeHandle MainThreadHandle { get; } Property Value SafeHandle"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.BaseAddress.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.BaseAddress.html",
    "title": "Property BaseAddress | Nitrox",
    "keywords": "Property BaseAddress Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll BaseAddress public IntPtr BaseAddress { get; } Property Value IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.EntryPoint.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.EntryPoint.html",
    "title": "Property EntryPoint | Nitrox",
    "keywords": "Property EntryPoint Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll EntryPoint public IntPtr EntryPoint { get; } Property Value IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.ExportedFunctions.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.ExportedFunctions.html",
    "title": "Property ExportedFunctions | Nitrox",
    "keywords": "Property ExportedFunctions Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll ExportedFunctions source public Dictionary<string, ProcessEx.ExportedFunction> ExportedFunctions { get; } Property Value Dictionary<string, ProcessEx.ExportedFunction>"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.FileName.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.FileName.html",
    "title": "Property FileName | Nitrox",
    "keywords": "Property FileName Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll FileName public string FileName { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.FromPebRecordPointer64.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.FromPebRecordPointer64.html",
    "title": "Method FromPebRecordPointer64 | Nitrox",
    "keywords": "Method FromPebRecordPointer64 Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll FromPebRecordPointer64(ProcessEx, IntPtr) public static ProcessEx.Module FromPebRecordPointer64(ProcessEx process, IntPtr pebRecord) Parameters process ProcessEx pebRecord IntPtr Returns ProcessEx.Module"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.GetExportedFunctions.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.GetExportedFunctions.html",
    "title": "Method GetExportedFunctions | Nitrox",
    "keywords": "Method GetExportedFunctions Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll GetExportedFunctions() public Dictionary<string, ProcessEx.ExportedFunction> GetExportedFunctions() Returns Dictionary<string, ProcessEx.ExportedFunction>"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.ToString.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Module.html",
    "title": "Class ProcessEx.Module | Nitrox",
    "keywords": "Class ProcessEx.Module Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Represents a loaded .exe or .dll in a system process. public sealed class ProcessEx.Module Inheritance object ProcessEx.Module Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties BaseAddress EntryPoint ExportedFunctions source FileName Methods FromPebRecordPointer64(ProcessEx, IntPtr) GetExportedFunctions() ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Modules.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Modules.html",
    "title": "Property Modules | Nitrox",
    "keywords": "Property Modules Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Modules public Dictionary<string, ProcessEx.Module> Modules { get; } Property Value Dictionary<string, ProcessEx.Module>"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Name.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.PebAddress.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.PebAddress.html",
    "title": "Property PebAddress | Nitrox",
    "keywords": "Property PebAddress Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll PebAddress public IntPtr PebAddress { get; } Property Value IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ReadMemory.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ReadMemory.html",
    "title": "Method ReadMemory | Nitrox",
    "keywords": "Method ReadMemory Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll ReadMemory(IntPtr, int) public byte[] ReadMemory(IntPtr address, int size) Parameters address IntPtr size int Returns byte[] ReadMemory(IntPtr, int, params int[]) public byte[] ReadMemory(IntPtr address, int size, params int[] offsets) Parameters address IntPtr size int offsets int[] Returns byte[]"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ReadPointer.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ReadPointer.html",
    "title": "Method ReadPointer | Nitrox",
    "keywords": "Method ReadPointer Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll ReadPointer(IntPtr, params int[]) Reads the pointer, then reads again after applying an offset each time. public IntPtr ReadPointer(IntPtr basePointerAddress, params int[] offsets) Parameters basePointerAddress IntPtr offsets int[] Returns IntPtr ReadPointer(IntPtr, IEnumerable<int>) public IntPtr ReadPointer(IntPtr basePointerAddress, IEnumerable<int> offsets) Parameters basePointerAddress IntPtr offsets IEnumerable<int> Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ReadString.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.ReadString.html",
    "title": "Method ReadString | Nitrox",
    "keywords": "Method ReadString Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll ReadString(UIntPtr, Encoding, int) public string ReadString(UIntPtr address, Encoding encoding = null, int maxBytesRead = 1024) Parameters address UIntPtr encoding Encoding maxBytesRead int Returns string ReadString(IntPtr, Encoding, int) public string ReadString(IntPtr address, Encoding encoding = null, int maxBytesRead = 1024) Parameters address IntPtr encoding Encoding maxBytesRead int Returns string"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Resume.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Resume.html",
    "title": "Method Resume | Nitrox",
    "keywords": "Method Resume Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Resume() public bool Resume() Returns bool"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Start.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Start.html",
    "title": "Method Start | Nitrox",
    "keywords": "Method Start Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Start(string, IEnumerable<(string, string)>, string, string) Starts a process. public static ProcessEx Start(string fileName = null, IEnumerable<(string, string)> environmentVariables = null, string workingDirectory = null, string commandLine = null) Parameters fileName string Path to the executable file. Without any arguments. environmentVariables IEnumerable<(string, string)> workingDirectory string commandLine string Arguments for the executable. Returns ProcessEx"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Suspend.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.Suspend.html",
    "title": "Method Suspend | Nitrox",
    "keywords": "Method Suspend Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Suspend() public bool Suspend() Returns bool"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.WriteMemory.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.WriteMemory.html",
    "title": "Method WriteMemory | Nitrox",
    "keywords": "Method WriteMemory Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll WriteMemory(IntPtr, byte[], bool) public int WriteMemory(IntPtr address, byte[] data, bool flushInstructionCache = false) Parameters address IntPtr data byte[] flushInstructionCache bool Returns int"
  },
  "api/NitroxModel.Platforms.OS.Shared.ProcessEx.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.ProcessEx.html",
    "title": "Class ProcessEx | Nitrox",
    "keywords": "Class ProcessEx Namespace NitroxModel.Platforms.OS.Shared Assembly NitroxModel.dll Lower-level wrapper for an OS process than normal Process to support memory access, DLLs discovery and exported functions listing. TODO: Turn this class into abstract that is used by OS specific implementations. Right now it's Windows only. public sealed class ProcessEx : IDisposable Inheritance object ProcessEx Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors ProcessEx(Process) Properties Handle Id Is32Bit True if targeted process is 32 bit. If it fails it will default to the bitness of the OS. this[IntPtr] MainModule MainModuleDirectory MainModuleFileName Tries to get the path to main executable of the process. Returns null if insufficient access. MainThreadHandle Modules Name PebAddress Methods CreateThread(IntPtr, IntPtr) Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. GetAddress(string, string) Gets the base address of a loaded module or an exported function if found. Returns Zero if module or exported function name was not found. GetFirstProcess(string, Func<ProcessEx, bool>, StringComparer) Kill() ReadMemory(IntPtr, int) ReadMemory(IntPtr, int, params int[]) ReadPointer(IntPtr, IEnumerable<int>) ReadPointer(IntPtr, params int[]) Reads the pointer, then reads again after applying an offset each time. ReadString(IntPtr, Encoding, int) ReadString(UIntPtr, Encoding, int) Resume() Start(string, IEnumerable<(string, string)>, string, string) Starts a process. Suspend() WriteMemory(IntPtr, byte[], bool)"
  },
  "api/NitroxModel.Platforms.OS.Shared.html": {
    "href": "api/NitroxModel.Platforms.OS.Shared.html",
    "title": "Namespace NitroxModel.Platforms.OS.Shared | Nitrox",
    "keywords": "Namespace NitroxModel.Platforms.OS.Shared Classes FileSystem ProcessEx Lower-level wrapper for an OS process than normal Process to support memory access, DLLs discovery and exported functions listing. TODO: Turn this class into abstract that is used by OS specific implementations. Right now it's Windows only. ProcessEx.ExportedFunction ProcessEx.Module Represents a loaded .exe or .dll in a system process."
  },
  "api/NitroxModel.Platforms.OS.Unix.UnixFileSystem.GetDefaultPrograms.html": {
    "href": "api/NitroxModel.Platforms.OS.Unix.UnixFileSystem.GetDefaultPrograms.html",
    "title": "Method GetDefaultPrograms | Nitrox",
    "keywords": "Method GetDefaultPrograms Namespace NitroxModel.Platforms.OS.Unix Assembly NitroxModel.dll GetDefaultPrograms(string) public override IEnumerable<string> GetDefaultPrograms(string file) Parameters file string Returns IEnumerable<string>"
  },
  "api/NitroxModel.Platforms.OS.Unix.UnixFileSystem.IsTrustedFile.html": {
    "href": "api/NitroxModel.Platforms.OS.Unix.UnixFileSystem.IsTrustedFile.html",
    "title": "Method IsTrustedFile | Nitrox",
    "keywords": "Method IsTrustedFile Namespace NitroxModel.Platforms.OS.Unix Assembly NitroxModel.dll IsTrustedFile(string) public override bool IsTrustedFile(string file) Parameters file string Returns bool"
  },
  "api/NitroxModel.Platforms.OS.Unix.UnixFileSystem.SetFullAccessToCurrentUser.html": {
    "href": "api/NitroxModel.Platforms.OS.Unix.UnixFileSystem.SetFullAccessToCurrentUser.html",
    "title": "Method SetFullAccessToCurrentUser | Nitrox",
    "keywords": "Method SetFullAccessToCurrentUser Namespace NitroxModel.Platforms.OS.Unix Assembly NitroxModel.dll SetFullAccessToCurrentUser(string) public override bool SetFullAccessToCurrentUser(string directory) Parameters directory string Returns bool"
  },
  "api/NitroxModel.Platforms.OS.Unix.UnixFileSystem.html": {
    "href": "api/NitroxModel.Platforms.OS.Unix.UnixFileSystem.html",
    "title": "Class UnixFileSystem | Nitrox",
    "keywords": "Class UnixFileSystem Namespace NitroxModel.Platforms.OS.Unix Assembly NitroxModel.dll public sealed class UnixFileSystem : FileSystem Inheritance object FileSystem UnixFileSystem Inherited Members FileSystem.ExecutableFileExtensions FileSystem.Instance FileSystem.TextEditor FileSystem.OpenOrExecuteFile(string) FileSystem.GetFullPath(string) FileSystem.MakeRelativePath(string, string) FileSystem.ZipFilesInDirectory(string, string, string, bool) FileSystem.ReplaceFile(string, string) FileSystem.IsWritable(string) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods GetDefaultPrograms(string) IsTrustedFile(string) SetFullAccessToCurrentUser(string)"
  },
  "api/NitroxModel.Platforms.OS.Unix.html": {
    "href": "api/NitroxModel.Platforms.OS.Unix.html",
    "title": "Namespace NitroxModel.Platforms.OS.Unix | Nitrox",
    "keywords": "Namespace NitroxModel.Platforms.OS.Unix Classes UnixFileSystem"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.Characteristics.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.Characteristics.html",
    "title": "Field Characteristics | Nitrox",
    "keywords": "Field Characteristics Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort Characteristics Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.Machine.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.Machine.html",
    "title": "Field Machine | Nitrox",
    "keywords": "Field Machine Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Machine type that is targeted by this image. public MachineType Machine Returns MachineType"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.NumberOfSections.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.NumberOfSections.html",
    "title": "Field NumberOfSections | Nitrox",
    "keywords": "Field NumberOfSections Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort NumberOfSections Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.NumberOfSymbols.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.NumberOfSymbols.html",
    "title": "Field NumberOfSymbols | Nitrox",
    "keywords": "Field NumberOfSymbols Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint NumberOfSymbols Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.PointerToSymbolTable.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.PointerToSymbolTable.html",
    "title": "Field PointerToSymbolTable | Nitrox",
    "keywords": "Field PointerToSymbolTable Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint PointerToSymbolTable Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.SizeOfOptionalHeader.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.SizeOfOptionalHeader.html",
    "title": "Field SizeOfOptionalHeader | Nitrox",
    "keywords": "Field SizeOfOptionalHeader Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort SizeOfOptionalHeader Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.TimeDateStamp.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.TimeDateStamp.html",
    "title": "Field TimeDateStamp | Nitrox",
    "keywords": "Field TimeDateStamp Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint TimeDateStamp Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.CoffFileHeader.html",
    "title": "Struct CoffFileHeader | Nitrox",
    "keywords": "Struct CoffFileHeader Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll See: MSDN public struct CoffFileHeader Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields Characteristics Machine Machine type that is targeted by this image. NumberOfSections NumberOfSymbols PointerToSymbolTable SizeOfOptionalHeader TimeDateStamp"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDataDirectory.Size.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDataDirectory.Size.html",
    "title": "Field Size | Nitrox",
    "keywords": "Field Size Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint Size Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDataDirectory.VirtualAddress.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDataDirectory.VirtualAddress.html",
    "title": "Field VirtualAddress | Nitrox",
    "keywords": "Field VirtualAddress Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Location of the data in this directory. Add this value to the base address of the image to get the real address. public uint VirtualAddress Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDataDirectory.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDataDirectory.html",
    "title": "Struct ImageDataDirectory | Nitrox",
    "keywords": "Struct ImageDataDirectory Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public struct ImageDataDirectory Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields Size VirtualAddress Location of the data in this directory. Add this value to the base address of the image to get the real address."
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_cblp.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_cblp.html",
    "title": "Field e_cblp | Nitrox",
    "keywords": "Field e_cblp Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Bytes on last page of file public ushort e_cblp Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_cp.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_cp.html",
    "title": "Field e_cp | Nitrox",
    "keywords": "Field e_cp Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Pages in file public ushort e_cp Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_cparhdr.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_cparhdr.html",
    "title": "Field e_cparhdr | Nitrox",
    "keywords": "Field e_cparhdr Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Size of header in paragraphs public ushort e_cparhdr Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_crlc.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_crlc.html",
    "title": "Field e_crlc | Nitrox",
    "keywords": "Field e_crlc Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort e_crlc Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_cs.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_cs.html",
    "title": "Field e_cs | Nitrox",
    "keywords": "Field e_cs Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Initial (relative) CS value public ushort e_cs Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_csum.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_csum.html",
    "title": "Field e_csum | Nitrox",
    "keywords": "Field e_csum Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Checksum public ushort e_csum Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_ip.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_ip.html",
    "title": "Field e_ip | Nitrox",
    "keywords": "Field e_ip Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Initial IP value public ushort e_ip Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_lfanew.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_lfanew.html",
    "title": "Field e_lfanew | Nitrox",
    "keywords": "Field e_lfanew Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Image base offset to address of PE header. public int e_lfanew Returns int"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_lfarlc.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_lfarlc.html",
    "title": "Field e_lfarlc | Nitrox",
    "keywords": "Field e_lfarlc Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll File address of relocation table public ushort e_lfarlc Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_magic_byte.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_magic_byte.html",
    "title": "Field e_magic_byte | Nitrox",
    "keywords": "Field e_magic_byte Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public char[] e_magic_byte Returns char[]"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_maxalloc.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_maxalloc.html",
    "title": "Field e_maxalloc | Nitrox",
    "keywords": "Field e_maxalloc Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort e_maxalloc Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_minalloc.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_minalloc.html",
    "title": "Field e_minalloc | Nitrox",
    "keywords": "Field e_minalloc Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort e_minalloc Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_oemid.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_oemid.html",
    "title": "Field e_oemid | Nitrox",
    "keywords": "Field e_oemid Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort e_oemid Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_oeminfo.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_oeminfo.html",
    "title": "Field e_oeminfo | Nitrox",
    "keywords": "Field e_oeminfo Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort e_oeminfo Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_ovno.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_ovno.html",
    "title": "Field e_ovno | Nitrox",
    "keywords": "Field e_ovno Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Overlay number public ushort e_ovno Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_res1.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_res1.html",
    "title": "Field e_res1 | Nitrox",
    "keywords": "Field e_res1 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Reserved words public ushort[] e_res1 Returns ushort[]"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_res2.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_res2.html",
    "title": "Field e_res2 | Nitrox",
    "keywords": "Field e_res2 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Reserved words public ushort[] e_res2 Returns ushort[]"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_sp.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_sp.html",
    "title": "Field e_sp | Nitrox",
    "keywords": "Field e_sp Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort e_sp Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_ss.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.e_ss.html",
    "title": "Field e_ss | Nitrox",
    "keywords": "Field e_ss Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort e_ss Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageDosHeader.html",
    "title": "Struct ImageDosHeader | Nitrox",
    "keywords": "Struct ImageDosHeader Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public struct ImageDosHeader Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields e_cblp Bytes on last page of file e_cp Pages in file e_cparhdr Size of header in paragraphs e_crlc e_cs Initial (relative) CS value e_csum Checksum e_ip Initial IP value e_lfanew Image base offset to address of PE header. e_lfarlc File address of relocation table e_magic_byte e_maxalloc e_minalloc e_oemid e_oeminfo e_ovno Overlay number e_res1 Reserved words e_res2 Reserved words e_sp e_ss"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.AddressOfFunctions.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.AddressOfFunctions.html",
    "title": "Field AddressOfFunctions | Nitrox",
    "keywords": "Field AddressOfFunctions Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint AddressOfFunctions Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.AddressOfNameOrdinals.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.AddressOfNameOrdinals.html",
    "title": "Field AddressOfNameOrdinals | Nitrox",
    "keywords": "Field AddressOfNameOrdinals Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint AddressOfNameOrdinals Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.AddressOfNames.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.AddressOfNames.html",
    "title": "Field AddressOfNames | Nitrox",
    "keywords": "Field AddressOfNames Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint AddressOfNames Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.Base.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.Base.html",
    "title": "Field Base | Nitrox",
    "keywords": "Field Base Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint Base Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.Characteristics.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.Characteristics.html",
    "title": "Field Characteristics | Nitrox",
    "keywords": "Field Characteristics Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint Characteristics Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.MajorVersion.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.MajorVersion.html",
    "title": "Field MajorVersion | Nitrox",
    "keywords": "Field MajorVersion Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort MajorVersion Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.MinorVersion.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.MinorVersion.html",
    "title": "Field MinorVersion | Nitrox",
    "keywords": "Field MinorVersion Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort MinorVersion Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.Name.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.Name.html",
    "title": "Field Name | Nitrox",
    "keywords": "Field Name Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll RVA of image name. public uint Name Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.NumberOfFunctions.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.NumberOfFunctions.html",
    "title": "Field NumberOfFunctions | Nitrox",
    "keywords": "Field NumberOfFunctions Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint NumberOfFunctions Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.NumberOfNames.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.NumberOfNames.html",
    "title": "Field NumberOfNames | Nitrox",
    "keywords": "Field NumberOfNames Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint NumberOfNames Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.TimeDateStamp.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.TimeDateStamp.html",
    "title": "Field TimeDateStamp | Nitrox",
    "keywords": "Field TimeDateStamp Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint TimeDateStamp Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.ToString.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageExportDirectory.html",
    "title": "Struct ImageExportDirectory | Nitrox",
    "keywords": "Struct ImageExportDirectory Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public struct ImageExportDirectory Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields AddressOfFunctions AddressOfNameOrdinals AddressOfNames Base Characteristics MajorVersion MinorVersion Name RVA of image name. NumberOfFunctions NumberOfNames TimeDateStamp Methods ToString() Returns the fully qualified type name of this instance."
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageNtHeader64.Magic.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageNtHeader64.Magic.html",
    "title": "Field Magic | Nitrox",
    "keywords": "Field Magic Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Expected to be \"PE\" string for NT systems. public char[] Magic Returns char[]"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageNtHeader64.OptionalHeader.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageNtHeader64.OptionalHeader.html",
    "title": "Field OptionalHeader | Nitrox",
    "keywords": "Field OptionalHeader Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public OptionalHeader64 OptionalHeader Returns OptionalHeader64"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ImageNtHeader64.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ImageNtHeader64.html",
    "title": "Struct ImageNtHeader64 | Nitrox",
    "keywords": "Struct ImageNtHeader64 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll See: https://www.vergiliusproject.com/kernels/x64/Windows%2010%20|%202016/2009%2020H2%20(October%202020%20Update)/_IMAGE_NT_HEADERS64 And MSDN: public struct ImageNtHeader64 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields Magic Expected to be \"PE\" string for NT systems. OptionalHeader"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.InInitializationOrderModuleList.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.InInitializationOrderModuleList.html",
    "title": "Field InInitializationOrderModuleList | Nitrox",
    "keywords": "Field InInitializationOrderModuleList Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr InInitializationOrderModuleList Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.InLoadOrderModuleList.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.InLoadOrderModuleList.html",
    "title": "Field InLoadOrderModuleList | Nitrox",
    "keywords": "Field InLoadOrderModuleList Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr InLoadOrderModuleList Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.InMemoryOrderModuleList.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.InMemoryOrderModuleList.html",
    "title": "Field InMemoryOrderModuleList | Nitrox",
    "keywords": "Field InMemoryOrderModuleList Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr InMemoryOrderModuleList Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.Initialized.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.Initialized.html",
    "title": "Field Initialized | Nitrox",
    "keywords": "Field Initialized Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public int Initialized Returns int"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.Length.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.Length.html",
    "title": "Field Length | Nitrox",
    "keywords": "Field Length Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public int Length Returns int"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.SsHandle.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.SsHandle.html",
    "title": "Field SsHandle | Nitrox",
    "keywords": "Field SsHandle Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public short SsHandle Returns short"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.LdrData.html",
    "title": "Struct LdrData | Nitrox",
    "keywords": "Struct LdrData Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public struct LdrData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields InInitializationOrderModuleList InLoadOrderModuleList InMemoryOrderModuleList Initialized Length SsHandle"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.MachineType.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.MachineType.html",
    "title": "Enum MachineType | Nitrox",
    "keywords": "Enum MachineType Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll See: MSDN public enum MachineType : ushort Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields AM33 = 467 AMD64 = 34404 ARM = 448 ARM64 = 43620 ARMNT = 196 EBC = 3772 I386 = 332 IA64 = 512 M32R = 36929 MIPS16 = 614 POWER_PC = 497 UNKNOWN = 0"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.GlblcntUsage.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.GlblcntUsage.html",
    "title": "Field GlblcntUsage | Nitrox",
    "keywords": "Field GlblcntUsage Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint GlblcntUsage Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.ProccntUsage.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.ProccntUsage.html",
    "title": "Field ProccntUsage | Nitrox",
    "keywords": "Field ProccntUsage Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint ProccntUsage Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.dwSize.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.dwSize.html",
    "title": "Field dwSize | Nitrox",
    "keywords": "Field dwSize Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public int dwSize Returns int"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.hModule.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.hModule.html",
    "title": "Field hModule | Nitrox",
    "keywords": "Field hModule Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr hModule Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.html",
    "title": "Struct ModuleEntry32 | Nitrox",
    "keywords": "Struct ModuleEntry32 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public struct ModuleEntry32 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields GlblcntUsage ProccntUsage dwSize hModule modBaseAddr modBaseSize szExePath szModule th32ModuleID th32ProcessID"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.modBaseAddr.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.modBaseAddr.html",
    "title": "Field modBaseAddr | Nitrox",
    "keywords": "Field modBaseAddr Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr modBaseAddr Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.modBaseSize.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.modBaseSize.html",
    "title": "Field modBaseSize | Nitrox",
    "keywords": "Field modBaseSize Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint modBaseSize Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.szExePath.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.szExePath.html",
    "title": "Field szExePath | Nitrox",
    "keywords": "Field szExePath Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public string szExePath Returns string"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.szModule.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.szModule.html",
    "title": "Field szModule | Nitrox",
    "keywords": "Field szModule Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public string szModule Returns string"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.th32ModuleID.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.th32ModuleID.html",
    "title": "Field th32ModuleID | Nitrox",
    "keywords": "Field th32ModuleID Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint th32ModuleID Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.th32ProcessID.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ModuleEntry32.th32ProcessID.html",
    "title": "Field th32ProcessID | Nitrox",
    "keywords": "Field th32ProcessID Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint th32ProcessID Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.NtStatus.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.NtStatus.html",
    "title": "Enum NtStatus | Nitrox",
    "keywords": "Enum NtStatus Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public enum NtStatus : uint Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields ABANDONED = 128 ABANDONED_WAIT0 = 128 ABANDONED_WAIT1 = 129 ABANDONED_WAIT2 = 130 ABANDONED_WAIT3 = 131 ABANDONED_WAIT63 = 191 ACCESS_DENIED = 3221225506 ACCESS_VIOLATION = 3221225477 ACCOUNT_DISABLED = 3221225586 ACCOUNT_RESTRICTION = 3221225582 AGENTS_EXHAUSTED = 3221225605 ALERTED = 257 ALREADY_COMMITTED = 3221225505 ARRAY_BOUNDS_EXCEEDED = 3221225612 BAD_FILE_TYPE = 3221227779 BAD_INHERITANCE_ACL = 3221225597 BAD_INITIAL_PC = 3221225482 BAD_INITIAL_STACK = 3221225481 BAD_STACK = 3221225512 BAD_WORKING_SET_LIMIT = 3221225548 BREAKPOINT = 2147483651 BUFFER_OVERFLOW = 2147483653 BUFFER_TOO_SMALL = 3221225507 CALLBACK_BYPASS = 3221226755 CANCELLED = 3221225760 CANNOT_DELETE = 3221225761 CANNOT_EXECUTE_FILE_IN_TRANSACTION = 3222863940 CANT_BREAK_TRANSACTIONAL_DEPENDENCY = 3222863927 CANT_CREATE_MORE_STREAM_MINIVERSIONS = 3222863910 CANT_CROSS_RM_BOUNDARY = 3222863928 CANT_DISABLE_MANDATORY = 3221225565 CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT = 3222863909 CANT_RECOVER_WITH_HANDLE_OPEN = 3222863921 CANT_TERMINATE_SELF = 3221225691 CANT_WAIT = 3221225688 CHECK_OUT_REQUIRED = 3221227778 COMMITMENT_LIMIT = 3221225773 CONTROL_C_EXIT = 3221225786 COULD_NOT_RESIZE_LOG = 3222863881 CRASH_DUMP = 278 CRC_ERROR = 3221225535 CRM_PROTOCOL_ALREADY_EXISTS = 3222863887 CRM_PROTOCOL_NOT_FOUND = 3222863889 CTL_FILE_NOT_SUPPORTED = 3221225559 CURRENT_TRANSACTION_NOT_VALID = 3222863896 DATATYPE_MISALIGNMENT = 2147483650 DATA_ERROR = 3221225534 DATA_LATE = 3221225533 DATA_OVERRUN = 3221225532 DEBUGGER_INACTIVE = 3221226324 DELETE_PENDING = 3221225558 DEVICE_BUSY = 2147483665 DIFFERENCE_AT_DC = 3221225779 DIRECTORY_NOT_RM = 3222863880 DISK_FULL = 3221225599 DLL_MIGHT_BE_INSECURE = 2147483691 DLL_NOT_FOUND = 3221225781 EAS_NOT_SUPPORTED = 3221225551 EA_CORRUPT_ERROR = 3221225555 EA_LIST_INCONSISTENT = 2147483668 EA_TOO_LARGE = 3221225552 EFS_NOT_ALLOWED_IN_TRANSACTION = 3222863934 END_OF_FILE = 3221225489 ENLISTMENT_NOT_SUPERIOR = 3222863923 ENTRY_POINT_NOT_FOUND = 3221225785 ERROR = 3221225472 FILE_CHECKED_OUT = 3221227777 FILE_CLOSED = 3221225768 FILE_DELETED = 3221225763 FILE_FORCED_CLOSED = 3221225654 FILE_IDENTITY_NOT_PERSISTENT = 3222863926 FILE_INVALID = 3221225624 FILE_LOCKED_WITH_ONLY_READERS = 298 FILE_LOCKED_WITH_WRITERS = 299 FILE_LOCK_CONFLICT = 3221225556 FILE_RENAMED = 3221225685 FILE_TOO_LARGE = 3221227780 FLOAT_DENORMAL_OPERAND = 3221225613 FLOAT_DIVIDE_BY_ZERO = 3221225614 FLOAT_INEXACT_RESULT = 3221225615 FLOAT_INVALID_OPERATION = 3221225616 FLOAT_OVERFLOW = 3221225617 FLOAT_STACK_CHECK = 3221225618 FLOAT_UNDERFLOW = 3221225619 FORMS_AUTH_REQUIRED = 3221227781 GROUP_EXISTS = 3221225573 GUARD_PAGE_VIOLATION = 2147483649 GUIDS_EXHAUSTED = 3221225603 HANDLES_CLOSED = 2147483658 HANDLE_NO_LONGER_VALID = 3222863912 ILLEGAL_FUNCTION = 3221225647 ILLEGAL_INSTRUCTION = 3221225501 ILL_FORMED_PASSWORD = 3221225579 IMAGE_NOT_AT_BASE = 1073741827 INCOMPATIBLE_FILE_MAP = 3221225549 INDOUBT_TRANSACTIONS_EXIST = 3222863930 INFORMATIONAL = 1073741824 INFO_LENGTH_MISMATCH = 3221225476 INSTANCE_NOT_AVAILABLE = 3221225643 INTEGER_DIVIDE_BY_ZERO = 3221225620 INTEGER_OVERFLOW = 3221225621 INTERNAL_ERROR = 3221225701 INVALID_ACCOUNT_NAME = 3221225570 INVALID_ACL = 3221225591 INVALID_CID = 3221225483 INVALID_COMPUTER_NAME = 3221225762 INVALID_DEVICE_REQUEST = 3221225488 INVALID_EA_NAME = 2147483667 INVALID_HANDLE = 3221225480 INVALID_ID_AUTHORITY = 3221225604 INVALID_IMAGE_FORMAT = 3221225595 INVALID_IMAGE_LE_FORMAT = 3221225774 INVALID_IMAGE_NOT_MZ = 3221225775 INVALID_IMAGE_PROTECT = 3221225776 INVALID_IMAGE_WIN16 = 3221225777 INVALID_INFO_CLASS = 3221225475 INVALID_LOGON_HOURS = 3221225583 INVALID_MESSAGE = 3221227266 INVALID_OWNER = 3221225562 INVALID_PAGE_PROTECTION = 3221225541 INVALID_PARAMETER = 3221225485 INVALID_PARAMETER1 = 3221225711 INVALID_PARAMETER10 = 3221225720 INVALID_PARAMETER11 = 3221225721 INVALID_PARAMETER12 = 3221225722 INVALID_PARAMETER2 = 3221225712 INVALID_PARAMETER3 = 3221225713 INVALID_PARAMETER4 = 3221225714 INVALID_PARAMETER5 = 3221225715 INVALID_PARAMETER6 = 3221225716 INVALID_PARAMETER7 = 3221225717 INVALID_PARAMETER8 = 3221225718 INVALID_PARAMETER9 = 3221225719 INVALID_PARAMETER_MIX = 3221225520 INVALID_PIPE_STATE = 3221225645 INVALID_PORT_HANDLE = 3221225538 INVALID_PRIMARY_GROUP = 3221225563 INVALID_READ_MODE = 3221225652 INVALID_SECURITY_DESCR = 3221225593 INVALID_SID = 3221225592 INVALID_SUB_AUTHORITY = 3221225590 INVALID_TRANSACTION = 3222863874 INVALID_VOLUME_LABEL = 3221225606 INVALID_WORKSTATION = 3221225584 IN_PAGE_ERROR = 3221225478 IO_PRIVILEGE_FAILED = 3221225783 IO_TIMEOUT = 3221225653 KERNEL_APC = 256 LAST_ADMIN = 3221225577 LOCK_NOT_GRANTED = 3221225557 LOGON_FAILURE = 3221225581 LOGON_SERVER = 3221225778 LOG_CORRUPTION_DETECTED = 3222863920 LOG_GROWTH_FAILED = 3222863897 LOG_RESIZE_INVALID_SIZE = 3222863883 LONG_JUMP = 2147483686 LPC_INVALID_CONNECTION_USAGE = 3221227270 LPC_RECEIVE_BUFFER_EXPECTED = 3221227269 LPC_REQUESTS_NOT_ALLOWED = 3221227271 LUIDS_EXHAUSTED = 3221225589 MAPPED_FILE_SIZE_ZERO = 3221225758 MAXIMUM_NT_STATUS = 4294967295 MEMBERS_PRIMARY_GROUP = 3221225767 MEMBER_IN_GROUP = 3221225575 MEMBER_NOT_IN_GROUP = 3221225576 MESSAGE_LOST = 3221227265 MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION = 3222863908 MORE_ENTRIES = 261 MUTANT_NOT_OWNED = 3221225542 NONE_MAPPED = 3221225587 NON_CONTINUABLE_EXCEPTION = 3221225509 NON_EXISTENT_EA_ENTRY = 3221225553 NOTHING_TO_TERMINATE = 290 NOTIFY_CLEANUP = 267 NOTIFY_ENUM_DIR = 268 NOT_ALL_ASSIGNED = 262 NOT_COMMITTED = 3221225517 NOT_IMPLEMENTED = 3221225474 NOT_LOCKED = 3221225514 NOT_MAPPED_DATA = 3221225608 NOT_MAPPED_VIEW = 3221225497 NOT_SAME_DEVICE = 3221225684 NO_EAS_ON_FILE = 3221225554 NO_IMPERSONATION_TOKEN = 3221225564 NO_LOGON_SERVERS = 3221225566 NO_MEDIA_IN_DEVICE = 3221225491 NO_MEMORY = 3221225495 NO_MORE_ENTRIES = 2147483674 NO_MORE_FILES = 2147483654 NO_QUOTAS_FOR_ACCOUNT = 269 NO_SUCH_DEVICE = 3221225486 NO_SUCH_FILE = 3221225487 NO_SUCH_GROUP = 3221225574 NO_SUCH_LOGON_SESSION = 3221225567 NO_SUCH_PRIVILEGE = 3221225568 NO_SUCH_USER = 3221225572 NO_TOKEN = 3221225596 NO_TXF_METADATA = 3222863913 OBJECT_NAME_COLLISION = 3221225525 OBJECT_NAME_EXISTS = 1073741824 OBJECT_NAME_INVALID = 3221225523 OBJECT_NAME_NOT_FOUND = 3221225524 OBJECT_NO_LONGER_EXISTS = 3222863905 OBJECT_PATH_INVALID = 3221225529 OBJECT_PATH_NOT_FOUND = 3221225530 OBJECT_PATH_SYNTAX_BAD = 3221225531 OBJECT_TYPE_MISMATCH = 3221225508 OP_LOCK_BREAK_IN_PROGRESS = 264 ORDINAL_NOT_FOUND = 3221225784 PAGEFILE_QUOTA = 3221225479 PAGEFILE_QUOTA_EXCEEDED = 3221225772 PAGE_FAULT_COPY_ON_WRITE = 274 PAGE_FAULT_DEMAND_ZERO = 273 PAGE_FAULT_GUARD_PAGE = 275 PAGE_FAULT_PAGING_FILE = 276 PAGE_FAULT_TRANSITION = 272 PARTIAL_COPY = 2147483661 PASSWORD_EXPIRED = 3221225585 PASSWORD_RESTRICTION = 3221225580 PENDING = 259 PIPE_BUSY = 3221225646 PIPE_CLOSING = 3221225649 PIPE_CONNECTED = 3221225650 PIPE_DISCONNECTED = 3221225648 PIPE_EMPTY = 3221225689 PIPE_LISTENING = 3221225651 PIPE_NOT_AVAILABLE = 3221225644 PORT_ALREADY_SET = 3221225544 PORT_CLOSED = 3221227264 PORT_CONNECTION_REFUSED = 3221225537 PORT_NOT_SET = 3221226323 PRIMARY_TRANSPORT_CONNECT_FAILED = 270 PRIVILEGED_INSTRUCTION = 3221225622 PRIVILEGE_NOT_HELD = 3221225569 PROCEDURE_NOT_FOUND = 3221225594 PROCESS_CLONED = 297 PROCESS_IN_JOB = 292 PROCESS_IS_PROTECTED = 3221227282 PROCESS_NOT_IN_JOB = 291 PROFILING_NOT_STARTED = 3221225655 PROFILING_NOT_STOPPED = 3221225656 QUOTA_EXCEEDED = 3221225540 RANGE_NOT_LOCKED = 3221225598 RECOVERY_NOT_NEEDED = 3222863924 RECURSIVE_DISPATCH = 3221227268 REGISTRY_RECOVERED = 1073741833 REMOTE_FILE_VERSION_MISMATCH = 3222863884 REPARSE = 260 REPARSE_OBJECT = 280 REQUEST_CANCELED = 3221227267 RESOURCE_DATA_NOT_FOUND = 3221225609 RESOURCE_IN_USE = 3221227272 RESOURCE_NAME_NOT_FOUND = 3221225611 RESOURCE_TYPE_NOT_FOUND = 3221225610 REVISION_MISMATCH = 3221225561 RM_ALREADY_STARTED = 3222863925 RM_DISCONNECTED = 3222863922 RM_METADATA_CORRUPT = 3222863878 RM_NOT_ACTIVE = 3222863877 ROLLBACK_TIMER_EXPIRED = 3222863932 RX_ACT_COMMITTED = 266 SECTION_NOT_EXTENDED = 3221225607 SECTION_NOT_IMAGE = 3221225545 SECTION_PROTECTION = 3221225550 SECTION_TOO_BIG = 3221225536 SEMAPHORE_LIMIT_EXCEEDED = 3221225543 SERVER_DISABLED = 3221225600 SERVER_NOT_DISABLED = 3221225601 SHARING_VIOLATION = 3221225539 SINGLE_STEP = 2147483652 SOME_NOT_MAPPED = 263 SPECIAL_ACCOUNT = 3221225764 SPECIAL_GROUP = 3221225765 SPECIAL_USER = 3221225766 STREAM_MINIVERSION_NOT_FOUND = 3222863906 STREAM_MINIVERSION_NOT_VALID = 3222863907 SUCCESS = 0 SUSPEND_COUNT_EXCEEDED = 3221225546 SYNCHRONIZATION_REQUIRED = 3221225780 THREAD_IS_TERMINATING = 3221225547 THREAD_NOT_IN_PROCESS = 3221225770 THREAD_WAS_SUSPENDED = 1073741825 TIMEOUT = 258 TIMER_NOT_CANCELED = 3221225484 TM_INITIALIZATION_FAILED = 3222863876 TM_VOLATILE = 3222863931 TOKEN_ALREADY_IN_USE = 3221225771 TOO_MANY_GUIDS_REQUESTED = 3221225602 TOO_MANY_LUIDS_REQUESTED = 3221225588 TOO_MANY_OPENED_FILES = 3221225759 TOO_MANY_PAGING_FILES = 3221225623 TOO_MANY_THREADS = 3221225769 TRANSACTED_MAPPING_UNSUPPORTED_REMOTE = 3222863936 TRANSACTIONAL_CONFLICT = 3222863873 TRANSACTIONAL_OPEN_NOT_ALLOWED = 3222863935 TRANSACTIONS_NOT_FROZEN = 3222863941 TRANSACTIONS_UNSUPPORTED_REMOTE = 3222863882 TRANSACTION_ALREADY_ABORTED = 3222863893 TRANSACTION_ALREADY_COMMITTED = 3222863894 TRANSACTION_INVALID_MARSHALL_BUFFER = 3222863895 TRANSACTION_NOT_ACTIVE = 3222863875 TRANSACTION_NOT_JOINED = 3222863879 TRANSACTION_NOT_REQUESTED = 3222863892 TRANSACTION_PROPAGATION_FAILED = 3222863888 TRANSACTION_REQUEST_NOT_VALID = 3222863891 TRANSACTION_REQUIRED_PROMOTION = 3222863939 TRANSACTION_SCOPE_CALLBACKS_NOT_SET = 3222863938 TRANSACTION_SUPERIOR_EXISTS = 3222863890 TXF_ATTRIBUTE_CORRUPT = 3222863933 TXF_DIR_NOT_EMPTY = 3222863929 TXF_METADATA_ALREADY_PRESENT = 3222863937 UNABLE_TO_DELETE_SECTION = 3221225499 UNABLE_TO_FREE_VM = 3221225498 UNKNOWN_REVISION = 3221225560 UNSUCCESSFUL = 3221225473 USER_APC = 192 USER_EXISTS = 3221225571 VIRUS_DELETED = 3221227783 VIRUS_INFECTED = 3221227782 VOLUME_DIRTY = 3221227526 VOLUME_MOUNTED = 265 WAIT0 = 0 WAIT1 = 1 WAIT2 = 2 WAIT3 = 3 WAIT63 = 63 WARNING = 2147483648 WORKING_SET_LIMIT_RANGE = 1073741826 WRONG_PASSWORD = 3221225578 WRONG_VOLUME = 3221225490"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.AddressOfEntryPoint.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.AddressOfEntryPoint.html",
    "title": "Field AddressOfEntryPoint | Nitrox",
    "keywords": "Field AddressOfEntryPoint Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint AddressOfEntryPoint Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Architecture.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Architecture.html",
    "title": "Field Architecture | Nitrox",
    "keywords": "Field Architecture Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory Architecture Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.BaseOfCode.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.BaseOfCode.html",
    "title": "Field BaseOfCode | Nitrox",
    "keywords": "Field BaseOfCode Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint BaseOfCode Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.BaseRelocationTable.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.BaseRelocationTable.html",
    "title": "Field BaseRelocationTable | Nitrox",
    "keywords": "Field BaseRelocationTable Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory BaseRelocationTable Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.BoundImport.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.BoundImport.html",
    "title": "Field BoundImport | Nitrox",
    "keywords": "Field BoundImport Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory BoundImport Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.CLRRuntimeHeader.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.CLRRuntimeHeader.html",
    "title": "Field CLRRuntimeHeader | Nitrox",
    "keywords": "Field CLRRuntimeHeader Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory CLRRuntimeHeader Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.CertificateTable.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.CertificateTable.html",
    "title": "Field CertificateTable | Nitrox",
    "keywords": "Field CertificateTable Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory CertificateTable Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.CheckSum.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.CheckSum.html",
    "title": "Field CheckSum | Nitrox",
    "keywords": "Field CheckSum Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint CheckSum Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Debug.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Debug.html",
    "title": "Field Debug | Nitrox",
    "keywords": "Field Debug Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory Debug Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.DelayImportDescriptor.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.DelayImportDescriptor.html",
    "title": "Field DelayImportDescriptor | Nitrox",
    "keywords": "Field DelayImportDescriptor Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory DelayImportDescriptor Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.DllCharacteristics.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.DllCharacteristics.html",
    "title": "Field DllCharacteristics | Nitrox",
    "keywords": "Field DllCharacteristics Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort DllCharacteristics Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ExceptionTable.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ExceptionTable.html",
    "title": "Field ExceptionTable | Nitrox",
    "keywords": "Field ExceptionTable Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory ExceptionTable Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ExportTable.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ExportTable.html",
    "title": "Field ExportTable | Nitrox",
    "keywords": "Field ExportTable Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory ExportTable Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.FileAlignment.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.FileAlignment.html",
    "title": "Field FileAlignment | Nitrox",
    "keywords": "Field FileAlignment Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint FileAlignment Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.GlobalPtr.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.GlobalPtr.html",
    "title": "Field GlobalPtr | Nitrox",
    "keywords": "Field GlobalPtr Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory GlobalPtr Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.IAT.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.IAT.html",
    "title": "Field IAT | Nitrox",
    "keywords": "Field IAT Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory IAT Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ImageBase.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ImageBase.html",
    "title": "Field ImageBase | Nitrox",
    "keywords": "Field ImageBase Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ulong ImageBase Returns ulong"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ImportTable.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ImportTable.html",
    "title": "Field ImportTable | Nitrox",
    "keywords": "Field ImportTable Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory ImportTable Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.LoadConfigTable.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.LoadConfigTable.html",
    "title": "Field LoadConfigTable | Nitrox",
    "keywords": "Field LoadConfigTable Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory LoadConfigTable Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.LoaderFlags.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.LoaderFlags.html",
    "title": "Field LoaderFlags | Nitrox",
    "keywords": "Field LoaderFlags Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint LoaderFlags Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Magic.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Magic.html",
    "title": "Field Magic | Nitrox",
    "keywords": "Field Magic Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Expected to be \"PE\" string for NT systems. public char[] Magic Returns char[]"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MajorImageVersion.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MajorImageVersion.html",
    "title": "Field MajorImageVersion | Nitrox",
    "keywords": "Field MajorImageVersion Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort MajorImageVersion Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MajorLinkerVersion.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MajorLinkerVersion.html",
    "title": "Field MajorLinkerVersion | Nitrox",
    "keywords": "Field MajorLinkerVersion Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public byte MajorLinkerVersion Returns byte"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MajorOperatingSystemVersion.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MajorOperatingSystemVersion.html",
    "title": "Field MajorOperatingSystemVersion | Nitrox",
    "keywords": "Field MajorOperatingSystemVersion Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort MajorOperatingSystemVersion Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MajorSubsystemVersion.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MajorSubsystemVersion.html",
    "title": "Field MajorSubsystemVersion | Nitrox",
    "keywords": "Field MajorSubsystemVersion Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort MajorSubsystemVersion Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MinorImageVersion.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MinorImageVersion.html",
    "title": "Field MinorImageVersion | Nitrox",
    "keywords": "Field MinorImageVersion Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort MinorImageVersion Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MinorLinkerVersion.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MinorLinkerVersion.html",
    "title": "Field MinorLinkerVersion | Nitrox",
    "keywords": "Field MinorLinkerVersion Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public byte MinorLinkerVersion Returns byte"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MinorOperatingSystemVersion.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MinorOperatingSystemVersion.html",
    "title": "Field MinorOperatingSystemVersion | Nitrox",
    "keywords": "Field MinorOperatingSystemVersion Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort MinorOperatingSystemVersion Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MinorSubsystemVersion.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.MinorSubsystemVersion.html",
    "title": "Field MinorSubsystemVersion | Nitrox",
    "keywords": "Field MinorSubsystemVersion Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort MinorSubsystemVersion Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.NumberOfRvaAndSizes.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.NumberOfRvaAndSizes.html",
    "title": "Field NumberOfRvaAndSizes | Nitrox",
    "keywords": "Field NumberOfRvaAndSizes Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint NumberOfRvaAndSizes Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Reserved.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Reserved.html",
    "title": "Field Reserved | Nitrox",
    "keywords": "Field Reserved Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory Reserved Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ResourceTable.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ResourceTable.html",
    "title": "Field ResourceTable | Nitrox",
    "keywords": "Field ResourceTable Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory ResourceTable Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SectionAlignment.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SectionAlignment.html",
    "title": "Field SectionAlignment | Nitrox",
    "keywords": "Field SectionAlignment Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint SectionAlignment Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfCode.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfCode.html",
    "title": "Field SizeOfCode | Nitrox",
    "keywords": "Field SizeOfCode Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint SizeOfCode Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfHeaders.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfHeaders.html",
    "title": "Field SizeOfHeaders | Nitrox",
    "keywords": "Field SizeOfHeaders Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint SizeOfHeaders Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfHeapCommit.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfHeapCommit.html",
    "title": "Field SizeOfHeapCommit | Nitrox",
    "keywords": "Field SizeOfHeapCommit Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ulong SizeOfHeapCommit Returns ulong"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfHeapReserve.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfHeapReserve.html",
    "title": "Field SizeOfHeapReserve | Nitrox",
    "keywords": "Field SizeOfHeapReserve Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ulong SizeOfHeapReserve Returns ulong"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfImage.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfImage.html",
    "title": "Field SizeOfImage | Nitrox",
    "keywords": "Field SizeOfImage Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint SizeOfImage Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfInitializedData.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfInitializedData.html",
    "title": "Field SizeOfInitializedData | Nitrox",
    "keywords": "Field SizeOfInitializedData Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint SizeOfInitializedData Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfStackCommit.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfStackCommit.html",
    "title": "Field SizeOfStackCommit | Nitrox",
    "keywords": "Field SizeOfStackCommit Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ulong SizeOfStackCommit Returns ulong"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfStackReserve.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfStackReserve.html",
    "title": "Field SizeOfStackReserve | Nitrox",
    "keywords": "Field SizeOfStackReserve Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ulong SizeOfStackReserve Returns ulong"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfUninitializedData.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.SizeOfUninitializedData.html",
    "title": "Field SizeOfUninitializedData | Nitrox",
    "keywords": "Field SizeOfUninitializedData Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint SizeOfUninitializedData Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Subsystem.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Subsystem.html",
    "title": "Field Subsystem | Nitrox",
    "keywords": "Field Subsystem Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ushort Subsystem Returns ushort"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.TLSTable.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.TLSTable.html",
    "title": "Field TLSTable | Nitrox",
    "keywords": "Field TLSTable Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public ImageDataDirectory TLSTable Returns ImageDataDirectory"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ToString.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Win32VersionValue.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.Win32VersionValue.html",
    "title": "Field Win32VersionValue | Nitrox",
    "keywords": "Field Win32VersionValue Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint Win32VersionValue Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.OptionalHeader64.html",
    "title": "Struct OptionalHeader64 | Nitrox",
    "keywords": "Struct OptionalHeader64 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Structs from (copy paste url in browser to visit): _IMAGE_OPTIONAL_HEADER64 Also see: MSDN: PE Header public struct OptionalHeader64 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields AddressOfEntryPoint Architecture BaseOfCode BaseRelocationTable BoundImport CLRRuntimeHeader CertificateTable CheckSum Debug DelayImportDescriptor DllCharacteristics ExceptionTable ExportTable FileAlignment GlobalPtr IAT ImageBase ImportTable LoadConfigTable LoaderFlags Magic Expected to be \"PE\" string for NT systems. MajorImageVersion MajorLinkerVersion MajorOperatingSystemVersion MajorSubsystemVersion MinorImageVersion MinorLinkerVersion MinorOperatingSystemVersion MinorSubsystemVersion NumberOfRvaAndSizes Reserved ResourceTable SectionAlignment SizeOfCode SizeOfHeaders SizeOfHeapCommit SizeOfHeapReserve SizeOfImage SizeOfInitializedData SizeOfStackCommit SizeOfStackReserve SizeOfUninitializedData Subsystem TLSTable Win32VersionValue Methods ToString() Returns the fully qualified type name of this instance."
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessAccessFlags.html",
    "title": "Enum ProcessAccessFlags | Nitrox",
    "keywords": "Enum ProcessAccessFlags Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll [Flags] public enum ProcessAccessFlags : uint Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields ALL = 2035711 CREATE_PROCESS = 128 CREATE_THREAD = 2 DUPLICATE_HANDLE = 64 QUERY_INFORMATION = 1024 QUERY_LIMITED_INFORMATION = 4096 SET_INFORMATION = 512 SET_QUOTA = 256 SYNCHRONIZE = 1048576 TERMINATE = 1 VIRTUAL_MEMORY_OPERATION = 8 VIRTUAL_MEMORY_READ = 16 VIRTUAL_MEMORY_WRITE = 32"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.AffinityMask.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.AffinityMask.html",
    "title": "Field AffinityMask | Nitrox",
    "keywords": "Field AffinityMask Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public UIntPtr AffinityMask Returns UIntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.BasePriority.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.BasePriority.html",
    "title": "Field BasePriority | Nitrox",
    "keywords": "Field BasePriority Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public int BasePriority Returns int"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.ExitStatus.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.ExitStatus.html",
    "title": "Field ExitStatus | Nitrox",
    "keywords": "Field ExitStatus Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public NtStatus ExitStatus Returns NtStatus"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.InheritedFromUniqueProcessId.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.InheritedFromUniqueProcessId.html",
    "title": "Field InheritedFromUniqueProcessId | Nitrox",
    "keywords": "Field InheritedFromUniqueProcessId Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public UIntPtr InheritedFromUniqueProcessId Returns UIntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.PebBaseAddress.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.PebBaseAddress.html",
    "title": "Field PebBaseAddress | Nitrox",
    "keywords": "Field PebBaseAddress Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr PebBaseAddress Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.UniqueProcessId.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.UniqueProcessId.html",
    "title": "Field UniqueProcessId | Nitrox",
    "keywords": "Field UniqueProcessId Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public UIntPtr UniqueProcessId Returns UIntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessBasicInformation.html",
    "title": "Struct ProcessBasicInformation | Nitrox",
    "keywords": "Struct ProcessBasicInformation Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public struct ProcessBasicInformation Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields AffinityMask BasePriority ExitStatus InheritedFromUniqueProcessId PebBaseAddress UniqueProcessId"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessCreationFlags.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessCreationFlags.html",
    "title": "Enum ProcessCreationFlags | Nitrox",
    "keywords": "Enum ProcessCreationFlags Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll [Flags] public enum ProcessCreationFlags : uint Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields CREATE_BREAKAWAY_FROM_JOB = 16777216 CREATE_DEFAULT_ERROR_MODE = 67108864 CREATE_NEW_CONSOLE = 16 CREATE_NEW_PROCESS_GROUP = 512 CREATE_NO_WINDOW = 134217728 CREATE_PRESERVE_CODE_AUTHZ_LEVEL = 33554432 CREATE_PROTECTED_PROCESS = 262144 CREATE_SECURE_PROCESS = 4194304 CREATE_SEPARATE_WOW_VDM = 2048 CREATE_SHARED_WOW_VDM = 4096 CREATE_SUSPENDED = 4 CREATE_UNICODE_ENVIRONMENT = 1024 DEBUG_ONLY_THIS_PROCESS = 2 DEBUG_PROCESS = 1 DETACHED_PROCESS = 8 EXTENDED_STARTUPINFO_PRESENT = 524288 INHERIT_PARENT_AFFINITY = 65536"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.BeingDebugged.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.BeingDebugged.html",
    "title": "Field BeingDebugged | Nitrox",
    "keywords": "Field BeingDebugged Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public byte BeingDebugged Returns byte"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.ImageBaseAddress.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.ImageBaseAddress.html",
    "title": "Field ImageBaseAddress | Nitrox",
    "keywords": "Field ImageBaseAddress Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr ImageBaseAddress Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.LdrData.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.LdrData.html",
    "title": "Field LdrData | Nitrox",
    "keywords": "Field LdrData Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Ptr to structure LdrData. public IntPtr LdrData Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.ProcessParameters.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.ProcessParameters.html",
    "title": "Field ProcessParameters | Nitrox",
    "keywords": "Field ProcessParameters Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr ProcessParameters Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.Reserved1.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.Reserved1.html",
    "title": "Field Reserved1 | Nitrox",
    "keywords": "Field Reserved1 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public byte Reserved1 Returns byte"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.Reserved2.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.Reserved2.html",
    "title": "Field Reserved2 | Nitrox",
    "keywords": "Field Reserved2 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public byte Reserved2 Returns byte"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.Reserved3.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.Reserved3.html",
    "title": "Field Reserved3 | Nitrox",
    "keywords": "Field Reserved3 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public byte Reserved3 Returns byte"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessEnvironmentBlock64.html",
    "title": "Struct ProcessEnvironmentBlock64 | Nitrox",
    "keywords": "Struct ProcessEnvironmentBlock64 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll PEB structure in a used by Windows in 64-bit processes. See full structure here: https://ntopcode.wordpress.com/2018/02/26/anatomy-of-the-process-environment-block-peb-windows-internals/ public struct ProcessEnvironmentBlock64 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields BeingDebugged ImageBaseAddress LdrData Ptr to structure LdrData. ProcessParameters Reserved1 Reserved2 Reserved3"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessInfo.ProcessId.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessInfo.ProcessId.html",
    "title": "Field ProcessId | Nitrox",
    "keywords": "Field ProcessId Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public int ProcessId Returns int"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessInfo.ThreadId.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessInfo.ThreadId.html",
    "title": "Field ThreadId | Nitrox",
    "keywords": "Field ThreadId Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public int ThreadId Returns int"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessInfo.hProcess.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessInfo.hProcess.html",
    "title": "Field hProcess | Nitrox",
    "keywords": "Field hProcess Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr hProcess Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessInfo.hThread.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessInfo.hThread.html",
    "title": "Field hThread | Nitrox",
    "keywords": "Field hThread Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr hThread Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessInfo.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ProcessInfo.html",
    "title": "Struct ProcessInfo | Nitrox",
    "keywords": "Struct ProcessInfo Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public struct ProcessInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields ProcessId ThreadId hProcess hThread"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.RegistryEx.CompareAsync.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.RegistryEx.CompareAsync.html",
    "title": "Method CompareAsync | Nitrox",
    "keywords": "Method CompareAsync Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll CompareAsync<T>(string, Func<T, bool>, CancellationToken) Waits for a registry value to have the given value. public static Task CompareAsync<T>(string pathWithKey, Func<T, bool> predicate, CancellationToken token) Parameters pathWithKey string predicate Func<T, bool> token CancellationToken Returns Task Type Parameters T CompareAsync<T>(string, Func<T, bool>, TimeSpan) public static Task CompareAsync<T>(string pathWithKey, Func<T, bool> predicate, TimeSpan timeout = default) Parameters pathWithKey string predicate Func<T, bool> timeout TimeSpan Returns Task Type Parameters T"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.RegistryEx.Delete.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.RegistryEx.Delete.html",
    "title": "Method Delete | Nitrox",
    "keywords": "Method Delete Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Delete(string) Deletes the whole subtree or value, whichever exists. public static bool Delete(string pathWithOptionalValue) Parameters pathWithOptionalValue string If no value name is given it will delete the key instead. Returns bool True if something was deleted."
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.RegistryEx.Read.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.RegistryEx.Read.html",
    "title": "Method Read | Nitrox",
    "keywords": "Method Read Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Read<T>(string, T) Reads the value of the registry key or returns the default value of T. public static T Read<T>(string pathWithValue, T defaultValue = default) Parameters pathWithValue string Full path to the registry key. If the registry hive is omitted then \"current user\" is used. defaultValue T The default value if the registry key is not found or failed to convert to T. Returns T Value as read from registry or null if not found. Type Parameters T Type of value to read. If the value in the registry key does not match it will try to convert."
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.RegistryEx.Write.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.RegistryEx.Write.html",
    "title": "Method Write | Nitrox",
    "keywords": "Method Write Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll Write<T>(string, T) public static void Write<T>(string pathWithKey, T value) Parameters pathWithKey string value T Type Parameters T"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.RegistryEx.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.RegistryEx.html",
    "title": "Class RegistryEx | Nitrox",
    "keywords": "Class RegistryEx Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public static class RegistryEx Inheritance object RegistryEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CompareAsync<T>(string, Func<T, bool>, CancellationToken) Waits for a registry value to have the given value. CompareAsync<T>(string, Func<T, bool>, TimeSpan) Delete(string) Deletes the whole subtree or value, whichever exists. Read<T>(string, T) Reads the value of the registry key or returns the default value of T. Write<T>(string, T)"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.SecurityAttributes.bInheritHandle.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.SecurityAttributes.bInheritHandle.html",
    "title": "Field bInheritHandle | Nitrox",
    "keywords": "Field bInheritHandle Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public bool bInheritHandle Returns bool"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.SecurityAttributes.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.SecurityAttributes.html",
    "title": "Struct SecurityAttributes | Nitrox",
    "keywords": "Struct SecurityAttributes Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public struct SecurityAttributes Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields bInheritHandle length lpSecurityDescriptor"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.SecurityAttributes.length.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.SecurityAttributes.length.html",
    "title": "Field length | Nitrox",
    "keywords": "Field length Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public int length Returns int"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.SecurityAttributes.lpSecurityDescriptor.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.SecurityAttributes.lpSecurityDescriptor.html",
    "title": "Field lpSecurityDescriptor | Nitrox",
    "keywords": "Field lpSecurityDescriptor Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr lpSecurityDescriptor Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.SnapshotFlags.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.SnapshotFlags.html",
    "title": "Enum SnapshotFlags | Nitrox",
    "keywords": "Enum SnapshotFlags Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll [Flags] public enum SnapshotFlags : uint Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields ALL = HEAP_LIST | PROCESS | THREAD | MODULE | MODULE32 HEAP_LIST = 1 INHERIT = 2147483648 MODULE = 8 MODULE32 = 16 NO_HEAPS = 1073741824 PROCESS = 2 THREAD = 4"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.cb.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.cb.html",
    "title": "Field cb | Nitrox",
    "keywords": "Field cb Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public int cb Returns int"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.cbReserved2.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.cbReserved2.html",
    "title": "Field cbReserved2 | Nitrox",
    "keywords": "Field cbReserved2 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public short cbReserved2 Returns short"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwFillAttribute.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwFillAttribute.html",
    "title": "Field dwFillAttribute | Nitrox",
    "keywords": "Field dwFillAttribute Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint dwFillAttribute Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwFlags.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwFlags.html",
    "title": "Field dwFlags | Nitrox",
    "keywords": "Field dwFlags Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint dwFlags Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwX.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwX.html",
    "title": "Field dwX | Nitrox",
    "keywords": "Field dwX Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint dwX Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwXCountChars.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwXCountChars.html",
    "title": "Field dwXCountChars | Nitrox",
    "keywords": "Field dwXCountChars Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint dwXCountChars Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwXSize.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwXSize.html",
    "title": "Field dwXSize | Nitrox",
    "keywords": "Field dwXSize Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint dwXSize Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwY.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwY.html",
    "title": "Field dwY | Nitrox",
    "keywords": "Field dwY Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint dwY Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwYCountChars.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwYCountChars.html",
    "title": "Field dwYCountChars | Nitrox",
    "keywords": "Field dwYCountChars Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint dwYCountChars Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwYSize.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.dwYSize.html",
    "title": "Field dwYSize | Nitrox",
    "keywords": "Field dwYSize Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public uint dwYSize Returns uint"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.hStdError.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.hStdError.html",
    "title": "Field hStdError | Nitrox",
    "keywords": "Field hStdError Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr hStdError Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.hStdInput.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.hStdInput.html",
    "title": "Field hStdInput | Nitrox",
    "keywords": "Field hStdInput Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr hStdInput Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.hStdOutput.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.hStdOutput.html",
    "title": "Field hStdOutput | Nitrox",
    "keywords": "Field hStdOutput Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr hStdOutput Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.html",
    "title": "Struct StartupInfo | Nitrox",
    "keywords": "Struct StartupInfo Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public struct StartupInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields cb cbReserved2 dwFillAttribute dwFlags dwX dwXCountChars dwXSize dwY dwYCountChars dwYSize hStdError hStdInput hStdOutput lpDesktop lpReserved lpReserved2 lpTitle wShowWindow"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.lpDesktop.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.lpDesktop.html",
    "title": "Field lpDesktop | Nitrox",
    "keywords": "Field lpDesktop Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public string lpDesktop Returns string"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.lpReserved.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.lpReserved.html",
    "title": "Field lpReserved | Nitrox",
    "keywords": "Field lpReserved Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public string lpReserved Returns string"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.lpReserved2.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.lpReserved2.html",
    "title": "Field lpReserved2 | Nitrox",
    "keywords": "Field lpReserved2 Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public IntPtr lpReserved2 Returns IntPtr"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.lpTitle.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.lpTitle.html",
    "title": "Field lpTitle | Nitrox",
    "keywords": "Field lpTitle Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public string lpTitle Returns string"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.wShowWindow.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.StartupInfo.wShowWindow.html",
    "title": "Field wShowWindow | Nitrox",
    "keywords": "Field wShowWindow Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll public short wShowWindow Returns short"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.ThreadAccess.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.ThreadAccess.html",
    "title": "Enum ThreadAccess | Nitrox",
    "keywords": "Enum ThreadAccess Namespace NitroxModel.Platforms.OS.Windows.Internal Assembly NitroxModel.dll [Flags] public enum ThreadAccess Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields DIRECT_IMPERSONATION = 512 GET_CONTEXT = 8 IMPERSONATE = 256 QUERY_INFORMATION = 64 SET_CONTEXT = 16 SET_INFORMATION = 32 SET_THREAD_TOKEN = 128 SUSPEND_RESUME = 2 TERMINATE = 1"
  },
  "api/NitroxModel.Platforms.OS.Windows.Internal.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.Internal.html",
    "title": "Namespace NitroxModel.Platforms.OS.Windows.Internal | Nitrox",
    "keywords": "Namespace NitroxModel.Platforms.OS.Windows.Internal Classes RegistryEx Structs CoffFileHeader See: MSDN ImageDataDirectory ImageDosHeader ImageExportDirectory ImageNtHeader64 See: https://www.vergiliusproject.com/kernels/x64/Windows%2010%20|%202016/2009%2020H2%20(October%202020%20Update)/_IMAGE_NT_HEADERS64 And MSDN: LdrData ModuleEntry32 OptionalHeader64 Structs from (copy paste url in browser to visit): _IMAGE_OPTIONAL_HEADER64 Also see: MSDN: PE Header ProcessBasicInformation ProcessEnvironmentBlock64 PEB structure in a used by Windows in 64-bit processes. See full structure here: https://ntopcode.wordpress.com/2018/02/26/anatomy-of-the-process-environment-block-peb-windows-internals/ ProcessInfo SecurityAttributes StartupInfo Enums MachineType See: MSDN NtStatus ProcessAccessFlags ProcessCreationFlags SnapshotFlags ThreadAccess"
  },
  "api/NitroxModel.Platforms.OS.Windows.RegistryTest.WaitsForRegistryKeyToExist.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.RegistryTest.WaitsForRegistryKeyToExist.html",
    "title": "Method WaitsForRegistryKeyToExist | Nitrox",
    "keywords": "Method WaitsForRegistryKeyToExist Namespace NitroxModel.Platforms.OS.Windows Assembly Nitrox.Test.dll WaitsForRegistryKeyToExist() [TestMethod] public Task WaitsForRegistryKeyToExist() Returns Task"
  },
  "api/NitroxModel.Platforms.OS.Windows.RegistryTest.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.RegistryTest.html",
    "title": "Class RegistryTest | Nitrox",
    "keywords": "Class RegistryTest Namespace NitroxModel.Platforms.OS.Windows Assembly Nitrox.Test.dll [TestClass] public class RegistryTest Inheritance object RegistryTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods WaitsForRegistryKeyToExist()"
  },
  "api/NitroxModel.Platforms.OS.Windows.WindowsApi.EnableDefaultWindowAnimations.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.WindowsApi.EnableDefaultWindowAnimations.html",
    "title": "Method EnableDefaultWindowAnimations | Nitrox",
    "keywords": "Method EnableDefaultWindowAnimations Namespace NitroxModel.Platforms.OS.Windows Assembly NitroxModel.dll EnableDefaultWindowAnimations(IntPtr, int) public static void EnableDefaultWindowAnimations(IntPtr hWnd, int nIndex = -16) Parameters hWnd IntPtr nIndex int"
  },
  "api/NitroxModel.Platforms.OS.Windows.WindowsApi.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.WindowsApi.html",
    "title": "Class WindowsApi | Nitrox",
    "keywords": "Class WindowsApi Namespace NitroxModel.Platforms.OS.Windows Assembly NitroxModel.dll public class WindowsApi Inheritance object WindowsApi Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods EnableDefaultWindowAnimations(IntPtr, int)"
  },
  "api/NitroxModel.Platforms.OS.Windows.html": {
    "href": "api/NitroxModel.Platforms.OS.Windows.html",
    "title": "Namespace NitroxModel.Platforms.OS.Windows | Nitrox",
    "keywords": "Namespace NitroxModel.Platforms.OS.Windows Namespaces NitroxModel.Platforms.OS.Windows.Internal Classes RegistryTest WindowsApi"
  },
  "api/NitroxModel.Platforms.OS.html": {
    "href": "api/NitroxModel.Platforms.OS.html",
    "title": "Namespace NitroxModel.Platforms.OS | Nitrox",
    "keywords": "Namespace NitroxModel.Platforms.OS Namespaces NitroxModel.Platforms.OS.MacOS NitroxModel.Platforms.OS.Shared NitroxModel.Platforms.OS.Unix NitroxModel.Platforms.OS.Windows"
  },
  "api/NitroxModel.Platforms.Store.Discord.GetExeFile.html": {
    "href": "api/NitroxModel.Platforms.Store.Discord.GetExeFile.html",
    "title": "Method GetExeFile | Nitrox",
    "keywords": "Method GetExeFile Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll GetExeFile() Tries to find the executable of the platform public string GetExeFile() Returns string Returns path to the executable or null if not found"
  },
  "api/NitroxModel.Platforms.Store.Discord.Instance.html": {
    "href": "api/NitroxModel.Platforms.Store.Discord.Instance.html",
    "title": "Property Instance | Nitrox",
    "keywords": "Property Instance Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Instance public static Discord Instance { get; } Property Value Discord"
  },
  "api/NitroxModel.Platforms.Store.Discord.Name.html": {
    "href": "api/NitroxModel.Platforms.Store.Discord.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.Store.Discord.OwnsGame.html": {
    "href": "api/NitroxModel.Platforms.Store.Discord.OwnsGame.html",
    "title": "Method OwnsGame | Nitrox",
    "keywords": "Method OwnsGame Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll OwnsGame(string) True if game directory originates from the game platform. public bool OwnsGame(string gameDirectory) Parameters gameDirectory string Directory to a game, usually where the exe file is. Returns bool Returns true if the game platform owns this game."
  },
  "api/NitroxModel.Platforms.Store.Discord.Platform.html": {
    "href": "api/NitroxModel.Platforms.Store.Discord.Platform.html",
    "title": "Property Platform | Nitrox",
    "keywords": "Property Platform Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Platform public Platform Platform { get; } Property Value Platform"
  },
  "api/NitroxModel.Platforms.Store.Discord.StartGameAsync.html": {
    "href": "api/NitroxModel.Platforms.Store.Discord.StartGameAsync.html",
    "title": "Method StartGameAsync | Nitrox",
    "keywords": "Method StartGameAsync Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll StartGameAsync(string, string) public Task<ProcessEx> StartGameAsync(string pathToGameExe, string launchArguments) Parameters pathToGameExe string launchArguments string Returns Task<ProcessEx>"
  },
  "api/NitroxModel.Platforms.Store.Discord.StartPlatformAsync.html": {
    "href": "api/NitroxModel.Platforms.Store.Discord.StartPlatformAsync.html",
    "title": "Method StartPlatformAsync | Nitrox",
    "keywords": "Method StartPlatformAsync Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll StartPlatformAsync() Tries to start the platform and waits for it to be ready to launch games. If it has already been started it will return true. public Task<ProcessEx> StartPlatformAsync() Returns Task<ProcessEx> Returns true if platform is running or has started successfully."
  },
  "api/NitroxModel.Platforms.Store.Discord.html": {
    "href": "api/NitroxModel.Platforms.Store.Discord.html",
    "title": "Class Discord | Nitrox",
    "keywords": "Class Discord Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll public sealed class Discord : IGamePlatform Inheritance object Discord Implements IGamePlatform Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties Instance Name Platform Methods GetExeFile() Tries to find the executable of the platform OwnsGame(string) True if game directory originates from the game platform. StartGameAsync(string, string) StartPlatformAsync() Tries to start the platform and waits for it to be ready to launch games. If it has already been started it will return true."
  },
  "api/NitroxModel.Platforms.Store.EpicGames.GetExeFile.html": {
    "href": "api/NitroxModel.Platforms.Store.EpicGames.GetExeFile.html",
    "title": "Method GetExeFile | Nitrox",
    "keywords": "Method GetExeFile Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll GetExeFile() Tries to find the executable of the platform public string GetExeFile() Returns string Returns path to the executable or null if not found"
  },
  "api/NitroxModel.Platforms.Store.EpicGames.Instance.html": {
    "href": "api/NitroxModel.Platforms.Store.EpicGames.Instance.html",
    "title": "Property Instance | Nitrox",
    "keywords": "Property Instance Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Instance public static EpicGames Instance { get; } Property Value EpicGames"
  },
  "api/NitroxModel.Platforms.Store.EpicGames.Name.html": {
    "href": "api/NitroxModel.Platforms.Store.EpicGames.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.Store.EpicGames.OwnsGame.html": {
    "href": "api/NitroxModel.Platforms.Store.EpicGames.OwnsGame.html",
    "title": "Method OwnsGame | Nitrox",
    "keywords": "Method OwnsGame Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll OwnsGame(string) True if game directory originates from the game platform. public bool OwnsGame(string gameDirectory) Parameters gameDirectory string Directory to a game, usually where the exe file is. Returns bool Returns true if the game platform owns this game."
  },
  "api/NitroxModel.Platforms.Store.EpicGames.Platform.html": {
    "href": "api/NitroxModel.Platforms.Store.EpicGames.Platform.html",
    "title": "Property Platform | Nitrox",
    "keywords": "Property Platform Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Platform public Platform Platform { get; } Property Value Platform"
  },
  "api/NitroxModel.Platforms.Store.EpicGames.StartGameAsync.html": {
    "href": "api/NitroxModel.Platforms.Store.EpicGames.StartGameAsync.html",
    "title": "Method StartGameAsync | Nitrox",
    "keywords": "Method StartGameAsync Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll StartGameAsync(string, string) public Task<ProcessEx> StartGameAsync(string pathToGameExe, string launchArguments) Parameters pathToGameExe string launchArguments string Returns Task<ProcessEx>"
  },
  "api/NitroxModel.Platforms.Store.EpicGames.StartPlatformAsync.html": {
    "href": "api/NitroxModel.Platforms.Store.EpicGames.StartPlatformAsync.html",
    "title": "Method StartPlatformAsync | Nitrox",
    "keywords": "Method StartPlatformAsync Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll StartPlatformAsync() Tries to start the platform and waits for it to be ready to launch games. If it has already been started it will return true. public Task<ProcessEx> StartPlatformAsync() Returns Task<ProcessEx> Returns true if platform is running or has started successfully."
  },
  "api/NitroxModel.Platforms.Store.EpicGames.html": {
    "href": "api/NitroxModel.Platforms.Store.EpicGames.html",
    "title": "Class EpicGames | Nitrox",
    "keywords": "Class EpicGames Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll public sealed class EpicGames : IGamePlatform Inheritance object EpicGames Implements IGamePlatform Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties Instance Name Platform Methods GetExeFile() Tries to find the executable of the platform OwnsGame(string) True if game directory originates from the game platform. StartGameAsync(string, string) StartPlatformAsync() Tries to start the platform and waits for it to be ready to launch games. If it has already been started it will return true."
  },
  "api/NitroxModel.Platforms.Store.Exceptions.PlatformException.-ctor.html": {
    "href": "api/NitroxModel.Platforms.Store.Exceptions.PlatformException.-ctor.html",
    "title": "Constructor PlatformException | Nitrox",
    "keywords": "Constructor PlatformException Namespace NitroxModel.Platforms.Store.Exceptions Assembly NitroxModel.dll PlatformException(IGamePlatform, string) public PlatformException(IGamePlatform platform, string message) Parameters platform IGamePlatform message string PlatformException(IGamePlatform, string, Exception) public PlatformException(IGamePlatform platform, string message, Exception innerException) Parameters platform IGamePlatform message string innerException Exception"
  },
  "api/NitroxModel.Platforms.Store.Exceptions.PlatformException.html": {
    "href": "api/NitroxModel.Platforms.Store.Exceptions.PlatformException.html",
    "title": "Class PlatformException | Nitrox",
    "keywords": "Class PlatformException Namespace NitroxModel.Platforms.Store.Exceptions Assembly NitroxModel.dll public class PlatformException : Exception, ISerializable, _Exception Inheritance object Exception PlatformException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Extension Methods Extensions.GetFirstNonAggregateMessage(Exception) Constructors PlatformException(IGamePlatform, string) PlatformException(IGamePlatform, string, Exception)"
  },
  "api/NitroxModel.Platforms.Store.Exceptions.html": {
    "href": "api/NitroxModel.Platforms.Store.Exceptions.html",
    "title": "Namespace NitroxModel.Platforms.Store.Exceptions | Nitrox",
    "keywords": "Namespace NitroxModel.Platforms.Store.Exceptions Classes PlatformException"
  },
  "api/NitroxModel.Platforms.Store.GamePlatforms.AllPlatforms.html": {
    "href": "api/NitroxModel.Platforms.Store.GamePlatforms.AllPlatforms.html",
    "title": "Field AllPlatforms | Nitrox",
    "keywords": "Field AllPlatforms Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll public static readonly IGamePlatform[] AllPlatforms Returns IGamePlatform[]"
  },
  "api/NitroxModel.Platforms.Store.GamePlatforms.GetPlatformByGameDir.html": {
    "href": "api/NitroxModel.Platforms.Store.GamePlatforms.GetPlatformByGameDir.html",
    "title": "Method GetPlatformByGameDir | Nitrox",
    "keywords": "Method GetPlatformByGameDir Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll GetPlatformByGameDir(string) public static IGamePlatform GetPlatformByGameDir(string gameDirectory) Parameters gameDirectory string Returns IGamePlatform"
  },
  "api/NitroxModel.Platforms.Store.GamePlatforms.html": {
    "href": "api/NitroxModel.Platforms.Store.GamePlatforms.html",
    "title": "Class GamePlatforms | Nitrox",
    "keywords": "Class GamePlatforms Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll public static class GamePlatforms Inheritance object GamePlatforms Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields AllPlatforms Methods GetPlatformByGameDir(string)"
  },
  "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.GetExeFile.html": {
    "href": "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.GetExeFile.html",
    "title": "Method GetExeFile | Nitrox",
    "keywords": "Method GetExeFile Namespace NitroxModel.Platforms.Store.Interfaces Assembly NitroxModel.dll GetExeFile() Tries to find the executable of the platform string GetExeFile() Returns string Returns path to the executable or null if not found"
  },
  "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.Name.html": {
    "href": "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.Platforms.Store.Interfaces Assembly NitroxModel.dll Name string Name { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.OwnsGame.html": {
    "href": "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.OwnsGame.html",
    "title": "Method OwnsGame | Nitrox",
    "keywords": "Method OwnsGame Namespace NitroxModel.Platforms.Store.Interfaces Assembly NitroxModel.dll OwnsGame(string) True if game directory originates from the game platform. bool OwnsGame(string gameDirectory) Parameters gameDirectory string Directory to a game, usually where the exe file is. Returns bool Returns true if the game platform owns this game."
  },
  "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.Platform.html": {
    "href": "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.Platform.html",
    "title": "Property Platform | Nitrox",
    "keywords": "Property Platform Namespace NitroxModel.Platforms.Store.Interfaces Assembly NitroxModel.dll Platform Platform Platform { get; } Property Value Platform"
  },
  "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.StartPlatformAsync.html": {
    "href": "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.StartPlatformAsync.html",
    "title": "Method StartPlatformAsync | Nitrox",
    "keywords": "Method StartPlatformAsync Namespace NitroxModel.Platforms.Store.Interfaces Assembly NitroxModel.dll StartPlatformAsync() Tries to start the platform and waits for it to be ready to launch games. If it has already been started it will return true. Task<ProcessEx> StartPlatformAsync() Returns Task<ProcessEx> Returns true if platform is running or has started successfully."
  },
  "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.html": {
    "href": "api/NitroxModel.Platforms.Store.Interfaces.IGamePlatform.html",
    "title": "Interface IGamePlatform | Nitrox",
    "keywords": "Interface IGamePlatform Namespace NitroxModel.Platforms.Store.Interfaces Assembly NitroxModel.dll public interface IGamePlatform Properties Name Platform Methods GetExeFile() Tries to find the executable of the platform OwnsGame(string) True if game directory originates from the game platform. StartPlatformAsync() Tries to start the platform and waits for it to be ready to launch games. If it has already been started it will return true."
  },
  "api/NitroxModel.Platforms.Store.Interfaces.html": {
    "href": "api/NitroxModel.Platforms.Store.Interfaces.html",
    "title": "Namespace NitroxModel.Platforms.Store.Interfaces | Nitrox",
    "keywords": "Namespace NitroxModel.Platforms.Store.Interfaces Interfaces IGamePlatform"
  },
  "api/NitroxModel.Platforms.Store.MSStore.GetExeFile.html": {
    "href": "api/NitroxModel.Platforms.Store.MSStore.GetExeFile.html",
    "title": "Method GetExeFile | Nitrox",
    "keywords": "Method GetExeFile Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll GetExeFile() Tries to find the executable of the platform public string GetExeFile() Returns string Returns path to the executable or null if not found"
  },
  "api/NitroxModel.Platforms.Store.MSStore.Instance.html": {
    "href": "api/NitroxModel.Platforms.Store.MSStore.Instance.html",
    "title": "Property Instance | Nitrox",
    "keywords": "Property Instance Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Instance public static MSStore Instance { get; } Property Value MSStore"
  },
  "api/NitroxModel.Platforms.Store.MSStore.Name.html": {
    "href": "api/NitroxModel.Platforms.Store.MSStore.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.Store.MSStore.OwnsGame.html": {
    "href": "api/NitroxModel.Platforms.Store.MSStore.OwnsGame.html",
    "title": "Method OwnsGame | Nitrox",
    "keywords": "Method OwnsGame Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll OwnsGame(string) True if game directory originates from the game platform. public bool OwnsGame(string gameDirectory) Parameters gameDirectory string Directory to a game, usually where the exe file is. Returns bool Returns true if the game platform owns this game."
  },
  "api/NitroxModel.Platforms.Store.MSStore.Platform.html": {
    "href": "api/NitroxModel.Platforms.Store.MSStore.Platform.html",
    "title": "Property Platform | Nitrox",
    "keywords": "Property Platform Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Platform public Platform Platform { get; } Property Value Platform"
  },
  "api/NitroxModel.Platforms.Store.MSStore.StartGameAsync.html": {
    "href": "api/NitroxModel.Platforms.Store.MSStore.StartGameAsync.html",
    "title": "Method StartGameAsync | Nitrox",
    "keywords": "Method StartGameAsync Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll StartGameAsync(string) public Task<ProcessEx> StartGameAsync(string pathToGameExe) Parameters pathToGameExe string Returns Task<ProcessEx>"
  },
  "api/NitroxModel.Platforms.Store.MSStore.StartPlatformAsync.html": {
    "href": "api/NitroxModel.Platforms.Store.MSStore.StartPlatformAsync.html",
    "title": "Method StartPlatformAsync | Nitrox",
    "keywords": "Method StartPlatformAsync Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll StartPlatformAsync() Tries to start the platform and waits for it to be ready to launch games. If it has already been started it will return true. public Task<ProcessEx> StartPlatformAsync() Returns Task<ProcessEx> Returns true if platform is running or has started successfully."
  },
  "api/NitroxModel.Platforms.Store.MSStore.html": {
    "href": "api/NitroxModel.Platforms.Store.MSStore.html",
    "title": "Class MSStore | Nitrox",
    "keywords": "Class MSStore Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll public sealed class MSStore : IGamePlatform Inheritance object MSStore Implements IGamePlatform Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties Instance Name Platform Methods GetExeFile() Tries to find the executable of the platform OwnsGame(string) True if game directory originates from the game platform. StartGameAsync(string) StartPlatformAsync() Tries to start the platform and waits for it to be ready to launch games. If it has already been started it will return true."
  },
  "api/NitroxModel.Platforms.Store.Steam.GetExeFile.html": {
    "href": "api/NitroxModel.Platforms.Store.Steam.GetExeFile.html",
    "title": "Method GetExeFile | Nitrox",
    "keywords": "Method GetExeFile Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll GetExeFile() Tries to find the executable of the platform public string GetExeFile() Returns string Returns path to the executable or null if not found"
  },
  "api/NitroxModel.Platforms.Store.Steam.Instance.html": {
    "href": "api/NitroxModel.Platforms.Store.Steam.Instance.html",
    "title": "Property Instance | Nitrox",
    "keywords": "Property Instance Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Instance public static Steam Instance { get; } Property Value Steam"
  },
  "api/NitroxModel.Platforms.Store.Steam.Name.html": {
    "href": "api/NitroxModel.Platforms.Store.Steam.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxModel.Platforms.Store.Steam.OwnsGame.html": {
    "href": "api/NitroxModel.Platforms.Store.Steam.OwnsGame.html",
    "title": "Method OwnsGame | Nitrox",
    "keywords": "Method OwnsGame Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll OwnsGame(string) True if game directory originates from the game platform. public bool OwnsGame(string gameDirectory) Parameters gameDirectory string Directory to a game, usually where the exe file is. Returns bool Returns true if the game platform owns this game."
  },
  "api/NitroxModel.Platforms.Store.Steam.Platform.html": {
    "href": "api/NitroxModel.Platforms.Store.Steam.Platform.html",
    "title": "Property Platform | Nitrox",
    "keywords": "Property Platform Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll Platform public Platform Platform { get; } Property Value Platform"
  },
  "api/NitroxModel.Platforms.Store.Steam.StartGameAsync.html": {
    "href": "api/NitroxModel.Platforms.Store.Steam.StartGameAsync.html",
    "title": "Method StartGameAsync | Nitrox",
    "keywords": "Method StartGameAsync Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll StartGameAsync(string, int, string) public Task<ProcessEx> StartGameAsync(string pathToGameExe, int steamAppId, string launchArguments) Parameters pathToGameExe string steamAppId int launchArguments string Returns Task<ProcessEx>"
  },
  "api/NitroxModel.Platforms.Store.Steam.StartPlatformAsync.html": {
    "href": "api/NitroxModel.Platforms.Store.Steam.StartPlatformAsync.html",
    "title": "Method StartPlatformAsync | Nitrox",
    "keywords": "Method StartPlatformAsync Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll StartPlatformAsync() Tries to start the platform and waits for it to be ready to launch games. If it has already been started it will return true. public Task<ProcessEx> StartPlatformAsync() Returns Task<ProcessEx> Returns true if platform is running or has started successfully."
  },
  "api/NitroxModel.Platforms.Store.Steam.html": {
    "href": "api/NitroxModel.Platforms.Store.Steam.html",
    "title": "Class Steam | Nitrox",
    "keywords": "Class Steam Namespace NitroxModel.Platforms.Store Assembly NitroxModel.dll public sealed class Steam : IGamePlatform Inheritance object Steam Implements IGamePlatform Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties Instance Name Platform Methods GetExeFile() Tries to find the executable of the platform OwnsGame(string) True if game directory originates from the game platform. StartGameAsync(string, int, string) StartPlatformAsync() Tries to start the platform and waits for it to be ready to launch games. If it has already been started it will return true."
  },
  "api/NitroxModel.Platforms.Store.html": {
    "href": "api/NitroxModel.Platforms.Store.html",
    "title": "Namespace NitroxModel.Platforms.Store | Nitrox",
    "keywords": "Namespace NitroxModel.Platforms.Store Namespaces NitroxModel.Platforms.Store.Exceptions NitroxModel.Platforms.Store.Interfaces Classes Discord EpicGames GamePlatforms MSStore Steam"
  },
  "api/NitroxModel.Platforms.html": {
    "href": "api/NitroxModel.Platforms.html",
    "title": "Namespace NitroxModel.Platforms | Nitrox",
    "keywords": "Namespace NitroxModel.Platforms Namespaces NitroxModel.Platforms.OS NitroxModel.Platforms.Store"
  },
  "api/NitroxModel.Serialization.IProperties.FileName.html": {
    "href": "api/NitroxModel.Serialization.IProperties.FileName.html",
    "title": "Property FileName | Nitrox",
    "keywords": "Property FileName Namespace NitroxModel.Serialization Assembly NitroxModel.dll FileName string FileName { get; } Property Value string"
  },
  "api/NitroxModel.Serialization.IProperties.html": {
    "href": "api/NitroxModel.Serialization.IProperties.html",
    "title": "Interface IProperties | Nitrox",
    "keywords": "Interface IProperties Namespace NitroxModel.Serialization Assembly NitroxModel.dll public interface IProperties Properties FileName"
  },
  "api/NitroxModel.Serialization.NitroxConfig-1.Deserialize.html": {
    "href": "api/NitroxModel.Serialization.NitroxConfig-1.Deserialize.html",
    "title": "Method Deserialize | Nitrox",
    "keywords": "Method Deserialize Namespace NitroxModel.Serialization Assembly NitroxModel.dll Deserialize(string) public void Deserialize(string saveDir) Parameters saveDir string"
  },
  "api/NitroxModel.Serialization.NitroxConfig-1.FileName.html": {
    "href": "api/NitroxModel.Serialization.NitroxConfig-1.FileName.html",
    "title": "Property FileName | Nitrox",
    "keywords": "Property FileName Namespace NitroxModel.Serialization Assembly NitroxModel.dll FileName public abstract string FileName { get; } Property Value string"
  },
  "api/NitroxModel.Serialization.NitroxConfig-1.Load.html": {
    "href": "api/NitroxModel.Serialization.NitroxConfig-1.Load.html",
    "title": "Method Load | Nitrox",
    "keywords": "Method Load Namespace NitroxModel.Serialization Assembly NitroxModel.dll Load(string) public static T Load(string saveDir) Parameters saveDir string Returns T"
  },
  "api/NitroxModel.Serialization.NitroxConfig-1.Serialize.html": {
    "href": "api/NitroxModel.Serialization.NitroxConfig-1.Serialize.html",
    "title": "Method Serialize | Nitrox",
    "keywords": "Method Serialize Namespace NitroxModel.Serialization Assembly NitroxModel.dll Serialize(string) public void Serialize(string saveDir) Parameters saveDir string"
  },
  "api/NitroxModel.Serialization.NitroxConfig-1.Update.html": {
    "href": "api/NitroxModel.Serialization.NitroxConfig-1.Update.html",
    "title": "Method Update | Nitrox",
    "keywords": "Method Update Namespace NitroxModel.Serialization Assembly NitroxModel.dll Update(string) Ensures updates are properly persisted to the backing config file without overwriting user edits. public NitroxConfig<T>.UpdateDiposable Update(string saveDir) Parameters saveDir string Returns NitroxConfig<T>.UpdateDiposable"
  },
  "api/NitroxModel.Serialization.NitroxConfig-1.UpdateDiposable.-ctor.html": {
    "href": "api/NitroxModel.Serialization.NitroxConfig-1.UpdateDiposable.-ctor.html",
    "title": "Constructor UpdateDiposable | Nitrox",
    "keywords": "Constructor UpdateDiposable Namespace NitroxModel.Serialization Assembly NitroxModel.dll UpdateDiposable(NitroxConfig<T>, string) public UpdateDiposable(NitroxConfig<T> config, string saveDir) Parameters config NitroxConfig<T> saveDir string"
  },
  "api/NitroxModel.Serialization.NitroxConfig-1.UpdateDiposable.Dispose.html": {
    "href": "api/NitroxModel.Serialization.NitroxConfig-1.UpdateDiposable.Dispose.html",
    "title": "Method Dispose | Nitrox",
    "keywords": "Method Dispose Namespace NitroxModel.Serialization Assembly NitroxModel.dll Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/NitroxModel.Serialization.NitroxConfig-1.UpdateDiposable.html": {
    "href": "api/NitroxModel.Serialization.NitroxConfig-1.UpdateDiposable.html",
    "title": "Struct NitroxConfig<T>.UpdateDiposable | Nitrox",
    "keywords": "Struct NitroxConfig<T>.UpdateDiposable Namespace NitroxModel.Serialization Assembly NitroxModel.dll public struct NitroxConfig<T>.UpdateDiposable : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors UpdateDiposable(NitroxConfig<T>, string) Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources."
  },
  "api/NitroxModel.Serialization.NitroxConfig-1.html": {
    "href": "api/NitroxModel.Serialization.NitroxConfig-1.html",
    "title": "Class NitroxConfig<T> | Nitrox",
    "keywords": "Class NitroxConfig<T> Namespace NitroxModel.Serialization Assembly NitroxModel.dll public abstract class NitroxConfig<T> where T : NitroxConfig<T>, new() Type Parameters T Inheritance object NitroxConfig<T> Derived ClientConfig ServerConfig Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties FileName Methods Deserialize(string) Load(string) Serialize(string) Update(string) Ensures updates are properly persisted to the backing config file without overwriting user edits."
  },
  "api/NitroxModel.Serialization.PropertyDescriptionAttribute.-ctor.html": {
    "href": "api/NitroxModel.Serialization.PropertyDescriptionAttribute.-ctor.html",
    "title": "Constructor PropertyDescriptionAttribute | Nitrox",
    "keywords": "Constructor PropertyDescriptionAttribute Namespace NitroxModel.Serialization Assembly NitroxModel.dll PropertyDescriptionAttribute(string) public PropertyDescriptionAttribute(string desc) Parameters desc string PropertyDescriptionAttribute(string, Type) public PropertyDescriptionAttribute(string desc, Type type) Parameters desc string type Type"
  },
  "api/NitroxModel.Serialization.PropertyDescriptionAttribute.html": {
    "href": "api/NitroxModel.Serialization.PropertyDescriptionAttribute.html",
    "title": "Class PropertyDescriptionAttribute | Nitrox",
    "keywords": "Class PropertyDescriptionAttribute Namespace NitroxModel.Serialization Assembly NitroxModel.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Property|AttributeTargets.Field, Inherited = false)] public sealed class PropertyDescriptionAttribute : DescriptionAttribute, _Attribute Inheritance object Attribute DescriptionAttribute PropertyDescriptionAttribute Implements _Attribute Inherited Members DescriptionAttribute.Default DescriptionAttribute.Equals(object) DescriptionAttribute.GetHashCode() DescriptionAttribute.IsDefaultAttribute() DescriptionAttribute.Description Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Match(object) Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors PropertyDescriptionAttribute(string) PropertyDescriptionAttribute(string, Type)"
  },
  "api/NitroxModel.Serialization.ServerList.Add.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Add.html",
    "title": "Method Add | Nitrox",
    "keywords": "Method Add Namespace NitroxModel.Serialization Assembly NitroxModel.dll Add(Entry) public void Add(ServerList.Entry entry) Parameters entry ServerList.Entry"
  },
  "api/NitroxModel.Serialization.ServerList.DEFAULT_PORT.html": {
    "href": "api/NitroxModel.Serialization.ServerList.DEFAULT_PORT.html",
    "title": "Field DEFAULT_PORT | Nitrox",
    "keywords": "Field DEFAULT_PORT Namespace NitroxModel.Serialization Assembly NitroxModel.dll public const int DEFAULT_PORT = 11000 Returns int"
  },
  "api/NitroxModel.Serialization.ServerList.DefaultFile.html": {
    "href": "api/NitroxModel.Serialization.ServerList.DefaultFile.html",
    "title": "Property DefaultFile | Nitrox",
    "keywords": "Property DefaultFile Namespace NitroxModel.Serialization Assembly NitroxModel.dll DefaultFile public static string DefaultFile { get; } Property Value string"
  },
  "api/NitroxModel.Serialization.ServerList.Entries.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Entries.html",
    "title": "Property Entries | Nitrox",
    "keywords": "Property Entries Namespace NitroxModel.Serialization Assembly NitroxModel.dll Entries public IEnumerable<ServerList.Entry> Entries { get; } Property Value IEnumerable<ServerList.Entry>"
  },
  "api/NitroxModel.Serialization.ServerList.Entry.-ctor.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Entry.-ctor.html",
    "title": "Constructor Entry | Nitrox",
    "keywords": "Constructor Entry Namespace NitroxModel.Serialization Assembly NitroxModel.dll Entry(string, string, int, bool) public Entry(string name, string address, int port, bool persist = true) Parameters name string address string port int persist bool Entry(string, IPAddress, int, bool) public Entry(string name, IPAddress address, int port, bool persist = true) Parameters name string address IPAddress port int persist bool Entry(string, string, string, bool) public Entry(string name, string address, string port, bool persist = true) Parameters name string address string port string persist bool"
  },
  "api/NitroxModel.Serialization.ServerList.Entry.Address.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Entry.Address.html",
    "title": "Property Address | Nitrox",
    "keywords": "Property Address Namespace NitroxModel.Serialization Assembly NitroxModel.dll Address public string Address { get; } Property Value string"
  },
  "api/NitroxModel.Serialization.ServerList.Entry.FromLine.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Entry.FromLine.html",
    "title": "Method FromLine | Nitrox",
    "keywords": "Method FromLine Namespace NitroxModel.Serialization Assembly NitroxModel.dll FromLine(string) public static ServerList.Entry FromLine(string line) Parameters line string Returns ServerList.Entry"
  },
  "api/NitroxModel.Serialization.ServerList.Entry.Name.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Entry.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxModel.Serialization Assembly NitroxModel.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxModel.Serialization.ServerList.Entry.Persist.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Entry.Persist.html",
    "title": "Property Persist | Nitrox",
    "keywords": "Property Persist Namespace NitroxModel.Serialization Assembly NitroxModel.dll Persist If true, entry will be saved to storage. public bool Persist { get; } Property Value bool"
  },
  "api/NitroxModel.Serialization.ServerList.Entry.Port.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Entry.Port.html",
    "title": "Property Port | Nitrox",
    "keywords": "Property Port Namespace NitroxModel.Serialization Assembly NitroxModel.dll Port public int Port { get; } Property Value int"
  },
  "api/NitroxModel.Serialization.ServerList.Entry.ToString.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Entry.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel.Serialization Assembly NitroxModel.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel.Serialization.ServerList.Entry.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Entry.html",
    "title": "Class ServerList.Entry | Nitrox",
    "keywords": "Class ServerList.Entry Namespace NitroxModel.Serialization Assembly NitroxModel.dll public class ServerList.Entry Inheritance object ServerList.Entry Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Entry(string, IPAddress, int, bool) Entry(string, string, int, bool) Entry(string, string, string, bool) Properties Address Name Persist If true, entry will be saved to storage. Port Methods FromLine(string) ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel.Serialization.ServerList.From.html": {
    "href": "api/NitroxModel.Serialization.ServerList.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxModel.Serialization Assembly NitroxModel.dll From(string) public static ServerList From(string file = null) Parameters file string Returns ServerList"
  },
  "api/NitroxModel.Serialization.ServerList.Instance.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Instance.html",
    "title": "Property Instance | Nitrox",
    "keywords": "Property Instance Namespace NitroxModel.Serialization Assembly NitroxModel.dll Instance public static ServerList Instance { get; } Property Value ServerList"
  },
  "api/NitroxModel.Serialization.ServerList.Refresh.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Refresh.html",
    "title": "Method Refresh | Nitrox",
    "keywords": "Method Refresh Namespace NitroxModel.Serialization Assembly NitroxModel.dll Refresh() public static ServerList Refresh() Returns ServerList"
  },
  "api/NitroxModel.Serialization.ServerList.RemoveAt.html": {
    "href": "api/NitroxModel.Serialization.ServerList.RemoveAt.html",
    "title": "Method RemoveAt | Nitrox",
    "keywords": "Method RemoveAt Namespace NitroxModel.Serialization Assembly NitroxModel.dll RemoveAt(int) public void RemoveAt(int index) Parameters index int"
  },
  "api/NitroxModel.Serialization.ServerList.Save.html": {
    "href": "api/NitroxModel.Serialization.ServerList.Save.html",
    "title": "Method Save | Nitrox",
    "keywords": "Method Save Namespace NitroxModel.Serialization Assembly NitroxModel.dll Save(string) public void Save(string file = null) Parameters file string"
  },
  "api/NitroxModel.Serialization.ServerList.html": {
    "href": "api/NitroxModel.Serialization.ServerList.html",
    "title": "Class ServerList | Nitrox",
    "keywords": "Class ServerList Namespace NitroxModel.Serialization Assembly NitroxModel.dll public class ServerList Inheritance object ServerList Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields DEFAULT_PORT Properties DefaultFile Entries Instance Methods Add(Entry) From(string) Refresh() RemoveAt(int) Save(string)"
  },
  "api/NitroxModel.Serialization.html": {
    "href": "api/NitroxModel.Serialization.html",
    "title": "Namespace NitroxModel.Serialization | Nitrox",
    "keywords": "Namespace NitroxModel.Serialization Classes NitroxConfig<T> PropertyDescriptionAttribute ServerList ServerList.Entry Structs NitroxConfig<T>.UpdateDiposable Interfaces IProperties"
  },
  "api/NitroxModel.Server.NitroxGameMode.html": {
    "href": "api/NitroxModel.Server.NitroxGameMode.html",
    "title": "Enum NitroxGameMode | Nitrox",
    "keywords": "Enum NitroxGameMode Namespace NitroxModel.Server Assembly NitroxModel.dll GameModes according to Subnautica's enum GameModeOption public enum NitroxGameMode Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields CREATIVE = 1790 FREEDOM = 2 HARDCORE = 257 SURVIVAL = 0"
  },
  "api/NitroxModel.Server.ServerSerializerMode.html": {
    "href": "api/NitroxModel.Server.ServerSerializerMode.html",
    "title": "Enum ServerSerializerMode | Nitrox",
    "keywords": "Enum ServerSerializerMode Namespace NitroxModel.Server Assembly NitroxModel.dll public enum ServerSerializerMode Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields JSON = 1 PROTOBUF = 0"
  },
  "api/NitroxModel.Server.html": {
    "href": "api/NitroxModel.Server.html",
    "title": "Namespace NitroxModel.Server | Nitrox",
    "keywords": "Namespace NitroxModel.Server Enums NitroxGameMode GameModes according to Subnautica's enum GameModeOption ServerSerializerMode"
  },
  "api/NitroxModel.html": {
    "href": "api/NitroxModel.html",
    "title": "Namespace NitroxModel | Nitrox",
    "keywords": "Namespace NitroxModel Namespaces NitroxModel.Constants NitroxModel.Core NitroxModel.DataStructures NitroxModel.Discovery NitroxModel.Helper NitroxModel.Logger NitroxModel.MultiplayerSession NitroxModel.Networking NitroxModel.Packets NitroxModel.Platforms NitroxModel.Serialization NitroxModel.Server Classes Extensions ExtensionsTest GameInfo"
  },
  "api/NitroxModel_Subnautica.DataStructures.DataExtensions.ToDto.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.DataExtensions.ToDto.html",
    "title": "Method ToDto | Nitrox",
    "keywords": "Method ToDto Namespace NitroxModel_Subnautica.DataStructures Assembly NitroxModel-Subnautica.dll ToDto(Int3) public static NitroxInt3 ToDto(this Int3 v) Parameters v Int3 Returns NitroxInt3 ToDto(Vector3) public static NitroxVector3 ToDto(this Vector3 v) Parameters v Vector3 Returns NitroxVector3 ToDto(Vector4) public static NitroxVector4 ToDto(this Vector4 v) Parameters v Vector4 Returns NitroxVector4 ToDto(TechType) public static NitroxTechType ToDto(this TechType v) Parameters v TechType Returns NitroxTechType ToDto(Quaternion) public static NitroxQuaternion ToDto(this Quaternion v) Parameters v Quaternion Returns NitroxQuaternion ToDto(Color) public static NitroxColor ToDto(this Color v) Parameters v Color Returns NitroxColor ToDto(Color[]) public static NitroxColor[] ToDto(this Color[] v) Parameters v Color[] Returns NitroxColor[] ToDto(Vector3[]) public static NitroxVector3[] ToDto(this Vector3[] v) Parameters v Vector3[] Returns NitroxVector3[] ToDto(GoalType) public static StoryGoalExecuted.EventType ToDto(this GoalType goalType) Parameters goalType GoalType Returns StoryGoalExecuted.EventType ToDto(Entry) public static PDAEntry ToDto(this PDAScanner.Entry entry) Parameters entry PDAScanner.Entry Returns PDAEntry ToDto(Face) public static NitroxBaseFace ToDto(this Base.Face face) Parameters face Base.Face Returns NitroxBaseFace"
  },
  "api/NitroxModel_Subnautica.DataStructures.DataExtensions.ToLocalDto.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.DataExtensions.ToLocalDto.html",
    "title": "Method ToLocalDto | Nitrox",
    "keywords": "Method ToLocalDto Namespace NitroxModel_Subnautica.DataStructures Assembly NitroxModel-Subnautica.dll ToLocalDto(Transform) public static NitroxTransform ToLocalDto(this Transform transform) Parameters transform Transform Returns NitroxTransform"
  },
  "api/NitroxModel_Subnautica.DataStructures.DataExtensions.ToUnity.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.DataExtensions.ToUnity.html",
    "title": "Method ToUnity | Nitrox",
    "keywords": "Method ToUnity Namespace NitroxModel_Subnautica.DataStructures Assembly NitroxModel-Subnautica.dll ToUnity(NitroxInt3) public static Int3 ToUnity(this NitroxInt3 v) Parameters v NitroxInt3 Returns Int3 ToUnity(NitroxVector3) public static Vector3 ToUnity(this NitroxVector3 v) Parameters v NitroxVector3 Returns Vector3 ToUnity(NitroxVector4) public static Vector4 ToUnity(this NitroxVector4 v) Parameters v NitroxVector4 Returns Vector4 ToUnity(NitroxTechType) public static TechType ToUnity(this NitroxTechType v) Parameters v NitroxTechType Returns TechType ToUnity(NitroxQuaternion) public static Quaternion ToUnity(this NitroxQuaternion v) Parameters v NitroxQuaternion Returns Quaternion ToUnity(NitroxColor) public static Color ToUnity(this NitroxColor v) Parameters v NitroxColor Returns Color ToUnity(NitroxVector3[]) public static Vector3[] ToUnity(this NitroxVector3[] v) Parameters v NitroxVector3[] Returns Vector3[] ToUnity(EventType) public static GoalType ToUnity(this StoryGoalExecuted.EventType eventType) Parameters eventType StoryGoalExecuted.EventType Returns GoalType ToUnity(PDAEntry) public static PDAScanner.Entry ToUnity(this PDAEntry entry) Parameters entry PDAEntry Returns PDAScanner.Entry ToUnity(NitroxBaseFace) public static Base.Face ToUnity(this NitroxBaseFace baseFace) Parameters baseFace NitroxBaseFace Returns Base.Face"
  },
  "api/NitroxModel_Subnautica.DataStructures.DataExtensions.ToWorldDto.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.DataExtensions.ToWorldDto.html",
    "title": "Method ToWorldDto | Nitrox",
    "keywords": "Method ToWorldDto Namespace NitroxModel_Subnautica.DataStructures Assembly NitroxModel-Subnautica.dll ToWorldDto(Transform) public static NitroxTransform ToWorldDto(this Transform transform) Parameters transform Transform Returns NitroxTransform"
  },
  "api/NitroxModel_Subnautica.DataStructures.DataExtensions.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.DataExtensions.html",
    "title": "Class DataExtensions | Nitrox",
    "keywords": "Class DataExtensions Namespace NitroxModel_Subnautica.DataStructures Assembly NitroxModel-Subnautica.dll Contains extension methods for converting Unity types to Nitrox types and vice versa. This is necessary to allow the server to work without a dependency on game models while still being able to represent game models. public static class DataExtensions Inheritance object DataExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks The abbreviation \"DTO\" means Data Transfer Object which is a common term used in REST APIs. Its purpose is to be a serializable type and to transfer the least amount of data necessary per request (e.g. API call). Methods ToDto(Face) ToDto(Int3) ToDto(Entry) ToDto(GoalType) ToDto(TechType) ToDto(Color) ToDto(Color[]) ToDto(Quaternion) ToDto(Vector3) ToDto(Vector3[]) ToDto(Vector4) ToLocalDto(Transform) ToUnity(NitroxBaseFace) ToUnity(NitroxTechType) ToUnity(PDAEntry) ToUnity(NitroxInt3) ToUnity(NitroxColor) ToUnity(NitroxQuaternion) ToUnity(NitroxVector3) ToUnity(NitroxVector3[]) ToUnity(NitroxVector4) ToUnity(EventType) ToWorldDto(Transform)"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions.EmptyCreatureAction.GetCreatureAction.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions.EmptyCreatureAction.GetCreatureAction.html",
    "title": "Method GetCreatureAction | Nitrox",
    "keywords": "Method GetCreatureAction Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions Assembly NitroxModel-Subnautica.dll GetCreatureAction(GameObject) public CreatureAction GetCreatureAction(GameObject gameObject) Parameters gameObject GameObject Returns CreatureAction"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions.EmptyCreatureAction.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions.EmptyCreatureAction.html",
    "title": "Class EmptyCreatureAction | Nitrox",
    "keywords": "Class EmptyCreatureAction Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions Assembly NitroxModel-Subnautica.dll [Serializable] public class EmptyCreatureAction : SerializableCreatureAction Inheritance object EmptyCreatureAction Implements SerializableCreatureAction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetCreatureAction(GameObject)"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions.SerializableCreatureAction.GetCreatureAction.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions.SerializableCreatureAction.GetCreatureAction.html",
    "title": "Method GetCreatureAction | Nitrox",
    "keywords": "Method GetCreatureAction Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions Assembly NitroxModel-Subnautica.dll GetCreatureAction(GameObject) CreatureAction GetCreatureAction(GameObject gameObject) Parameters gameObject GameObject Returns CreatureAction"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions.SerializableCreatureAction.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions.SerializableCreatureAction.html",
    "title": "Interface SerializableCreatureAction | Nitrox",
    "keywords": "Interface SerializableCreatureAction Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions Assembly NitroxModel-Subnautica.dll public interface SerializableCreatureAction Methods GetCreatureAction(GameObject)"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions.html",
    "title": "Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions | Nitrox",
    "keywords": "Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions Classes EmptyCreatureAction Interfaces SerializableCreatureAction"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.-ctor.html",
    "title": "Constructor CyclopsDamageInfoData | Nitrox",
    "keywords": "Constructor CyclopsDamageInfoData Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll CyclopsDamageInfoData() protected CyclopsDamageInfoData() CyclopsDamageInfoData(NitroxId, Optional<NitroxId>, float, float, NitroxVector3, DamageType) public CyclopsDamageInfoData(NitroxId receiverId, Optional<NitroxId> dealerId, float originalDamage, float damage, NitroxVector3 position, DamageType type) Parameters receiverId NitroxId dealerId Optional<NitroxId> originalDamage float damage float position NitroxVector3 type DamageType"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.Damage.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.Damage.html",
    "title": "Property Damage | Nitrox",
    "keywords": "Property Damage Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll Damage [DataMember(Order = 4)] public float Damage { get; set; } Property Value float"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.DealerId.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.DealerId.html",
    "title": "Property DealerId | Nitrox",
    "keywords": "Property DealerId Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll DealerId [DataMember(Order = 2)] public Optional<NitroxId> DealerId { get; set; } Property Value Optional<NitroxId>"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.OriginalDamage.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.OriginalDamage.html",
    "title": "Property OriginalDamage | Nitrox",
    "keywords": "Property OriginalDamage Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll OriginalDamage [DataMember(Order = 3)] public float OriginalDamage { get; set; } Property Value float"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.Position.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll Position [DataMember(Order = 5)] public NitroxVector3 Position { get; set; } Property Value NitroxVector3"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.ReceiverId.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.ReceiverId.html",
    "title": "Property ReceiverId | Nitrox",
    "keywords": "Property ReceiverId Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll ReceiverId [DataMember(Order = 1)] public NitroxId ReceiverId { get; set; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.ToString.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.Type.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.Type.html",
    "title": "Property Type | Nitrox",
    "keywords": "Property Type Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll Type [DataMember(Order = 6)] public DamageType Type { get; set; } Property Value DamageType"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsDamageInfoData.html",
    "title": "Class CyclopsDamageInfoData | Nitrox",
    "keywords": "Class CyclopsDamageInfoData Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll [Serializable] [DataContract] public class CyclopsDamageInfoData Inheritance object CyclopsDamageInfoData Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsDamageInfoData() CyclopsDamageInfoData(NitroxId, Optional<NitroxId>, float, float, NitroxVector3, DamageType) Properties Damage DealerId OriginalDamage Position ReceiverId Type Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.-ctor.html",
    "title": "Constructor CyclopsFireData | Nitrox",
    "keywords": "Constructor CyclopsFireData Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll CyclopsFireData() protected CyclopsFireData() CyclopsFireData(NitroxId, NitroxId, CyclopsRooms, int) public CyclopsFireData(NitroxId fireId, NitroxId cyclopsId, CyclopsRooms room, int nodeIndex) Parameters fireId NitroxId cyclopsId NitroxId room CyclopsRooms nodeIndex int"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.CyclopsId.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.CyclopsId.html",
    "title": "Property CyclopsId | Nitrox",
    "keywords": "Property CyclopsId Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll CyclopsId [DataMember(Order = 2)] public NitroxId CyclopsId { get; set; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.FireId.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.FireId.html",
    "title": "Property FireId | Nitrox",
    "keywords": "Property FireId Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll FireId [DataMember(Order = 1)] public NitroxId FireId { get; set; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.NodeIndex.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.NodeIndex.html",
    "title": "Property NodeIndex | Nitrox",
    "keywords": "Property NodeIndex Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll NodeIndex [DataMember(Order = 4)] public int NodeIndex { get; set; } Property Value int"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.Room.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.Room.html",
    "title": "Property Room | Nitrox",
    "keywords": "Property Room Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll Room [DataMember(Order = 3)] public CyclopsRooms Room { get; set; } Property Value CyclopsRooms"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.ToString.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.CyclopsFireData.html",
    "title": "Class CyclopsFireData | Nitrox",
    "keywords": "Class CyclopsFireData Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll [Serializable] [DataContract] public class CyclopsFireData Inheritance object CyclopsFireData Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsFireData() CyclopsFireData(NitroxId, NitroxId, CyclopsRooms, int) Properties CyclopsId FireId NodeIndex Room Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUwePrefabFactory.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUwePrefabFactory.-ctor.html",
    "title": "Constructor SubnauticaUwePrefabFactory | Nitrox",
    "keywords": "Constructor SubnauticaUwePrefabFactory Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Entities Assembly NitroxModel-Subnautica.dll SubnauticaUwePrefabFactory(string) public SubnauticaUwePrefabFactory(string lootDistributionJson) Parameters lootDistributionJson string"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUwePrefabFactory.GetPossiblePrefabs.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUwePrefabFactory.GetPossiblePrefabs.html",
    "title": "Method GetPossiblePrefabs | Nitrox",
    "keywords": "Method GetPossiblePrefabs Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Entities Assembly NitroxModel-Subnautica.dll GetPossiblePrefabs(string) public override List<UwePrefab> GetPossiblePrefabs(string biome) Parameters biome string Returns List<UwePrefab>"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUwePrefabFactory.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUwePrefabFactory.html",
    "title": "Class SubnauticaUwePrefabFactory | Nitrox",
    "keywords": "Class SubnauticaUwePrefabFactory Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Entities Assembly NitroxModel-Subnautica.dll public class SubnauticaUwePrefabFactory : UwePrefabFactory Inheritance object UwePrefabFactory SubnauticaUwePrefabFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SubnauticaUwePrefabFactory(string) Methods GetPossiblePrefabs(string)"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUweWorldEntityFactory.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUweWorldEntityFactory.-ctor.html",
    "title": "Constructor SubnauticaUweWorldEntityFactory | Nitrox",
    "keywords": "Constructor SubnauticaUweWorldEntityFactory Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Entities Assembly NitroxModel-Subnautica.dll SubnauticaUweWorldEntityFactory(Dictionary<string, WorldEntityInfo>) public SubnauticaUweWorldEntityFactory(Dictionary<string, WorldEntityInfo> worldEntitiesByClassId) Parameters worldEntitiesByClassId Dictionary<string, WorldEntityInfo>"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUweWorldEntityFactory.From.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUweWorldEntityFactory.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Entities Assembly NitroxModel-Subnautica.dll From(string) public override Optional<UweWorldEntity> From(string classId) Parameters classId string Returns Optional<UweWorldEntity>"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUweWorldEntityFactory.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.SubnauticaUweWorldEntityFactory.html",
    "title": "Class SubnauticaUweWorldEntityFactory | Nitrox",
    "keywords": "Class SubnauticaUweWorldEntityFactory Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Entities Assembly NitroxModel-Subnautica.dll public class SubnauticaUweWorldEntityFactory : UweWorldEntityFactory Inheritance object UweWorldEntityFactory SubnauticaUweWorldEntityFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SubnauticaUweWorldEntityFactory(Dictionary<string, WorldEntityInfo>) Methods From(string)"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.Entities.html",
    "title": "Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Entities | Nitrox",
    "keywords": "Namespace NitroxModel_Subnautica.DataStructures.GameLogic.Entities Classes SubnauticaUwePrefabFactory SubnauticaUweWorldEntityFactory"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.ExosuitMovementData.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.ExosuitMovementData.-ctor.html",
    "title": "Constructor ExosuitMovementData | Nitrox",
    "keywords": "Constructor ExosuitMovementData Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll ExosuitMovementData() [IgnoreConstructor] protected ExosuitMovementData() ExosuitMovementData(NitroxTechType, NitroxId, NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxVector3, float, float, bool, NitroxVector3, NitroxVector3, NitroxVector3?) public ExosuitMovementData(NitroxTechType techType, NitroxId id, NitroxVector3 position, NitroxQuaternion rotation, NitroxVector3 velocity, NitroxVector3 angularVelocity, float steeringWheelYaw, float steeringWheelPitch, bool appliedThrottle, NitroxVector3 leftAimTarget, NitroxVector3 rightAimTarget, NitroxVector3? driverPosition = null) Parameters techType NitroxTechType id NitroxId position NitroxVector3 rotation NitroxQuaternion velocity NitroxVector3 angularVelocity NitroxVector3 steeringWheelYaw float steeringWheelPitch float appliedThrottle bool leftAimTarget NitroxVector3 rightAimTarget NitroxVector3 driverPosition NitroxVector3?"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.ExosuitMovementData.LeftAimTarget.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.ExosuitMovementData.LeftAimTarget.html",
    "title": "Property LeftAimTarget | Nitrox",
    "keywords": "Property LeftAimTarget Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll LeftAimTarget [DataMember(Order = 1)] public NitroxVector3 LeftAimTarget { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.ExosuitMovementData.RightAimTarget.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.ExosuitMovementData.RightAimTarget.html",
    "title": "Property RightAimTarget | Nitrox",
    "keywords": "Property RightAimTarget Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll RightAimTarget [DataMember(Order = 2)] public NitroxVector3 RightAimTarget { get; } Property Value NitroxVector3"
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.ExosuitMovementData.ToString.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.ExosuitMovementData.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.ExosuitMovementData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.ExosuitMovementData.html",
    "title": "Class ExosuitMovementData | Nitrox",
    "keywords": "Class ExosuitMovementData Namespace NitroxModel_Subnautica.DataStructures.GameLogic Assembly NitroxModel-Subnautica.dll [Serializable] [DataContract] public class ExosuitMovementData : VehicleMovementData Inheritance object VehicleMovementData ExosuitMovementData Inherited Members VehicleMovementData.TechType VehicleMovementData.Id VehicleMovementData.Position VehicleMovementData.Rotation VehicleMovementData.Velocity VehicleMovementData.AngularVelocity VehicleMovementData.SteeringWheelYaw VehicleMovementData.SteeringWheelPitch VehicleMovementData.AppliedThrottle VehicleMovementData.DriverPosition object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ExosuitMovementData() ExosuitMovementData(NitroxTechType, NitroxId, NitroxVector3, NitroxQuaternion, NitroxVector3, NitroxVector3, float, float, bool, NitroxVector3, NitroxVector3, NitroxVector3?) Properties LeftAimTarget RightAimTarget Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel_Subnautica.DataStructures.GameLogic.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.GameLogic.html",
    "title": "Namespace NitroxModel_Subnautica.DataStructures.GameLogic | Nitrox",
    "keywords": "Namespace NitroxModel_Subnautica.DataStructures.GameLogic Namespaces NitroxModel_Subnautica.DataStructures.GameLogic.Creatures.Actions NitroxModel_Subnautica.DataStructures.GameLogic.Entities Classes CyclopsDamageInfoData CyclopsFireData ExosuitMovementData"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.ColorSurrogate.GetObjectData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.ColorSurrogate.GetObjectData.html",
    "title": "Method GetObjectData | Nitrox",
    "keywords": "Method GetObjectData Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll GetObjectData(Color, SerializationInfo) protected override void GetObjectData(Color color, SerializationInfo info) Parameters color Color info SerializationInfo"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.ColorSurrogate.SetObjectData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.ColorSurrogate.SetObjectData.html",
    "title": "Method SetObjectData | Nitrox",
    "keywords": "Method SetObjectData Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll SetObjectData(Color, SerializationInfo) protected override Color SetObjectData(Color color, SerializationInfo info) Parameters color Color info SerializationInfo Returns Color"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.ColorSurrogate.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.ColorSurrogate.html",
    "title": "Class ColorSurrogate | Nitrox",
    "keywords": "Class ColorSurrogate Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll public class ColorSurrogate : SerializationSurrogate<Color>, ISerializationSurrogate Inheritance object SerializationSurrogate<Color> ColorSurrogate Implements ISerializationSurrogate Inherited Members SerializationSurrogate<Color>.GetObjectData(object, SerializationInfo, StreamingContext) SerializationSurrogate<Color>.SetObjectData(object, SerializationInfo, StreamingContext, ISurrogateSelector) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetObjectData(Color, SerializationInfo) SetObjectData(Color, SerializationInfo)"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.GetObjectData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.GetObjectData.html",
    "title": "Method GetObjectData | Nitrox",
    "keywords": "Method GetObjectData Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll GetObjectData(Quaternion, SerializationInfo) protected override void GetObjectData(Quaternion quaternion, SerializationInfo info) Parameters quaternion Quaternion info SerializationInfo"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.SetObjectData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.SetObjectData.html",
    "title": "Method SetObjectData | Nitrox",
    "keywords": "Method SetObjectData Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll SetObjectData(Quaternion, SerializationInfo) protected override Quaternion SetObjectData(Quaternion quaternion, SerializationInfo info) Parameters quaternion Quaternion info SerializationInfo Returns Quaternion"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.W.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.W.html",
    "title": "Property W | Nitrox",
    "keywords": "Property W Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll W [DataMember(Order = 4)] public float W { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.X.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.X.html",
    "title": "Property X | Nitrox",
    "keywords": "Property X Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll X [DataMember(Order = 1)] public float X { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.Y.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.Y.html",
    "title": "Property Y | Nitrox",
    "keywords": "Property Y Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll Y [DataMember(Order = 2)] public float Y { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.Z.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.Z.html",
    "title": "Property Z | Nitrox",
    "keywords": "Property Z Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll Z [DataMember(Order = 3)] public float Z { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.html",
    "title": "Class QuaternionSurrogate | Nitrox",
    "keywords": "Class QuaternionSurrogate Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll [DataContract] public class QuaternionSurrogate : SerializationSurrogate<Quaternion>, ISerializationSurrogate Inheritance object SerializationSurrogate<Quaternion> QuaternionSurrogate Implements ISerializationSurrogate Inherited Members SerializationSurrogate<Quaternion>.GetObjectData(object, SerializationInfo, StreamingContext) SerializationSurrogate<Quaternion>.SetObjectData(object, SerializationInfo, StreamingContext, ISurrogateSelector) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties W X Y Z Methods GetObjectData(Quaternion, SerializationInfo) SetObjectData(Quaternion, SerializationInfo) Operators implicit operator QuaternionSurrogate(NitroxQuaternion) implicit operator NitroxQuaternion(QuaternionSurrogate) implicit operator Quaternion(QuaternionSurrogate) implicit operator QuaternionSurrogate(Quaternion)"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.op_Implicit.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.QuaternionSurrogate.op_Implicit.html",
    "title": "Operator implicit operator | Nitrox",
    "keywords": "Operator implicit operator Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll implicit operator QuaternionSurrogate(Quaternion) public static implicit operator QuaternionSurrogate(Quaternion v) Parameters v Quaternion Returns QuaternionSurrogate implicit operator Quaternion(QuaternionSurrogate) public static implicit operator Quaternion(QuaternionSurrogate surrogate) Parameters surrogate QuaternionSurrogate Returns Quaternion implicit operator QuaternionSurrogate(NitroxQuaternion) public static implicit operator QuaternionSurrogate(NitroxQuaternion v) Parameters v NitroxQuaternion Returns QuaternionSurrogate implicit operator NitroxQuaternion(QuaternionSurrogate) public static implicit operator NitroxQuaternion(QuaternionSurrogate surrogate) Parameters surrogate QuaternionSurrogate Returns NitroxQuaternion"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.TechTypeSurrogate.GetObjectData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.TechTypeSurrogate.GetObjectData.html",
    "title": "Method GetObjectData | Nitrox",
    "keywords": "Method GetObjectData Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll GetObjectData(NitroxTechType, SerializationInfo) protected override void GetObjectData(NitroxTechType techType, SerializationInfo info) Parameters techType NitroxTechType info SerializationInfo"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.TechTypeSurrogate.SetObjectData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.TechTypeSurrogate.SetObjectData.html",
    "title": "Method SetObjectData | Nitrox",
    "keywords": "Method SetObjectData Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll SetObjectData(NitroxTechType, SerializationInfo) protected override NitroxTechType SetObjectData(NitroxTechType techType, SerializationInfo info) Parameters techType NitroxTechType info SerializationInfo Returns NitroxTechType"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.TechTypeSurrogate.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.TechTypeSurrogate.html",
    "title": "Class TechTypeSurrogate | Nitrox",
    "keywords": "Class TechTypeSurrogate Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll public class TechTypeSurrogate : SerializationSurrogate<NitroxTechType>, ISerializationSurrogate Inheritance object SerializationSurrogate<NitroxTechType> TechTypeSurrogate Implements ISerializationSurrogate Inherited Members SerializationSurrogate<NitroxTechType>.GetObjectData(object, SerializationInfo, StreamingContext) SerializationSurrogate<NitroxTechType>.SetObjectData(object, SerializationInfo, StreamingContext, ISurrogateSelector) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetObjectData(NitroxTechType, SerializationInfo) SetObjectData(NitroxTechType, SerializationInfo)"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.GetObjectData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.GetObjectData.html",
    "title": "Method GetObjectData | Nitrox",
    "keywords": "Method GetObjectData Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll GetObjectData(Vector3, SerializationInfo) protected override void GetObjectData(Vector3 vector3, SerializationInfo info) Parameters vector3 Vector3 info SerializationInfo"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.SetObjectData.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.SetObjectData.html",
    "title": "Method SetObjectData | Nitrox",
    "keywords": "Method SetObjectData Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll SetObjectData(Vector3, SerializationInfo) protected override Vector3 SetObjectData(Vector3 vector3, SerializationInfo info) Parameters vector3 Vector3 info SerializationInfo Returns Vector3"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.X.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.X.html",
    "title": "Property X | Nitrox",
    "keywords": "Property X Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll X [DataMember(Order = 1)] public float X { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.Y.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.Y.html",
    "title": "Property Y | Nitrox",
    "keywords": "Property Y Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll Y [DataMember(Order = 2)] public float Y { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.Z.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.Z.html",
    "title": "Property Z | Nitrox",
    "keywords": "Property Z Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll Z [DataMember(Order = 3)] public float Z { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.html",
    "title": "Class Vector3Surrogate | Nitrox",
    "keywords": "Class Vector3Surrogate Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll [DataContract] public class Vector3Surrogate : SerializationSurrogate<Vector3>, ISerializationSurrogate Inheritance object SerializationSurrogate<Vector3> Vector3Surrogate Implements ISerializationSurrogate Inherited Members SerializationSurrogate<Vector3>.GetObjectData(object, SerializationInfo, StreamingContext) SerializationSurrogate<Vector3>.SetObjectData(object, SerializationInfo, StreamingContext, ISurrogateSelector) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties X Y Z Methods GetObjectData(Vector3, SerializationInfo) SetObjectData(Vector3, SerializationInfo) Operators implicit operator Vector3Surrogate(NitroxVector3) implicit operator NitroxVector3(Vector3Surrogate) implicit operator Vector3(Vector3Surrogate) implicit operator Vector3Surrogate(Vector3)"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.op_Implicit.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.Vector3Surrogate.op_Implicit.html",
    "title": "Operator implicit operator | Nitrox",
    "keywords": "Operator implicit operator Namespace NitroxModel_Subnautica.DataStructures.Surrogates Assembly NitroxModel-Subnautica.dll implicit operator Vector3Surrogate(NitroxVector3) public static implicit operator Vector3Surrogate(NitroxVector3 v) Parameters v NitroxVector3 Returns Vector3Surrogate implicit operator NitroxVector3(Vector3Surrogate) public static implicit operator NitroxVector3(Vector3Surrogate surrogate) Parameters surrogate Vector3Surrogate Returns NitroxVector3 implicit operator Vector3Surrogate(Vector3) public static implicit operator Vector3Surrogate(Vector3 v) Parameters v Vector3 Returns Vector3Surrogate implicit operator Vector3(Vector3Surrogate) public static implicit operator Vector3(Vector3Surrogate surrogate) Parameters surrogate Vector3Surrogate Returns Vector3"
  },
  "api/NitroxModel_Subnautica.DataStructures.Surrogates.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.Surrogates.html",
    "title": "Namespace NitroxModel_Subnautica.DataStructures.Surrogates | Nitrox",
    "keywords": "Namespace NitroxModel_Subnautica.DataStructures.Surrogates Classes ColorSurrogate QuaternionSurrogate TechTypeSurrogate Vector3Surrogate"
  },
  "api/NitroxModel_Subnautica.DataStructures.html": {
    "href": "api/NitroxModel_Subnautica.DataStructures.html",
    "title": "Namespace NitroxModel_Subnautica.DataStructures | Nitrox",
    "keywords": "Namespace NitroxModel_Subnautica.DataStructures Namespaces NitroxModel_Subnautica.DataStructures.GameLogic NitroxModel_Subnautica.DataStructures.Surrogates Classes DataExtensions Contains extension methods for converting Unity types to Nitrox types and vice versa. This is necessary to allow the server to work without a dependency on game models while still being able to represent game models."
  },
  "api/NitroxModel_Subnautica.Helper.SubnauticaMap.BatchDimensionCenter.html": {
    "href": "api/NitroxModel_Subnautica.Helper.SubnauticaMap.BatchDimensionCenter.html",
    "title": "Property BatchDimensionCenter | Nitrox",
    "keywords": "Property BatchDimensionCenter Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll BatchDimensionCenter public NitroxInt3 BatchDimensionCenter { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel_Subnautica.Helper.SubnauticaMap.BatchDimensions.html": {
    "href": "api/NitroxModel_Subnautica.Helper.SubnauticaMap.BatchDimensions.html",
    "title": "Property BatchDimensions | Nitrox",
    "keywords": "Property BatchDimensions Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll BatchDimensions public NitroxInt3 BatchDimensions { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel_Subnautica.Helper.SubnauticaMap.BatchSize.html": {
    "href": "api/NitroxModel_Subnautica.Helper.SubnauticaMap.BatchSize.html",
    "title": "Property BatchSize | Nitrox",
    "keywords": "Property BatchSize Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll BatchSize public int BatchSize { get; } Property Value int"
  },
  "api/NitroxModel_Subnautica.Helper.SubnauticaMap.DimensionsInBatches.html": {
    "href": "api/NitroxModel_Subnautica.Helper.SubnauticaMap.DimensionsInBatches.html",
    "title": "Property DimensionsInBatches | Nitrox",
    "keywords": "Property DimensionsInBatches Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll DimensionsInBatches public NitroxInt3 DimensionsInBatches { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel_Subnautica.Helper.SubnauticaMap.DimensionsInMeters.html": {
    "href": "api/NitroxModel_Subnautica.Helper.SubnauticaMap.DimensionsInMeters.html",
    "title": "Property DimensionsInMeters | Nitrox",
    "keywords": "Property DimensionsInMeters Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll DimensionsInMeters public NitroxInt3 DimensionsInMeters { get; } Property Value NitroxInt3"
  },
  "api/NitroxModel_Subnautica.Helper.SubnauticaMap.GLOBAL_ROOT_TECH_TYPES.html": {
    "href": "api/NitroxModel_Subnautica.Helper.SubnauticaMap.GLOBAL_ROOT_TECH_TYPES.html",
    "title": "Field GLOBAL_ROOT_TECH_TYPES | Nitrox",
    "keywords": "Field GLOBAL_ROOT_TECH_TYPES Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll TechType can't be introspected at runtime in RELEASE mode because its reflection info is elided. public static readonly List<NitroxTechType> GLOBAL_ROOT_TECH_TYPES Returns List<NitroxTechType>"
  },
  "api/NitroxModel_Subnautica.Helper.SubnauticaMap.GlobalRootTechTypes.html": {
    "href": "api/NitroxModel_Subnautica.Helper.SubnauticaMap.GlobalRootTechTypes.html",
    "title": "Property GlobalRootTechTypes | Nitrox",
    "keywords": "Property GlobalRootTechTypes Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll GlobalRootTechTypes public List<NitroxTechType> GlobalRootTechTypes { get; } Property Value List<NitroxTechType>"
  },
  "api/NitroxModel_Subnautica.Helper.SubnauticaMap.ItemLevelOfDetail.html": {
    "href": "api/NitroxModel_Subnautica.Helper.SubnauticaMap.ItemLevelOfDetail.html",
    "title": "Property ItemLevelOfDetail | Nitrox",
    "keywords": "Property ItemLevelOfDetail Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll ItemLevelOfDetail public int ItemLevelOfDetail { get; } Property Value int"
  },
  "api/NitroxModel_Subnautica.Helper.SubnauticaMap.html": {
    "href": "api/NitroxModel_Subnautica.Helper.SubnauticaMap.html",
    "title": "Class SubnauticaMap | Nitrox",
    "keywords": "Class SubnauticaMap Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll Static information about the game world loaded by Subnautica that isn't (and shouldn't) be retrievable from the game directly. public class SubnauticaMap : IMap Inheritance object SubnauticaMap Implements IMap Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields GLOBAL_ROOT_TECH_TYPES TechType can't be introspected at runtime in RELEASE mode because its reflection info is elided. Properties BatchDimensionCenter BatchDimensions BatchSize DimensionsInBatches DimensionsInMeters GlobalRootTechTypes ItemLevelOfDetail"
  },
  "api/NitroxModel_Subnautica.Helper.TextureScaler.Scale.html": {
    "href": "api/NitroxModel_Subnautica.Helper.TextureScaler.Scale.html",
    "title": "Method Scale | Nitrox",
    "keywords": "Method Scale Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll Scale(Texture2D, int, int, FilterMode) public static void Scale(Texture2D tex, int width, int height, FilterMode mode = FilterMode.Trilinear) Parameters tex Texture2D width int height int mode FilterMode"
  },
  "api/NitroxModel_Subnautica.Helper.TextureScaler.html": {
    "href": "api/NitroxModel_Subnautica.Helper.TextureScaler.html",
    "title": "Class TextureScaler | Nitrox",
    "keywords": "Class TextureScaler Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll public static class TextureScaler Inheritance object TextureScaler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Scale(Texture2D, int, int, FilterMode)"
  },
  "api/NitroxModel_Subnautica.Helper.VehicleHelper.GetDefaultColours.html": {
    "href": "api/NitroxModel_Subnautica.Helper.VehicleHelper.GetDefaultColours.html",
    "title": "Method GetDefaultColours | Nitrox",
    "keywords": "Method GetDefaultColours Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll GetDefaultColours(TechType) public static NitroxVector3[] GetDefaultColours(TechType techType) Parameters techType TechType Returns NitroxVector3[]"
  },
  "api/NitroxModel_Subnautica.Helper.VehicleHelper.GetPrimalDefaultColours.html": {
    "href": "api/NitroxModel_Subnautica.Helper.VehicleHelper.GetPrimalDefaultColours.html",
    "title": "Method GetPrimalDefaultColours | Nitrox",
    "keywords": "Method GetPrimalDefaultColours Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll GetPrimalDefaultColours() public static NitroxVector3[] GetPrimalDefaultColours() Returns NitroxVector3[]"
  },
  "api/NitroxModel_Subnautica.Helper.VehicleHelper.IsVehicle.html": {
    "href": "api/NitroxModel_Subnautica.Helper.VehicleHelper.IsVehicle.html",
    "title": "Method IsVehicle | Nitrox",
    "keywords": "Method IsVehicle Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll IsVehicle(TechType) public static bool IsVehicle(TechType techtype) Parameters techtype TechType Returns bool"
  },
  "api/NitroxModel_Subnautica.Helper.VehicleHelper.html": {
    "href": "api/NitroxModel_Subnautica.Helper.VehicleHelper.html",
    "title": "Class VehicleHelper | Nitrox",
    "keywords": "Class VehicleHelper Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll public static class VehicleHelper Inheritance object VehicleHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetDefaultColours(TechType) GetPrimalDefaultColours() IsVehicle(TechType)"
  },
  "api/NitroxModel_Subnautica.Helper.VehicleMovementFactory.GetVehicleMovementData.html": {
    "href": "api/NitroxModel_Subnautica.Helper.VehicleMovementFactory.GetVehicleMovementData.html",
    "title": "Method GetVehicleMovementData | Nitrox",
    "keywords": "Method GetVehicleMovementData Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll GetVehicleMovementData(TechType, NitroxId, Vector3, Quaternion, Vector3, Vector3, float, float, bool, Vector3, Vector3) public static VehicleMovementData GetVehicleMovementData(TechType techType, NitroxId id, Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity, float steeringWheelYaw, float steeringWheelPitch, bool appliedThrottle, Vector3 leftAimTarget, Vector3 rightAimTarget) Parameters techType TechType id NitroxId position Vector3 rotation Quaternion velocity Vector3 angularVelocity Vector3 steeringWheelYaw float steeringWheelPitch float appliedThrottle bool leftAimTarget Vector3 rightAimTarget Vector3 Returns VehicleMovementData"
  },
  "api/NitroxModel_Subnautica.Helper.VehicleMovementFactory.html": {
    "href": "api/NitroxModel_Subnautica.Helper.VehicleMovementFactory.html",
    "title": "Class VehicleMovementFactory | Nitrox",
    "keywords": "Class VehicleMovementFactory Namespace NitroxModel_Subnautica.Helper Assembly NitroxModel-Subnautica.dll public static class VehicleMovementFactory Inheritance object VehicleMovementFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetVehicleMovementData(TechType, NitroxId, Vector3, Quaternion, Vector3, Vector3, float, float, bool, Vector3, Vector3)"
  },
  "api/NitroxModel_Subnautica.Helper.html": {
    "href": "api/NitroxModel_Subnautica.Helper.html",
    "title": "Namespace NitroxModel_Subnautica.Helper | Nitrox",
    "keywords": "Namespace NitroxModel_Subnautica.Helper Classes SubnauticaMap Static information about the game world loaded by Subnautica that isn't (and shouldn't) be retrievable from the game directly. TextureScaler VehicleHelper VehicleMovementFactory"
  },
  "api/NitroxModel_Subnautica.Logger.SubnauticaInGameLogger.Log.html": {
    "href": "api/NitroxModel_Subnautica.Logger.SubnauticaInGameLogger.Log.html",
    "title": "Method Log | Nitrox",
    "keywords": "Method Log Namespace NitroxModel_Subnautica.Logger Assembly NitroxModel-Subnautica.dll Log(object) public void Log(object message) Parameters message object Log(string) public void Log(string message) Parameters message string"
  },
  "api/NitroxModel_Subnautica.Logger.SubnauticaInGameLogger.html": {
    "href": "api/NitroxModel_Subnautica.Logger.SubnauticaInGameLogger.html",
    "title": "Class SubnauticaInGameLogger | Nitrox",
    "keywords": "Class SubnauticaInGameLogger Namespace NitroxModel_Subnautica.Logger Assembly NitroxModel-Subnautica.dll Log handler for logging and showing information to the player. The log is also written to the log file. public class SubnauticaInGameLogger : InGameLogger Inheritance object SubnauticaInGameLogger Implements InGameLogger Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Log(object) Log(string)"
  },
  "api/NitroxModel_Subnautica.Logger.html": {
    "href": "api/NitroxModel_Subnautica.Logger.html",
    "title": "Namespace NitroxModel_Subnautica.Logger | Nitrox",
    "keywords": "Namespace NitroxModel_Subnautica.Logger Classes SubnauticaInGameLogger Log handler for logging and showing information to the player. The log is also written to the log file."
  },
  "api/NitroxModel_Subnautica.Packets.CreatureActionChanged.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CreatureActionChanged.-ctor.html",
    "title": "Constructor CreatureActionChanged | Nitrox",
    "keywords": "Constructor CreatureActionChanged Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll CreatureActionChanged(NitroxId, SerializableCreatureAction) public CreatureActionChanged(NitroxId id, SerializableCreatureAction newAction) Parameters id NitroxId newAction SerializableCreatureAction"
  },
  "api/NitroxModel_Subnautica.Packets.CreatureActionChanged.Id.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CreatureActionChanged.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.CreatureActionChanged.NewAction.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CreatureActionChanged.NewAction.html",
    "title": "Property NewAction | Nitrox",
    "keywords": "Property NewAction Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll NewAction public SerializableCreatureAction NewAction { get; } Property Value SerializableCreatureAction"
  },
  "api/NitroxModel_Subnautica.Packets.CreatureActionChanged.ToString.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CreatureActionChanged.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CreatureActionChanged.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CreatureActionChanged.html",
    "title": "Class CreatureActionChanged | Nitrox",
    "keywords": "Class CreatureActionChanged Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll [Serializable] public class CreatureActionChanged : Packet Inheritance object Packet CreatureActionChanged Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CreatureActionChanged(NitroxId, SerializableCreatureAction) Properties Id NewAction Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamage.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamage.-ctor.html",
    "title": "Constructor CyclopsDamage | Nitrox",
    "keywords": "Constructor CyclopsDamage Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll CyclopsDamage(NitroxId, float, float, float, int[], CyclopsFireData[], CyclopsDamageInfoData) public CyclopsDamage(NitroxId id, float subHealth, float damageManagerHealth, float subFireHealth, int[] damagePointIndexes, CyclopsFireData[] roomFires, CyclopsDamageInfoData damageInfo = null) Parameters id NitroxId SubRoot Id. subHealth float SubRoot.liveMixin.health. damageManagerHealth float CyclopsExternalDamageManager.subLiveMixin.health. subFireHealth float SubFire.liveMixin.health. damagePointIndexes int[] CyclopsExternalDamageManager.damagePoints where GameObject.activeSelf. Null if only a Cyclops health change. roomFires CyclopsFireData[] SubFire.RoomFire.spawnNodes where Transform.childCount > 0. Null if only a Cyclops health change. damageInfo CyclopsDamageInfoData Null if a repair or extinguish."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamage.DamageInfo.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamage.DamageInfo.html",
    "title": "Property DamageInfo | Nitrox",
    "keywords": "Property DamageInfo Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll DamageInfo public CyclopsDamageInfoData DamageInfo { get; } Property Value CyclopsDamageInfoData"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamage.DamageManagerHealth.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamage.DamageManagerHealth.html",
    "title": "Property DamageManagerHealth | Nitrox",
    "keywords": "Property DamageManagerHealth Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll DamageManagerHealth public float DamageManagerHealth { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamage.DamagePointIndexes.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamage.DamagePointIndexes.html",
    "title": "Property DamagePointIndexes | Nitrox",
    "keywords": "Property DamagePointIndexes Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll DamagePointIndexes public int[] DamagePointIndexes { get; } Property Value int[]"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamage.Id.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamage.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamage.RoomFires.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamage.RoomFires.html",
    "title": "Property RoomFires | Nitrox",
    "keywords": "Property RoomFires Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll RoomFires public CyclopsFireData[] RoomFires { get; } Property Value CyclopsFireData[]"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamage.SubFireHealth.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamage.SubFireHealth.html",
    "title": "Property SubFireHealth | Nitrox",
    "keywords": "Property SubFireHealth Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll SubFireHealth public float SubFireHealth { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamage.SubHealth.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamage.SubHealth.html",
    "title": "Property SubHealth | Nitrox",
    "keywords": "Property SubHealth Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll SubHealth public float SubHealth { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamage.ToString.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamage.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamage.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamage.html",
    "title": "Class CyclopsDamage | Nitrox",
    "keywords": "Class CyclopsDamage Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll A state update packet for the Cyclops that could be sent due to a CyclopsDamagePoint create/repair, SubFire create/extinguish, or a general Cyclops health change. A health change to 0 means the Cyclops has been destroyed. [Serializable] public class CyclopsDamage : Packet Inheritance object Packet CyclopsDamage Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsDamage(NitroxId, float, float, float, int[], CyclopsFireData[], CyclopsDamageInfoData) Properties DamageInfo DamageManagerHealth DamagePointIndexes Id RoomFires SubFireHealth SubHealth Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.-ctor.html",
    "title": "Constructor CyclopsDamagePointRepaired | Nitrox",
    "keywords": "Constructor CyclopsDamagePointRepaired Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll CyclopsDamagePointRepaired(NitroxId, int, float) public CyclopsDamagePointRepaired(NitroxId id, int damagePointIndex, float repairAmount) Parameters id NitroxId The Cyclops id damagePointIndex int repairAmount float The amount to repair the damage by. A large repair amount is passed if the point is meant to be fully repaired"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.DamagePointIndex.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.DamagePointIndex.html",
    "title": "Property DamagePointIndex | Nitrox",
    "keywords": "Property DamagePointIndex Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll DamagePointIndex public int DamagePointIndex { get; } Property Value int"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.Id.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.RepairAmount.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.RepairAmount.html",
    "title": "Property RepairAmount | Nitrox",
    "keywords": "Property RepairAmount Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll RepairAmount public float RepairAmount { get; } Property Value float"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.ToString.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDamagePointRepaired.html",
    "title": "Class CyclopsDamagePointRepaired | Nitrox",
    "keywords": "Class CyclopsDamagePointRepaired Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll [Serializable] public class CyclopsDamagePointRepaired : Packet Inheritance object Packet CyclopsDamagePointRepaired Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsDamagePointRepaired(NitroxId, int, float) Properties DamagePointIndex Id RepairAmount Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDecoyLaunch.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDecoyLaunch.-ctor.html",
    "title": "Constructor CyclopsDecoyLaunch | Nitrox",
    "keywords": "Constructor CyclopsDecoyLaunch Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll CyclopsDecoyLaunch(NitroxId) public CyclopsDecoyLaunch(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDecoyLaunch.Id.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDecoyLaunch.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDecoyLaunch.ToString.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDecoyLaunch.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsDecoyLaunch.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsDecoyLaunch.html",
    "title": "Class CyclopsDecoyLaunch | Nitrox",
    "keywords": "Class CyclopsDecoyLaunch Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll [Serializable] public class CyclopsDecoyLaunch : Packet Inheritance object Packet CyclopsDecoyLaunch Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsDecoyLaunch(NitroxId) Properties Id Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsFireCreated.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsFireCreated.-ctor.html",
    "title": "Constructor CyclopsFireCreated | Nitrox",
    "keywords": "Constructor CyclopsFireCreated Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll CyclopsFireCreated(NitroxId, NitroxId, CyclopsRooms, int) public CyclopsFireCreated(NitroxId id, NitroxId cyclopsId, CyclopsRooms room, int nodeIndex) Parameters id NitroxId cyclopsId NitroxId room CyclopsRooms nodeIndex int CyclopsFireCreated(CyclopsFireData) public CyclopsFireCreated(CyclopsFireData fireCreatedData) Parameters fireCreatedData CyclopsFireData Remarks Used for deserialization"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsFireCreated.FireCreatedData.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsFireCreated.FireCreatedData.html",
    "title": "Property FireCreatedData | Nitrox",
    "keywords": "Property FireCreatedData Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll FireCreatedData public CyclopsFireData FireCreatedData { get; } Property Value CyclopsFireData"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsFireCreated.ToString.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsFireCreated.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsFireCreated.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsFireCreated.html",
    "title": "Class CyclopsFireCreated | Nitrox",
    "keywords": "Class CyclopsFireCreated Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll Triggered when a fire has been created in SubFire.CreateFire(SubFire.RoomFire) [Serializable] public class CyclopsFireCreated : Packet Inheritance object Packet CyclopsFireCreated Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsFireCreated(NitroxId, NitroxId, CyclopsRooms, int) CyclopsFireCreated(CyclopsFireData) Properties FireCreatedData Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsFireSuppression.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsFireSuppression.-ctor.html",
    "title": "Constructor CyclopsFireSuppression | Nitrox",
    "keywords": "Constructor CyclopsFireSuppression Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll CyclopsFireSuppression(NitroxId) public CyclopsFireSuppression(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsFireSuppression.Id.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsFireSuppression.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll Id public NitroxId Id { get; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsFireSuppression.ToString.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsFireSuppression.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.CyclopsFireSuppression.html": {
    "href": "api/NitroxModel_Subnautica.Packets.CyclopsFireSuppression.html",
    "title": "Class CyclopsFireSuppression | Nitrox",
    "keywords": "Class CyclopsFireSuppression Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll [Serializable] public class CyclopsFireSuppression : Packet Inheritance object Packet CyclopsFireSuppression Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsFireSuppression(NitroxId) Properties Id Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.ExosuitArmAction.html": {
    "href": "api/NitroxModel_Subnautica.Packets.ExosuitArmAction.html",
    "title": "Enum ExosuitArmAction | Nitrox",
    "keywords": "Enum ExosuitArmAction Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll public enum ExosuitArmAction Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields ALT_HIT = 2 END_USE_TOOL = 1 START_USE_TOOL = 0"
  },
  "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.-ctor.html",
    "title": "Constructor ExosuitArmActionPacket | Nitrox",
    "keywords": "Constructor ExosuitArmActionPacket Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll ExosuitArmActionPacket(TechType, NitroxId, ExosuitArmAction, NitroxVector3?, NitroxQuaternion?) public ExosuitArmActionPacket(TechType techType, NitroxId armId, ExosuitArmAction armAction, NitroxVector3? opVector, NitroxQuaternion? opRotation) Parameters techType TechType armId NitroxId armAction ExosuitArmAction opVector NitroxVector3? opRotation NitroxQuaternion?"
  },
  "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.ArmAction.html": {
    "href": "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.ArmAction.html",
    "title": "Property ArmAction | Nitrox",
    "keywords": "Property ArmAction Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll ArmAction public ExosuitArmAction ArmAction { get; } Property Value ExosuitArmAction"
  },
  "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.ArmId.html": {
    "href": "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.ArmId.html",
    "title": "Property ArmId | Nitrox",
    "keywords": "Property ArmId Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll ArmId public NitroxId ArmId { get; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.OpRotation.html": {
    "href": "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.OpRotation.html",
    "title": "Property OpRotation | Nitrox",
    "keywords": "Property OpRotation Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll OpRotation public NitroxQuaternion? OpRotation { get; } Property Value NitroxQuaternion?"
  },
  "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.OpVector.html": {
    "href": "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.OpVector.html",
    "title": "Property OpVector | Nitrox",
    "keywords": "Property OpVector Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll OpVector public NitroxVector3? OpVector { get; } Property Value NitroxVector3?"
  },
  "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.TechType.html": {
    "href": "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll TechType public TechType TechType { get; } Property Value TechType"
  },
  "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.ToString.html": {
    "href": "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.html": {
    "href": "api/NitroxModel_Subnautica.Packets.ExosuitArmActionPacket.html",
    "title": "Class ExosuitArmActionPacket | Nitrox",
    "keywords": "Class ExosuitArmActionPacket Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll [Serializable] public class ExosuitArmActionPacket : Packet Inheritance object Packet ExosuitArmActionPacket Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ExosuitArmActionPacket(TechType, NitroxId, ExosuitArmAction, NitroxVector3?, NitroxQuaternion?) Properties ArmAction ArmId OpRotation OpVector TechType Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxModel_Subnautica.Packets.RocketLaunch.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.Packets.RocketLaunch.-ctor.html",
    "title": "Constructor RocketLaunch | Nitrox",
    "keywords": "Constructor RocketLaunch Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll RocketLaunch(NitroxId) public RocketLaunch(NitroxId rocketId) Parameters rocketId NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.RocketLaunch.RocketId.html": {
    "href": "api/NitroxModel_Subnautica.Packets.RocketLaunch.RocketId.html",
    "title": "Property RocketId | Nitrox",
    "keywords": "Property RocketId Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll RocketId public NitroxId RocketId { get; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.RocketLaunch.html": {
    "href": "api/NitroxModel_Subnautica.Packets.RocketLaunch.html",
    "title": "Class RocketLaunch | Nitrox",
    "keywords": "Class RocketLaunch Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll [Serializable] public class RocketLaunch : Packet Inheritance object Packet RocketLaunch Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RocketLaunch(NitroxId) Properties RocketId"
  },
  "api/NitroxModel_Subnautica.Packets.RocketResync.-ctor.html": {
    "href": "api/NitroxModel_Subnautica.Packets.RocketResync.-ctor.html",
    "title": "Constructor RocketResync | Nitrox",
    "keywords": "Constructor RocketResync Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll RocketResync(NitroxId, List<PreflightCheck>) public RocketResync(NitroxId rocketId, List<PreflightCheck> preflightChecks) Parameters rocketId NitroxId preflightChecks List<PreflightCheck>"
  },
  "api/NitroxModel_Subnautica.Packets.RocketResync.PreflightChecks.html": {
    "href": "api/NitroxModel_Subnautica.Packets.RocketResync.PreflightChecks.html",
    "title": "Property PreflightChecks | Nitrox",
    "keywords": "Property PreflightChecks Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll PreflightChecks public List<PreflightCheck> PreflightChecks { get; } Property Value List<PreflightCheck>"
  },
  "api/NitroxModel_Subnautica.Packets.RocketResync.RocketId.html": {
    "href": "api/NitroxModel_Subnautica.Packets.RocketResync.RocketId.html",
    "title": "Property RocketId | Nitrox",
    "keywords": "Property RocketId Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll RocketId public NitroxId RocketId { get; } Property Value NitroxId"
  },
  "api/NitroxModel_Subnautica.Packets.RocketResync.html": {
    "href": "api/NitroxModel_Subnautica.Packets.RocketResync.html",
    "title": "Class RocketResync | Nitrox",
    "keywords": "Class RocketResync Namespace NitroxModel_Subnautica.Packets Assembly NitroxModel-Subnautica.dll [Serializable] public class RocketResync : Packet Inheritance object Packet RocketResync Inherited Members Packet.InitSerializer() Packet.DeliveryMethod Packet.UdpChannel Packet.Serialize() Packet.Deserialize(byte[]) Packet.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RocketResync(NitroxId, List<PreflightCheck>) Properties PreflightChecks RocketId"
  },
  "api/NitroxModel_Subnautica.Packets.html": {
    "href": "api/NitroxModel_Subnautica.Packets.html",
    "title": "Namespace NitroxModel_Subnautica.Packets | Nitrox",
    "keywords": "Namespace NitroxModel_Subnautica.Packets Classes CreatureActionChanged CyclopsDamage A state update packet for the Cyclops that could be sent due to a CyclopsDamagePoint create/repair, SubFire create/extinguish, or a general Cyclops health change. A health change to 0 means the Cyclops has been destroyed. CyclopsDamagePointRepaired CyclopsDecoyLaunch CyclopsFireCreated Triggered when a fire has been created in SubFire.CreateFire(SubFire.RoomFire) CyclopsFireSuppression ExosuitArmActionPacket RocketLaunch RocketResync Enums ExosuitArmAction"
  },
  "api/NitroxModel_Subnautica.html": {
    "href": "api/NitroxModel_Subnautica.html",
    "title": "Namespace NitroxModel_Subnautica | Nitrox",
    "keywords": "Namespace NitroxModel_Subnautica Namespaces NitroxModel_Subnautica.DataStructures NitroxModel_Subnautica.Helper NitroxModel_Subnautica.Logger NitroxModel_Subnautica.Packets"
  },
  "api/NitroxPatcher.Main.Execute.html": {
    "href": "api/NitroxPatcher.Main.Execute.html",
    "title": "Method Execute | Nitrox",
    "keywords": "Method Execute Namespace NitroxPatcher Assembly NitroxPatcher.dll Execute() Entrypoint of Nitrox. Code in this method cannot use other dependencies (DLLs) without crashing due to AssemblyResolve not being called. Use the Init() method or later before using dependency code. [UsedImplicitly] public static void Execute()"
  },
  "api/NitroxPatcher.Main.html": {
    "href": "api/NitroxPatcher.Main.html",
    "title": "Class Main | Nitrox",
    "keywords": "Class Main Namespace NitroxPatcher Assembly NitroxPatcher.dll public static class Main Inheritance object Main Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Execute() Entrypoint of Nitrox. Code in this method cannot use other dependencies (DLLs) without crashing due to AssemblyResolve not being called. Use the Init() method or later before using dependency code."
  },
  "api/NitroxPatcher.Modules.NitroxPatchesModule.Load.html": {
    "href": "api/NitroxPatcher.Modules.NitroxPatchesModule.Load.html",
    "title": "Method Load | Nitrox",
    "keywords": "Method Load Namespace NitroxPatcher.Modules Assembly NitroxPatcher.dll Load(ContainerBuilder) Override to add registrations to the container. protected override void Load(ContainerBuilder builder) Parameters builder ContainerBuilder The builder through which components can be registered. Remarks Note that the ContainerBuilder parameter is unique to this module."
  },
  "api/NitroxPatcher.Modules.NitroxPatchesModule.html": {
    "href": "api/NitroxPatcher.Modules.NitroxPatchesModule.html",
    "title": "Class NitroxPatchesModule | Nitrox",
    "keywords": "Class NitroxPatchesModule Namespace NitroxPatcher.Modules Assembly NitroxPatcher.dll Simple Dependency Injection (DI) container for registering the patch classes with AutoFac. public class NitroxPatchesModule : Module, IModule Inheritance object Module NitroxPatchesModule Implements IModule Inherited Members Module.Configure(IComponentRegistry) Module.AttachToComponentRegistration(IComponentRegistry, IComponentRegistration) Module.AttachToRegistrationSource(IComponentRegistry, IRegistrationSource) Module.ThisAssembly object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Load(ContainerBuilder) Override to add registrations to the container."
  },
  "api/NitroxPatcher.Modules.html": {
    "href": "api/NitroxPatcher.Modules.html",
    "title": "Namespace NitroxPatcher.Modules | Nitrox",
    "keywords": "Namespace NitroxPatcher.Modules Classes NitroxPatchesModule Simple Dependency Injection (DI) container for registering the patch classes with AutoFac."
  },
  "api/NitroxPatcher.Patches.Dynamic.ArmsController_Start_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ArmsController_Start_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ArmsController_Start_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ArmsController_Start_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(ArmsController) public static void Postfix(ArmsController __instance) Parameters __instance ArmsController"
  },
  "api/NitroxPatcher.Patches.Dynamic.ArmsController_Start_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ArmsController_Start_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ArmsController_Start_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ArmsController_Start_Patch.html",
    "title": "Class ArmsController_Start_Patch | Nitrox",
    "keywords": "Class ArmsController_Start_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ArmsController_Start_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ArmsController_Start_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(ArmsController)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ArmsController_Update_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ArmsController_Update_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ArmsController_Update_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ArmsController_Update_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ArmsController) public static bool Prefix(ArmsController __instance) Parameters __instance ArmsController Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.ArmsController_Update_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ArmsController_Update_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ArmsController_Update_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ArmsController_Update_Patch.html",
    "title": "Class ArmsController_Update_Patch | Nitrox",
    "keywords": "Class ArmsController_Update_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ArmsController_Update_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ArmsController_Update_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(ArmsController)"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.BaseDeconstructInstructionPattern1.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.BaseDeconstructInstructionPattern1.html",
    "title": "Field BaseDeconstructInstructionPattern1 | Nitrox",
    "keywords": "Field BaseDeconstructInstructionPattern1 Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly InstructionsPattern BaseDeconstructInstructionPattern1 Returns InstructionsPattern"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.BaseDeconstructInstructionPattern2.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.BaseDeconstructInstructionPattern2.html",
    "title": "Field BaseDeconstructInstructionPattern2 | Nitrox",
    "keywords": "Field BaseDeconstructInstructionPattern2 Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly InstructionsPattern BaseDeconstructInstructionPattern2 Returns InstructionsPattern"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.InstructionsToAdd.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.InstructionsToAdd.html",
    "title": "Method InstructionsToAdd | Nitrox",
    "keywords": "Method InstructionsToAdd Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll InstructionsToAdd(bool) public static IEnumerable<CodeInstruction> InstructionsToAdd(bool destroyed) Parameters destroyed bool Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.PieceDeconstructed.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.PieceDeconstructed.html",
    "title": "Method PieceDeconstructed | Nitrox",
    "keywords": "Method PieceDeconstructed Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PieceDeconstructed(BaseDeconstructable, ConstructableBase, Base, bool) public static void PieceDeconstructed(BaseDeconstructable baseDeconstructable, ConstructableBase constructableBase, Base @base, bool destroyed) Parameters baseDeconstructable BaseDeconstructable constructableBase ConstructableBase base Base destroyed bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(BaseDeconstructable) public static void Prefix(BaseDeconstructable __instance) Parameters __instance BaseDeconstructable"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_Patch.html",
    "title": "Class BaseDeconstructable_Deconstruct_Patch | Nitrox",
    "keywords": "Class BaseDeconstructable_Deconstruct_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class BaseDeconstructable_Deconstruct_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch BaseDeconstructable_Deconstruct_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields BaseDeconstructInstructionPattern1 BaseDeconstructInstructionPattern2 TARGET_METHOD Methods InstructionsToAdd(bool) Patch(Harmony) PieceDeconstructed(BaseDeconstructable, ConstructableBase, Base, bool) Prefix(BaseDeconstructable) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_Deconstruct_PatchTest.html",
    "title": "Class BaseDeconstructable_Deconstruct_PatchTest | Nitrox",
    "keywords": "Class BaseDeconstructable_Deconstruct_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class BaseDeconstructable_Deconstruct_PatchTest Inheritance object BaseDeconstructable_Deconstruct_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_DeconstructionAllowed_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_DeconstructionAllowed_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_DeconstructionAllowed_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_DeconstructionAllowed_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(BaseDeconstructable, ref bool, ref string) public static void Postfix(BaseDeconstructable __instance, ref bool __result, ref string reason) Parameters __instance BaseDeconstructable __result bool reason string"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_DeconstructionAllowed_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_DeconstructionAllowed_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_DeconstructionAllowed_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BaseDeconstructable_DeconstructionAllowed_Patch.html",
    "title": "Class BaseDeconstructable_DeconstructionAllowed_Patch | Nitrox",
    "keywords": "Class BaseDeconstructable_DeconstructionAllowed_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class BaseDeconstructable_DeconstructionAllowed_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch BaseDeconstructable_DeconstructionAllowed_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(BaseDeconstructable, ref bool, ref string)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Base_OnPreDestroy_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Base_OnPreDestroy_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Base_OnPreDestroy_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Base_OnPreDestroy_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Base) public static void Prefix(Base __instance) Parameters __instance Base"
  },
  "api/NitroxPatcher.Patches.Dynamic.Base_OnPreDestroy_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Base_OnPreDestroy_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Base_OnPreDestroy_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Base_OnPreDestroy_Patch.html",
    "title": "Class Base_OnPreDestroy_Patch | Nitrox",
    "keywords": "Class Base_OnPreDestroy_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Before a base gets destroyed, we eventually detach/exit any remote player's object that would be inside so that their GameObjects don't get destroyed public sealed class Base_OnPreDestroy_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Base_OnPreDestroy_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(Base)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bed_EnterInUseMode_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bed_EnterInUseMode_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bed_EnterInUseMode_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bed_EnterInUseMode_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix() public static void Postfix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bed_EnterInUseMode_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bed_EnterInUseMode_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bed_EnterInUseMode_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bed_EnterInUseMode_Patch.html",
    "title": "Class Bed_EnterInUseMode_Patch | Nitrox",
    "keywords": "Class Bed_EnterInUseMode_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Bed_EnterInUseMode_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Bed_EnterInUseMode_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bench_ExitSittingMode_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bench_ExitSittingMode_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bench_ExitSittingMode_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bench_ExitSittingMode_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(Bench, bool) public static void Postfix(Bench __instance, bool __runOriginal) Parameters __instance Bench __runOriginal bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bench_ExitSittingMode_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bench_ExitSittingMode_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ref bool) public static void Prefix(ref bool __runOriginal) Parameters __runOriginal bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bench_ExitSittingMode_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bench_ExitSittingMode_Patch.html",
    "title": "Class Bench_ExitSittingMode_Patch | Nitrox",
    "keywords": "Class Bench_ExitSittingMode_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Bench_ExitSittingMode_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Bench_ExitSittingMode_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(Bench, bool) Prefix(ref bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bench_OnHandClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bench_OnHandClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bench_OnHandClick_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bench_OnHandClick_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Bench, GUIHand) public static bool Prefix(Bench __instance, GUIHand hand) Parameters __instance Bench hand GUIHand Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bench_OnHandClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bench_OnHandClick_Patch.html",
    "title": "Class Bench_OnHandClick_Patch | Nitrox",
    "keywords": "Class Bench_OnHandClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Bench_OnHandClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Bench_OnHandClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Bench, GUIHand)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bench_OnPlayerDeath_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bench_OnPlayerDeath_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bench_OnPlayerDeath_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bench_OnPlayerDeath_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(Bench) public static void Postfix(Bench __instance) Parameters __instance Bench"
  },
  "api/NitroxPatcher.Patches.Dynamic.Bench_OnPlayerDeath_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Bench_OnPlayerDeath_Patch.html",
    "title": "Class Bench_OnPlayerDeath_Patch | Nitrox",
    "keywords": "Class Bench_OnPlayerDeath_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Bench_OnPlayerDeath_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Bench_OnPlayerDeath_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(Bench)"
  },
  "api/NitroxPatcher.Patches.Dynamic.BreakableResource_BreakIntoResources_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BreakableResource_BreakIntoResources_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.BreakableResource_BreakIntoResources_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BreakableResource_BreakIntoResources_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(BreakableResource) public static void Prefix(BreakableResource __instance) Parameters __instance BreakableResource"
  },
  "api/NitroxPatcher.Patches.Dynamic.BreakableResource_BreakIntoResources_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BreakableResource_BreakIntoResources_Patch.html",
    "title": "Class BreakableResource_BreakIntoResources_Patch | Nitrox",
    "keywords": "Class BreakableResource_BreakIntoResources_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class BreakableResource_BreakIntoResources_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch BreakableResource_BreakIntoResources_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(BreakableResource)"
  },
  "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_Patch.html",
    "title": "Class BreakableResource_SpawnResourceFromPrefab_Patch | Nitrox",
    "keywords": "Class BreakableResource_SpawnResourceFromPrefab_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Synchronizes entities that can be broken and that will drop material, such as limestones... public sealed class BreakableResource_SpawnResourceFromPrefab_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch BreakableResource_SpawnResourceFromPrefab_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BreakableResource_SpawnResourceFromPrefab_PatchTest.html",
    "title": "Class BreakableResource_SpawnResourceFromPrefab_PatchTest | Nitrox",
    "keywords": "Class BreakableResource_SpawnResourceFromPrefab_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class BreakableResource_SpawnResourceFromPrefab_PatchTest Inheritance object BreakableResource_SpawnResourceFromPrefab_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.BuilderTool_Construct_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BuilderTool_Construct_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.BuilderTool_Construct_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BuilderTool_Construct_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Constructable) public static bool Prefix(Constructable c) Parameters c Constructable Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.BuilderTool_Construct_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BuilderTool_Construct_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.BuilderTool_Construct_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.BuilderTool_Construct_Patch.html",
    "title": "Class BuilderTool_Construct_Patch | Nitrox",
    "keywords": "Class BuilderTool_Construct_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class BuilderTool_Construct_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch BuilderTool_Construct_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(Constructable)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.AddInstructionPattern1.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.AddInstructionPattern1.html",
    "title": "Field AddInstructionPattern1 | Nitrox",
    "keywords": "Field AddInstructionPattern1 Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly InstructionsPattern AddInstructionPattern1 Returns InstructionsPattern"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.AddInstructionPattern2.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.AddInstructionPattern2.html",
    "title": "Field AddInstructionPattern2 | Nitrox",
    "keywords": "Field AddInstructionPattern2 Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly InstructionsPattern AddInstructionPattern2 Returns InstructionsPattern"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.GhostCreated.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.GhostCreated.html",
    "title": "Method GhostCreated | Nitrox",
    "keywords": "Method GhostCreated Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll GhostCreated(Constructable) public static void GhostCreated(Constructable constructable) Parameters constructable Constructable"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.InstructionsToAdd1.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.InstructionsToAdd1.html",
    "title": "Field InstructionsToAdd1 | Nitrox",
    "keywords": "Field InstructionsToAdd1 Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly List<CodeInstruction> InstructionsToAdd1 Returns List<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.InstructionsToAdd2.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.InstructionsToAdd2.html",
    "title": "Field InstructionsToAdd2 | Nitrox",
    "keywords": "Field InstructionsToAdd2 Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly List<CodeInstruction> InstructionsToAdd2 Returns List<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_Patch.html",
    "title": "Class Builder_TryPlace_Patch | Nitrox",
    "keywords": "Class Builder_TryPlace_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Builder_TryPlace_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Builder_TryPlace_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields AddInstructionPattern1 AddInstructionPattern2 InstructionsToAdd1 InstructionsToAdd2 TARGET_METHOD Methods GhostCreated(Constructable) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_TryPlace_PatchTest.html",
    "title": "Class Builder_TryPlace_PatchTest | Nitrox",
    "keywords": "Class Builder_TryPlace_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class Builder_TryPlace_PatchTest Inheritance object Builder_TryPlace_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_Update_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_Update_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_Update_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_Update_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix() public static void Postfix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_Update_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_Update_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Builder_Update_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Builder_Update_Patch.html",
    "title": "Class Builder_Update_Patch | Nitrox",
    "keywords": "Class Builder_Update_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Changes the piece color during the placing process if the current base is desynced. public sealed class Builder_Update_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Builder_Update_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.BeforeDestroy.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.BeforeDestroy.html",
    "title": "Method BeforeDestroy | Nitrox",
    "keywords": "Method BeforeDestroy Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll BeforeDestroy(GameObject) public static void BeforeDestroy(GameObject gameObject) Parameters gameObject GameObject"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.InstructionPattern.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.InstructionPattern.html",
    "title": "Field InstructionPattern | Nitrox",
    "keywords": "Field InstructionPattern Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly InstructionsPattern InstructionPattern Returns InstructionsPattern"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.InstructionsToAdd.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.InstructionsToAdd.html",
    "title": "Field InstructionsToAdd | Nitrox",
    "keywords": "Field InstructionsToAdd Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly List<CodeInstruction> InstructionsToAdd Returns List<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_Patch.html",
    "title": "Class ConstructableBase_SetState_Patch | Nitrox",
    "keywords": "Class ConstructableBase_SetState_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ConstructableBase_SetState_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ConstructableBase_SetState_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields InstructionPattern InstructionsToAdd TARGET_METHOD Methods BeforeDestroy(GameObject) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructableBase_SetState_PatchTest.html",
    "title": "Class ConstructableBase_SetState_PatchTest | Nitrox",
    "keywords": "Class ConstructableBase_SetState_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class ConstructableBase_SetState_PatchTest Inheritance object ConstructableBase_SetState_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.BroadcastObjectBuilt.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.BroadcastObjectBuilt.html",
    "title": "Method BroadcastObjectBuilt | Nitrox",
    "keywords": "Method BroadcastObjectBuilt Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll BroadcastObjectBuilt(ConstructableBase, NitroxId) public static IEnumerator BroadcastObjectBuilt(ConstructableBase constructableBase, NitroxId entityId) Parameters constructableBase ConstructableBase entityId NitroxId Returns IEnumerator"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.ConstructionAmountModified.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.ConstructionAmountModified.html",
    "title": "Method ConstructionAmountModified | Nitrox",
    "keywords": "Method ConstructionAmountModified Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll ConstructionAmountModified(Constructable) public static void ConstructionAmountModified(Constructable constructable) Parameters constructable Constructable"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.InstructionsPattern.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.InstructionsPattern.html",
    "title": "Field InstructionsPattern | Nitrox",
    "keywords": "Field InstructionsPattern Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly InstructionsPattern InstructionsPattern Returns InstructionsPattern"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.InstructionsToAdd.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.InstructionsToAdd.html",
    "title": "Field InstructionsToAdd | Nitrox",
    "keywords": "Field InstructionsToAdd Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly List<CodeInstruction> InstructionsToAdd Returns List<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_Patch.html",
    "title": "Class Constructable_Construct_Patch | Nitrox",
    "keywords": "Class Constructable_Construct_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Constructable_Construct_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Constructable_Construct_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields InstructionsPattern InstructionsToAdd TARGET_METHOD Methods BroadcastObjectBuilt(ConstructableBase, NitroxId) ConstructionAmountModified(Constructable) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_Construct_PatchTest.html",
    "title": "Class Constructable_Construct_PatchTest | Nitrox",
    "keywords": "Class Constructable_Construct_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class Constructable_Construct_PatchTest Inheritance object Constructable_Construct_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.InstructionsPattern.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.InstructionsPattern.html",
    "title": "Field InstructionsPattern | Nitrox",
    "keywords": "Field InstructionsPattern Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly InstructionsPattern InstructionsPattern Returns InstructionsPattern"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.InstructionsToAdd.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.InstructionsToAdd.html",
    "title": "Field InstructionsToAdd | Nitrox",
    "keywords": "Field InstructionsToAdd Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly List<CodeInstruction> InstructionsToAdd Returns List<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_Patch.html",
    "title": "Class Constructable_DeconstructAsync_Patch | Nitrox",
    "keywords": "Class Constructable_DeconstructAsync_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Constructable_DeconstructAsync_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Constructable_DeconstructAsync_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields InstructionsPattern InstructionsToAdd TARGET_METHOD Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructAsync_PatchTest.html",
    "title": "Class Constructable_DeconstructAsync_PatchTest | Nitrox",
    "keywords": "Class Constructable_DeconstructAsync_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class Constructable_DeconstructAsync_PatchTest Inheritance object Constructable_DeconstructAsync_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructionAllowed_Patch.DeconstructionAllowed.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructionAllowed_Patch.DeconstructionAllowed.html",
    "title": "Method DeconstructionAllowed | Nitrox",
    "keywords": "Method DeconstructionAllowed Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll DeconstructionAllowed(NitroxId, ref bool, ref string) public static void DeconstructionAllowed(NitroxId baseId, ref bool __result, ref string reason) Parameters baseId NitroxId __result bool reason string"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructionAllowed_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructionAllowed_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructionAllowed_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructionAllowed_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(Constructable, ref bool, ref string) public static void Postfix(Constructable __instance, ref bool __result, ref string reason) Parameters __instance Constructable __result bool reason string"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructionAllowed_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructionAllowed_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructionAllowed_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructable_DeconstructionAllowed_Patch.html",
    "title": "Class Constructable_DeconstructionAllowed_Patch | Nitrox",
    "keywords": "Class Constructable_DeconstructionAllowed_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prevents deconstruction if the target base is desynced. public sealed class Constructable_DeconstructionAllowed_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Constructable_DeconstructionAllowed_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods DeconstructionAllowed(NitroxId, ref bool, ref string) Patch(Harmony) Postfix(Constructable, ref bool, ref string)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.Callback.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.Callback.html",
    "title": "Method Callback | Nitrox",
    "keywords": "Method Callback Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Callback(ConstructorInput, GameObject, TechType, float) public static void Callback(ConstructorInput constructor, GameObject constructedObject, TechType techType, float duration) Parameters constructor ConstructorInput constructedObject GameObject techType TechType duration float"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.INJECTION_OPCODE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.INJECTION_OPCODE.html",
    "title": "Field INJECTION_OPCODE | Nitrox",
    "keywords": "Field INJECTION_OPCODE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly OpCode INJECTION_OPCODE Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.INJECTION_OPERAND.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.INJECTION_OPERAND.html",
    "title": "Field INJECTION_OPERAND | Nitrox",
    "keywords": "Field INJECTION_OPERAND Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly object INJECTION_OPERAND Returns object"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_Patch.html",
    "title": "Class ConstructorInput_OnCraftingBegin_Patch | Nitrox",
    "keywords": "Class ConstructorInput_OnCraftingBegin_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ConstructorInput_OnCraftingBegin_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ConstructorInput_OnCraftingBegin_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields INJECTION_OPCODE INJECTION_OPERAND TARGET_METHOD Methods Callback(ConstructorInput, GameObject, TechType, float) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_PatchTest.InjectionSanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_PatchTest.InjectionSanity.html",
    "title": "Method InjectionSanity | Nitrox",
    "keywords": "Method InjectionSanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll InjectionSanity() [TestMethod] public void InjectionSanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ConstructorInput_OnCraftingBegin_PatchTest.html",
    "title": "Class ConstructorInput_OnCraftingBegin_PatchTest | Nitrox",
    "keywords": "Class ConstructorInput_OnCraftingBegin_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class ConstructorInput_OnCraftingBegin_PatchTest Inheritance object ConstructorInput_OnCraftingBegin_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InjectionSanity() Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructor_Deploy_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructor_Deploy_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructor_Deploy_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructor_Deploy_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Constructor, bool) public static void Prefix(Constructor __instance, bool value) Parameters __instance Constructor value bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructor_Deploy_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructor_Deploy_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Constructor_Deploy_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Constructor_Deploy_Patch.html",
    "title": "Class Constructor_Deploy_Patch | Nitrox",
    "keywords": "Class Constructor_Deploy_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Constructor_Deploy_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Constructor_Deploy_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(Constructor, bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.Callback.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.Callback.html",
    "title": "Method Callback | Nitrox",
    "keywords": "Method Callback Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Callback(GameObject, GameObject) public static void Callback(GameObject crafter, GameObject item) Parameters crafter GameObject item GameObject"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.INJECTION_OPCODE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.INJECTION_OPCODE.html",
    "title": "Field INJECTION_OPCODE | Nitrox",
    "keywords": "Field INJECTION_OPCODE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly OpCode INJECTION_OPCODE Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.INJECTION_OPERAND.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.INJECTION_OPERAND.html",
    "title": "Field INJECTION_OPERAND | Nitrox",
    "keywords": "Field INJECTION_OPERAND Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly object INJECTION_OPERAND Returns object"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrafterLogic_TryPickupSingleAsync_Patch.html",
    "title": "Class CrafterLogic_TryPickupSingleAsync_Patch | Nitrox",
    "keywords": "Class CrafterLogic_TryPickupSingleAsync_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CrafterLogic_TryPickupSingleAsync_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CrafterLogic_TryPickupSingleAsync_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields INJECTION_OPCODE INJECTION_OPERAND TARGET_METHOD Methods Callback(GameObject, GameObject) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrashHome_Spawn_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrashHome_Spawn_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrashHome_Spawn_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrashHome_Spawn_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrashHome_Spawn_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrashHome_Spawn_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrashHome_Spawn_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrashHome_Spawn_Patch.html",
    "title": "Class CrashHome_Spawn_Patch | Nitrox",
    "keywords": "Class CrashHome_Spawn_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CrashHome_Spawn_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CrashHome_Spawn_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.PrefixCountdownShip.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.PrefixCountdownShip.html",
    "title": "Method PrefixCountdownShip | Nitrox",
    "keywords": "Method PrefixCountdownShip Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixCountdownShip() public static bool PrefixCountdownShip() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.PrefixExplodeForce.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.PrefixExplodeForce.html",
    "title": "Method PrefixExplodeForce | Nitrox",
    "keywords": "Method PrefixExplodeForce Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixExplodeForce() public static bool PrefixExplodeForce() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.PrefixExplodeShip.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.PrefixExplodeShip.html",
    "title": "Method PrefixExplodeShip | Nitrox",
    "keywords": "Method PrefixExplodeShip Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixExplodeShip() public static bool PrefixExplodeShip() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.PrefixRestoreShip.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.PrefixRestoreShip.html",
    "title": "Method PrefixRestoreShip | Nitrox",
    "keywords": "Method PrefixRestoreShip Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixRestoreShip() public static bool PrefixRestoreShip() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CrashedShipExploder_OnConsoleCommand_Patch.html",
    "title": "Class CrashedShipExploder_OnConsoleCommand_Patch | Nitrox",
    "keywords": "Class CrashedShipExploder_OnConsoleCommand_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CrashedShipExploder_OnConsoleCommand_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CrashedShipExploder_OnConsoleCommand_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks We just want to disable all these commands on client-side and redirect them as ConsoleCommand TODO: Remove this file when we'll have the command system Methods Patch(Harmony) PrefixCountdownShip() PrefixExplodeForce() PrefixExplodeShip() PrefixRestoreShip()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Creature_ChooseBestAction_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Creature_ChooseBestAction_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Creature_ChooseBestAction_Patch.Postfix_disabled.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Creature_ChooseBestAction_Patch.Postfix_disabled.html",
    "title": "Method Postfix_disabled | Nitrox",
    "keywords": "Method Postfix_disabled Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix_disabled(Creature, ref CreatureAction) public static void Postfix_disabled(Creature __instance, ref CreatureAction __result) Parameters __instance Creature __result CreatureAction"
  },
  "api/NitroxPatcher.Patches.Dynamic.Creature_ChooseBestAction_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Creature_ChooseBestAction_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Creature, ref CreatureAction) public static bool Prefix(Creature __instance, ref CreatureAction __result) Parameters __instance Creature __result CreatureAction Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Creature_ChooseBestAction_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Creature_ChooseBestAction_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Creature_ChooseBestAction_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Creature_ChooseBestAction_Patch.html",
    "title": "Class Creature_ChooseBestAction_Patch | Nitrox",
    "keywords": "Class Creature_ChooseBestAction_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Creature_ChooseBestAction_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Creature_ChooseBestAction_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix_disabled(Creature, ref CreatureAction) Prefix(Creature, ref CreatureAction)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDamagePoint_OnRepair_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDamagePoint_OnRepair_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDamagePoint_OnRepair_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDamagePoint_OnRepair_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsDamagePoint) public static void Postfix(CyclopsDamagePoint __instance) Parameters __instance CyclopsDamagePoint"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDamagePoint_OnRepair_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDamagePoint_OnRepair_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDamagePoint_OnRepair_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDamagePoint_OnRepair_Patch.html",
    "title": "Class CyclopsDamagePoint_OnRepair_Patch | Nitrox",
    "keywords": "Class CyclopsDamagePoint_OnRepair_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll CyclopsExternalDamageManager.RepairPoint(CyclopsDamagePoint) would seem like the correct method to patch, but adding to its postfix will execute before CyclopsDamagePoint.OnRepair() is finished working. Both owners and non-owners will be able to repair damage points on a ship. public sealed class CyclopsDamagePoint_OnRepair_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsDamagePoint_OnRepair_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsDamagePoint)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDecoyLaunchButton_OnClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDecoyLaunchButton_OnClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDecoyLaunchButton_OnClick_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDecoyLaunchButton_OnClick_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsHornButton) public static void Postfix(CyclopsHornButton __instance) Parameters __instance CyclopsHornButton"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDecoyLaunchButton_OnClick_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDecoyLaunchButton_OnClick_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDecoyLaunchButton_OnClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDecoyLaunchButton_OnClick_Patch.html",
    "title": "Class CyclopsDecoyLaunchButton_OnClick_Patch | Nitrox",
    "keywords": "Class CyclopsDecoyLaunchButton_OnClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsDecoyLaunchButton_OnClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsDecoyLaunchButton_OnClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsHornButton)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_DestroyCyclops_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_DestroyCyclops_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_DestroyCyclops_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_DestroyCyclops_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(CyclopsDestructionEvent) public static void Prefix(CyclopsDestructionEvent __instance) Parameters __instance CyclopsDestructionEvent"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_DestroyCyclops_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_DestroyCyclops_Patch.html",
    "title": "Class CyclopsDestructionEvent_DestroyCyclops_Patch | Nitrox",
    "keywords": "Class CyclopsDestructionEvent_DestroyCyclops_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsDestructionEvent_DestroyCyclops_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsDestructionEvent_DestroyCyclops_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(CyclopsDestructionEvent)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_OnConsoleCommand_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_OnConsoleCommand_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_OnConsoleCommand_Patch.PrefixDestroy.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_OnConsoleCommand_Patch.PrefixDestroy.html",
    "title": "Method PrefixDestroy | Nitrox",
    "keywords": "Method PrefixDestroy Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixDestroy(CyclopsDestructionEvent) public static bool PrefixDestroy(CyclopsDestructionEvent __instance) Parameters __instance CyclopsDestructionEvent Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_OnConsoleCommand_Patch.PrefixRestore.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_OnConsoleCommand_Patch.PrefixRestore.html",
    "title": "Method PrefixRestore | Nitrox",
    "keywords": "Method PrefixRestore Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixRestore() public static bool PrefixRestore() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_OnConsoleCommand_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsDestructionEvent_OnConsoleCommand_Patch.html",
    "title": "Class CyclopsDestructionEvent_OnConsoleCommand_Patch | Nitrox",
    "keywords": "Class CyclopsDestructionEvent_OnConsoleCommand_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsDestructionEvent_OnConsoleCommand_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsDestructionEvent_OnConsoleCommand_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) PrefixDestroy(CyclopsDestructionEvent) PrefixRestore()"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsEngineChangeState_OnClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsEngineChangeState_OnClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsEngineChangeState_OnClick_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsEngineChangeState_OnClick_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsEngineChangeState) public static void Postfix(CyclopsEngineChangeState __instance) Parameters __instance CyclopsEngineChangeState"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsEngineChangeState_OnClick_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsEngineChangeState_OnClick_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsEngineChangeState_OnClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsEngineChangeState_OnClick_Patch.html",
    "title": "Class CyclopsEngineChangeState_OnClick_Patch | Nitrox",
    "keywords": "Class CyclopsEngineChangeState_OnClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsEngineChangeState_OnClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsEngineChangeState_OnClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsEngineChangeState)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsExternalDamageManager_CreatePoint_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsExternalDamageManager_CreatePoint_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsExternalDamageManager_CreatePoint_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsExternalDamageManager_CreatePoint_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsExternalDamageManager, bool) public static void Postfix(CyclopsExternalDamageManager __instance, bool __state) Parameters __instance CyclopsExternalDamageManager __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsExternalDamageManager_CreatePoint_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsExternalDamageManager_CreatePoint_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(CyclopsExternalDamageManager, out bool) public static bool Prefix(CyclopsExternalDamageManager __instance, out bool __state) Parameters __instance CyclopsExternalDamageManager __state bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsExternalDamageManager_CreatePoint_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsExternalDamageManager_CreatePoint_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsExternalDamageManager_CreatePoint_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsExternalDamageManager_CreatePoint_Patch.html",
    "title": "Class CyclopsExternalDamageManager_CreatePoint_Patch | Nitrox",
    "keywords": "Class CyclopsExternalDamageManager_CreatePoint_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsExternalDamageManager_CreatePoint_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsExternalDamageManager_CreatePoint_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsExternalDamageManager, bool) Prefix(CyclopsExternalDamageManager, out bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsFireSuppressionButton_StartCooldown_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsFireSuppressionButton_StartCooldown_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsFireSuppressionButton_StartCooldown_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsFireSuppressionButton_StartCooldown_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsFireSuppressionSystemButton) public static void Postfix(CyclopsFireSuppressionSystemButton __instance) Parameters __instance CyclopsFireSuppressionSystemButton"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsFireSuppressionButton_StartCooldown_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsFireSuppressionButton_StartCooldown_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsFireSuppressionButton_StartCooldown_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsFireSuppressionButton_StartCooldown_Patch.html",
    "title": "Class CyclopsFireSuppressionButton_StartCooldown_Patch | Nitrox",
    "keywords": "Class CyclopsFireSuppressionButton_StartCooldown_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsFireSuppressionButton_StartCooldown_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsFireSuppressionButton_StartCooldown_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsFireSuppressionSystemButton)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_StopPiloting_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_StopPiloting_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_StopPiloting_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_StopPiloting_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsHelmHUDManager) public static void Postfix(CyclopsHelmHUDManager __instance) Parameters __instance CyclopsHelmHUDManager"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_StopPiloting_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_StopPiloting_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_StopPiloting_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_StopPiloting_Patch.html",
    "title": "Class CyclopsHelmHUDManager_StopPiloting_Patch | Nitrox",
    "keywords": "Class CyclopsHelmHUDManager_StopPiloting_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsHelmHUDManager_StopPiloting_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsHelmHUDManager_StopPiloting_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsHelmHUDManager)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_Update_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_Update_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_Update_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_Update_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsHelmHUDManager) public static void Postfix(CyclopsHelmHUDManager __instance) Parameters __instance CyclopsHelmHUDManager"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_Update_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_Update_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_Update_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsHelmHUDManager_Update_Patch.html",
    "title": "Class CyclopsHelmHUDManager_Update_Patch | Nitrox",
    "keywords": "Class CyclopsHelmHUDManager_Update_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsHelmHUDManager_Update_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsHelmHUDManager_Update_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsHelmHUDManager)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleFloodlights_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleFloodlights_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleFloodlights_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleFloodlights_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsLightingPanel, bool) public static void Postfix(CyclopsLightingPanel __instance, bool __state) Parameters __instance CyclopsLightingPanel __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleFloodlights_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleFloodlights_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(CyclopsLightingPanel, out bool) public static bool Prefix(CyclopsLightingPanel __instance, out bool __state) Parameters __instance CyclopsLightingPanel __state bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleFloodlights_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleFloodlights_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleFloodlights_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleFloodlights_Patch.html",
    "title": "Class CyclopsLightingPanel_ToggleFloodlights_Patch | Nitrox",
    "keywords": "Class CyclopsLightingPanel_ToggleFloodlights_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsLightingPanel_ToggleFloodlights_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsLightingPanel_ToggleFloodlights_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsLightingPanel, bool) Prefix(CyclopsLightingPanel, out bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleInternalLighting_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleInternalLighting_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleInternalLighting_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleInternalLighting_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsLightingPanel, bool) public static void Postfix(CyclopsLightingPanel __instance, bool __state) Parameters __instance CyclopsLightingPanel __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleInternalLighting_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleInternalLighting_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(CyclopsLightingPanel, out bool) public static bool Prefix(CyclopsLightingPanel __instance, out bool __state) Parameters __instance CyclopsLightingPanel __state bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleInternalLighting_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleInternalLighting_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleInternalLighting_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsLightingPanel_ToggleInternalLighting_Patch.html",
    "title": "Class CyclopsLightingPanel_ToggleInternalLighting_Patch | Nitrox",
    "keywords": "Class CyclopsLightingPanel_ToggleInternalLighting_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsLightingPanel_ToggleInternalLighting_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsLightingPanel_ToggleInternalLighting_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsLightingPanel, bool) Prefix(CyclopsLightingPanel, out bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorModeButton_OnClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorModeButton_OnClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorModeButton_OnClick_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorModeButton_OnClick_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsMotorModeButton, bool) public static void Postfix(CyclopsMotorModeButton __instance, bool __state) Parameters __instance CyclopsMotorModeButton __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorModeButton_OnClick_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorModeButton_OnClick_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(CyclopsMotorModeButton, out bool) public static bool Prefix(CyclopsMotorModeButton __instance, out bool __state) Parameters __instance CyclopsMotorModeButton __state bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorModeButton_OnClick_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorModeButton_OnClick_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorModeButton_OnClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorModeButton_OnClick_Patch.html",
    "title": "Class CyclopsMotorModeButton_OnClick_Patch | Nitrox",
    "keywords": "Class CyclopsMotorModeButton_OnClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsMotorModeButton_OnClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsMotorModeButton_OnClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsMotorModeButton, bool) Prefix(CyclopsMotorModeButton, out bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_RestoreEngineState_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_RestoreEngineState_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_RestoreEngineState_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_RestoreEngineState_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_RestoreEngineState_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_RestoreEngineState_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_RestoreEngineState_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_RestoreEngineState_Patch.html",
    "title": "Class CyclopsMotorMode_RestoreEngineState_Patch | Nitrox",
    "keywords": "Class CyclopsMotorMode_RestoreEngineState_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsMotorMode_RestoreEngineState_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsMotorMode_RestoreEngineState_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(CyclopsMotorMode) public static bool Prefix(CyclopsMotorMode __instance) Parameters __instance CyclopsMotorMode Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch.html",
    "title": "Class CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch | Nitrox",
    "keywords": "Class CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(CyclopsMotorMode)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.END_CUT_CODE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.END_CUT_CODE.html",
    "title": "Field END_CUT_CODE | Nitrox",
    "keywords": "Field END_CUT_CODE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly OpCode END_CUT_CODE Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.PLAYER_MAIN_FIELD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.PLAYER_MAIN_FIELD.html",
    "title": "Field PLAYER_MAIN_FIELD | Nitrox",
    "keywords": "Field PLAYER_MAIN_FIELD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly FieldInfo PLAYER_MAIN_FIELD Returns FieldInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.START_CUT_CODE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.START_CUT_CODE.html",
    "title": "Field START_CUT_CODE | Nitrox",
    "keywords": "Field START_CUT_CODE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly OpCode START_CUT_CODE Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.START_CUT_CODE_CALL.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.START_CUT_CODE_CALL.html",
    "title": "Field START_CUT_CODE_CALL | Nitrox",
    "keywords": "Field START_CUT_CODE_CALL Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly OpCode START_CUT_CODE_CALL Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_OnClick_Patch.html",
    "title": "Class CyclopsShieldButton_OnClick_Patch | Nitrox",
    "keywords": "Class CyclopsShieldButton_OnClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsShieldButton_OnClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsShieldButton_OnClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields END_CUT_CODE PLAYER_MAIN_FIELD START_CUT_CODE START_CUT_CODE_CALL TARGET_METHOD Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StartShield_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StartShield_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StartShield_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StartShield_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsShieldButton) public static void Postfix(CyclopsShieldButton __instance) Parameters __instance CyclopsShieldButton"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StartShield_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StartShield_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StartShield_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StartShield_Patch.html",
    "title": "Class CyclopsShieldButton_StartShield_Patch | Nitrox",
    "keywords": "Class CyclopsShieldButton_StartShield_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsShieldButton_StartShield_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsShieldButton_StartShield_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsShieldButton)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StopShield_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StopShield_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StopShield_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StopShield_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsShieldButton) public static void Postfix(CyclopsShieldButton __instance) Parameters __instance CyclopsShieldButton"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StopShield_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StopShield_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StopShield_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsShieldButton_StopShield_Patch.html",
    "title": "Class CyclopsShieldButton_StopShield_Patch | Nitrox",
    "keywords": "Class CyclopsShieldButton_StopShield_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsShieldButton_StopShield_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsShieldButton_StopShield_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsShieldButton)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsSilentRunningAbilityButton) public static void Postfix(CyclopsSilentRunningAbilityButton __instance) Parameters __instance CyclopsSilentRunningAbilityButton"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch.html",
    "title": "Class CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch | Nitrox",
    "keywords": "Class CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsSilentRunningAbilityButton)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsSilentRunningAbilityButton) public static void Postfix(CyclopsSilentRunningAbilityButton __instance) Parameters __instance CyclopsSilentRunningAbilityButton"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch.html",
    "title": "Class CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch | Nitrox",
    "keywords": "Class CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsSilentRunningAbilityButton)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_OnClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_OnClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_OnClick_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_OnClick_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(CyclopsSonarButton) public static void Postfix(CyclopsSonarButton __instance) Parameters __instance CyclopsSonarButton"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_OnClick_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_OnClick_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_OnClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_OnClick_Patch.html",
    "title": "Class CyclopsSonarButton_OnClick_Patch | Nitrox",
    "keywords": "Class CyclopsSonarButton_OnClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class CyclopsSonarButton_OnClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsSonarButton_OnClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(CyclopsSonarButton)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_SonarPing_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_SonarPing_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_SonarPing_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_SonarPing_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(CyclopsSonarButton) public static bool Prefix(CyclopsSonarButton __instance) Parameters __instance CyclopsSonarButton Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_SonarPing_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_SonarPing_Patch.html",
    "title": "Class CyclopsSonarButton_SonarPing_Patch | Nitrox",
    "keywords": "Class CyclopsSonarButton_SonarPing_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll The sonar will stay on until the player leaves the vehicle and automatically turns on when they enter again (if sonar was on at that time). public sealed class CyclopsSonarButton_SonarPing_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsSonarButton_SonarPing_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(CyclopsSonarButton)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_Patch.ShouldTurnoff.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_Patch.ShouldTurnoff.html",
    "title": "Method ShouldTurnoff | Nitrox",
    "keywords": "Method ShouldTurnoff Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll ShouldTurnoff(CyclopsSonarButton) public static bool ShouldTurnoff(CyclopsSonarButton cyclopsSonarButton) Parameters cyclopsSonarButton CyclopsSonarButton Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>, ILGenerator) public static IEnumerable<CodeInstruction> Transpiler(MethodBase methodBase, IEnumerable<CodeInstruction> instructions, ILGenerator il) Parameters methodBase MethodBase instructions IEnumerable<CodeInstruction> il ILGenerator Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_Patch.html",
    "title": "Class CyclopsSonarButton_Update_Patch | Nitrox",
    "keywords": "Class CyclopsSonarButton_Update_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prevents sonar from turning off automatically for the player that isn't currently piloting the Cyclops. public sealed class CyclopsSonarButton_Update_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch CyclopsSonarButton_Update_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) ShouldTurnoff(CyclopsSonarButton) Transpiler(MethodBase, IEnumerable<CodeInstruction>, ILGenerator)"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_PatchTest.CheckMethodValidity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_PatchTest.CheckMethodValidity.html",
    "title": "Method CheckMethodValidity | Nitrox",
    "keywords": "Method CheckMethodValidity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll CheckMethodValidity() [TestMethod] public void CheckMethodValidity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_PatchTest.InjectionSanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_PatchTest.InjectionSanity.html",
    "title": "Method InjectionSanity | Nitrox",
    "keywords": "Method InjectionSanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll InjectionSanity() [TestMethod] public void InjectionSanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.CyclopsSonarButton_Update_PatchTest.html",
    "title": "Class CyclopsSonarButton_Update_PatchTest | Nitrox",
    "keywords": "Class CyclopsSonarButton_Update_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class CyclopsSonarButton_Update_PatchTest Inheritance object CyclopsSonarButton_Update_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CheckMethodValidity() InjectionSanity() Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_day_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_day_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_day_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_day_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_day_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_day_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_day_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_day_Patch.html",
    "title": "Class DayNightCycle_OnConsoleCommand_day_Patch | Nitrox",
    "keywords": "Class DayNightCycle_OnConsoleCommand_day_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class DayNightCycle_OnConsoleCommand_day_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch DayNightCycle_OnConsoleCommand_day_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_daynightspeed_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_daynightspeed_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_daynightspeed_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_daynightspeed_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_daynightspeed_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_daynightspeed_Patch.html",
    "title": "Class DayNightCycle_OnConsoleCommand_daynightspeed_Patch | Nitrox",
    "keywords": "Class DayNightCycle_OnConsoleCommand_daynightspeed_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class DayNightCycle_OnConsoleCommand_daynightspeed_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch DayNightCycle_OnConsoleCommand_daynightspeed_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_night_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_night_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_night_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_night_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_night_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_night_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_night_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_OnConsoleCommand_night_Patch.html",
    "title": "Class DayNightCycle_OnConsoleCommand_night_Patch | Nitrox",
    "keywords": "Class DayNightCycle_OnConsoleCommand_night_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class DayNightCycle_OnConsoleCommand_night_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch DayNightCycle_OnConsoleCommand_night_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_Update_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_Update_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_Update_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_Update_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(DayNightCycle) public static bool Prefix(DayNightCycle __instance) Parameters __instance DayNightCycle Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_Update_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DayNightCycle_Update_Patch.html",
    "title": "Class DayNightCycle_Update_Patch | Nitrox",
    "keywords": "Class DayNightCycle_Update_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Replace the local time calculations by the real server time. public sealed class DayNightCycle_Update_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch DayNightCycle_Update_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(DayNightCycle)"
  },
  "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_Patch.html",
    "title": "Class DevConsole_Update_Patch | Nitrox",
    "keywords": "Class DevConsole_Update_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Keeps DevConsole disabled when enter is pressed. public sealed class DevConsole_Update_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch DevConsole_Update_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DevConsole_Update_PatchTest.html",
    "title": "Class DevConsole_Update_PatchTest | Nitrox",
    "keywords": "Class DevConsole_Update_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class DevConsole_Update_PatchTest Inheritance object DevConsole_Update_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.DockedVehicleHandTarget_OnHandClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DockedVehicleHandTarget_OnHandClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.DockedVehicleHandTarget_OnHandClick_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DockedVehicleHandTarget_OnHandClick_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(DockedVehicleHandTarget, GUIHand) public static bool Prefix(DockedVehicleHandTarget __instance, GUIHand hand) Parameters __instance DockedVehicleHandTarget hand GUIHand Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.DockedVehicleHandTarget_OnHandClick_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DockedVehicleHandTarget_OnHandClick_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.DockedVehicleHandTarget_OnHandClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.DockedVehicleHandTarget_OnHandClick_Patch.html",
    "title": "Class DockedVehicleHandTarget_OnHandClick_Patch | Nitrox",
    "keywords": "Class DockedVehicleHandTarget_OnHandClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class DockedVehicleHandTarget_OnHandClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch DockedVehicleHandTarget_OnHandClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(DockedVehicleHandTarget, GUIHand)"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_ModifyCharge_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_ModifyCharge_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_ModifyCharge_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_ModifyCharge_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(EnergyMixin, float) public static void Postfix(EnergyMixin __instance, float __result) Parameters __instance EnergyMixin __result float"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_ModifyCharge_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_ModifyCharge_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_ModifyCharge_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_ModifyCharge_Patch.html",
    "title": "Class EnergyMixin_ModifyCharge_Patch | Nitrox",
    "keywords": "Class EnergyMixin_ModifyCharge_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class EnergyMixin_ModifyCharge_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch EnergyMixin_ModifyCharge_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(EnergyMixin, float)"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_OnAddItem_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_OnAddItem_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_OnAddItem_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_OnAddItem_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(EnergyMixin, InventoryItem) public static void Postfix(EnergyMixin __instance, InventoryItem item) Parameters __instance EnergyMixin item InventoryItem"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_OnAddItem_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_OnAddItem_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_OnAddItem_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_OnAddItem_Patch.html",
    "title": "Class EnergyMixin_OnAddItem_Patch | Nitrox",
    "keywords": "Class EnergyMixin_OnAddItem_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class EnergyMixin_OnAddItem_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch EnergyMixin_OnAddItem_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(EnergyMixin, InventoryItem)"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_SpawnDefaultAsync_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_SpawnDefaultAsync_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_SpawnDefaultAsync_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_SpawnDefaultAsync_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_SpawnDefaultAsync_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_SpawnDefaultAsync_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_SpawnDefaultAsync_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EnergyMixin_SpawnDefaultAsync_Patch.html",
    "title": "Class EnergyMixin_SpawnDefaultAsync_Patch | Nitrox",
    "keywords": "Class EnergyMixin_SpawnDefaultAsync_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll When items are spawned in Subnautica will automatically add batteries to them async. This is challenging to deal with because it is difficult to discriminate between these async/default additions and a user purposfully placing batteries into an object. Instead, we disable the default behavior and allow Nitrox to always spawn the batteries. This guarentees we can capture the ids correctly. public sealed class EnergyMixin_SpawnDefaultAsync_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch EnergyMixin_SpawnDefaultAsync_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_QueueForAwake_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_QueueForAwake_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_QueueForAwake_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_QueueForAwake_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(EntityCell) public static void Prefix(EntityCell __instance) Parameters __instance EntityCell"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_QueueForAwake_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_QueueForAwake_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_QueueForAwake_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_QueueForAwake_Patch.html",
    "title": "Class EntityCell_QueueForAwake_Patch | Nitrox",
    "keywords": "Class EntityCell_QueueForAwake_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class EntityCell_QueueForAwake_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch EntityCell_QueueForAwake_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(EntityCell)"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.Callback.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.Callback.html",
    "title": "Method Callback | Nitrox",
    "keywords": "Method Callback Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Callback(EntityCell) public static void Callback(EntityCell entityCell) Parameters entityCell EntityCell"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.INJECTION_OPCODE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.INJECTION_OPCODE.html",
    "title": "Field INJECTION_OPCODE | Nitrox",
    "keywords": "Field INJECTION_OPCODE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly OpCode INJECTION_OPCODE Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.INJECTION_OPERAND.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.INJECTION_OPERAND.html",
    "title": "Field INJECTION_OPERAND | Nitrox",
    "keywords": "Field INJECTION_OPERAND Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly object INJECTION_OPERAND Returns object"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.INJECTION_POSITION.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.INJECTION_POSITION.html",
    "title": "Field INJECTION_POSITION | Nitrox",
    "keywords": "Field INJECTION_POSITION Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static int INJECTION_POSITION Returns int"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EntityCell_SleepAsync_Patch.html",
    "title": "Class EntityCell_SleepAsync_Patch | Nitrox",
    "keywords": "Class EntityCell_SleepAsync_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Entity cells will go sleep when the player gets out of range. This needs to be reported to the server so they can lose simulation locks. public sealed class EntityCell_SleepAsync_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch EntityCell_SleepAsync_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields INJECTION_OPCODE INJECTION_OPERAND INJECTION_POSITION TARGET_METHOD Methods Callback(EntityCell) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_AddItem_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_AddItem_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_AddItem_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_AddItem_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(Equipment, bool, string, InventoryItem) public static void Postfix(Equipment __instance, bool __result, string slot, InventoryItem newItem) Parameters __instance Equipment __result bool slot string newItem InventoryItem"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_AddItem_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_AddItem_Patch.html",
    "title": "Class Equipment_AddItem_Patch | Nitrox",
    "keywords": "Class Equipment_AddItem_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Equipment_AddItem_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Equipment_AddItem_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(Equipment, bool, string, InventoryItem)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_Patch.INJECTION_OPCODE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_Patch.INJECTION_OPCODE.html",
    "title": "Field INJECTION_OPCODE | Nitrox",
    "keywords": "Field INJECTION_OPCODE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly OpCode INJECTION_OPCODE Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_Patch.html",
    "title": "Class Equipment_RemoveItem_Patch | Nitrox",
    "keywords": "Class Equipment_RemoveItem_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Equipment_RemoveItem_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Equipment_RemoveItem_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields INJECTION_OPCODE TARGET_METHOD Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_PatchTest.InjectionSanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_PatchTest.InjectionSanity.html",
    "title": "Method InjectionSanity | Nitrox",
    "keywords": "Method InjectionSanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll InjectionSanity() [TestMethod] public void InjectionSanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Equipment_RemoveItem_PatchTest.html",
    "title": "Class Equipment_RemoveItem_PatchTest | Nitrox",
    "keywords": "Class Equipment_RemoveItem_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class Equipment_RemoveItem_PatchTest Inheritance object Equipment_RemoveItem_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InjectionSanity() Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.EscapePod_Awake_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EscapePod_Awake_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.EscapePod_Awake_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EscapePod_Awake_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(EscapePod) public static bool Prefix(EscapePod __instance) Parameters __instance EscapePod Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.EscapePod_Awake_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EscapePod_Awake_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.EscapePod_Awake_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EscapePod_Awake_Patch.html",
    "title": "Class EscapePod_Awake_Patch | Nitrox",
    "keywords": "Class EscapePod_Awake_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class EscapePod_Awake_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch EscapePod_Awake_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(EscapePod)"
  },
  "api/NitroxPatcher.Patches.Dynamic.EscapePod_OnRepair_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EscapePod_OnRepair_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.EscapePod_OnRepair_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EscapePod_OnRepair_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(EscapePod) public static void Prefix(EscapePod __instance) Parameters __instance EscapePod"
  },
  "api/NitroxPatcher.Patches.Dynamic.EscapePod_OnRepair_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EscapePod_OnRepair_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.EscapePod_OnRepair_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.EscapePod_OnRepair_Patch.html",
    "title": "Class EscapePod_OnRepair_Patch | Nitrox",
    "keywords": "Class EscapePod_OnRepair_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class EscapePod_OnRepair_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch EscapePod_OnRepair_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(EscapePod)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_OnPickup_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_OnPickup_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_OnPickup_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_OnPickup_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ExosuitClawArm) public static bool Prefix(ExosuitClawArm __instance) Parameters __instance ExosuitClawArm Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_OnPickup_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_OnPickup_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_OnPickup_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_OnPickup_Patch.html",
    "title": "Class ExosuitClawArm_OnPickup_Patch | Nitrox",
    "keywords": "Class ExosuitClawArm_OnPickup_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ExosuitClawArm_OnPickup_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ExosuitClawArm_OnPickup_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(ExosuitClawArm)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_TryUse_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_TryUse_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_TryUse_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_TryUse_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(bool, ExosuitClawArm, float) public static void Postfix(bool __result, ExosuitClawArm __instance, float ___cooldownTime) Parameters __result bool __instance ExosuitClawArm ___cooldownTime float"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_TryUse_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitClawArm_TryUse_Patch.html",
    "title": "Class ExosuitClawArm_TryUse_Patch | Nitrox",
    "keywords": "Class ExosuitClawArm_TryUse_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ExosuitClawArm_TryUse_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ExosuitClawArm_TryUse_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(bool, ExosuitClawArm, float)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseDown_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseDown_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseDown_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseDown_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ExosuitDrillArm) public static void Prefix(ExosuitDrillArm __instance) Parameters __instance ExosuitDrillArm"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseDown_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseDown_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseDown_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseDown_Patch.html",
    "title": "Class ExosuitDrillArm_OnUseDown_Patch | Nitrox",
    "keywords": "Class ExosuitDrillArm_OnUseDown_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ExosuitDrillArm_OnUseDown_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ExosuitDrillArm_OnUseDown_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(ExosuitDrillArm)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseUp_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseUp_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseUp_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseUp_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ExosuitDrillArm) public static void Prefix(ExosuitDrillArm __instance) Parameters __instance ExosuitDrillArm"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseUp_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseUp_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseUp_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitDrillArm_OnUseUp_Patch.html",
    "title": "Class ExosuitDrillArm_OnUseUp_Patch | Nitrox",
    "keywords": "Class ExosuitDrillArm_OnUseUp_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ExosuitDrillArm_OnUseUp_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ExosuitDrillArm_OnUseUp_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(ExosuitDrillArm)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnHit_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnHit_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnHit_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnHit_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(ExosuitGrapplingArm, GrapplingHook) public static void Postfix(ExosuitGrapplingArm __instance, GrapplingHook ___hook) Parameters __instance ExosuitGrapplingArm ___hook GrapplingHook"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnHit_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnHit_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ExosuitGrapplingArm, GrapplingHook) public static bool Prefix(ExosuitGrapplingArm __instance, GrapplingHook ___hook) Parameters __instance ExosuitGrapplingArm ___hook GrapplingHook Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnHit_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnHit_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnHit_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnHit_Patch.html",
    "title": "Class ExosuitGrapplingArm_OnHit_Patch | Nitrox",
    "keywords": "Class ExosuitGrapplingArm_OnHit_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ExosuitGrapplingArm_OnHit_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ExosuitGrapplingArm_OnHit_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(ExosuitGrapplingArm, GrapplingHook) Prefix(ExosuitGrapplingArm, GrapplingHook)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnUseUp_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnUseUp_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnUseUp_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnUseUp_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ExosuitGrapplingArm) public static void Prefix(ExosuitGrapplingArm __instance) Parameters __instance ExosuitGrapplingArm"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnUseUp_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnUseUp_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnUseUp_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitGrapplingArm_OnUseUp_Patch.html",
    "title": "Class ExosuitGrapplingArm_OnUseUp_Patch | Nitrox",
    "keywords": "Class ExosuitGrapplingArm_OnUseUp_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ExosuitGrapplingArm_OnUseUp_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ExosuitGrapplingArm_OnUseUp_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(ExosuitGrapplingArm)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_OnUseUp_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_OnUseUp_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_OnUseUp_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_OnUseUp_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ExosuitTorpedoArm) public static void Prefix(ExosuitTorpedoArm __instance) Parameters __instance ExosuitTorpedoArm"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_OnUseUp_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_OnUseUp_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_OnUseUp_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_OnUseUp_Patch.html",
    "title": "Class ExosuitTorpedoArm_OnUseUp_Patch | Nitrox",
    "keywords": "Class ExosuitTorpedoArm_OnUseUp_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ExosuitTorpedoArm_OnUseUp_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ExosuitTorpedoArm_OnUseUp_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(ExosuitTorpedoArm)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_Shoot_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_Shoot_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_Shoot_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_Shoot_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ExosuitTorpedoArm, bool, TorpedoType, Transform) public static void Prefix(ExosuitTorpedoArm __instance, bool __result, TorpedoType torpedoType, Transform siloTransform) Parameters __instance ExosuitTorpedoArm __result bool torpedoType TorpedoType siloTransform Transform"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_Shoot_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_Shoot_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_Shoot_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ExosuitTorpedoArm_Shoot_Patch.html",
    "title": "Class ExosuitTorpedoArm_Shoot_Patch | Nitrox",
    "keywords": "Class ExosuitTorpedoArm_Shoot_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ExosuitTorpedoArm_Shoot_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ExosuitTorpedoArm_Shoot_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(ExosuitTorpedoArm, bool, TorpedoType, Transform)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.INJECTION_OPCODE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.INJECTION_OPCODE.html",
    "title": "Field INJECTION_OPCODE | Nitrox",
    "keywords": "Field INJECTION_OPCODE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly OpCode INJECTION_OPCODE Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.INJECTION_OPERAND.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.INJECTION_OPERAND.html",
    "title": "Field INJECTION_OPERAND | Nitrox",
    "keywords": "Field INJECTION_OPERAND Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly object INJECTION_OPERAND Returns object"
  },
  "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Exosuit_Update_Patch.html",
    "title": "Class Exosuit_Update_Patch | Nitrox",
    "keywords": "Class Exosuit_Update_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Exosuit_Update_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Exosuit_Update_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields INJECTION_OPCODE INJECTION_OPERAND TARGET_METHOD Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMODUWE_PlayOneShotImpl_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMODUWE_PlayOneShotImpl_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMODUWE_PlayOneShotImpl_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMODUWE_PlayOneShotImpl_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(string, Vector3, float) public static void Postfix(string eventPath, Vector3 position, float volume) Parameters eventPath string position Vector3 volume float"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMODUWE_PlayOneShotImpl_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMODUWE_PlayOneShotImpl_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMODUWE_PlayOneShotImpl_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMODUWE_PlayOneShotImpl_Patch.html",
    "title": "Class FMODUWE_PlayOneShotImpl_Patch | Nitrox",
    "keywords": "Class FMODUWE_PlayOneShotImpl_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class FMODUWE_PlayOneShotImpl_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FMODUWE_PlayOneShotImpl_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(string, Vector3, float) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnPlay_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnPlay_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnPlay_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnPlay_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(FMOD_CustomEmitter) public static void Postfix(FMOD_CustomEmitter __instance) Parameters __instance FMOD_CustomEmitter"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnPlay_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnPlay_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnPlay_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnPlay_Patch.html",
    "title": "Class FMOD_CustomEmitter_OnPlay_Patch | Nitrox",
    "keywords": "Class FMOD_CustomEmitter_OnPlay_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class FMOD_CustomEmitter_OnPlay_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FMOD_CustomEmitter_OnPlay_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(FMOD_CustomEmitter) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnStop_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnStop_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnStop_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnStop_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(FMOD_CustomEmitter) public static void Postfix(FMOD_CustomEmitter __instance) Parameters __instance FMOD_CustomEmitter"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnStop_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_OnStop_Patch.html",
    "title": "Class FMOD_CustomEmitter_OnStop_Patch | Nitrox",
    "keywords": "Class FMOD_CustomEmitter_OnStop_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class FMOD_CustomEmitter_OnStop_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FMOD_CustomEmitter_OnStop_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(FMOD_CustomEmitter)"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_Start_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_Start_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_Start_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_Start_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(FMOD_CustomEmitter) public static void Prefix(FMOD_CustomEmitter __instance) Parameters __instance FMOD_CustomEmitter"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_Start_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomEmitter_Start_Patch.html",
    "title": "Class FMOD_CustomEmitter_Start_Patch | Nitrox",
    "keywords": "Class FMOD_CustomEmitter_Start_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class FMOD_CustomEmitter_Start_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FMOD_CustomEmitter_Start_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(FMOD_CustomEmitter)"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_OnPlay_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_OnPlay_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_OnPlay_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_OnPlay_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(FMOD_CustomLoopingEmitter) public static void Postfix(FMOD_CustomLoopingEmitter __instance) Parameters __instance FMOD_CustomLoopingEmitter"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_OnPlay_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_OnPlay_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_OnPlay_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_OnPlay_Patch.html",
    "title": "Class FMOD_CustomLoopingEmitter_OnPlay_Patch | Nitrox",
    "keywords": "Class FMOD_CustomLoopingEmitter_OnPlay_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class FMOD_CustomLoopingEmitter_OnPlay_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FMOD_CustomLoopingEmitter_OnPlay_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(FMOD_CustomLoopingEmitter) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_PlayStopSound_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_PlayStopSound_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_PlayStopSound_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_PlayStopSound_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(FMOD_CustomLoopingEmitter) public static void Postfix(FMOD_CustomLoopingEmitter __instance) Parameters __instance FMOD_CustomLoopingEmitter"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_PlayStopSound_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_PlayStopSound_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_PlayStopSound_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_CustomLoopingEmitter_PlayStopSound_Patch.html",
    "title": "Class FMOD_CustomLoopingEmitter_PlayStopSound_Patch | Nitrox",
    "keywords": "Class FMOD_CustomLoopingEmitter_PlayStopSound_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class FMOD_CustomLoopingEmitter_PlayStopSound_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FMOD_CustomLoopingEmitter_PlayStopSound_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(FMOD_CustomLoopingEmitter) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_PlayUI_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_PlayUI_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_PlayUI_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_PlayUI_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(FMOD_StudioEventEmitter, float) public static void Postfix(FMOD_StudioEventEmitter __instance, float ____lastTimePlayed) Parameters __instance FMOD_StudioEventEmitter ____lastTimePlayed float"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_PlayUI_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_PlayUI_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_PlayUI_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_PlayUI_Patch.html",
    "title": "Class FMOD_StudioEventEmitter_PlayUI_Patch | Nitrox",
    "keywords": "Class FMOD_StudioEventEmitter_PlayUI_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class FMOD_StudioEventEmitter_PlayUI_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FMOD_StudioEventEmitter_PlayUI_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(FMOD_StudioEventEmitter, float) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Start_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Start_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Start_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Start_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(FMOD_StudioEventEmitter) public static void Postfix(FMOD_StudioEventEmitter __instance) Parameters __instance FMOD_StudioEventEmitter"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Start_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Start_Patch.html",
    "title": "Class FMOD_StudioEventEmitter_Start_Patch | Nitrox",
    "keywords": "Class FMOD_StudioEventEmitter_Start_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class FMOD_StudioEventEmitter_Start_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FMOD_StudioEventEmitter_Start_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(FMOD_StudioEventEmitter)"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Stop_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Stop_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Stop_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Stop_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(FMOD_StudioEventEmitter, bool) public static void Postfix(FMOD_StudioEventEmitter __instance, bool allowFadeout) Parameters __instance FMOD_StudioEventEmitter allowFadeout bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Stop_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Stop_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Stop_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FMOD_StudioEventEmitter_Stop_Patch.html",
    "title": "Class FMOD_StudioEventEmitter_Stop_Patch | Nitrox",
    "keywords": "Class FMOD_StudioEventEmitter_Stop_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class FMOD_StudioEventEmitter_Stop_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FMOD_StudioEventEmitter_Stop_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(FMOD_StudioEventEmitter, bool) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.Callback.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.Callback.html",
    "title": "Method Callback | Nitrox",
    "keywords": "Method Callback Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Callback(FireExtinguisherHolder) public static void Callback(FireExtinguisherHolder holder) Parameters holder FireExtinguisherHolder"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.INJECTION_OPCODE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.INJECTION_OPCODE.html",
    "title": "Field INJECTION_OPCODE | Nitrox",
    "keywords": "Field INJECTION_OPCODE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly OpCode INJECTION_OPCODE Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.INJECTION_OPERAND.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.INJECTION_OPERAND.html",
    "title": "Field INJECTION_OPERAND | Nitrox",
    "keywords": "Field INJECTION_OPERAND Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly object INJECTION_OPERAND Returns object"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TakeTankAsync_Patch.html",
    "title": "Class FireExtinguisherHolder_TakeTankAsync_Patch | Nitrox",
    "keywords": "Class FireExtinguisherHolder_TakeTankAsync_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Broadcasts the FireExtinguisherHolder's metadata when picked up. public sealed class FireExtinguisherHolder_TakeTankAsync_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FireExtinguisherHolder_TakeTankAsync_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields INJECTION_OPCODE INJECTION_OPERAND TARGET_METHOD Methods Callback(FireExtinguisherHolder) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.Callback.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.Callback.html",
    "title": "Method Callback | Nitrox",
    "keywords": "Method Callback Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Callback(FireExtinguisherHolder, Pickupable) public static void Callback(FireExtinguisherHolder holder, Pickupable pickupable) Parameters holder FireExtinguisherHolder pickupable Pickupable"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.INJECTION_OPCODE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.INJECTION_OPCODE.html",
    "title": "Field INJECTION_OPCODE | Nitrox",
    "keywords": "Field INJECTION_OPCODE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly OpCode INJECTION_OPCODE Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.INJECTION_OPERAND.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.INJECTION_OPERAND.html",
    "title": "Field INJECTION_OPERAND | Nitrox",
    "keywords": "Field INJECTION_OPERAND Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly object INJECTION_OPERAND Returns object"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FireExtinguisherHolder_TryStoreTank_Patch.html",
    "title": "Class FireExtinguisherHolder_TryStoreTank_Patch | Nitrox",
    "keywords": "Class FireExtinguisherHolder_TryStoreTank_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Broadcasts the FireExtinguisherHolder's metadata when stored and the destruction of the extinguisher entity that is placed onto it. public sealed class FireExtinguisherHolder_TryStoreTank_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FireExtinguisherHolder_TryStoreTank_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields INJECTION_OPCODE INJECTION_OPERAND TARGET_METHOD Methods Callback(FireExtinguisherHolder, Pickupable) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Fire_Douse_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Fire_Douse_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Fire_Douse_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Fire_Douse_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(Fire, float) public static void Postfix(Fire __instance, float amount) Parameters __instance Fire amount float"
  },
  "api/NitroxPatcher.Patches.Dynamic.Fire_Douse_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Fire_Douse_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Fire_Douse_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Fire_Douse_Patch.html",
    "title": "Class Fire_Douse_Patch | Nitrox",
    "keywords": "Class Fire_Douse_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Fire_Douse_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Fire_Douse_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(Fire, float)"
  },
  "api/NitroxPatcher.Patches.Dynamic.FreezeTime_Begin_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FreezeTime_Begin_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.FreezeTime_Begin_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FreezeTime_Begin_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Id) public static bool Prefix(FreezeTime.Id id) Parameters id FreezeTime.Id Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.FreezeTime_Begin_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.FreezeTime_Begin_Patch.html",
    "title": "Class FreezeTime_Begin_Patch | Nitrox",
    "keywords": "Class FreezeTime_Begin_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Because we're in multiplayer mode, we generally don't want the game to freeze public sealed class FreezeTime_Begin_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch FreezeTime_Begin_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Id)"
  },
  "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.PrefixCreative.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.PrefixCreative.html",
    "title": "Method PrefixCreative | Nitrox",
    "keywords": "Method PrefixCreative Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixCreative() public static bool PrefixCreative() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.PrefixFreedom.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.PrefixFreedom.html",
    "title": "Method PrefixFreedom | Nitrox",
    "keywords": "Method PrefixFreedom Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixFreedom() public static bool PrefixFreedom() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.PrefixHardcore.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.PrefixHardcore.html",
    "title": "Method PrefixHardcore | Nitrox",
    "keywords": "Method PrefixHardcore Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixHardcore() public static bool PrefixHardcore() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.PrefixSurvival.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.PrefixSurvival.html",
    "title": "Method PrefixSurvival | Nitrox",
    "keywords": "Method PrefixSurvival Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixSurvival() public static bool PrefixSurvival() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.TARGET_METHOD_CREATIVE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.TARGET_METHOD_CREATIVE.html",
    "title": "Field TARGET_METHOD_CREATIVE | Nitrox",
    "keywords": "Field TARGET_METHOD_CREATIVE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD_CREATIVE Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.TARGET_METHOD_FREEDOM.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.TARGET_METHOD_FREEDOM.html",
    "title": "Field TARGET_METHOD_FREEDOM | Nitrox",
    "keywords": "Field TARGET_METHOD_FREEDOM Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD_FREEDOM Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.TARGET_METHOD_HARDCORE.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.TARGET_METHOD_HARDCORE.html",
    "title": "Field TARGET_METHOD_HARDCORE | Nitrox",
    "keywords": "Field TARGET_METHOD_HARDCORE Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD_HARDCORE Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.TARGET_METHOD_SURVIVAL.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.TARGET_METHOD_SURVIVAL.html",
    "title": "Field TARGET_METHOD_SURVIVAL | Nitrox",
    "keywords": "Field TARGET_METHOD_SURVIVAL Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD_SURVIVAL Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GameModeConsoleCommands_OnConsoleCommand_Patch.html",
    "title": "Class GameModeConsoleCommands_OnConsoleCommand_Patch | Nitrox",
    "keywords": "Class GameModeConsoleCommands_OnConsoleCommand_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class GameModeConsoleCommands_OnConsoleCommand_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch GameModeConsoleCommands_OnConsoleCommand_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks We just want to disable all these commands on client-side and redirect them as ConsoleCommand TODO: Remove this file when we'll have the command system Fields TARGET_METHOD_CREATIVE TARGET_METHOD_FREEDOM TARGET_METHOD_HARDCORE TARGET_METHOD_SURVIVAL Methods Patch(Harmony) PrefixCreative() PrefixFreedom() PrefixHardcore() PrefixSurvival()"
  },
  "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingBegin_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingBegin_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingBegin_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingBegin_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(GhostCrafter, TechType, float) public static void Postfix(GhostCrafter __instance, TechType techType, float duration) Parameters __instance GhostCrafter techType TechType duration float"
  },
  "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingBegin_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingBegin_Patch.html",
    "title": "Class GhostCrafter_OnCraftingBegin_Patch | Nitrox",
    "keywords": "Class GhostCrafter_OnCraftingBegin_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class GhostCrafter_OnCraftingBegin_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch GhostCrafter_OnCraftingBegin_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(GhostCrafter, TechType, float)"
  },
  "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingEnd_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingEnd_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingEnd_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingEnd_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(GhostCrafter) public static bool Prefix(GhostCrafter __instance) Parameters __instance GhostCrafter Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingEnd_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GhostCrafter_OnCraftingEnd_Patch.html",
    "title": "Class GhostCrafter_OnCraftingEnd_Patch | Nitrox",
    "keywords": "Class GhostCrafter_OnCraftingEnd_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class GhostCrafter_OnCraftingEnd_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch GhostCrafter_OnCraftingEnd_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(GhostCrafter)"
  },
  "api/NitroxPatcher.Patches.Dynamic.GoalManager_OnCompletedGoal_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GoalManager_OnCompletedGoal_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.GoalManager_OnCompletedGoal_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GoalManager_OnCompletedGoal_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(string, bool) public static void Postfix(string goalIdentifier, bool __state) Parameters goalIdentifier string __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.GoalManager_OnCompletedGoal_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GoalManager_OnCompletedGoal_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(string, out bool) public static void Prefix(string goalIdentifier, out bool __state) Parameters goalIdentifier string __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.GoalManager_OnCompletedGoal_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.GoalManager_OnCompletedGoal_Patch.html",
    "title": "Class GoalManager_OnCompletedGoal_Patch | Nitrox",
    "keywords": "Class GoalManager_OnCompletedGoal_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class GoalManager_OnCompletedGoal_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch GoalManager_OnCompletedGoal_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(string, bool) Prefix(string, out bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnHandClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnHandClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnHandClick_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnHandClick_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(IncubatorActivationTerminal) public static void Prefix(IncubatorActivationTerminal __instance) Parameters __instance IncubatorActivationTerminal"
  },
  "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnHandClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnHandClick_Patch.html",
    "title": "Class IncubatorActivationTerminal_OnHandClick_Patch | Nitrox",
    "keywords": "Class IncubatorActivationTerminal_OnHandClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class IncubatorActivationTerminal_OnHandClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch IncubatorActivationTerminal_OnHandClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(IncubatorActivationTerminal)"
  },
  "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(IncubatorActivationTerminal) public static void Prefix(IncubatorActivationTerminal __instance) Parameters __instance IncubatorActivationTerminal"
  },
  "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch.html",
    "title": "Class IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch | Nitrox",
    "keywords": "Class IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll When we place a power crystal into the incubator terminal it becomes consumed. Inform the server the entity was destroyed. public sealed class IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(IncubatorActivationTerminal)"
  },
  "api/NitroxPatcher.Patches.Dynamic.IncubatorEgg_HatchNow_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IncubatorEgg_HatchNow_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.IncubatorEgg_HatchNow_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IncubatorEgg_HatchNow_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(IncubatorEgg) public static bool Prefix(IncubatorEgg __instance) Parameters __instance IncubatorEgg Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.IncubatorEgg_HatchNow_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IncubatorEgg_HatchNow_Patch.html",
    "title": "Class IncubatorEgg_HatchNow_Patch | Nitrox",
    "keywords": "Class IncubatorEgg_HatchNow_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class IncubatorEgg_HatchNow_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch IncubatorEgg_HatchNow_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(IncubatorEgg)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHandClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHandClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHandClick_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHandClick_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Incubator, GUIHand) public static bool Prefix(Incubator __instance, GUIHand hand) Parameters __instance Incubator hand GUIHand Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHandClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHandClick_Patch.html",
    "title": "Class Incubator_OnHandClick_Patch | Nitrox",
    "keywords": "Class Incubator_OnHandClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Incubator_OnHandClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Incubator_OnHandClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Incubator, GUIHand)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHatched_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHatched_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHatched_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHatched_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Incubator) public static void Prefix(Incubator __instance) Parameters __instance Incubator"
  },
  "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHatched_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Incubator_OnHatched_Patch.html",
    "title": "Class Incubator_OnHatched_Patch | Nitrox",
    "keywords": "Class Incubator_OnHatched_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll The first step of OnHatched() is to check if the enzyme was attached, so that it can be destroyed. Before this destruction occurs, let's let the server know that the item is being deleted. public sealed class Incubator_OnHatched_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Incubator_OnHatched_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Incubator)"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnDeselect_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnDeselect_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnDeselect_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnDeselect_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnDeselect_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnDeselect_Patch.html",
    "title": "Class IngameMenu_OnDeselect_Patch | Nitrox",
    "keywords": "Class IngameMenu_OnDeselect_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Disable the possibility of escaping a modal by clicking outside of its box or pressing the escape for the modals that want it public sealed class IngameMenu_OnDeselect_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch IngameMenu_OnDeselect_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnSelect_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnSelect_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnSelect_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnSelect_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix() public static void Postfix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnSelect_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnSelect_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnSelect_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_OnSelect_Patch.html",
    "title": "Class IngameMenu_OnSelect_Patch | Nitrox",
    "keywords": "Class IngameMenu_OnSelect_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class IngameMenu_OnSelect_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch IngameMenu_OnSelect_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix() Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(IEnumerable<CodeInstruction> instructions) Parameters instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_Patch.html",
    "title": "Class IngameMenu_QuitGameAsync_Patch | Nitrox",
    "keywords": "Class IngameMenu_QuitGameAsync_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class IngameMenu_QuitGameAsync_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch IngameMenu_QuitGameAsync_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Transpiler(IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_PatchTest.InjectionSanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_PatchTest.InjectionSanity.html",
    "title": "Method InjectionSanity | Nitrox",
    "keywords": "Method InjectionSanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll InjectionSanity() [TestMethod] public void InjectionSanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGameAsync_PatchTest.html",
    "title": "Class IngameMenu_QuitGameAsync_PatchTest | Nitrox",
    "keywords": "Class IngameMenu_QuitGameAsync_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class IngameMenu_QuitGameAsync_PatchTest Inheritance object IngameMenu_QuitGameAsync_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InjectionSanity() Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGame_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGame_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGame_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGame_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static void Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGame_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitGame_Patch.html",
    "title": "Class IngameMenu_QuitGame_Patch | Nitrox",
    "keywords": "Class IngameMenu_QuitGame_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class IngameMenu_QuitGame_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch IngameMenu_QuitGame_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitSubscreen_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitSubscreen_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitSubscreen_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitSubscreen_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitSubscreen_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.IngameMenu_QuitSubscreen_Patch.html",
    "title": "Class IngameMenu_QuitSubscreen_Patch | Nitrox",
    "keywords": "Class IngameMenu_QuitSubscreen_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class IngameMenu_QuitSubscreen_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch IngameMenu_QuitSubscreen_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_Patch.DropAndDeleteItem.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_Patch.DropAndDeleteItem.html",
    "title": "Method DropAndDeleteItem | Nitrox",
    "keywords": "Method DropAndDeleteItem Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll DropAndDeleteItem(Pickupable) public static bool DropAndDeleteItem(Pickupable pickupable) Parameters pickupable Pickupable Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_Patch.html",
    "title": "Class Inventory_LoseItems_Patch | Nitrox",
    "keywords": "Class Inventory_LoseItems_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Inventory_LoseItems_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Inventory_LoseItems_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods DropAndDeleteItem(Pickupable) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_PatchTest.InjectionSanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_PatchTest.InjectionSanity.html",
    "title": "Method InjectionSanity | Nitrox",
    "keywords": "Method InjectionSanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll InjectionSanity() [TestMethod] public void InjectionSanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Inventory_LoseItems_PatchTest.html",
    "title": "Class Inventory_LoseItems_PatchTest | Nitrox",
    "keywords": "Class Inventory_LoseItems_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class Inventory_LoseItems_PatchTest Inheritance object Inventory_LoseItems_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InjectionSanity() Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_DestroyItem_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_DestroyItem_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_DestroyItem_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_DestroyItem_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_DestroyItem_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_DestroyItem_Patch.html",
    "title": "Class ItemsContainer_DestroyItem_Patch | Nitrox",
    "keywords": "Class ItemsContainer_DestroyItem_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll When the player crafts items the game will leverage this API to select a pickupable from their inventory and delete it. We want to let the server know that the item was successfully deleted. public sealed class ItemsContainer_DestroyItem_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ItemsContainer_DestroyItem_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_DestroyItem_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_DestroyItem_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_DestroyItem_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_DestroyItem_PatchTest.html",
    "title": "Class ItemsContainer_DestroyItem_PatchTest | Nitrox",
    "keywords": "Class ItemsContainer_DestroyItem_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class ItemsContainer_DestroyItem_PatchTest Inheritance object ItemsContainer_DestroyItem_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_NotifyAddItem_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_NotifyAddItem_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_NotifyAddItem_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_NotifyAddItem_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(ItemsContainer, InventoryItem) public static void Postfix(ItemsContainer __instance, InventoryItem item) Parameters __instance ItemsContainer item InventoryItem"
  },
  "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_NotifyAddItem_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ItemsContainer_NotifyAddItem_Patch.html",
    "title": "Class ItemsContainer_NotifyAddItem_Patch | Nitrox",
    "keywords": "Class ItemsContainer_NotifyAddItem_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ItemsContainer_NotifyAddItem_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ItemsContainer_NotifyAddItem_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(ItemsContainer, InventoryItem)"
  },
  "api/NitroxPatcher.Patches.Dynamic.KeypadDoorConsole_AcceptNumberField_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.KeypadDoorConsole_AcceptNumberField_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.KeypadDoorConsole_AcceptNumberField_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.KeypadDoorConsole_AcceptNumberField_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(KeypadDoorConsole) public static void Postfix(KeypadDoorConsole __instance) Parameters __instance KeypadDoorConsole"
  },
  "api/NitroxPatcher.Patches.Dynamic.KeypadDoorConsole_AcceptNumberField_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.KeypadDoorConsole_AcceptNumberField_Patch.html",
    "title": "Class KeypadDoorConsole_AcceptNumberField_Patch | Nitrox",
    "keywords": "Class KeypadDoorConsole_AcceptNumberField_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class KeypadDoorConsole_AcceptNumberField_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch KeypadDoorConsole_AcceptNumberField_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(KeypadDoorConsole)"
  },
  "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAdd_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAdd_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAdd_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAdd_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(TechType, bool) public static void Prefix(TechType techType, bool verbose) Parameters techType TechType verbose bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAdd_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAdd_Patch.html",
    "title": "Class KnownTech_NotifyAdd_Patch | Nitrox",
    "keywords": "Class KnownTech_NotifyAdd_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class KnownTech_NotifyAdd_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch KnownTech_NotifyAdd_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(TechType, bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAnalyze_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAnalyze_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAnalyze_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAnalyze_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(AnalysisTech, bool) public static void Prefix(KnownTech.AnalysisTech analysis, bool verbose) Parameters analysis KnownTech.AnalysisTech verbose bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAnalyze_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.KnownTech_NotifyAnalyze_Patch.html",
    "title": "Class KnownTech_NotifyAnalyze_Patch | Nitrox",
    "keywords": "Class KnownTech_NotifyAnalyze_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class KnownTech_NotifyAnalyze_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch KnownTech_NotifyAnalyze_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(AnalysisTech, bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldEntity_Awake_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldEntity_Awake_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldEntity_Awake_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldEntity_Awake_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(LargeWorldEntity) public static void Prefix(LargeWorldEntity __instance) Parameters __instance LargeWorldEntity"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldEntity_Awake_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldEntity_Awake_Patch.html",
    "title": "Class LargeWorldEntity_Awake_Patch | Nitrox",
    "keywords": "Class LargeWorldEntity_Awake_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll We don't want constructables to be put in CellRoots but in GlobalRoot, so we change a parameter in their LargeWorldEntity. public sealed class LargeWorldEntity_Awake_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch LargeWorldEntity_Awake_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(LargeWorldEntity)"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_LoadBatchTask_Execute_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_LoadBatchTask_Execute_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_LoadBatchTask_Execute_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_LoadBatchTask_Execute_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(BatchCells) public static void Prefix(BatchCells ___batchCells) Parameters ___batchCells BatchCells"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_LoadBatchTask_Execute_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_LoadBatchTask_Execute_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_LoadBatchTask_Execute_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_LoadBatchTask_Execute_Patch.html",
    "title": "Class LargeWorldStreamer_LoadBatchTask_Execute_Patch | Nitrox",
    "keywords": "Class LargeWorldStreamer_LoadBatchTask_Execute_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class LargeWorldStreamer_LoadBatchTask_Execute_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch LargeWorldStreamer_LoadBatchTask_Execute_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(BatchCells)"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_UnloadBatch_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_UnloadBatch_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_UnloadBatch_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_UnloadBatch_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Int3) public static void Prefix(Int3 index) Parameters index Int3"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_UnloadBatch_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_UnloadBatch_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_UnloadBatch_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LargeWorldStreamer_UnloadBatch_Patch.html",
    "title": "Class LargeWorldStreamer_UnloadBatch_Patch | Nitrox",
    "keywords": "Class LargeWorldStreamer_UnloadBatch_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class LargeWorldStreamer_UnloadBatch_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch LargeWorldStreamer_UnloadBatch_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(Int3)"
  },
  "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_Patch.RequestRocketLaunch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_Patch.RequestRocketLaunch.html",
    "title": "Method RequestRocketLaunch | Nitrox",
    "keywords": "Method RequestRocketLaunch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll RequestRocketLaunch(LaunchRocket) public static void RequestRocketLaunch(LaunchRocket launchRocket) Parameters launchRocket LaunchRocket"
  },
  "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_Patch.html",
    "title": "Class LaunchRocket_OnHandClick_Patch | Nitrox",
    "keywords": "Class LaunchRocket_OnHandClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class LaunchRocket_OnHandClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch LaunchRocket_OnHandClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) RequestRocketLaunch(LaunchRocket) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_PatchTest.InjectionSanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_PatchTest.InjectionSanity.html",
    "title": "Method InjectionSanity | Nitrox",
    "keywords": "Method InjectionSanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll InjectionSanity() [TestMethod] public void InjectionSanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LaunchRocket_OnHandClick_PatchTest.html",
    "title": "Class LaunchRocket_OnHandClick_PatchTest | Nitrox",
    "keywords": "Class LaunchRocket_OnHandClick_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class LaunchRocket_OnHandClick_PatchTest Inheritance object LaunchRocket_OnHandClick_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InjectionSanity() Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.LiveMixin_AddHealth_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LiveMixin_AddHealth_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.LiveMixin_AddHealth_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LiveMixin_AddHealth_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(float?, LiveMixin, float) public static void Postfix(float? __state, LiveMixin __instance, float healthBack) Parameters __state float? __instance LiveMixin healthBack float"
  },
  "api/NitroxPatcher.Patches.Dynamic.LiveMixin_AddHealth_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LiveMixin_AddHealth_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(out float?, LiveMixin) public static bool Prefix(out float? __state, LiveMixin __instance) Parameters __state float? __instance LiveMixin Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.LiveMixin_AddHealth_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LiveMixin_AddHealth_Patch.html",
    "title": "Class LiveMixin_AddHealth_Patch | Nitrox",
    "keywords": "Class LiveMixin_AddHealth_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class LiveMixin_AddHealth_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch LiveMixin_AddHealth_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(float?, LiveMixin, float) Prefix(out float?, LiveMixin)"
  },
  "api/NitroxPatcher.Patches.Dynamic.LiveMixin_TakeDamage_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LiveMixin_TakeDamage_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.LiveMixin_TakeDamage_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LiveMixin_TakeDamage_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(float?, LiveMixin, float, Vector3, DamageType, GameObject) public static void Postfix(float? __state, LiveMixin __instance, float originalDamage, Vector3 position, DamageType type, GameObject dealer) Parameters __state float? __instance LiveMixin originalDamage float position Vector3 type DamageType dealer GameObject"
  },
  "api/NitroxPatcher.Patches.Dynamic.LiveMixin_TakeDamage_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LiveMixin_TakeDamage_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(out float?, LiveMixin, GameObject) public static bool Prefix(out float? __state, LiveMixin __instance, GameObject dealer) Parameters __state float? __instance LiveMixin dealer GameObject Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.LiveMixin_TakeDamage_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.LiveMixin_TakeDamage_Patch.html",
    "title": "Class LiveMixin_TakeDamage_Patch | Nitrox",
    "keywords": "Class LiveMixin_TakeDamage_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class LiveMixin_TakeDamage_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch LiveMixin_TakeDamage_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(float?, LiveMixin, float, Vector3, DamageType, GameObject) Prefix(out float?, LiveMixin, GameObject)"
  },
  "api/NitroxPatcher.Patches.Dynamic.MedicalCabinet_OnHandClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.MedicalCabinet_OnHandClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.MedicalCabinet_OnHandClick_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.MedicalCabinet_OnHandClick_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(MedicalCabinet) public static void Postfix(MedicalCabinet __instance) Parameters __instance MedicalCabinet"
  },
  "api/NitroxPatcher.Patches.Dynamic.MedicalCabinet_OnHandClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.MedicalCabinet_OnHandClick_Patch.html",
    "title": "Class MedicalCabinet_OnHandClick_Patch | Nitrox",
    "keywords": "Class MedicalCabinet_OnHandClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class MedicalCabinet_OnHandClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch MedicalCabinet_OnHandClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(MedicalCabinet)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Openable_PlayOpenAnimation_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Openable_PlayOpenAnimation_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Openable_PlayOpenAnimation_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Openable_PlayOpenAnimation_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Openable, bool, float) public static bool Prefix(Openable __instance, bool openState, float duration) Parameters __instance Openable openState bool duration float Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Openable_PlayOpenAnimation_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Openable_PlayOpenAnimation_Patch.html",
    "title": "Class Openable_PlayOpenAnimation_Patch | Nitrox",
    "keywords": "Class Openable_PlayOpenAnimation_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Openable_PlayOpenAnimation_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Openable_PlayOpenAnimation_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Openable, bool, float)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAEncyclopedia_Add_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAEncyclopedia_Add_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAEncyclopedia_Add_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAEncyclopedia_Add_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(string, bool, EntryData) public static void Postfix(string key, bool verbose, PDAEncyclopedia.EntryData __result) Parameters key string verbose bool __result PDAEncyclopedia.EntryData"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAEncyclopedia_Add_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAEncyclopedia_Add_Patch.html",
    "title": "Class PDAEncyclopedia_Add_Patch | Nitrox",
    "keywords": "Class PDAEncyclopedia_Add_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PDAEncyclopedia_Add_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PDAEncyclopedia_Add_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(string, bool, EntryData)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDALog_Add_Patch.IgnoreKeys.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDALog_Add_Patch.IgnoreKeys.html",
    "title": "Field IgnoreKeys | Nitrox",
    "keywords": "Field IgnoreKeys Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static List<string> IgnoreKeys Returns List<string>"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDALog_Add_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDALog_Add_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDALog_Add_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDALog_Add_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(string, EntryData) public static void Postfix(string key, PDALog.EntryData __result) Parameters key string __result PDALog.EntryData"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDALog_Add_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDALog_Add_Patch.html",
    "title": "Class PDALog_Add_Patch | Nitrox",
    "keywords": "Class PDALog_Add_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PDALog_Add_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PDALog_Add_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields IgnoreKeys Methods Patch(Harmony) Postfix(string, EntryData)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAScanner_ScanTarget_Initialize_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAScanner_ScanTarget_Initialize_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAScanner_ScanTarget_Initialize_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAScanner_ScanTarget_Initialize_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(ScanTarget) public static void Postfix(PDAScanner.ScanTarget __instance) Parameters __instance PDAScanner.ScanTarget"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAScanner_ScanTarget_Initialize_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAScanner_ScanTarget_Initialize_Patch.html",
    "title": "Class PDAScanner_ScanTarget_Initialize_Patch | Nitrox",
    "keywords": "Class PDAScanner_ScanTarget_Initialize_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Replace the internal PDAScanner use of UniqueIdentifier by NitroxEntity. public sealed class PDAScanner_ScanTarget_Initialize_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PDAScanner_ScanTarget_Initialize_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(ScanTarget)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_Patch.Callback.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_Patch.Callback.html",
    "title": "Method Callback | Nitrox",
    "keywords": "Method Callback Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Callback(Result, bool) public static void Callback(PDAScanner.Result result, bool alreadyComplete) Parameters result PDAScanner.Result alreadyComplete bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_Patch.html",
    "title": "Class PDAScanner_Scan_Patch | Nitrox",
    "keywords": "Class PDAScanner_Scan_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Broadcasts entry progress and entry unlockings when they happen. public sealed class PDAScanner_Scan_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PDAScanner_Scan_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks This is the only method that needs to be tracked to sync and persist PDAScanner's data, because the other methods are either unused (found out that they have no actual calls in SN's code, just as PDAScanner.RemoveAllEntriesWhichUnlocks(TechType)) or simply called automatically by other events (just as PDAScanner.CompleteAllEntriesWhichUnlocks(TechType)). Methods Callback(Result, bool) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_PatchTest.InjectionSanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_PatchTest.InjectionSanity.html",
    "title": "Method InjectionSanity | Nitrox",
    "keywords": "Method InjectionSanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll InjectionSanity() [TestMethod] public void InjectionSanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PDAScanner_Scan_PatchTest.html",
    "title": "Class PDAScanner_Scan_PatchTest | Nitrox",
    "keywords": "Class PDAScanner_Scan_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class PDAScanner_Scan_PatchTest Inheritance object PDAScanner_Scan_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InjectionSanity() Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Pickupable_Drop_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Pickupable_Drop_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Pickupable_Drop_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Pickupable_Drop_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(Pickupable) public static void Postfix(Pickupable __instance) Parameters __instance Pickupable"
  },
  "api/NitroxPatcher.Patches.Dynamic.Pickupable_Drop_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Pickupable_Drop_Patch.html",
    "title": "Class Pickupable_Drop_Patch | Nitrox",
    "keywords": "Class Pickupable_Drop_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Pickupable_Drop_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Pickupable_Drop_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(Pickupable)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Pickupable_Pickup_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Pickupable_Pickup_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Pickupable_Pickup_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Pickupable_Pickup_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Pickupable) public static void Prefix(Pickupable __instance) Parameters __instance Pickupable"
  },
  "api/NitroxPatcher.Patches.Dynamic.Pickupable_Pickup_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Pickupable_Pickup_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Pickupable_Pickup_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Pickupable_Pickup_Patch.html",
    "title": "Class Pickupable_Pickup_Patch | Nitrox",
    "keywords": "Class Pickupable_Pickup_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Pickupable_Pickup_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Pickupable_Pickup_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(Pickupable)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnHandClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnHandClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnHandClick_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnHandClick_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(PilotingChair, GUIHand) public static bool Prefix(PilotingChair __instance, GUIHand hand) Parameters __instance PilotingChair hand GUIHand Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnHandClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnHandClick_Patch.html",
    "title": "Class PilotingChair_OnHandClick_Patch | Nitrox",
    "keywords": "Class PilotingChair_OnHandClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PilotingChair_OnHandClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PilotingChair_OnHandClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(PilotingChair, GUIHand)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnPlayerDeath_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnPlayerDeath_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnPlayerDeath_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnPlayerDeath_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(PilotingChair) public static void Postfix(PilotingChair __instance) Parameters __instance PilotingChair"
  },
  "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnPlayerDeath_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PilotingChair_OnPlayerDeath_Patch.html",
    "title": "Class PilotingChair_OnPlayerDeath_Patch | Nitrox",
    "keywords": "Class PilotingChair_OnPlayerDeath_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PilotingChair_OnPlayerDeath_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PilotingChair_OnPlayerDeath_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(PilotingChair)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PilotingChair_ReleaseBy_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PilotingChair_ReleaseBy_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PilotingChair_ReleaseBy_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PilotingChair_ReleaseBy_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(PilotingChair) public static void Postfix(PilotingChair __instance) Parameters __instance PilotingChair"
  },
  "api/NitroxPatcher.Patches.Dynamic.PilotingChair_ReleaseBy_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PilotingChair_ReleaseBy_Patch.html",
    "title": "Class PilotingChair_ReleaseBy_Patch | Nitrox",
    "keywords": "Class PilotingChair_ReleaseBy_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PilotingChair_ReleaseBy_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PilotingChair_ReleaseBy_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(PilotingChair)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyAdd_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyAdd_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyAdd_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyAdd_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(TechType) public static void Prefix(TechType techType) Parameters techType TechType"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyAdd_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyAdd_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyAdd_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyAdd_Patch.html",
    "title": "Class PinManager_NotifyAdd_Patch | Nitrox",
    "keywords": "Class PinManager_NotifyAdd_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PinManager_NotifyAdd_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PinManager_NotifyAdd_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(TechType)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyMove_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyMove_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyMove_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyMove_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static void Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyMove_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyMove_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyMove_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyMove_Patch.html",
    "title": "Class PinManager_NotifyMove_Patch | Nitrox",
    "keywords": "Class PinManager_NotifyMove_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PinManager_NotifyMove_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PinManager_NotifyMove_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyRemove_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyRemove_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyRemove_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyRemove_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(TechType) public static void Prefix(TechType techType) Parameters techType TechType"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyRemove_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyRemove_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyRemove_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PinManager_NotifyRemove_Patch.html",
    "title": "Class PinManager_NotifyRemove_Patch | Nitrox",
    "keywords": "Class PinManager_NotifyRemove_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PinManager_NotifyRemove_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PinManager_NotifyRemove_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(TechType)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PingInstance_Set_Patches.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PingInstance_Set_Patches.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PingInstance_Set_Patches.PrefixColor.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PingInstance_Set_Patches.PrefixColor.html",
    "title": "Method PrefixColor | Nitrox",
    "keywords": "Method PrefixColor Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixColor(PingInstance, int) public static void PrefixColor(PingInstance __instance, int index) Parameters __instance PingInstance index int"
  },
  "api/NitroxPatcher.Patches.Dynamic.PingInstance_Set_Patches.PrefixVisible.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PingInstance_Set_Patches.PrefixVisible.html",
    "title": "Method PrefixVisible | Nitrox",
    "keywords": "Method PrefixVisible Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixVisible(PingInstance, bool) public static void PrefixVisible(PingInstance __instance, bool value) Parameters __instance PingInstance value bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.PingInstance_Set_Patches.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PingInstance_Set_Patches.html",
    "title": "Class PingInstance_Set_Patches | Nitrox",
    "keywords": "Class PingInstance_Set_Patches Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Notice the server of a Ping color change public sealed class PingInstance_Set_Patches : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PingInstance_Set_Patches Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) PrefixColor(PingInstance, int) PrefixVisible(PingInstance, bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PingManager_NotifyRename_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PingManager_NotifyRename_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PingManager_NotifyRename_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PingManager_NotifyRename_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(PingInstance) public static void Postfix(PingInstance instance) Parameters instance PingInstance"
  },
  "api/NitroxPatcher.Patches.Dynamic.PingManager_NotifyRename_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PingManager_NotifyRename_Patch.html",
    "title": "Class PingManager_NotifyRename_Patch | Nitrox",
    "keywords": "Class PingManager_NotifyRename_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PingManager_NotifyRename_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PingManager_NotifyRename_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(PingInstance)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Planter_AddItem_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Planter_AddItem_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Planter_AddItem_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Planter_AddItem_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(InventoryItem) public static void Prefix(InventoryItem item) Parameters item InventoryItem"
  },
  "api/NitroxPatcher.Patches.Dynamic.Planter_AddItem_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Planter_AddItem_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.Planter_AddItem_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Planter_AddItem_Patch.html",
    "title": "Class Planter_AddItem_Patch | Nitrox",
    "keywords": "Class Planter_AddItem_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Planter_AddItem_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Planter_AddItem_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(InventoryItem)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlatformUtils_GetDevToolsEnabled_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlatformUtils_GetDevToolsEnabled_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlatformUtils_GetDevToolsEnabled_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlatformUtils_GetDevToolsEnabled_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(ref bool) Disable dev console if server has disabled cheats. public static void Postfix(ref bool __result) Parameters __result bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlatformUtils_GetDevToolsEnabled_Patch.TargetMethod.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlatformUtils_GetDevToolsEnabled_Patch.TargetMethod.html",
    "title": "Field TargetMethod | Nitrox",
    "keywords": "Field TargetMethod Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TargetMethod Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlatformUtils_GetDevToolsEnabled_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlatformUtils_GetDevToolsEnabled_Patch.html",
    "title": "Class PlatformUtils_GetDevToolsEnabled_Patch | Nitrox",
    "keywords": "Class PlatformUtils_GetDevToolsEnabled_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PlatformUtils_GetDevToolsEnabled_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PlatformUtils_GetDevToolsEnabled_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TargetMethod Methods Patch(Harmony) Postfix(ref bool) Disable dev console if server has disabled cheats."
  },
  "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_OnPlayerCinematicModeEnd_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_OnPlayerCinematicModeEnd_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_OnPlayerCinematicModeEnd_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_OnPlayerCinematicModeEnd_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(PlayerCinematicController) public static void Prefix(PlayerCinematicController __instance) Parameters __instance PlayerCinematicController"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_OnPlayerCinematicModeEnd_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_OnPlayerCinematicModeEnd_Patch.html",
    "title": "Class PlayerCinematicController_OnPlayerCinematicModeEnd_Patch | Nitrox",
    "keywords": "Class PlayerCinematicController_OnPlayerCinematicModeEnd_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PlayerCinematicController_OnPlayerCinematicModeEnd_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PlayerCinematicController_OnPlayerCinematicModeEnd_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(PlayerCinematicController)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_StartCinematicMode_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_StartCinematicMode_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_StartCinematicMode_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_StartCinematicMode_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(PlayerCinematicController) public static void Prefix(PlayerCinematicController __instance) Parameters __instance PlayerCinematicController"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_StartCinematicMode_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_StartCinematicMode_Patch.html",
    "title": "Class PlayerCinematicController_StartCinematicMode_Patch | Nitrox",
    "keywords": "Class PlayerCinematicController_StartCinematicMode_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PlayerCinematicController_StartCinematicMode_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PlayerCinematicController_StartCinematicMode_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(PlayerCinematicController)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_Start_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_Start_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_Start_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_Start_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(PlayerCinematicController) public static void Postfix(PlayerCinematicController __instance) Parameters __instance PlayerCinematicController"
  },
  "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_Start_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PlayerCinematicController_Start_Patch.html",
    "title": "Class PlayerCinematicController_Start_Patch | Nitrox",
    "keywords": "Class PlayerCinematicController_Start_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PlayerCinematicController_Start_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PlayerCinematicController_Start_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(PlayerCinematicController)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_OnKill_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_OnKill_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_OnKill_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_OnKill_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_OnKill_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_OnKill_Patch.html",
    "title": "Class Player_OnKill_Patch | Nitrox",
    "keywords": "Class Player_OnKill_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Player_OnKill_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Player_OnKill_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_RequiresHighPrecisionPhysics_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_RequiresHighPrecisionPhysics_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_RequiresHighPrecisionPhysics_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_RequiresHighPrecisionPhysics_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ref bool) public static bool Prefix(ref bool __result) Parameters __result bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_RequiresHighPrecisionPhysics_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_RequiresHighPrecisionPhysics_Patch.html",
    "title": "Class Player_RequiresHighPrecisionPhysics_Patch | Nitrox",
    "keywords": "Class Player_RequiresHighPrecisionPhysics_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Subnautica enables high precision physics any time a player is in a cyclops that is undergoing physics and is not actively anchored to the pilot seat. This is usually rare in the base game (mostly a player disconnecting from the pilot seat); however, it is the normal case for a passanger in nitrox. We disable the switching as it causing oscillation of the interpolation. Instead, any time someone is in the submarine we require high precision physics if there is a remote player actively piloting. public sealed class Player_RequiresHighPrecisionPhysics_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Player_RequiresHighPrecisionPhysics_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(ref bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentEscapePod_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentEscapePod_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentEscapePod_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentEscapePod_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(EscapePod) public static void Prefix(EscapePod value) Parameters value EscapePod"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentEscapePod_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentEscapePod_Patch.html",
    "title": "Class Player_SetCurrentEscapePod_Patch | Nitrox",
    "keywords": "Class Player_SetCurrentEscapePod_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Player_SetCurrentEscapePod_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Player_SetCurrentEscapePod_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(EscapePod)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentSub_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentSub_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentSub_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentSub_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Player, SubRoot) public static void Prefix(Player __instance, SubRoot sub) Parameters __instance Player sub SubRoot"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentSub_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_SetCurrentSub_Patch.html",
    "title": "Class Player_SetCurrentSub_Patch | Nitrox",
    "keywords": "Class Player_SetCurrentSub_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Player_SetCurrentSub_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Player_SetCurrentSub_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Player, SubRoot)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_Update_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_Update_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_Update_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_Update_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(Player) public static void Postfix(Player __instance) Parameters __instance Player"
  },
  "api/NitroxPatcher.Patches.Dynamic.Player_Update_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Player_Update_Patch.html",
    "title": "Class Player_Update_Patch | Nitrox",
    "keywords": "Class Player_Update_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Player_Update_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Player_Update_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(Player)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorDoorway_ToggleDoor_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorDoorway_ToggleDoor_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorDoorway_ToggleDoor_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorDoorway_ToggleDoor_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(PrecursorDoorway) public static void Postfix(PrecursorDoorway __instance) Parameters __instance PrecursorDoorway"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorDoorway_ToggleDoor_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorDoorway_ToggleDoor_Patch.html",
    "title": "Class PrecursorDoorway_ToggleDoor_Patch | Nitrox",
    "keywords": "Class PrecursorDoorway_ToggleDoor_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PrecursorDoorway_ToggleDoor_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PrecursorDoorway_ToggleDoor_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(PrecursorDoorway)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_DestroyKey_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_DestroyKey_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_DestroyKey_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_DestroyKey_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(PrecursorKeyTerminal) public static void Prefix(PrecursorKeyTerminal __instance) Parameters __instance PrecursorKeyTerminal"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_DestroyKey_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_DestroyKey_Patch.html",
    "title": "Class PrecursorKeyTerminal_DestroyKey_Patch | Nitrox",
    "keywords": "Class PrecursorKeyTerminal_DestroyKey_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll When we place a key into the precursor terminal it becomes consumed. Inform the server the entity was destroyed. public sealed class PrecursorKeyTerminal_DestroyKey_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PrecursorKeyTerminal_DestroyKey_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(PrecursorKeyTerminal)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_OnHandClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_OnHandClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_OnHandClick_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_OnHandClick_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(PrecursorKeyTerminal) public static void Postfix(PrecursorKeyTerminal __instance) Parameters __instance PrecursorKeyTerminal"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_OnHandClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorKeyTerminal_OnHandClick_Patch.html",
    "title": "Class PrecursorKeyTerminal_OnHandClick_Patch | Nitrox",
    "keywords": "Class PrecursorKeyTerminal_OnHandClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PrecursorKeyTerminal_OnHandClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PrecursorKeyTerminal_OnHandClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(PrecursorKeyTerminal)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(PrecursorTeleporterActivationTerminal) public static void Prefix(PrecursorTeleporterActivationTerminal __instance) Parameters __instance PrecursorTeleporterActivationTerminal"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch.html",
    "title": "Class PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch | Nitrox",
    "keywords": "Class PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll When we place a power crystal into the teleporter terminal it becomes consumed. Inform the server the entity was destroyed. public sealed class PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(PrecursorTeleporterActivationTerminal)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(PrecursorTeleporterActivationTerminal) public static void Postfix(PrecursorTeleporterActivationTerminal __instance) Parameters __instance PrecursorTeleporterActivationTerminal"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch.html",
    "title": "Class PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch | Nitrox",
    "keywords": "Class PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(PrecursorTeleporterActivationTerminal)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporter_OnActivateTeleporter_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporter_OnActivateTeleporter_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporter_OnActivateTeleporter_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporter_OnActivateTeleporter_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(PrecursorTeleporter) public static void Postfix(PrecursorTeleporter __instance) Parameters __instance PrecursorTeleporter"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporter_OnActivateTeleporter_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrecursorTeleporter_OnActivateTeleporter_Patch.html",
    "title": "Class PrecursorTeleporter_OnActivateTeleporter_Patch | Nitrox",
    "keywords": "Class PrecursorTeleporter_OnActivateTeleporter_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PrecursorTeleporter_OnActivateTeleporter_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PrecursorTeleporter_OnActivateTeleporter_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(PrecursorTeleporter)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrefabPlaceholdersGroup_Spawn_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrefabPlaceholdersGroup_Spawn_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrefabPlaceholdersGroup_Spawn_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrefabPlaceholdersGroup_Spawn_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.PrefabPlaceholdersGroup_Spawn_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PrefabPlaceholdersGroup_Spawn_Patch.html",
    "title": "Class PrefabPlaceholdersGroup_Spawn_Patch | Nitrox",
    "keywords": "Class PrefabPlaceholdersGroup_Spawn_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PrefabPlaceholdersGroup_Spawn_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PrefabPlaceholdersGroup_Spawn_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_GrabObject_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_GrabObject_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_GrabObject_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_GrabObject_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(PropulsionCannon, GameObject) public static bool Prefix(PropulsionCannon __instance, GameObject target) Parameters __instance PropulsionCannon target GameObject Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_GrabObject_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_GrabObject_Patch.html",
    "title": "Class PropulsionCannon_GrabObject_Patch | Nitrox",
    "keywords": "Class PropulsionCannon_GrabObject_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PropulsionCannon_GrabObject_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PropulsionCannon_GrabObject_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(PropulsionCannon, GameObject)"
  },
  "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_ReleaseGrabbedObject_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_ReleaseGrabbedObject_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_ReleaseGrabbedObject_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_ReleaseGrabbedObject_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(PropulsionCannon) public static bool Prefix(PropulsionCannon __instance) Parameters __instance PropulsionCannon Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_ReleaseGrabbedObject_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_ReleaseGrabbedObject_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_ReleaseGrabbedObject_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.PropulsionCannon_ReleaseGrabbedObject_Patch.html",
    "title": "Class PropulsionCannon_ReleaseGrabbedObject_Patch | Nitrox",
    "keywords": "Class PropulsionCannon_ReleaseGrabbedObject_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class PropulsionCannon_ReleaseGrabbedObject_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch PropulsionCannon_ReleaseGrabbedObject_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(PropulsionCannon)"
  },
  "api/NitroxPatcher.Patches.Dynamic.QuickSlots_Bind_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.QuickSlots_Bind_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.QuickSlots_Bind_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.QuickSlots_Bind_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(QuickSlots) public static void Postfix(QuickSlots __instance) Parameters __instance QuickSlots"
  },
  "api/NitroxPatcher.Patches.Dynamic.QuickSlots_Bind_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.QuickSlots_Bind_Patch.html",
    "title": "Class QuickSlots_Bind_Patch | Nitrox",
    "keywords": "Class QuickSlots_Bind_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class QuickSlots_Bind_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch QuickSlots_Bind_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(QuickSlots)"
  },
  "api/NitroxPatcher.Patches.Dynamic.QuickSlots_DeselectInternal_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.QuickSlots_DeselectInternal_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.QuickSlots_DeselectInternal_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.QuickSlots_DeselectInternal_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(InventoryItem) public static void Prefix(InventoryItem ____heldItem) Parameters ____heldItem InventoryItem"
  },
  "api/NitroxPatcher.Patches.Dynamic.QuickSlots_DeselectInternal_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.QuickSlots_DeselectInternal_Patch.html",
    "title": "Class QuickSlots_DeselectInternal_Patch | Nitrox",
    "keywords": "Class QuickSlots_DeselectInternal_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class QuickSlots_DeselectInternal_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch QuickSlots_DeselectInternal_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(InventoryItem)"
  },
  "api/NitroxPatcher.Patches.Dynamic.QuickSlots_SelectInternal_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.QuickSlots_SelectInternal_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.QuickSlots_SelectInternal_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.QuickSlots_SelectInternal_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(InventoryItem, NitroxTechType) public static void Postfix(InventoryItem ____heldItem, NitroxTechType __state) Parameters ____heldItem InventoryItem __state NitroxTechType"
  },
  "api/NitroxPatcher.Patches.Dynamic.QuickSlots_SelectInternal_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.QuickSlots_SelectInternal_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(QuickSlots, int, ref NitroxTechType) public static void Prefix(QuickSlots __instance, int slotID, ref NitroxTechType __state) Parameters __instance QuickSlots slotID int __state NitroxTechType"
  },
  "api/NitroxPatcher.Patches.Dynamic.QuickSlots_SelectInternal_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.QuickSlots_SelectInternal_Patch.html",
    "title": "Class QuickSlots_SelectInternal_Patch | Nitrox",
    "keywords": "Class QuickSlots_SelectInternal_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class QuickSlots_SelectInternal_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch QuickSlots_SelectInternal_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(InventoryItem, NitroxTechType) Prefix(QuickSlots, int, ref NitroxTechType)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Radio_OnRepair_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Radio_OnRepair_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Radio_OnRepair_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Radio_OnRepair_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Radio) public static void Prefix(Radio __instance) Parameters __instance Radio"
  },
  "api/NitroxPatcher.Patches.Dynamic.Radio_OnRepair_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Radio_OnRepair_Patch.html",
    "title": "Class Radio_OnRepair_Patch | Nitrox",
    "keywords": "Class Radio_OnRepair_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Radio_OnRepair_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Radio_OnRepair_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Radio)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Radio_PlayRadioMessage_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Radio_PlayRadioMessage_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Radio_PlayRadioMessage_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Radio_PlayRadioMessage_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static void Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.Radio_PlayRadioMessage_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Radio_PlayRadioMessage_Patch.html",
    "title": "Class Radio_PlayRadioMessage_Patch | Nitrox",
    "keywords": "Class Radio_PlayRadioMessage_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Radio_PlayRadioMessage_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Radio_PlayRadioMessage_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.RocketConstructor_StartRocketConstruction_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.RocketConstructor_StartRocketConstruction_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.RocketConstructor_StartRocketConstruction_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.RocketConstructor_StartRocketConstruction_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.RocketConstructor_StartRocketConstruction_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.RocketConstructor_StartRocketConstruction_Patch.html",
    "title": "Class RocketConstructor_StartRocketConstruction_Patch | Nitrox",
    "keywords": "Class RocketConstructor_StartRocketConstruction_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class RocketConstructor_StartRocketConstruction_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch RocketConstructor_StartRocketConstruction_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.RocketPreflightCheckManager_CompletePreflightCheck_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.RocketPreflightCheckManager_CompletePreflightCheck_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.RocketPreflightCheckManager_CompletePreflightCheck_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.RocketPreflightCheckManager_CompletePreflightCheck_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(RocketPreflightCheckManager) public static void Postfix(RocketPreflightCheckManager __instance) Parameters __instance RocketPreflightCheckManager"
  },
  "api/NitroxPatcher.Patches.Dynamic.RocketPreflightCheckManager_CompletePreflightCheck_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.RocketPreflightCheckManager_CompletePreflightCheck_Patch.html",
    "title": "Class RocketPreflightCheckManager_CompletePreflightCheck_Patch | Nitrox",
    "keywords": "Class RocketPreflightCheckManager_CompletePreflightCheck_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class RocketPreflightCheckManager_CompletePreflightCheck_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch RocketPreflightCheckManager_CompletePreflightCheck_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(RocketPreflightCheckManager)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Rocket_CallElevator_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Rocket_CallElevator_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Rocket_CallElevator_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Rocket_CallElevator_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(Rocket, bool, RocketElevatorStates) public static void Postfix(Rocket __instance, bool up, Rocket.RocketElevatorStates __state) Parameters __instance Rocket up bool __state Rocket.RocketElevatorStates"
  },
  "api/NitroxPatcher.Patches.Dynamic.Rocket_CallElevator_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Rocket_CallElevator_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Rocket, out RocketElevatorStates) public static void Prefix(Rocket __instance, out Rocket.RocketElevatorStates __state) Parameters __instance Rocket __state Rocket.RocketElevatorStates"
  },
  "api/NitroxPatcher.Patches.Dynamic.Rocket_CallElevator_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Rocket_CallElevator_Patch.html",
    "title": "Class Rocket_CallElevator_Patch | Nitrox",
    "keywords": "Class Rocket_CallElevator_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Rocket_CallElevator_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Rocket_CallElevator_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(Rocket, bool, RocketElevatorStates) Prefix(Rocket, out RocketElevatorStates)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Rocket_ElevatorControlButtonActivate_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Rocket_ElevatorControlButtonActivate_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Rocket_ElevatorControlButtonActivate_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Rocket_ElevatorControlButtonActivate_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(Rocket, RocketElevatorStates) public static void Postfix(Rocket __instance, Rocket.RocketElevatorStates __state) Parameters __instance Rocket __state Rocket.RocketElevatorStates"
  },
  "api/NitroxPatcher.Patches.Dynamic.Rocket_ElevatorControlButtonActivate_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Rocket_ElevatorControlButtonActivate_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Rocket, out RocketElevatorStates) public static void Prefix(Rocket __instance, out Rocket.RocketElevatorStates __state) Parameters __instance Rocket __state Rocket.RocketElevatorStates"
  },
  "api/NitroxPatcher.Patches.Dynamic.Rocket_ElevatorControlButtonActivate_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Rocket_ElevatorControlButtonActivate_Patch.html",
    "title": "Class Rocket_ElevatorControlButtonActivate_Patch | Nitrox",
    "keywords": "Class Rocket_ElevatorControlButtonActivate_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Rocket_ElevatorControlButtonActivate_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Rocket_ElevatorControlButtonActivate_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(Rocket, RocketElevatorStates) Prefix(Rocket, out RocketElevatorStates)"
  },
  "api/NitroxPatcher.Patches.Dynamic.SeaMoth_OnUpgradeModuleUse_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SeaMoth_OnUpgradeModuleUse_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SeaMoth_OnUpgradeModuleUse_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SeaMoth_OnUpgradeModuleUse_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(SeaMoth, TechType, int) public static bool Prefix(SeaMoth __instance, TechType techType, int slotID) Parameters __instance SeaMoth techType TechType slotID int Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.SeaMoth_OnUpgradeModuleUse_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SeaMoth_OnUpgradeModuleUse_Patch.html",
    "title": "Class SeaMoth_OnUpgradeModuleUse_Patch | Nitrox",
    "keywords": "Class SeaMoth_OnUpgradeModuleUse_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class SeaMoth_OnUpgradeModuleUse_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SeaMoth_OnUpgradeModuleUse_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(SeaMoth, TechType, int)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Sealed_Weld_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Sealed_Weld_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Sealed_Weld_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Sealed_Weld_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(Sealed) public static void Postfix(Sealed __instance) Parameters __instance Sealed"
  },
  "api/NitroxPatcher.Patches.Dynamic.Sealed_Weld_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Sealed_Weld_Patch.html",
    "title": "Class Sealed_Weld_Patch | Nitrox",
    "keywords": "Class Sealed_Weld_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Sealed_Weld_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Sealed_Weld_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(Sealed)"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnConsoleCommand_OnConsoleCommand_Patch.Callback.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnConsoleCommand_OnConsoleCommand_Patch.Callback.html",
    "title": "Method Callback | Nitrox",
    "keywords": "Method Callback Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Callback(GameObject) public static void Callback(GameObject gameObject) Parameters gameObject GameObject"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnConsoleCommand_OnConsoleCommand_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnConsoleCommand_OnConsoleCommand_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnConsoleCommand_OnConsoleCommand_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnConsoleCommand_OnConsoleCommand_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnConsoleCommand_OnConsoleCommand_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnConsoleCommand_OnConsoleCommand_Patch.html",
    "title": "Class SpawnConsoleCommand_OnConsoleCommand_Patch | Nitrox",
    "keywords": "Class SpawnConsoleCommand_OnConsoleCommand_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class SpawnConsoleCommand_OnConsoleCommand_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SpawnConsoleCommand_OnConsoleCommand_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Callback(GameObject) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnEscapePodSupplies_OnNewBorn_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnEscapePodSupplies_OnNewBorn_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnEscapePodSupplies_OnNewBorn_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnEscapePodSupplies_OnNewBorn_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnEscapePodSupplies_OnNewBorn_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnEscapePodSupplies_OnNewBorn_Patch.html",
    "title": "Class SpawnEscapePodSupplies_OnNewBorn_Patch | Nitrox",
    "keywords": "Class SpawnEscapePodSupplies_OnNewBorn_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Don't allow the game to spawn initial supplies in the escape pod. public sealed class SpawnEscapePodSupplies_OnNewBorn_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SpawnEscapePodSupplies_OnNewBorn_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_Patch.html",
    "title": "Class SpawnOnKill_OnKill_Patch | Nitrox",
    "keywords": "Class SpawnOnKill_OnKill_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Synchronizes entities that Spawn something when they are killed, e.g. Coral Disks. public sealed class SpawnOnKill_OnKill_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SpawnOnKill_OnKill_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpawnOnKill_OnKill_PatchTest.html",
    "title": "Class SpawnOnKill_OnKill_PatchTest | Nitrox",
    "keywords": "Class SpawnOnKill_OnKill_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class SpawnOnKill_OnKill_PatchTest Inheritance object SpawnOnKill_OnKill_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpeedConsoleCommand_OnConsoleCommand_speed_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpeedConsoleCommand_OnConsoleCommand_speed_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpeedConsoleCommand_OnConsoleCommand_speed_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpeedConsoleCommand_OnConsoleCommand_speed_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.SpeedConsoleCommand_OnConsoleCommand_speed_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SpeedConsoleCommand_OnConsoleCommand_speed_Patch.html",
    "title": "Class SpeedConsoleCommand_OnConsoleCommand_speed_Patch | Nitrox",
    "keywords": "Class SpeedConsoleCommand_OnConsoleCommand_speed_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class SpeedConsoleCommand_OnConsoleCommand_speed_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SpeedConsoleCommand_OnConsoleCommand_speed_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.SplineFollowing_GoTo_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SplineFollowing_GoTo_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SplineFollowing_GoTo_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SplineFollowing_GoTo_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(SplineFollowing, Vector3, Vector3, float) public static void Prefix(SplineFollowing __instance, Vector3 targetPos, Vector3 targetDir, float velocity) Parameters __instance SplineFollowing targetPos Vector3 targetDir Vector3 velocity float"
  },
  "api/NitroxPatcher.Patches.Dynamic.SplineFollowing_GoTo_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SplineFollowing_GoTo_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.SplineFollowing_GoTo_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SplineFollowing_GoTo_Patch.html",
    "title": "Class SplineFollowing_GoTo_Patch | Nitrox",
    "keywords": "Class SplineFollowing_GoTo_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll SplineFollowing is the internal behavior inside SwimBehavior and WalkBehavior that causes an entity to move. Whenever a NitroxEntity receives a MoveTo action, we'll let the EntityPositionBroadcaster know (internally, it will check if it is an entity we are watching an broadcast when applicable). public sealed class SplineFollowing_GoTo_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SplineFollowing_GoTo_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(SplineFollowing, Vector3, Vector3, float)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Stalker_CheckLoseTooth_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Stalker_CheckLoseTooth_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Stalker_CheckLoseTooth_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Stalker_CheckLoseTooth_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Stalker, GameObject) public static bool Prefix(Stalker __instance, GameObject target) Parameters __instance Stalker target GameObject Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Stalker_CheckLoseTooth_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Stalker_CheckLoseTooth_Patch.html",
    "title": "Class Stalker_CheckLoseTooth_Patch | Nitrox",
    "keywords": "Class Stalker_CheckLoseTooth_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Stalker_CheckLoseTooth_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Stalker_CheckLoseTooth_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Stalker, GameObject)"
  },
  "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_LockDoor_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_LockDoor_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_LockDoor_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_LockDoor_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(StarshipDoor) public static void Prefix(StarshipDoor __instance) Parameters __instance StarshipDoor"
  },
  "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_LockDoor_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_LockDoor_Patch.html",
    "title": "Class StarshipDoor_LockDoor_Patch | Nitrox",
    "keywords": "Class StarshipDoor_LockDoor_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class StarshipDoor_LockDoor_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch StarshipDoor_LockDoor_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(StarshipDoor)"
  },
  "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_OnDoorToggle_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_OnDoorToggle_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_OnDoorToggle_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_OnDoorToggle_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(StarshipDoor) public static void Postfix(StarshipDoor __instance) Parameters __instance StarshipDoor"
  },
  "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_OnDoorToggle_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_OnDoorToggle_Patch.html",
    "title": "Class StarshipDoor_OnDoorToggle_Patch | Nitrox",
    "keywords": "Class StarshipDoor_OnDoorToggle_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class StarshipDoor_OnDoorToggle_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch StarshipDoor_OnDoorToggle_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(StarshipDoor)"
  },
  "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_UnlockDoor_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_UnlockDoor_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_UnlockDoor_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_UnlockDoor_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(StarshipDoor) public static void Prefix(StarshipDoor __instance) Parameters __instance StarshipDoor"
  },
  "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_UnlockDoor_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StarshipDoor_UnlockDoor_Patch.html",
    "title": "Class StarshipDoor_UnlockDoor_Patch | Nitrox",
    "keywords": "Class StarshipDoor_UnlockDoor_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class StarshipDoor_UnlockDoor_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch StarshipDoor_UnlockDoor_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(StarshipDoor)"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoalCustomEventHandler_OnConsoleCommand_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoalCustomEventHandler_OnConsoleCommand_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoalCustomEventHandler_OnConsoleCommand_Patch.PrefixCountdown.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoalCustomEventHandler_OnConsoleCommand_Patch.PrefixCountdown.html",
    "title": "Method PrefixCountdown | Nitrox",
    "keywords": "Method PrefixCountdown Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixCountdown() public static bool PrefixCountdown() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoalCustomEventHandler_OnConsoleCommand_Patch.PrefixGunAim.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoalCustomEventHandler_OnConsoleCommand_Patch.PrefixGunAim.html",
    "title": "Method PrefixGunAim | Nitrox",
    "keywords": "Method PrefixGunAim Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixGunAim() public static bool PrefixGunAim() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoalCustomEventHandler_OnConsoleCommand_Patch.PrefixStartStory.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoalCustomEventHandler_OnConsoleCommand_Patch.PrefixStartStory.html",
    "title": "Method PrefixStartStory | Nitrox",
    "keywords": "Method PrefixStartStory Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll PrefixStartStory() public static bool PrefixStartStory() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoalCustomEventHandler_OnConsoleCommand_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoalCustomEventHandler_OnConsoleCommand_Patch.html",
    "title": "Class StoryGoalCustomEventHandler_OnConsoleCommand_Patch | Nitrox",
    "keywords": "Class StoryGoalCustomEventHandler_OnConsoleCommand_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class StoryGoalCustomEventHandler_OnConsoleCommand_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch StoryGoalCustomEventHandler_OnConsoleCommand_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) PrefixCountdown() PrefixGunAim() PrefixStartStory()"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoalScheduler_Schedule_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoalScheduler_Schedule_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoalScheduler_Schedule_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoalScheduler_Schedule_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(StoryGoal, bool) public static void Postfix(StoryGoal goal, bool __state) Parameters goal StoryGoal __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoalScheduler_Schedule_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoalScheduler_Schedule_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(StoryGoal, out bool) public static bool Prefix(StoryGoal goal, out bool __state) Parameters goal StoryGoal __state bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoalScheduler_Schedule_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoalScheduler_Schedule_Patch.html",
    "title": "Class StoryGoalScheduler_Schedule_Patch | Nitrox",
    "keywords": "Class StoryGoalScheduler_Schedule_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class StoryGoalScheduler_Schedule_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch StoryGoalScheduler_Schedule_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(StoryGoal, bool) Prefix(StoryGoal, out bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoal_Execute_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoal_Execute_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoal_Execute_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoal_Execute_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(string, GoalType, bool) Notifies the server of the execution of StoryGoals of type PDA public static void Postfix(string key, GoalType goalType, bool __state) Parameters key string goalType GoalType __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoal_Execute_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoal_Execute_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(string, GoalType, out bool) Notifies the server of the execution of StoryGoals (except of PDA type) public static void Prefix(string key, GoalType goalType, out bool __state) Parameters key string goalType GoalType __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.StoryGoal_Execute_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.StoryGoal_Execute_Patch.html",
    "title": "Class StoryGoal_Execute_Patch | Nitrox",
    "keywords": "Class StoryGoal_Execute_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class StoryGoal_Execute_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch StoryGoal_Execute_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(string, GoalType, bool) Notifies the server of the execution of StoryGoals of type PDA Prefix(string, GoalType, out bool) Notifies the server of the execution of StoryGoals (except of PDA type)"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubConsoleCommand_OnConsoleCommand_sub_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubConsoleCommand_OnConsoleCommand_sub_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubConsoleCommand_OnConsoleCommand_sub_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubConsoleCommand_OnConsoleCommand_sub_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubConsoleCommand_OnConsoleCommand_sub_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubConsoleCommand_OnConsoleCommand_sub_Patch.html",
    "title": "Class SubConsoleCommand_OnConsoleCommand_sub_Patch | Nitrox",
    "keywords": "Class SubConsoleCommand_OnConsoleCommand_sub_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Called whenever a Cyclops or Seamoth is spawned. Nitrox already has its own command to spawn vehicles. This patch is only meant to block the method from executing, causing two vehicles to be spawned instead of one public sealed class SubConsoleCommand_OnConsoleCommand_sub_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SubConsoleCommand_OnConsoleCommand_sub_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubFire_CreateFire_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubFire_CreateFire_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubFire_CreateFire_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubFire_CreateFire_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(SubFire, RoomFire, bool) public static void Postfix(SubFire __instance, SubFire.RoomFire startInRoom, bool __state) Parameters __instance SubFire startInRoom SubFire.RoomFire __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubFire_CreateFire_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubFire_CreateFire_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(SubFire, RoomFire, out bool) public static bool Prefix(SubFire __instance, SubFire.RoomFire startInRoom, out bool __state) Parameters __instance SubFire startInRoom SubFire.RoomFire __state bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubFire_CreateFire_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubFire_CreateFire_Patch.html",
    "title": "Class SubFire_CreateFire_Patch | Nitrox",
    "keywords": "Class SubFire_CreateFire_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Hook onto SubFire.CreateFire(SubFire.RoomFire). We do this on the fire creation method because unlike SubRoot.OnTakeDamage(DamageInfo), fires can be created outside of SubFire.OnTakeDamage(DamageInfo) public sealed class SubFire_CreateFire_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SubFire_CreateFire_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(SubFire, RoomFire, bool) Prefix(SubFire, RoomFire, out bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnColorChange_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnColorChange_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnColorChange_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnColorChange_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(SubNameInput) public static void Postfix(SubNameInput __instance) Parameters __instance SubNameInput"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnColorChange_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnColorChange_Patch.html",
    "title": "Class SubNameInput_OnColorChange_Patch | Nitrox",
    "keywords": "Class SubNameInput_OnColorChange_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class SubNameInput_OnColorChange_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SubNameInput_OnColorChange_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(SubNameInput)"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnNameChange_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnNameChange_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnNameChange_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnNameChange_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(SubNameInput) public static void Postfix(SubNameInput __instance) Parameters __instance SubNameInput"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnNameChange_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnNameChange_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnNameChange_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubNameInput_OnNameChange_Patch.html",
    "title": "Class SubNameInput_OnNameChange_Patch | Nitrox",
    "keywords": "Class SubNameInput_OnNameChange_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class SubNameInput_OnNameChange_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SubNameInput_OnNameChange_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(SubNameInput)"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnPlayerEntered_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnPlayerEntered_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnPlayerEntered_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnPlayerEntered_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>, ILGenerator) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions, ILGenerator generator) Parameters original MethodBase instructions IEnumerable<CodeInstruction> generator ILGenerator Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnPlayerEntered_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnPlayerEntered_Patch.html",
    "title": "Class SubRoot_OnPlayerEntered_Patch | Nitrox",
    "keywords": "Class SubRoot_OnPlayerEntered_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class SubRoot_OnPlayerEntered_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SubRoot_OnPlayerEntered_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>, ILGenerator)"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnTakeDamage_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnTakeDamage_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnTakeDamage_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnTakeDamage_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(bool, SubRoot, DamageInfo) public static void Postfix(bool __runOriginal, SubRoot __instance, DamageInfo damageInfo) Parameters __runOriginal bool __instance SubRoot damageInfo DamageInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnTakeDamage_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnTakeDamage_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(SubRoot, DamageInfo) public static bool Prefix(SubRoot __instance, DamageInfo damageInfo) Parameters __instance SubRoot damageInfo DamageInfo Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnTakeDamage_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.SubRoot_OnTakeDamage_Patch.html",
    "title": "Class SubRoot_OnTakeDamage_Patch | Nitrox",
    "keywords": "Class SubRoot_OnTakeDamage_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Hook onto SubRoot.OnTakeDamage(DamageInfo). It'd be nice if this were the only hook needed, but both damage points and fires are created in a separate class that doesn't necessarily finish running after OnTakeDamage finishes. Since that's the case, this is used only to stop phantom damage alerts that the owner didn't register public sealed class SubRoot_OnTakeDamage_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch SubRoot_OnTakeDamage_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(bool, SubRoot, DamageInfo) Prefix(SubRoot, DamageInfo)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Survival_Eat_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Survival_Eat_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Survival_Eat_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Survival_Eat_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(bool, GameObject) public static void Postfix(bool __result, GameObject useObj) Parameters __result bool useObj GameObject"
  },
  "api/NitroxPatcher.Patches.Dynamic.Survival_Eat_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Survival_Eat_Patch.html",
    "title": "Class Survival_Eat_Patch | Nitrox",
    "keywords": "Class Survival_Eat_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Let the server know when the player successfully eats an item. public sealed class Survival_Eat_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Survival_Eat_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(bool, GameObject)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Survival_Use_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Survival_Use_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Survival_Use_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Survival_Use_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(bool, GameObject) public static void Postfix(bool __result, GameObject useObj) Parameters __result bool useObj GameObject"
  },
  "api/NitroxPatcher.Patches.Dynamic.Survival_Use_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Survival_Use_Patch.html",
    "title": "Class Survival_Use_Patch | Nitrox",
    "keywords": "Class Survival_Use_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Let the server know when the player successfully uses a consumable item (such as a first aid kit). public sealed class Survival_Use_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Survival_Use_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(bool, GameObject)"
  },
  "api/NitroxPatcher.Patches.Dynamic.ToggleLights_SetLightsActive_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ToggleLights_SetLightsActive_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.ToggleLights_SetLightsActive_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ToggleLights_SetLightsActive_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(ToggleLights, bool) public static void Postfix(ToggleLights __instance, bool __state) Parameters __instance ToggleLights __state bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.ToggleLights_SetLightsActive_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ToggleLights_SetLightsActive_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(ToggleLights, out bool) public static bool Prefix(ToggleLights __instance, out bool __state) Parameters __instance ToggleLights __state bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.ToggleLights_SetLightsActive_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.ToggleLights_SetLightsActive_Patch.html",
    "title": "Class ToggleLights_SetLightsActive_Patch | Nitrox",
    "keywords": "Class ToggleLights_SetLightsActive_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class ToggleLights_SetLightsActive_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch ToggleLights_SetLightsActive_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(ToggleLights, bool) Prefix(ToggleLights, out bool)"
  },
  "api/NitroxPatcher.Patches.Dynamic.UniqueIdentifier_Id_Getter_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.UniqueIdentifier_Id_Getter_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.UniqueIdentifier_Id_Getter_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.UniqueIdentifier_Id_Getter_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(string, ref string) public static bool Prefix(string ___id, ref string __result) Parameters ___id string __result string Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.UniqueIdentifier_Id_Getter_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.UniqueIdentifier_Id_Getter_Patch.html",
    "title": "Class UniqueIdentifier_Id_Getter_Patch | Nitrox",
    "keywords": "Class UniqueIdentifier_Id_Getter_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class UniqueIdentifier_Id_Getter_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch UniqueIdentifier_Id_Getter_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(string, ref string)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Utils_GetEntityRoot_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Utils_GetEntityRoot_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Utils_GetEntityRoot_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Utils_GetEntityRoot_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(GameObject, ref GameObject) public static bool Prefix(GameObject go, ref GameObject __result) Parameters go GameObject __result GameObject Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Utils_GetEntityRoot_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Utils_GetEntityRoot_Patch.html",
    "title": "Class Utils_GetEntityRoot_Patch | Nitrox",
    "keywords": "Class Utils_GetEntityRoot_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll When looking for an EntityRoot, we want to make sure that remote players can be recognized as one. public sealed class Utils_GetEntityRoot_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Utils_GetEntityRoot_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(GameObject, ref GameObject)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Utils_PlayFMODAsset_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Utils_PlayFMODAsset_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Utils_PlayFMODAsset_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Utils_PlayFMODAsset_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(FMODAsset) public static void Postfix(FMODAsset asset) Parameters asset FMODAsset"
  },
  "api/NitroxPatcher.Patches.Dynamic.Utils_PlayFMODAsset_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Utils_PlayFMODAsset_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Utils_PlayFMODAsset_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Utils_PlayFMODAsset_Patch.html",
    "title": "Class Utils_PlayFMODAsset_Patch | Nitrox",
    "keywords": "Class Utils_PlayFMODAsset_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Utils_PlayFMODAsset_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Utils_PlayFMODAsset_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(FMODAsset) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.VFXConstructing_WakeUpSubmarine_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VFXConstructing_WakeUpSubmarine_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.VFXConstructing_WakeUpSubmarine_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VFXConstructing_WakeUpSubmarine_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(VFXConstructing) public static void Postfix(VFXConstructing __instance) Parameters __instance VFXConstructing"
  },
  "api/NitroxPatcher.Patches.Dynamic.VFXConstructing_WakeUpSubmarine_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VFXConstructing_WakeUpSubmarine_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.VFXConstructing_WakeUpSubmarine_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VFXConstructing_WakeUpSubmarine_Patch.html",
    "title": "Class VFXConstructing_WakeUpSubmarine_Patch | Nitrox",
    "keywords": "Class VFXConstructing_WakeUpSubmarine_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll In the base game, subnautica uses a script to freeze all rigid bodies when they get out of distance. However, this script also messes with interpolation of objects - especially those being driven by other players. We disable the functionality when the Cyclops is fully loaded because there are validations that fail if removing it earlier (i.e. exceptions in code). public sealed class VFXConstructing_WakeUpSubmarine_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch VFXConstructing_WakeUpSubmarine_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(VFXConstructing)"
  },
  "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnTriggerEnter.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnTriggerEnter.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnTriggerEnter.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnTriggerEnter.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(VehicleDockingBay) public static void Postfix(VehicleDockingBay __instance) Parameters __instance VehicleDockingBay"
  },
  "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnTriggerEnter.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnTriggerEnter.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(VehicleDockingBay, Collider) public static bool Prefix(VehicleDockingBay __instance, Collider other) Parameters __instance VehicleDockingBay other Collider Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnTriggerEnter.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnTriggerEnter.html",
    "title": "Class VehicleDockingBay_OnTriggerEnter | Nitrox",
    "keywords": "Class VehicleDockingBay_OnTriggerEnter Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class VehicleDockingBay_OnTriggerEnter : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch VehicleDockingBay_OnTriggerEnter Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(VehicleDockingBay) Prefix(VehicleDockingBay, Collider)"
  },
  "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnUndockingComplete_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnUndockingComplete_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnUndockingComplete_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnUndockingComplete_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(VehicleDockingBay, Player) public static void Prefix(VehicleDockingBay __instance, Player player) Parameters __instance VehicleDockingBay player Player"
  },
  "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnUndockingComplete_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.VehicleDockingBay_OnUndockingComplete_Patch.html",
    "title": "Class VehicleDockingBay_OnUndockingComplete_Patch | Nitrox",
    "keywords": "Class VehicleDockingBay_OnUndockingComplete_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class VehicleDockingBay_OnUndockingComplete_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch VehicleDockingBay_OnUndockingComplete_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(VehicleDockingBay, Player)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnHandClick_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnHandClick_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnHandClick_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnHandClick_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Vehicle, GUIHand) public static bool Prefix(Vehicle __instance, GUIHand hand) Parameters __instance Vehicle hand GUIHand Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnHandClick_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnHandClick_Patch.html",
    "title": "Class Vehicle_OnHandClick_Patch | Nitrox",
    "keywords": "Class Vehicle_OnHandClick_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Vehicle_OnHandClick_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Vehicle_OnHandClick_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Vehicle, GUIHand)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnKill_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnKill_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnKill_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnKill_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Vehicle) public static void Prefix(Vehicle __instance) Parameters __instance Vehicle"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnKill_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnKill_Patch.html",
    "title": "Class Vehicle_OnKill_Patch | Nitrox",
    "keywords": "Class Vehicle_OnKill_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Vehicle_OnKill_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Vehicle_OnKill_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Vehicle)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeBegin_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeBegin_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeBegin_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeBegin_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Vehicle) public static void Prefix(Vehicle __instance) Parameters __instance Vehicle"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeBegin_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeBegin_Patch.html",
    "title": "Class Vehicle_OnPilotModeBegin_Patch | Nitrox",
    "keywords": "Class Vehicle_OnPilotModeBegin_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Vehicle_OnPilotModeBegin_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Vehicle_OnPilotModeBegin_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Vehicle)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeEnd_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeEnd_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeEnd_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeEnd_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(Vehicle) public static void Prefix(Vehicle __instance) Parameters __instance Vehicle"
  },
  "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeEnd_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Vehicle_OnPilotModeEnd_Patch.html",
    "title": "Class Vehicle_OnPilotModeEnd_Patch | Nitrox",
    "keywords": "Class Vehicle_OnPilotModeEnd_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Vehicle_OnPilotModeEnd_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Vehicle_OnPilotModeEnd_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix(Vehicle)"
  },
  "api/NitroxPatcher.Patches.Dynamic.WaterPark_Split_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WaterPark_Split_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.WaterPark_Split_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WaterPark_Split_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(WaterPark, WaterPark) public static void Postfix(WaterPark bottomWaterPark, WaterPark topWaterPark) Parameters bottomWaterPark WaterPark topWaterPark WaterPark"
  },
  "api/NitroxPatcher.Patches.Dynamic.WaterPark_Split_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WaterPark_Split_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(WaterPark, WaterPark) public static bool Prefix(WaterPark bottomWaterPark, WaterPark topWaterPark) Parameters bottomWaterPark WaterPark topWaterPark WaterPark Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.WaterPark_Split_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WaterPark_Split_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.WaterPark_Split_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WaterPark_Split_Patch.html",
    "title": "Class WaterPark_Split_Patch | Nitrox",
    "keywords": "Class WaterPark_Split_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll When two WaterParks are separated (a WaterPark piece in between them was destructed), gives the newly created WaterPark a NitroxEntity. public sealed class WaterPark_Split_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch WaterPark_Split_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Postfix(WaterPark, WaterPark) Prefix(WaterPark, WaterPark)"
  },
  "api/NitroxPatcher.Patches.Dynamic.WaterPark_TransferValue_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WaterPark_TransferValue_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.WaterPark_TransferValue_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WaterPark_TransferValue_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix(WaterPark, WaterPark) public static void Prefix(WaterPark srcWaterPark, WaterPark dstWaterPark) Parameters srcWaterPark WaterPark dstWaterPark WaterPark"
  },
  "api/NitroxPatcher.Patches.Dynamic.WaterPark_TransferValue_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WaterPark_TransferValue_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.WaterPark_TransferValue_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WaterPark_TransferValue_Patch.html",
    "title": "Class WaterPark_TransferValue_Patch | Nitrox",
    "keywords": "Class WaterPark_TransferValue_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transfers the NitroxEntity to the new main module when two WaterParks are merged. public sealed class WaterPark_TransferValue_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch WaterPark_TransferValue_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Patch(Harmony) Prefix(WaterPark, WaterPark)"
  },
  "api/NitroxPatcher.Patches.Dynamic.WeldableWallPanelGeneric_UnlockDoor_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WeldableWallPanelGeneric_UnlockDoor_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.WeldableWallPanelGeneric_UnlockDoor_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WeldableWallPanelGeneric_UnlockDoor_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(WeldableWallPanelGeneric) public static void Postfix(WeldableWallPanelGeneric __instance) Parameters __instance WeldableWallPanelGeneric"
  },
  "api/NitroxPatcher.Patches.Dynamic.WeldableWallPanelGeneric_UnlockDoor_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.WeldableWallPanelGeneric_UnlockDoor_Patch.html",
    "title": "Class WeldableWallPanelGeneric_UnlockDoor_Patch | Nitrox",
    "keywords": "Class WeldableWallPanelGeneric_UnlockDoor_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class WeldableWallPanelGeneric_UnlockDoor_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch WeldableWallPanelGeneric_UnlockDoor_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(WeldableWallPanelGeneric)"
  },
  "api/NitroxPatcher.Patches.Dynamic.Welder_Weld_Patch.AddHealthOverride.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Welder_Weld_Patch.AddHealthOverride.html",
    "title": "Method AddHealthOverride | Nitrox",
    "keywords": "Method AddHealthOverride Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll AddHealthOverride(LiveMixin, float, Welder) public static float AddHealthOverride(LiveMixin live, float addHealth, Welder welder) Parameters live LiveMixin addHealth float welder Welder Returns float"
  },
  "api/NitroxPatcher.Patches.Dynamic.Welder_Weld_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Welder_Weld_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.Welder_Weld_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Welder_Weld_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static bool Prefix() Returns bool"
  },
  "api/NitroxPatcher.Patches.Dynamic.Welder_Weld_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Welder_Weld_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.Welder_Weld_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.Welder_Weld_Patch.html",
    "title": "Class Welder_Weld_Patch | Nitrox",
    "keywords": "Class Welder_Weld_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class Welder_Weld_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch Welder_Weld_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods AddHealthOverride(LiveMixin, float, Welder) Patch(Harmony) Prefix() Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.html",
    "title": "Namespace NitroxPatcher.Patches.Dynamic | Nitrox",
    "keywords": "Namespace NitroxPatcher.Patches.Dynamic Classes ArmsController_Start_Patch ArmsController_Update_Patch BaseDeconstructable_Deconstruct_Patch BaseDeconstructable_Deconstruct_PatchTest BaseDeconstructable_DeconstructionAllowed_Patch Base_OnPreDestroy_Patch Before a base gets destroyed, we eventually detach/exit any remote player's object that would be inside so that their GameObjects don't get destroyed Bed_EnterInUseMode_Patch Bench_ExitSittingMode_Patch Bench_OnHandClick_Patch Bench_OnPlayerDeath_Patch BreakableResource_BreakIntoResources_Patch BreakableResource_SpawnResourceFromPrefab_Patch Synchronizes entities that can be broken and that will drop material, such as limestones... BreakableResource_SpawnResourceFromPrefab_PatchTest BuilderTool_Construct_Patch Builder_TryPlace_Patch Builder_TryPlace_PatchTest Builder_Update_Patch Changes the piece color during the placing process if the current base is desynced. ConstructableBase_SetState_Patch ConstructableBase_SetState_PatchTest Constructable_Construct_Patch Constructable_Construct_PatchTest Constructable_DeconstructAsync_Patch Constructable_DeconstructAsync_PatchTest Constructable_DeconstructionAllowed_Patch Prevents deconstruction if the target base is desynced. ConstructorInput_OnCraftingBegin_Patch ConstructorInput_OnCraftingBegin_PatchTest Constructor_Deploy_Patch CrafterLogic_TryPickupSingleAsync_Patch CrashHome_Spawn_Patch CrashedShipExploder_OnConsoleCommand_Patch Creature_ChooseBestAction_Patch CyclopsDamagePoint_OnRepair_Patch CyclopsExternalDamageManager.RepairPoint(CyclopsDamagePoint) would seem like the correct method to patch, but adding to its postfix will execute before CyclopsDamagePoint.OnRepair() is finished working. Both owners and non-owners will be able to repair damage points on a ship. CyclopsDecoyLaunchButton_OnClick_Patch CyclopsDestructionEvent_DestroyCyclops_Patch CyclopsDestructionEvent_OnConsoleCommand_Patch CyclopsEngineChangeState_OnClick_Patch CyclopsExternalDamageManager_CreatePoint_Patch CyclopsFireSuppressionButton_StartCooldown_Patch CyclopsHelmHUDManager_StopPiloting_Patch CyclopsHelmHUDManager_Update_Patch CyclopsLightingPanel_ToggleFloodlights_Patch CyclopsLightingPanel_ToggleInternalLighting_Patch CyclopsMotorModeButton_OnClick_Patch CyclopsMotorMode_RestoreEngineState_Patch CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch CyclopsShieldButton_OnClick_Patch CyclopsShieldButton_StartShield_Patch CyclopsShieldButton_StopShield_Patch CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch CyclopsSonarButton_OnClick_Patch CyclopsSonarButton_SonarPing_Patch The sonar will stay on until the player leaves the vehicle and automatically turns on when they enter again (if sonar was on at that time). CyclopsSonarButton_Update_Patch Prevents sonar from turning off automatically for the player that isn't currently piloting the Cyclops. CyclopsSonarButton_Update_PatchTest DayNightCycle_OnConsoleCommand_day_Patch DayNightCycle_OnConsoleCommand_daynightspeed_Patch DayNightCycle_OnConsoleCommand_night_Patch DayNightCycle_Update_Patch Replace the local time calculations by the real server time. DevConsole_Update_Patch Keeps DevConsole disabled when enter is pressed. DevConsole_Update_PatchTest DockedVehicleHandTarget_OnHandClick_Patch EnergyMixin_ModifyCharge_Patch EnergyMixin_OnAddItem_Patch EnergyMixin_SpawnDefaultAsync_Patch When items are spawned in Subnautica will automatically add batteries to them async. This is challenging to deal with because it is difficult to discriminate between these async/default additions and a user purposfully placing batteries into an object. Instead, we disable the default behavior and allow Nitrox to always spawn the batteries. This guarentees we can capture the ids correctly. EntityCell_QueueForAwake_Patch EntityCell_SleepAsync_Patch Entity cells will go sleep when the player gets out of range. This needs to be reported to the server so they can lose simulation locks. Equipment_AddItem_Patch Equipment_RemoveItem_Patch Equipment_RemoveItem_PatchTest EscapePod_Awake_Patch EscapePod_OnRepair_Patch ExosuitClawArm_OnPickup_Patch ExosuitClawArm_TryUse_Patch ExosuitDrillArm_OnUseDown_Patch ExosuitDrillArm_OnUseUp_Patch ExosuitGrapplingArm_OnHit_Patch ExosuitGrapplingArm_OnUseUp_Patch ExosuitTorpedoArm_OnUseUp_Patch ExosuitTorpedoArm_Shoot_Patch Exosuit_Update_Patch FMODUWE_PlayOneShotImpl_Patch FMOD_CustomEmitter_OnPlay_Patch FMOD_CustomEmitter_OnStop_Patch FMOD_CustomEmitter_Start_Patch FMOD_CustomLoopingEmitter_OnPlay_Patch FMOD_CustomLoopingEmitter_PlayStopSound_Patch FMOD_StudioEventEmitter_PlayUI_Patch FMOD_StudioEventEmitter_Start_Patch FMOD_StudioEventEmitter_Stop_Patch FireExtinguisherHolder_TakeTankAsync_Patch Broadcasts the FireExtinguisherHolder's metadata when picked up. FireExtinguisherHolder_TryStoreTank_Patch Broadcasts the FireExtinguisherHolder's metadata when stored and the destruction of the extinguisher entity that is placed onto it. Fire_Douse_Patch FreezeTime_Begin_Patch Because we're in multiplayer mode, we generally don't want the game to freeze GameModeConsoleCommands_OnConsoleCommand_Patch GhostCrafter_OnCraftingBegin_Patch GhostCrafter_OnCraftingEnd_Patch GoalManager_OnCompletedGoal_Patch IncubatorActivationTerminal_OnHandClick_Patch IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch When we place a power crystal into the incubator terminal it becomes consumed. Inform the server the entity was destroyed. IncubatorEgg_HatchNow_Patch Incubator_OnHandClick_Patch Incubator_OnHatched_Patch The first step of OnHatched() is to check if the enzyme was attached, so that it can be destroyed. Before this destruction occurs, let's let the server know that the item is being deleted. IngameMenu_OnDeselect_Patch Disable the possibility of escaping a modal by clicking outside of its box or pressing the escape for the modals that want it IngameMenu_OnSelect_Patch IngameMenu_QuitGameAsync_Patch IngameMenu_QuitGameAsync_PatchTest IngameMenu_QuitGame_Patch IngameMenu_QuitSubscreen_Patch Inventory_LoseItems_Patch Inventory_LoseItems_PatchTest ItemsContainer_DestroyItem_Patch When the player crafts items the game will leverage this API to select a pickupable from their inventory and delete it. We want to let the server know that the item was successfully deleted. ItemsContainer_DestroyItem_PatchTest ItemsContainer_NotifyAddItem_Patch KeypadDoorConsole_AcceptNumberField_Patch KnownTech_NotifyAdd_Patch KnownTech_NotifyAnalyze_Patch LargeWorldEntity_Awake_Patch We don't want constructables to be put in CellRoots but in GlobalRoot, so we change a parameter in their LargeWorldEntity. LargeWorldStreamer_LoadBatchTask_Execute_Patch LargeWorldStreamer_UnloadBatch_Patch LaunchRocket_OnHandClick_Patch LaunchRocket_OnHandClick_PatchTest LiveMixin_AddHealth_Patch LiveMixin_TakeDamage_Patch MedicalCabinet_OnHandClick_Patch Openable_PlayOpenAnimation_Patch PDAEncyclopedia_Add_Patch PDALog_Add_Patch PDAScanner_ScanTarget_Initialize_Patch Replace the internal PDAScanner use of UniqueIdentifier by NitroxEntity. PDAScanner_Scan_Patch Broadcasts entry progress and entry unlockings when they happen. PDAScanner_Scan_PatchTest Pickupable_Drop_Patch Pickupable_Pickup_Patch PilotingChair_OnHandClick_Patch PilotingChair_OnPlayerDeath_Patch PilotingChair_ReleaseBy_Patch PinManager_NotifyAdd_Patch PinManager_NotifyMove_Patch PinManager_NotifyRemove_Patch PingInstance_Set_Patches Notice the server of a Ping color change PingManager_NotifyRename_Patch Planter_AddItem_Patch PlatformUtils_GetDevToolsEnabled_Patch PlayerCinematicController_OnPlayerCinematicModeEnd_Patch PlayerCinematicController_StartCinematicMode_Patch PlayerCinematicController_Start_Patch Player_OnKill_Patch Player_RequiresHighPrecisionPhysics_Patch Subnautica enables high precision physics any time a player is in a cyclops that is undergoing physics and is not actively anchored to the pilot seat. This is usually rare in the base game (mostly a player disconnecting from the pilot seat); however, it is the normal case for a passanger in nitrox. We disable the switching as it causing oscillation of the interpolation. Instead, any time someone is in the submarine we require high precision physics if there is a remote player actively piloting. Player_SetCurrentEscapePod_Patch Player_SetCurrentSub_Patch Player_Update_Patch PrecursorDoorway_ToggleDoor_Patch PrecursorKeyTerminal_DestroyKey_Patch When we place a key into the precursor terminal it becomes consumed. Inform the server the entity was destroyed. PrecursorKeyTerminal_OnHandClick_Patch PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch When we place a power crystal into the teleporter terminal it becomes consumed. Inform the server the entity was destroyed. PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch PrecursorTeleporter_OnActivateTeleporter_Patch PrefabPlaceholdersGroup_Spawn_Patch PropulsionCannon_GrabObject_Patch PropulsionCannon_ReleaseGrabbedObject_Patch QuickSlots_Bind_Patch QuickSlots_DeselectInternal_Patch QuickSlots_SelectInternal_Patch Radio_OnRepair_Patch Radio_PlayRadioMessage_Patch RocketConstructor_StartRocketConstruction_Patch RocketPreflightCheckManager_CompletePreflightCheck_Patch Rocket_CallElevator_Patch Rocket_ElevatorControlButtonActivate_Patch SeaMoth_OnUpgradeModuleUse_Patch Sealed_Weld_Patch SpawnConsoleCommand_OnConsoleCommand_Patch SpawnEscapePodSupplies_OnNewBorn_Patch Don't allow the game to spawn initial supplies in the escape pod. SpawnOnKill_OnKill_Patch Synchronizes entities that Spawn something when they are killed, e.g. Coral Disks. SpawnOnKill_OnKill_PatchTest SpeedConsoleCommand_OnConsoleCommand_speed_Patch SplineFollowing_GoTo_Patch SplineFollowing is the internal behavior inside SwimBehavior and WalkBehavior that causes an entity to move. Whenever a NitroxEntity receives a MoveTo action, we'll let the EntityPositionBroadcaster know (internally, it will check if it is an entity we are watching an broadcast when applicable). Stalker_CheckLoseTooth_Patch StarshipDoor_LockDoor_Patch StarshipDoor_OnDoorToggle_Patch StarshipDoor_UnlockDoor_Patch StoryGoalCustomEventHandler_OnConsoleCommand_Patch StoryGoalScheduler_Schedule_Patch StoryGoal_Execute_Patch SubConsoleCommand_OnConsoleCommand_sub_Patch Called whenever a Cyclops or Seamoth is spawned. Nitrox already has its own command to spawn vehicles. This patch is only meant to block the method from executing, causing two vehicles to be spawned instead of one SubFire_CreateFire_Patch Hook onto SubFire.CreateFire(SubFire.RoomFire). We do this on the fire creation method because unlike SubRoot.OnTakeDamage(DamageInfo), fires can be created outside of SubFire.OnTakeDamage(DamageInfo) SubNameInput_OnColorChange_Patch SubNameInput_OnNameChange_Patch SubRoot_OnPlayerEntered_Patch SubRoot_OnTakeDamage_Patch Hook onto SubRoot.OnTakeDamage(DamageInfo). It'd be nice if this were the only hook needed, but both damage points and fires are created in a separate class that doesn't necessarily finish running after OnTakeDamage finishes. Since that's the case, this is used only to stop phantom damage alerts that the owner didn't register Survival_Eat_Patch Let the server know when the player successfully eats an item. Survival_Use_Patch Let the server know when the player successfully uses a consumable item (such as a first aid kit). ToggleLights_SetLightsActive_Patch UniqueIdentifier_Id_Getter_Patch Utils_GetEntityRoot_Patch When looking for an EntityRoot, we want to make sure that remote players can be recognized as one. Utils_PlayFMODAsset_Patch VFXConstructing_WakeUpSubmarine_Patch In the base game, subnautica uses a script to freeze all rigid bodies when they get out of distance. However, this script also messes with interpolation of objects - especially those being driven by other players. We disable the functionality when the Cyclops is fully loaded because there are validations that fail if removing it earlier (i.e. exceptions in code). VehicleDockingBay_OnTriggerEnter VehicleDockingBay_OnUndockingComplete_Patch Vehicle_OnHandClick_Patch Vehicle_OnKill_Patch Vehicle_OnPilotModeBegin_Patch Vehicle_OnPilotModeEnd_Patch WaterPark_Split_Patch When two WaterParks are separated (a WaterPark piece in between them was destructed), gives the newly created WaterPark a NitroxEntity. WaterPark_TransferValue_Patch Transfers the NitroxEntity to the new main module when two WaterParks are merged. WeldableWallPanelGeneric_UnlockDoor_Patch Welder_Weld_Patch uGUI_OnApplicationQuit_Patch uGUI_PDA_CacheToolbarTooltips_Patch Provide Subnautica with the new PDA tabs' names uGUI_PDA_Initialize_Patch Add custom tabs to the PDA by injecting them in the regular list before the actual initialization. uGUI_PDA_Initialize_PatchTest uGUI_PDA_SetTabs_Patch uGUI_PDA_SetTabs_PatchTest uGUI_Pings_IsVisibleNow_Patch Decide whether or not we want to render the pings on the screen uGUI_Pings_IsVisibleNow_PatchTest uGUI_SignInput_OnDeselect_Patch uSkyManager_SetVaryingMaterialProperties_Patch Prevent uSkyManager from \"freezing\" the clouds when FreezeTime is active (game paused). Also sets skybox's rotation depending on the real server time. uSkyManager_SetVaryingMaterialProperties_PatchTest"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_OnApplicationQuit_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_OnApplicationQuit_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_OnApplicationQuit_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_OnApplicationQuit_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prefix() public static void Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_OnApplicationQuit_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_OnApplicationQuit_Patch.html",
    "title": "Class uGUI_OnApplicationQuit_Patch | Nitrox",
    "keywords": "Class uGUI_OnApplicationQuit_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class uGUI_OnApplicationQuit_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch uGUI_OnApplicationQuit_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Prefix()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_CacheToolbarTooltips_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_CacheToolbarTooltips_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_CacheToolbarTooltips_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_CacheToolbarTooltips_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(uGUI_PDA) public static void Postfix(uGUI_PDA __instance) Parameters __instance uGUI_PDA"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_CacheToolbarTooltips_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_CacheToolbarTooltips_Patch.html",
    "title": "Class uGUI_PDA_CacheToolbarTooltips_Patch | Nitrox",
    "keywords": "Class uGUI_PDA_CacheToolbarTooltips_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Provide Subnautica with the new PDA tabs' names public sealed class uGUI_PDA_CacheToolbarTooltips_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch uGUI_PDA_CacheToolbarTooltips_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(uGUI_PDA)"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_Patch.InjectNitroxTabs.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_Patch.InjectNitroxTabs.html",
    "title": "Method InjectNitroxTabs | Nitrox",
    "keywords": "Method InjectNitroxTabs Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll InjectNitroxTabs(uGUI_PDA) public static void InjectNitroxTabs(uGUI_PDA __instance) Parameters __instance uGUI_PDA"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_Patch.html",
    "title": "Class uGUI_PDA_Initialize_Patch | Nitrox",
    "keywords": "Class uGUI_PDA_Initialize_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Add custom tabs to the PDA by injecting them in the regular list before the actual initialization. public sealed class uGUI_PDA_Initialize_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch uGUI_PDA_Initialize_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods InjectNitroxTabs(uGUI_PDA) Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_PatchTest.InjectionSanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_PatchTest.InjectionSanity.html",
    "title": "Method InjectionSanity | Nitrox",
    "keywords": "Method InjectionSanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll InjectionSanity() [TestMethod] public void InjectionSanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_Initialize_PatchTest.html",
    "title": "Class uGUI_PDA_Initialize_PatchTest | Nitrox",
    "keywords": "Class uGUI_PDA_Initialize_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class uGUI_PDA_Initialize_PatchTest Inheritance object uGUI_PDA_Initialize_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InjectionSanity() Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_Patch.SetupNitroxIcons.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_Patch.SetupNitroxIcons.html",
    "title": "Method SetupNitroxIcons | Nitrox",
    "keywords": "Method SetupNitroxIcons Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll SetupNitroxIcons(uGUI_PDA, Sprite[]) public static void SetupNitroxIcons(uGUI_PDA __instance, Atlas.Sprite[] array) Parameters __instance uGUI_PDA array Sprite[]"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_Patch.html",
    "title": "Class uGUI_PDA_SetTabs_Patch | Nitrox",
    "keywords": "Class uGUI_PDA_SetTabs_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class uGUI_PDA_SetTabs_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch uGUI_PDA_SetTabs_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) SetupNitroxIcons(uGUI_PDA, Sprite[]) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_PatchTest.InjectionSanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_PatchTest.InjectionSanity.html",
    "title": "Method InjectionSanity | Nitrox",
    "keywords": "Method InjectionSanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll InjectionSanity() [TestMethod] public void InjectionSanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_PDA_SetTabs_PatchTest.html",
    "title": "Class uGUI_PDA_SetTabs_PatchTest | Nitrox",
    "keywords": "Class uGUI_PDA_SetTabs_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class uGUI_PDA_SetTabs_PatchTest Inheritance object uGUI_PDA_SetTabs_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InjectionSanity() Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_Patch.html",
    "title": "Class uGUI_Pings_IsVisibleNow_Patch | Nitrox",
    "keywords": "Class uGUI_Pings_IsVisibleNow_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Decide whether or not we want to render the pings on the screen public sealed class uGUI_Pings_IsVisibleNow_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch uGUI_Pings_IsVisibleNow_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_PatchTest.InjectionSanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_PatchTest.InjectionSanity.html",
    "title": "Method InjectionSanity | Nitrox",
    "keywords": "Method InjectionSanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll InjectionSanity() [TestMethod] public void InjectionSanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_Pings_IsVisibleNow_PatchTest.html",
    "title": "Class uGUI_Pings_IsVisibleNow_PatchTest | Nitrox",
    "keywords": "Class uGUI_Pings_IsVisibleNow_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class uGUI_Pings_IsVisibleNow_PatchTest Inheritance object uGUI_Pings_IsVisibleNow_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods InjectionSanity() Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_SignInput_OnDeselect_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_SignInput_OnDeselect_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_SignInput_OnDeselect_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_SignInput_OnDeselect_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Postfix(uGUI_SignInput) public static void Postfix(uGUI_SignInput __instance) Parameters __instance uGUI_SignInput"
  },
  "api/NitroxPatcher.Patches.Dynamic.uGUI_SignInput_OnDeselect_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uGUI_SignInput_OnDeselect_Patch.html",
    "title": "Class uGUI_SignInput_OnDeselect_Patch | Nitrox",
    "keywords": "Class uGUI_SignInput_OnDeselect_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public sealed class uGUI_SignInput_OnDeselect_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch uGUI_SignInput_OnDeselect_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Patch(Harmony) Postfix(uGUI_SignInput)"
  },
  "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_Patch.ModifyInstructionPattern.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_Patch.ModifyInstructionPattern.html",
    "title": "Field ModifyInstructionPattern | Nitrox",
    "keywords": "Field ModifyInstructionPattern Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll This pattern detects the UnityEngine.Time.time property in the following line and replaces the property call target to CurrentTime: Quaternion q = Quaternion.AngleAxis(cloudsRotateSpeed * Time.time, Vector3.up); public static readonly InstructionsPattern ModifyInstructionPattern Returns InstructionsPattern"
  },
  "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) Replaces Time.time call to Time.realtimeSinceStartup so that it doesn't take Time.timeScale into account public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_Patch.html",
    "title": "Class uSkyManager_SetVaryingMaterialProperties_Patch | Nitrox",
    "keywords": "Class uSkyManager_SetVaryingMaterialProperties_Patch Namespace NitroxPatcher.Patches.Dynamic Assembly NitroxPatcher.dll Prevent uSkyManager from \"freezing\" the clouds when FreezeTime is active (game paused). Also sets skybox's rotation depending on the real server time. public sealed class uSkyManager_SetVaryingMaterialProperties_Patch : NitroxPatch, IDynamicPatch, INitroxPatch Inheritance object NitroxPatch uSkyManager_SetVaryingMaterialProperties_Patch Implements IDynamicPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields ModifyInstructionPattern This pattern detects the UnityEngine.Time.time property in the following line and replaces the property call target to CurrentTime: Quaternion q = Quaternion.AngleAxis(cloudsRotateSpeed * Time.time, Vector3.up); TARGET_METHOD Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>) Replaces Time.time call to Time.realtimeSinceStartup so that it doesn't take Time.timeScale into account"
  },
  "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_PatchTest.Sanity.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_PatchTest.Sanity.html",
    "title": "Method Sanity | Nitrox",
    "keywords": "Method Sanity Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll Sanity() [TestMethod] public void Sanity()"
  },
  "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Dynamic.uSkyManager_SetVaryingMaterialProperties_PatchTest.html",
    "title": "Class uSkyManager_SetVaryingMaterialProperties_PatchTest | Nitrox",
    "keywords": "Class uSkyManager_SetVaryingMaterialProperties_PatchTest Namespace NitroxPatcher.Patches.Dynamic Assembly Nitrox.Test.dll [TestClass] public class uSkyManager_SetVaryingMaterialProperties_PatchTest Inheritance object uSkyManager_SetVaryingMaterialProperties_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Sanity()"
  },
  "api/NitroxPatcher.Patches.IDynamicPatch.html": {
    "href": "api/NitroxPatcher.Patches.IDynamicPatch.html",
    "title": "Interface IDynamicPatch | Nitrox",
    "keywords": "Interface IDynamicPatch Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll A dynamic patch can possibly be unloaded. For Nitrox, this should happen when the player returns to the main menu. public interface IDynamicPatch : INitroxPatch Inherited Members INitroxPatch.Patch(Harmony) INitroxPatch.Restore(Harmony)"
  },
  "api/NitroxPatcher.Patches.INitroxPatch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.INitroxPatch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll Patch(Harmony) void Patch(Harmony instance) Parameters instance Harmony"
  },
  "api/NitroxPatcher.Patches.INitroxPatch.Restore.html": {
    "href": "api/NitroxPatcher.Patches.INitroxPatch.Restore.html",
    "title": "Method Restore | Nitrox",
    "keywords": "Method Restore Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll Restore(Harmony) void Restore(Harmony instance) Parameters instance Harmony"
  },
  "api/NitroxPatcher.Patches.INitroxPatch.html": {
    "href": "api/NitroxPatcher.Patches.INitroxPatch.html",
    "title": "Interface INitroxPatch | Nitrox",
    "keywords": "Interface INitroxPatch Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll public interface INitroxPatch Methods Patch(Harmony) Restore(Harmony)"
  },
  "api/NitroxPatcher.Patches.IPersistentPatch.html": {
    "href": "api/NitroxPatcher.Patches.IPersistentPatch.html",
    "title": "Interface IPersistentPatch | Nitrox",
    "keywords": "Interface IPersistentPatch Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll A persistent patch is applied when the game is initializing and stays applied throughout the process' life time. public interface IPersistentPatch : INitroxPatch Inherited Members INitroxPatch.Patch(Harmony) INitroxPatch.Restore(Harmony)"
  },
  "api/NitroxPatcher.Patches.NitroxPatch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.NitroxPatch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll Patch(Harmony) public abstract void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.NitroxPatch.PatchFinalizer.html": {
    "href": "api/NitroxPatcher.Patches.NitroxPatch.PatchFinalizer.html",
    "title": "Method PatchFinalizer | Nitrox",
    "keywords": "Method PatchFinalizer Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll PatchFinalizer(Harmony, MethodBase, MethodInfo) protected void PatchFinalizer(Harmony harmony, MethodBase targetMethod, MethodInfo finalizerMethod) Parameters harmony Harmony targetMethod MethodBase finalizerMethod MethodInfo"
  },
  "api/NitroxPatcher.Patches.NitroxPatch.PatchMultiple.html": {
    "href": "api/NitroxPatcher.Patches.NitroxPatch.PatchMultiple.html",
    "title": "Method PatchMultiple | Nitrox",
    "keywords": "Method PatchMultiple Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) protected void PatchMultiple(Harmony harmony, MethodBase targetMethod, MethodInfo prefix = null, MethodInfo postfix = null, MethodInfo transpiler = null, MethodInfo finalizer = null, MethodInfo manipulator = null) Parameters harmony Harmony targetMethod MethodBase prefix MethodInfo postfix MethodInfo transpiler MethodInfo finalizer MethodInfo manipulator MethodInfo"
  },
  "api/NitroxPatcher.Patches.NitroxPatch.PatchPostfix.html": {
    "href": "api/NitroxPatcher.Patches.NitroxPatch.PatchPostfix.html",
    "title": "Method PatchPostfix | Nitrox",
    "keywords": "Method PatchPostfix Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll PatchPostfix(Harmony, MethodBase, MethodInfo) protected void PatchPostfix(Harmony harmony, MethodBase targetMethod, MethodInfo postfixMethod) Parameters harmony Harmony targetMethod MethodBase postfixMethod MethodInfo"
  },
  "api/NitroxPatcher.Patches.NitroxPatch.PatchPrefix.html": {
    "href": "api/NitroxPatcher.Patches.NitroxPatch.PatchPrefix.html",
    "title": "Method PatchPrefix | Nitrox",
    "keywords": "Method PatchPrefix Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll PatchPrefix(Harmony, MethodBase, MethodInfo) protected void PatchPrefix(Harmony harmony, MethodBase targetMethod, MethodInfo prefixMethod) Parameters harmony Harmony targetMethod MethodBase prefixMethod MethodInfo"
  },
  "api/NitroxPatcher.Patches.NitroxPatch.PatchTranspiler.html": {
    "href": "api/NitroxPatcher.Patches.NitroxPatch.PatchTranspiler.html",
    "title": "Method PatchTranspiler | Nitrox",
    "keywords": "Method PatchTranspiler Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll PatchTranspiler(Harmony, MethodBase, MethodInfo) protected void PatchTranspiler(Harmony harmony, MethodBase targetMethod, MethodInfo transpilerMethod) Parameters harmony Harmony targetMethod MethodBase transpilerMethod MethodInfo"
  },
  "api/NitroxPatcher.Patches.NitroxPatch.Resolve.html": {
    "href": "api/NitroxPatcher.Patches.NitroxPatch.Resolve.html",
    "title": "Method Resolve | Nitrox",
    "keywords": "Method Resolve Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll Resolve<T>(bool) Resolves a type using LocateService<T>(). If the result is not null it will cache and return the same type on future calls. protected static T Resolve<T>(bool prelifeTime = false) where T : class Parameters prelifeTime bool Returns T The requested type or null if not available. Type Parameters T Type to get and cache from NitroxServiceLocator"
  },
  "api/NitroxPatcher.Patches.NitroxPatch.Restore.html": {
    "href": "api/NitroxPatcher.Patches.NitroxPatch.Restore.html",
    "title": "Method Restore | Nitrox",
    "keywords": "Method Restore Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll Restore(Harmony) Removes the (previously applied) patches from the process. public void Restore(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.NitroxPatch.html": {
    "href": "api/NitroxPatcher.Patches.NitroxPatch.html",
    "title": "Class NitroxPatch | Nitrox",
    "keywords": "Class NitroxPatch Namespace NitroxPatcher.Patches Assembly NitroxPatcher.dll Base class for declaring a patch using HarmonyLib.Harmony. Implement either IDynamicPatch if your patch is unloadable or IPersistentPatch if it isn't. Either one or more of the following patch types are possible in one NitroxPatch: Prefix patch, use PatchPrefix(Harmony, MethodBase, MethodInfo) Postfix patch, use PatchPostfix(Harmony, MethodBase, MethodInfo) Transpiler patch, use PatchTranspiler(Harmony, MethodBase, MethodInfo) Finalizer patch, use PatchFinalizer(Harmony, MethodBase, MethodInfo) Documentation for patching can be found under https://harmony.pardeike.net/articles/patching.html and https://github.com/BepInEx/HarmonyX/wiki/Difference-between-Harmony-and-HarmonyX public abstract class NitroxPatch : INitroxPatch Inheritance object NitroxPatch Implements INitroxPatch Derived ArmsController_Start_Patch ArmsController_Update_Patch BaseDeconstructable_Deconstruct_Patch BaseDeconstructable_DeconstructionAllowed_Patch Base_OnPreDestroy_Patch Bed_EnterInUseMode_Patch Bench_ExitSittingMode_Patch Bench_OnHandClick_Patch Bench_OnPlayerDeath_Patch BreakableResource_BreakIntoResources_Patch BreakableResource_SpawnResourceFromPrefab_Patch BuilderTool_Construct_Patch Builder_TryPlace_Patch Builder_Update_Patch ConstructableBase_SetState_Patch Constructable_Construct_Patch Constructable_DeconstructAsync_Patch Constructable_DeconstructionAllowed_Patch ConstructorInput_OnCraftingBegin_Patch Constructor_Deploy_Patch CrafterLogic_TryPickupSingleAsync_Patch CrashHome_Spawn_Patch CrashedShipExploder_OnConsoleCommand_Patch Creature_ChooseBestAction_Patch CyclopsDamagePoint_OnRepair_Patch CyclopsDecoyLaunchButton_OnClick_Patch CyclopsDestructionEvent_DestroyCyclops_Patch CyclopsDestructionEvent_OnConsoleCommand_Patch CyclopsEngineChangeState_OnClick_Patch CyclopsExternalDamageManager_CreatePoint_Patch CyclopsFireSuppressionButton_StartCooldown_Patch CyclopsHelmHUDManager_StopPiloting_Patch CyclopsHelmHUDManager_Update_Patch CyclopsLightingPanel_ToggleFloodlights_Patch CyclopsLightingPanel_ToggleInternalLighting_Patch CyclopsMotorModeButton_OnClick_Patch CyclopsMotorMode_RestoreEngineState_Patch CyclopsMotorMode_SaveEngineStateAndPowerDown_Patch CyclopsShieldButton_OnClick_Patch CyclopsShieldButton_StartShield_Patch CyclopsShieldButton_StopShield_Patch CyclopsSilentRunningAbilityButton_TurnOffSilentRunning_Patch CyclopsSilentRunningAbilityButton_TurnOnSilentRunning_Patch CyclopsSonarButton_OnClick_Patch CyclopsSonarButton_SonarPing_Patch CyclopsSonarButton_Update_Patch DayNightCycle_OnConsoleCommand_day_Patch DayNightCycle_OnConsoleCommand_daynightspeed_Patch DayNightCycle_OnConsoleCommand_night_Patch DayNightCycle_Update_Patch DevConsole_Update_Patch DockedVehicleHandTarget_OnHandClick_Patch EnergyMixin_ModifyCharge_Patch EnergyMixin_OnAddItem_Patch EnergyMixin_SpawnDefaultAsync_Patch EntityCell_QueueForAwake_Patch EntityCell_SleepAsync_Patch Equipment_AddItem_Patch Equipment_RemoveItem_Patch EscapePod_Awake_Patch EscapePod_OnRepair_Patch ExosuitClawArm_OnPickup_Patch ExosuitClawArm_TryUse_Patch ExosuitDrillArm_OnUseDown_Patch ExosuitDrillArm_OnUseUp_Patch ExosuitGrapplingArm_OnHit_Patch ExosuitGrapplingArm_OnUseUp_Patch ExosuitTorpedoArm_OnUseUp_Patch ExosuitTorpedoArm_Shoot_Patch Exosuit_Update_Patch FMODUWE_PlayOneShotImpl_Patch FMOD_CustomEmitter_OnPlay_Patch FMOD_CustomEmitter_OnStop_Patch FMOD_CustomEmitter_Start_Patch FMOD_CustomLoopingEmitter_OnPlay_Patch FMOD_CustomLoopingEmitter_PlayStopSound_Patch FMOD_StudioEventEmitter_PlayUI_Patch FMOD_StudioEventEmitter_Start_Patch FMOD_StudioEventEmitter_Stop_Patch FireExtinguisherHolder_TakeTankAsync_Patch FireExtinguisherHolder_TryStoreTank_Patch Fire_Douse_Patch FreezeTime_Begin_Patch GameModeConsoleCommands_OnConsoleCommand_Patch GhostCrafter_OnCraftingBegin_Patch GhostCrafter_OnCraftingEnd_Patch GoalManager_OnCompletedGoal_Patch IncubatorActivationTerminal_OnHandClick_Patch IncubatorActivationTerminal_OnPlayerCinematicModeEnd_Patch IncubatorEgg_HatchNow_Patch Incubator_OnHandClick_Patch Incubator_OnHatched_Patch IngameMenu_OnDeselect_Patch IngameMenu_OnSelect_Patch IngameMenu_QuitGameAsync_Patch IngameMenu_QuitGame_Patch IngameMenu_QuitSubscreen_Patch Inventory_LoseItems_Patch ItemsContainer_DestroyItem_Patch ItemsContainer_NotifyAddItem_Patch KeypadDoorConsole_AcceptNumberField_Patch KnownTech_NotifyAdd_Patch KnownTech_NotifyAnalyze_Patch LargeWorldEntity_Awake_Patch LargeWorldStreamer_LoadBatchTask_Execute_Patch LargeWorldStreamer_UnloadBatch_Patch LaunchRocket_OnHandClick_Patch LiveMixin_AddHealth_Patch LiveMixin_TakeDamage_Patch MedicalCabinet_OnHandClick_Patch Openable_PlayOpenAnimation_Patch PDAEncyclopedia_Add_Patch PDALog_Add_Patch PDAScanner_ScanTarget_Initialize_Patch PDAScanner_Scan_Patch Pickupable_Drop_Patch Pickupable_Pickup_Patch PilotingChair_OnHandClick_Patch PilotingChair_OnPlayerDeath_Patch PilotingChair_ReleaseBy_Patch PinManager_NotifyAdd_Patch PinManager_NotifyMove_Patch PinManager_NotifyRemove_Patch PingInstance_Set_Patches PingManager_NotifyRename_Patch Planter_AddItem_Patch PlatformUtils_GetDevToolsEnabled_Patch PlayerCinematicController_OnPlayerCinematicModeEnd_Patch PlayerCinematicController_StartCinematicMode_Patch PlayerCinematicController_Start_Patch Player_OnKill_Patch Player_RequiresHighPrecisionPhysics_Patch Player_SetCurrentEscapePod_Patch Player_SetCurrentSub_Patch Player_Update_Patch PrecursorDoorway_ToggleDoor_Patch PrecursorKeyTerminal_DestroyKey_Patch PrecursorKeyTerminal_OnHandClick_Patch PrecursorTeleporterActivationTerminal_OnPlayerCinematicModeEnd_Patch PrecursorTeleporterActivationTerminal_OnProxyHandClick_Patch PrecursorTeleporter_OnActivateTeleporter_Patch PrefabPlaceholdersGroup_Spawn_Patch PropulsionCannon_GrabObject_Patch PropulsionCannon_ReleaseGrabbedObject_Patch QuickSlots_Bind_Patch QuickSlots_DeselectInternal_Patch QuickSlots_SelectInternal_Patch Radio_OnRepair_Patch Radio_PlayRadioMessage_Patch RocketConstructor_StartRocketConstruction_Patch RocketPreflightCheckManager_CompletePreflightCheck_Patch Rocket_CallElevator_Patch Rocket_ElevatorControlButtonActivate_Patch SeaMoth_OnUpgradeModuleUse_Patch Sealed_Weld_Patch SpawnConsoleCommand_OnConsoleCommand_Patch SpawnEscapePodSupplies_OnNewBorn_Patch SpawnOnKill_OnKill_Patch SpeedConsoleCommand_OnConsoleCommand_speed_Patch SplineFollowing_GoTo_Patch Stalker_CheckLoseTooth_Patch StarshipDoor_LockDoor_Patch StarshipDoor_OnDoorToggle_Patch StarshipDoor_UnlockDoor_Patch StoryGoalCustomEventHandler_OnConsoleCommand_Patch StoryGoalScheduler_Schedule_Patch StoryGoal_Execute_Patch SubConsoleCommand_OnConsoleCommand_sub_Patch SubFire_CreateFire_Patch SubNameInput_OnColorChange_Patch SubNameInput_OnNameChange_Patch SubRoot_OnPlayerEntered_Patch SubRoot_OnTakeDamage_Patch Survival_Eat_Patch Survival_Use_Patch ToggleLights_SetLightsActive_Patch UniqueIdentifier_Id_Getter_Patch Utils_GetEntityRoot_Patch Utils_PlayFMODAsset_Patch VFXConstructing_WakeUpSubmarine_Patch VehicleDockingBay_OnTriggerEnter VehicleDockingBay_OnUndockingComplete_Patch Vehicle_OnHandClick_Patch Vehicle_OnKill_Patch Vehicle_OnPilotModeBegin_Patch Vehicle_OnPilotModeEnd_Patch WaterPark_Split_Patch WaterPark_TransferValue_Patch WeldableWallPanelGeneric_UnlockDoor_Patch Welder_Weld_Patch uGUI_OnApplicationQuit_Patch uGUI_PDA_CacheToolbarTooltips_Patch uGUI_PDA_Initialize_Patch uGUI_PDA_SetTabs_Patch uGUI_Pings_IsVisibleNow_Patch uGUI_SignInput_OnDeselect_Patch uSkyManager_SetVaryingMaterialProperties_Patch Application_runInBackground_Patch CellManager_TryLoadCacheBatchCells_Patch GameInput_Initialize_Patch GameInput_SetupDefaultKeyboardBindings_Patch GameSettings_SerializeInputSettings_Patch Language_LoadLanguageFile_Patch MainGameController_ShouldPlayIntro_Patch MainGameController_StartGame_Patch MainMenuRightSide_OpenGroup_Patch ProtobufSerializer_Deserialize_Patch ProtobufSerializer_Serialize_Patch ScreenshotManager_Initialise UnityEngine_SetupCoroutine_Patch uGUI_FeedbackCollector_IsEnabled_Patch uGUI_OptionsPanel_AddBindings_Patch uGUI_OptionsPanel_AddTabs_Patch Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) PatchFinalizer(Harmony, MethodBase, MethodInfo) PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) PatchPostfix(Harmony, MethodBase, MethodInfo) PatchPrefix(Harmony, MethodBase, MethodInfo) PatchTranspiler(Harmony, MethodBase, MethodInfo) Resolve<T>(bool) Resolves a type using LocateService<T>(). If the result is not null it will cache and return the same type on future calls. Restore(Harmony) Removes the (previously applied) patches from the process."
  },
  "api/NitroxPatcher.Patches.Persistent.Application_runInBackground_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.Application_runInBackground_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.Application_runInBackground_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.Application_runInBackground_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Prefix(bool) public static bool Prefix(bool value) Parameters value bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Persistent.Application_runInBackground_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.Application_runInBackground_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Persistent.Application_runInBackground_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.Application_runInBackground_Patch.html",
    "title": "Class Application_runInBackground_Patch | Nitrox",
    "keywords": "Class Application_runInBackground_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Ensures UnityEngine.Application.runInBackground is set to true at all times. public sealed class Application_runInBackground_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch Application_runInBackground_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks Nitrox needs to be running updates and processing packets at all times to work properly. Fields TARGET_METHOD Methods Patch(Harmony) Prefix(bool)"
  },
  "api/NitroxPatcher.Patches.Persistent.CellManager_TryLoadCacheBatchCells_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.CellManager_TryLoadCacheBatchCells_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.CellManager_TryLoadCacheBatchCells_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.CellManager_TryLoadCacheBatchCells_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Transpiler(IEnumerable<CodeInstruction>, ILGenerator) public static IEnumerable<CodeInstruction> Transpiler(IEnumerable<CodeInstruction> instructions, ILGenerator generator) Parameters instructions IEnumerable<CodeInstruction> generator ILGenerator Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Persistent.CellManager_TryLoadCacheBatchCells_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.CellManager_TryLoadCacheBatchCells_Patch.html",
    "title": "Class CellManager_TryLoadCacheBatchCells_Patch | Nitrox",
    "keywords": "Class CellManager_TryLoadCacheBatchCells_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class CellManager_TryLoadCacheBatchCells_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch CellManager_TryLoadCacheBatchCells_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Transpiler(IEnumerable<CodeInstruction>, ILGenerator)"
  },
  "api/NitroxPatcher.Patches.Persistent.GameInput_Initialize_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.GameInput_Initialize_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.GameInput_Initialize_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.GameInput_Initialize_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Persistent.GameInput_Initialize_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.GameInput_Initialize_Patch.html",
    "title": "Class GameInput_Initialize_Patch | Nitrox",
    "keywords": "Class GameInput_Initialize_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class GameInput_Initialize_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch GameInput_Initialize_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Persistent.GameInput_SetupDefaultKeyboardBindings_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.GameInput_SetupDefaultKeyboardBindings_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.GameInput_SetupDefaultKeyboardBindings_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.GameInput_SetupDefaultKeyboardBindings_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Postfix() public static void Postfix()"
  },
  "api/NitroxPatcher.Patches.Persistent.GameInput_SetupDefaultKeyboardBindings_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.GameInput_SetupDefaultKeyboardBindings_Patch.html",
    "title": "Class GameInput_SetupDefaultKeyboardBindings_Patch | Nitrox",
    "keywords": "Class GameInput_SetupDefaultKeyboardBindings_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class GameInput_SetupDefaultKeyboardBindings_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch GameInput_SetupDefaultKeyboardBindings_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Postfix()"
  },
  "api/NitroxPatcher.Patches.Persistent.GameSettings_SerializeInputSettings_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.GameSettings_SerializeInputSettings_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.GameSettings_SerializeInputSettings_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.GameSettings_SerializeInputSettings_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Postfix(ISerializer) public static void Postfix(GameSettings.ISerializer serializer) Parameters serializer GameSettings.ISerializer"
  },
  "api/NitroxPatcher.Patches.Persistent.GameSettings_SerializeInputSettings_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.GameSettings_SerializeInputSettings_Patch.html",
    "title": "Class GameSettings_SerializeInputSettings_Patch | Nitrox",
    "keywords": "Class GameSettings_SerializeInputSettings_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class GameSettings_SerializeInputSettings_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch GameSettings_SerializeInputSettings_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Postfix(ISerializer)"
  },
  "api/NitroxPatcher.Patches.Persistent.Language_LoadLanguageFile_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.Language_LoadLanguageFile_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.Language_LoadLanguageFile_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.Language_LoadLanguageFile_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Postfix(string, Dictionary<string, string>) public static void Postfix(string language, Dictionary<string, string> ___strings) Parameters language string ___strings Dictionary<string, string>"
  },
  "api/NitroxPatcher.Patches.Persistent.Language_LoadLanguageFile_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.Language_LoadLanguageFile_Patch.html",
    "title": "Class Language_LoadLanguageFile_Patch | Nitrox",
    "keywords": "Class Language_LoadLanguageFile_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class Language_LoadLanguageFile_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch Language_LoadLanguageFile_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Postfix(string, Dictionary<string, string>)"
  },
  "api/NitroxPatcher.Patches.Persistent.Language_LoadLanguageFile_PatchTest.DefaultLanguageSanity.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.Language_LoadLanguageFile_PatchTest.DefaultLanguageSanity.html",
    "title": "Method DefaultLanguageSanity | Nitrox",
    "keywords": "Method DefaultLanguageSanity Namespace NitroxPatcher.Patches.Persistent Assembly Nitrox.Test.dll DefaultLanguageSanity() [TestInitialize] public void DefaultLanguageSanity()"
  },
  "api/NitroxPatcher.Patches.Persistent.Language_LoadLanguageFile_PatchTest.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.Language_LoadLanguageFile_PatchTest.html",
    "title": "Class Language_LoadLanguageFile_PatchTest | Nitrox",
    "keywords": "Class Language_LoadLanguageFile_PatchTest Namespace NitroxPatcher.Patches.Persistent Assembly Nitrox.Test.dll [TestClass] public class Language_LoadLanguageFile_PatchTest Inheritance object Language_LoadLanguageFile_PatchTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DefaultLanguageSanity()"
  },
  "api/NitroxPatcher.Patches.Persistent.MainGameController_ShouldPlayIntro_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainGameController_ShouldPlayIntro_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.MainGameController_ShouldPlayIntro_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainGameController_ShouldPlayIntro_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Postfix(ref bool) public static void Postfix(ref bool __result) Parameters __result bool"
  },
  "api/NitroxPatcher.Patches.Persistent.MainGameController_ShouldPlayIntro_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainGameController_ShouldPlayIntro_Patch.html",
    "title": "Class MainGameController_ShouldPlayIntro_Patch | Nitrox",
    "keywords": "Class MainGameController_ShouldPlayIntro_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class MainGameController_ShouldPlayIntro_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch MainGameController_ShouldPlayIntro_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Postfix(ref bool)"
  },
  "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.INJECTION_OPCODE.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.INJECTION_OPCODE.html",
    "title": "Field INJECTION_OPCODE | Nitrox",
    "keywords": "Field INJECTION_OPCODE Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public static readonly OpCode INJECTION_OPCODE Returns OpCode"
  },
  "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.INJECTION_OPERAND.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.INJECTION_OPERAND.html",
    "title": "Field INJECTION_OPERAND | Nitrox",
    "keywords": "Field INJECTION_OPERAND Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public static readonly object INJECTION_OPERAND Returns object"
  },
  "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.Transpiler.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.Transpiler.html",
    "title": "Method Transpiler | Nitrox",
    "keywords": "Method Transpiler Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Transpiler(MethodBase, IEnumerable<CodeInstruction>) public static IEnumerable<CodeInstruction> Transpiler(MethodBase original, IEnumerable<CodeInstruction> instructions) Parameters original MethodBase instructions IEnumerable<CodeInstruction> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainGameController_StartGame_Patch.html",
    "title": "Class MainGameController_StartGame_Patch | Nitrox",
    "keywords": "Class MainGameController_StartGame_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class MainGameController_StartGame_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch MainGameController_StartGame_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields INJECTION_OPCODE INJECTION_OPERAND TARGET_METHOD Methods Patch(Harmony) Transpiler(MethodBase, IEnumerable<CodeInstruction>)"
  },
  "api/NitroxPatcher.Patches.Persistent.MainMenuRightSide_OpenGroup_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainMenuRightSide_OpenGroup_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.MainMenuRightSide_OpenGroup_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainMenuRightSide_OpenGroup_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Prefix(string) public static void Prefix(string target) Parameters target string"
  },
  "api/NitroxPatcher.Patches.Persistent.MainMenuRightSide_OpenGroup_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.MainMenuRightSide_OpenGroup_Patch.html",
    "title": "Class MainMenuRightSide_OpenGroup_Patch | Nitrox",
    "keywords": "Class MainMenuRightSide_OpenGroup_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class MainMenuRightSide_OpenGroup_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch MainMenuRightSide_OpenGroup_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Prefix(string)"
  },
  "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Deserialize_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Deserialize_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Deserialize_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Deserialize_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Prefix(Stream, object, Type, bool) public static bool Prefix(Stream stream, object target, Type type, bool verbose) Parameters stream Stream target object type Type verbose bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Deserialize_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Deserialize_Patch.html",
    "title": "Class ProtobufSerializer_Deserialize_Patch | Nitrox",
    "keywords": "Class ProtobufSerializer_Deserialize_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class ProtobufSerializer_Deserialize_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch ProtobufSerializer_Deserialize_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Prefix(Stream, object, Type, bool)"
  },
  "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Serialize_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Serialize_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Serialize_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Serialize_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Prefix(Stream, object, Type) public static bool Prefix(Stream stream, object source, Type type) Parameters stream Stream source object type Type Returns bool"
  },
  "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Serialize_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.ProtobufSerializer_Serialize_Patch.html",
    "title": "Class ProtobufSerializer_Serialize_Patch | Nitrox",
    "keywords": "Class ProtobufSerializer_Serialize_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class ProtobufSerializer_Serialize_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch ProtobufSerializer_Serialize_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Prefix(Stream, object, Type)"
  },
  "api/NitroxPatcher.Patches.Persistent.ScreenshotManager_Initialise.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.ScreenshotManager_Initialise.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.ScreenshotManager_Initialise.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.ScreenshotManager_Initialise.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Prefix(ScreenshotManager, ref string) public static void Prefix(ScreenshotManager __instance, ref string _savePath) Parameters __instance ScreenshotManager _savePath string"
  },
  "api/NitroxPatcher.Patches.Persistent.ScreenshotManager_Initialise.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.ScreenshotManager_Initialise.html",
    "title": "Class ScreenshotManager_Initialise | Nitrox",
    "keywords": "Class ScreenshotManager_Initialise Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class ScreenshotManager_Initialise : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch ScreenshotManager_Initialise Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Prefix(ScreenshotManager, ref string)"
  },
  "api/NitroxPatcher.Patches.Persistent.UnityEngine_SetupCoroutine_Patch.Finalizer.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.UnityEngine_SetupCoroutine_Patch.Finalizer.html",
    "title": "Method Finalizer | Nitrox",
    "keywords": "Method Finalizer Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Finalizer(Exception) public static Exception Finalizer(Exception __exception) Parameters __exception Exception Returns Exception"
  },
  "api/NitroxPatcher.Patches.Persistent.UnityEngine_SetupCoroutine_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.UnityEngine_SetupCoroutine_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.UnityEngine_SetupCoroutine_Patch.TARGET_METHOD.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.UnityEngine_SetupCoroutine_Patch.TARGET_METHOD.html",
    "title": "Field TARGET_METHOD | Nitrox",
    "keywords": "Field TARGET_METHOD Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public static readonly MethodInfo TARGET_METHOD Returns MethodInfo"
  },
  "api/NitroxPatcher.Patches.Persistent.UnityEngine_SetupCoroutine_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.UnityEngine_SetupCoroutine_Patch.html",
    "title": "Class UnityEngine_SetupCoroutine_Patch | Nitrox",
    "keywords": "Class UnityEngine_SetupCoroutine_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Makes sure that Coroutine aren't fully blocked once they encounter an Exception public sealed class UnityEngine_SetupCoroutine_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch UnityEngine_SetupCoroutine_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields TARGET_METHOD Methods Finalizer(Exception) Patch(Harmony)"
  },
  "api/NitroxPatcher.Patches.Persistent.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.html",
    "title": "Namespace NitroxPatcher.Patches.Persistent | Nitrox",
    "keywords": "Namespace NitroxPatcher.Patches.Persistent Classes Application_runInBackground_Patch Ensures UnityEngine.Application.runInBackground is set to true at all times. CellManager_TryLoadCacheBatchCells_Patch GameInput_Initialize_Patch GameInput_SetupDefaultKeyboardBindings_Patch GameSettings_SerializeInputSettings_Patch Language_LoadLanguageFile_Patch Language_LoadLanguageFile_PatchTest MainGameController_ShouldPlayIntro_Patch MainGameController_StartGame_Patch MainMenuRightSide_OpenGroup_Patch ProtobufSerializer_Deserialize_Patch ProtobufSerializer_Serialize_Patch ScreenshotManager_Initialise UnityEngine_SetupCoroutine_Patch Makes sure that Coroutine aren't fully blocked once they encounter an Exception uGUI_FeedbackCollector_IsEnabled_Patch uGUI_OptionsPanel_AddBindings_Patch uGUI_OptionsPanel_AddTabs_Patch"
  },
  "api/NitroxPatcher.Patches.Persistent.uGUI_FeedbackCollector_IsEnabled_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.uGUI_FeedbackCollector_IsEnabled_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.uGUI_FeedbackCollector_IsEnabled_Patch.Prefix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.uGUI_FeedbackCollector_IsEnabled_Patch.Prefix.html",
    "title": "Method Prefix | Nitrox",
    "keywords": "Method Prefix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Prefix(ref bool) public static bool Prefix(ref bool __result) Parameters __result bool Returns bool"
  },
  "api/NitroxPatcher.Patches.Persistent.uGUI_FeedbackCollector_IsEnabled_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.uGUI_FeedbackCollector_IsEnabled_Patch.html",
    "title": "Class uGUI_FeedbackCollector_IsEnabled_Patch | Nitrox",
    "keywords": "Class uGUI_FeedbackCollector_IsEnabled_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class uGUI_FeedbackCollector_IsEnabled_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch uGUI_FeedbackCollector_IsEnabled_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Prefix(ref bool)"
  },
  "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddBindings_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddBindings_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddBindings_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddBindings_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Postfix(uGUI_OptionsPanel, int, Device) public static void Postfix(uGUI_OptionsPanel __instance, int tabIndex, GameInput.Device device) Parameters __instance uGUI_OptionsPanel tabIndex int device GameInput.Device"
  },
  "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddBindings_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddBindings_Patch.html",
    "title": "Class uGUI_OptionsPanel_AddBindings_Patch | Nitrox",
    "keywords": "Class uGUI_OptionsPanel_AddBindings_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class uGUI_OptionsPanel_AddBindings_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch uGUI_OptionsPanel_AddBindings_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Postfix(uGUI_OptionsPanel, int, Device)"
  },
  "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddTabs_Patch.Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddTabs_Patch.Patch.html",
    "title": "Method Patch | Nitrox",
    "keywords": "Method Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Patch(Harmony) public override void Patch(Harmony harmony) Parameters harmony Harmony"
  },
  "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddTabs_Patch.Postfix.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddTabs_Patch.Postfix.html",
    "title": "Method Postfix | Nitrox",
    "keywords": "Method Postfix Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll Postfix(uGUI_OptionsPanel) public static void Postfix(uGUI_OptionsPanel __instance) Parameters __instance uGUI_OptionsPanel"
  },
  "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddTabs_Patch.html": {
    "href": "api/NitroxPatcher.Patches.Persistent.uGUI_OptionsPanel_AddTabs_Patch.html",
    "title": "Class uGUI_OptionsPanel_AddTabs_Patch | Nitrox",
    "keywords": "Class uGUI_OptionsPanel_AddTabs_Patch Namespace NitroxPatcher.Patches.Persistent Assembly NitroxPatcher.dll public class uGUI_OptionsPanel_AddTabs_Patch : NitroxPatch, IPersistentPatch, INitroxPatch Inheritance object NitroxPatch uGUI_OptionsPanel_AddTabs_Patch Implements IPersistentPatch INitroxPatch Inherited Members NitroxPatch.Restore(Harmony) NitroxPatch.PatchFinalizer(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchTranspiler(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPrefix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchPostfix(Harmony, MethodBase, MethodInfo) NitroxPatch.PatchMultiple(Harmony, MethodBase, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo) NitroxPatch.Resolve<T>(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Patch(Harmony) Postfix(uGUI_OptionsPanel)"
  },
  "api/NitroxPatcher.Patches.html": {
    "href": "api/NitroxPatcher.Patches.html",
    "title": "Namespace NitroxPatcher.Patches | Nitrox",
    "keywords": "Namespace NitroxPatcher.Patches Namespaces NitroxPatcher.Patches.Dynamic NitroxPatcher.Patches.Persistent Classes NitroxPatch Base class for declaring a patch using HarmonyLib.Harmony. Implement either IDynamicPatch if your patch is unloadable or IPersistentPatch if it isn't. Either one or more of the following patch types are possible in one NitroxPatch: Prefix patch, use PatchPrefix(Harmony, MethodBase, MethodInfo) Postfix patch, use PatchPostfix(Harmony, MethodBase, MethodInfo) Transpiler patch, use PatchTranspiler(Harmony, MethodBase, MethodInfo) Finalizer patch, use PatchFinalizer(Harmony, MethodBase, MethodInfo) Documentation for patching can be found under https://harmony.pardeike.net/articles/patching.html and https://github.com/BepInEx/HarmonyX/wiki/Difference-between-Harmony-and-HarmonyX Interfaces IDynamicPatch A dynamic patch can possibly be unloaded. For Nitrox, this should happen when the player returns to the main menu. INitroxPatch IPersistentPatch A persistent patch is applied when the game is initializing and stays applied throughout the process' life time."
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.Call.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.Call.html",
    "title": "Method Call | Nitrox",
    "keywords": "Method Call Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll Call(string, string) public static InstructionPattern Call(string className, string methodName) Parameters className string methodName string Returns InstructionPattern Call(MethodInfo) public static InstructionPattern Call(MethodInfo method) Parameters method MethodInfo Returns InstructionPattern"
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.Equals.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll Equals(InstructionPattern) public bool Equals(InstructionPattern other) Parameters other InstructionPattern Returns bool Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false."
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.GetHashCode.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance."
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.Label.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.Label.html",
    "title": "Property Label | Nitrox",
    "keywords": "Property Label Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll Label public string Label { get; init; } Property Value string"
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.OpCode.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.OpCode.html",
    "title": "Property OpCode | Nitrox",
    "keywords": "Property OpCode Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll OpCode public OpCodePattern OpCode { get; init; } Property Value OpCodePattern"
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.Operand.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.Operand.html",
    "title": "Property Operand | Nitrox",
    "keywords": "Property Operand Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll Operand public OperandPattern Operand { get; init; } Property Value OperandPattern"
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.ToString.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.html",
    "title": "Struct InstructionPattern | Nitrox",
    "keywords": "Struct InstructionPattern Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll public readonly struct InstructionPattern Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Properties Label OpCode Operand Methods Call(MethodInfo) Call(string, string) Equals(InstructionPattern) Equals(object) Indicates whether this instance and a specified object are equal. GetHashCode() Returns the hash code for this instance. ToString() Returns the fully qualified type name of this instance. Operators operator ==(CodeInstruction, InstructionPattern) operator ==(InstructionPattern, CodeInstruction) implicit operator InstructionPattern(OperandPattern) implicit operator InstructionPattern(OpCode) implicit operator InstructionPattern(MethodInfo) operator !=(CodeInstruction, InstructionPattern) operator !=(InstructionPattern, CodeInstruction)"
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.op_Equality.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.op_Equality.html",
    "title": "Operator operator == | Nitrox",
    "keywords": "Operator operator == Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll operator ==(InstructionPattern, CodeInstruction) public static bool operator ==(InstructionPattern pattern, CodeInstruction instruction) Parameters pattern InstructionPattern instruction CodeInstruction Returns bool operator ==(CodeInstruction, InstructionPattern) public static bool operator ==(CodeInstruction instruction, InstructionPattern pattern) Parameters instruction CodeInstruction pattern InstructionPattern Returns bool"
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.op_Implicit.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.op_Implicit.html",
    "title": "Operator implicit operator | Nitrox",
    "keywords": "Operator implicit operator Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll implicit operator InstructionPattern(OpCode) public static implicit operator InstructionPattern(OpCode opCode) Parameters opCode OpCode Returns InstructionPattern implicit operator InstructionPattern(OperandPattern) public static implicit operator InstructionPattern(OperandPattern operand) Parameters operand OperandPattern Returns InstructionPattern implicit operator InstructionPattern(MethodInfo) public static implicit operator InstructionPattern(MethodInfo method) Parameters method MethodInfo Returns InstructionPattern"
  },
  "api/NitroxPatcher.PatternMatching.InstructionPattern.op_Inequality.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionPattern.op_Inequality.html",
    "title": "Operator operator != | Nitrox",
    "keywords": "Operator operator != Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll operator !=(CodeInstruction, InstructionPattern) public static bool operator !=(CodeInstruction instruction, InstructionPattern pattern) Parameters instruction CodeInstruction pattern InstructionPattern Returns bool operator !=(InstructionPattern, CodeInstruction) public static bool operator !=(InstructionPattern pattern, CodeInstruction instruction) Parameters pattern InstructionPattern instruction CodeInstruction Returns bool"
  },
  "api/NitroxPatcher.PatternMatching.InstructionsPattern.-ctor.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionsPattern.-ctor.html",
    "title": "Constructor InstructionsPattern | Nitrox",
    "keywords": "Constructor InstructionsPattern Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll InstructionsPattern(int) Creates a new IL pattern to apply transforms to IL. By default, a pattern expects to match exactly once. public InstructionsPattern(int expectedMatches = 1) Parameters expectedMatches int"
  },
  "api/NitroxPatcher.PatternMatching.InstructionsPattern.Add.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionsPattern.Add.html",
    "title": "Method Add | Nitrox",
    "keywords": "Method Add Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll Add(InstructionPattern) public void Add(InstructionPattern instruction) Parameters instruction InstructionPattern Add(InstructionPattern, string) public void Add(InstructionPattern instruction, string label) Parameters instruction InstructionPattern label string"
  },
  "api/NitroxPatcher.PatternMatching.InstructionsPattern.ApplyTransform.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionsPattern.ApplyTransform.html",
    "title": "Method ApplyTransform | Nitrox",
    "keywords": "Method ApplyTransform Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll ApplyTransform(IEnumerable<CodeInstruction>, Func<string, CodeInstruction, IEnumerable<CodeInstruction>>) public IEnumerable<CodeInstruction> ApplyTransform(IEnumerable<CodeInstruction> instructions, Func<string, CodeInstruction, IEnumerable<CodeInstruction>> transform) Parameters instructions IEnumerable<CodeInstruction> transform Func<string, CodeInstruction, IEnumerable<CodeInstruction>> Returns IEnumerable<CodeInstruction>"
  },
  "api/NitroxPatcher.PatternMatching.InstructionsPattern.GetEnumerator.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionsPattern.GetEnumerator.html",
    "title": "Method GetEnumerator | Nitrox",
    "keywords": "Method GetEnumerator Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<InstructionPattern> GetEnumerator() Returns IEnumerator<InstructionPattern> An enumerator that can be used to iterate through the collection."
  },
  "api/NitroxPatcher.PatternMatching.InstructionsPattern.ToString.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionsPattern.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxPatcher.PatternMatching.InstructionsPattern.html": {
    "href": "api/NitroxPatcher.PatternMatching.InstructionsPattern.html",
    "title": "Class InstructionsPattern | Nitrox",
    "keywords": "Class InstructionsPattern Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll public class InstructionsPattern : IEnumerable<InstructionPattern>, IEnumerable Inheritance object InstructionsPattern Implements IEnumerable<InstructionPattern> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods Extensions.SequenceEqualOrBothNull<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) Remarks Pattern matching is NOT thread safe. Constructors InstructionsPattern(int) Creates a new IL pattern to apply transforms to IL. By default, a pattern expects to match exactly once. Methods Add(InstructionPattern) Add(InstructionPattern, string) ApplyTransform(IEnumerable<CodeInstruction>, Func<string, CodeInstruction, IEnumerable<CodeInstruction>>) GetEnumerator() Returns an enumerator that iterates through the collection. ToString() Returns a string that represents the current object."
  },
  "api/NitroxPatcher.PatternMatching.OpCodePattern.Equals.html": {
    "href": "api/NitroxPatcher.PatternMatching.OpCodePattern.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll Equals(OpCodePattern) public bool Equals(OpCodePattern other) Parameters other OpCodePattern Returns bool Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false."
  },
  "api/NitroxPatcher.PatternMatching.OpCodePattern.GetHashCode.html": {
    "href": "api/NitroxPatcher.PatternMatching.OpCodePattern.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance."
  },
  "api/NitroxPatcher.PatternMatching.OpCodePattern.IsAnyCall.html": {
    "href": "api/NitroxPatcher.PatternMatching.OpCodePattern.IsAnyCall.html",
    "title": "Property IsAnyCall | Nitrox",
    "keywords": "Property IsAnyCall Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll IsAnyCall public bool IsAnyCall { get; } Property Value bool"
  },
  "api/NitroxPatcher.PatternMatching.OpCodePattern.OpCode.html": {
    "href": "api/NitroxPatcher.PatternMatching.OpCodePattern.OpCode.html",
    "title": "Property OpCode | Nitrox",
    "keywords": "Property OpCode Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll OpCode public OpCode? OpCode { get; init; } Property Value OpCode?"
  },
  "api/NitroxPatcher.PatternMatching.OpCodePattern.WeakMatch.html": {
    "href": "api/NitroxPatcher.PatternMatching.OpCodePattern.WeakMatch.html",
    "title": "Property WeakMatch | Nitrox",
    "keywords": "Property WeakMatch Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll WeakMatch If true, similar opcodes will be matched as being the same. public bool WeakMatch { get; init; } Property Value bool Remarks Example for similar opcodes (call): call, callvirt and calli."
  },
  "api/NitroxPatcher.PatternMatching.OpCodePattern.html": {
    "href": "api/NitroxPatcher.PatternMatching.OpCodePattern.html",
    "title": "Struct OpCodePattern | Nitrox",
    "keywords": "Struct OpCodePattern Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll public readonly struct OpCodePattern Inherited Members ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Properties IsAnyCall OpCode WeakMatch If true, similar opcodes will be matched as being the same. Methods Equals(OpCodePattern) Equals(object) Indicates whether this instance and a specified object are equal. GetHashCode() Returns the hash code for this instance. Operators operator ==(OpCodePattern, OpCode) operator ==(OpCode, OpCodePattern) implicit operator OpCodePattern(OpCode) operator !=(OpCodePattern, OpCode) operator !=(OpCode, OpCodePattern)"
  },
  "api/NitroxPatcher.PatternMatching.OpCodePattern.op_Equality.html": {
    "href": "api/NitroxPatcher.PatternMatching.OpCodePattern.op_Equality.html",
    "title": "Operator operator == | Nitrox",
    "keywords": "Operator operator == Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll operator ==(OpCodePattern, OpCode) public static bool operator ==(OpCodePattern pattern, OpCode opCode) Parameters pattern OpCodePattern opCode OpCode Returns bool operator ==(OpCode, OpCodePattern) public static bool operator ==(OpCode opCode, OpCodePattern pattern) Parameters opCode OpCode pattern OpCodePattern Returns bool"
  },
  "api/NitroxPatcher.PatternMatching.OpCodePattern.op_Implicit.html": {
    "href": "api/NitroxPatcher.PatternMatching.OpCodePattern.op_Implicit.html",
    "title": "Operator implicit operator | Nitrox",
    "keywords": "Operator implicit operator Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll implicit operator OpCodePattern(OpCode) public static implicit operator OpCodePattern(OpCode opCode) Parameters opCode OpCode Returns OpCodePattern"
  },
  "api/NitroxPatcher.PatternMatching.OpCodePattern.op_Inequality.html": {
    "href": "api/NitroxPatcher.PatternMatching.OpCodePattern.op_Inequality.html",
    "title": "Operator operator != | Nitrox",
    "keywords": "Operator operator != Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll operator !=(OpCodePattern, OpCode) public static bool operator !=(OpCodePattern pattern, OpCode opCode) Parameters pattern OpCodePattern opCode OpCode Returns bool operator !=(OpCode, OpCodePattern) public static bool operator !=(OpCode opCode, OpCodePattern pattern) Parameters opCode OpCode pattern OpCodePattern Returns bool"
  },
  "api/NitroxPatcher.PatternMatching.OperandPattern.-ctor.html": {
    "href": "api/NitroxPatcher.PatternMatching.OperandPattern.-ctor.html",
    "title": "Constructor OperandPattern | Nitrox",
    "keywords": "Constructor OperandPattern Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll OperandPattern(string, string, Type[]) public OperandPattern(string DeclaringClassName, string MemberName, Type[] ArgumentTypes = null) Parameters DeclaringClassName string MemberName string ArgumentTypes Type[]"
  },
  "api/NitroxPatcher.PatternMatching.OperandPattern.ArgumentTypes.html": {
    "href": "api/NitroxPatcher.PatternMatching.OperandPattern.ArgumentTypes.html",
    "title": "Property ArgumentTypes | Nitrox",
    "keywords": "Property ArgumentTypes Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll ArgumentTypes public Type[] ArgumentTypes { get; init; } Property Value Type[]"
  },
  "api/NitroxPatcher.PatternMatching.OperandPattern.DeclaringClassName.html": {
    "href": "api/NitroxPatcher.PatternMatching.OperandPattern.DeclaringClassName.html",
    "title": "Property DeclaringClassName | Nitrox",
    "keywords": "Property DeclaringClassName Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll DeclaringClassName public string DeclaringClassName { get; init; } Property Value string"
  },
  "api/NitroxPatcher.PatternMatching.OperandPattern.IsAny.html": {
    "href": "api/NitroxPatcher.PatternMatching.OperandPattern.IsAny.html",
    "title": "Property IsAny | Nitrox",
    "keywords": "Property IsAny Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll IsAny public bool IsAny { get; } Property Value bool"
  },
  "api/NitroxPatcher.PatternMatching.OperandPattern.IsAnyArguments.html": {
    "href": "api/NitroxPatcher.PatternMatching.OperandPattern.IsAnyArguments.html",
    "title": "Property IsAnyArguments | Nitrox",
    "keywords": "Property IsAnyArguments Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll IsAnyArguments public bool IsAnyArguments { get; } Property Value bool"
  },
  "api/NitroxPatcher.PatternMatching.OperandPattern.MemberName.html": {
    "href": "api/NitroxPatcher.PatternMatching.OperandPattern.MemberName.html",
    "title": "Property MemberName | Nitrox",
    "keywords": "Property MemberName Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll MemberName public string MemberName { get; init; } Property Value string"
  },
  "api/NitroxPatcher.PatternMatching.OperandPattern.ToString.html": {
    "href": "api/NitroxPatcher.PatternMatching.OperandPattern.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/NitroxPatcher.PatternMatching.OperandPattern.html": {
    "href": "api/NitroxPatcher.PatternMatching.OperandPattern.html",
    "title": "Struct OperandPattern | Nitrox",
    "keywords": "Struct OperandPattern Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll public readonly record struct OperandPattern : IEquatable<OperandPattern> Implements IEquatable<OperandPattern> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors OperandPattern(string, string, Type[]) Properties ArgumentTypes DeclaringClassName IsAny IsAnyArguments MemberName Methods ToString() Returns the fully qualified type name of this instance. Operators operator ==(OperandPattern, object) operator !=(OperandPattern, object)"
  },
  "api/NitroxPatcher.PatternMatching.OperandPattern.op_Equality.html": {
    "href": "api/NitroxPatcher.PatternMatching.OperandPattern.op_Equality.html",
    "title": "Operator operator == | Nitrox",
    "keywords": "Operator operator == Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll operator ==(OperandPattern, object) public static bool operator ==(OperandPattern pattern, object operand) Parameters pattern OperandPattern operand object Returns bool"
  },
  "api/NitroxPatcher.PatternMatching.OperandPattern.op_Inequality.html": {
    "href": "api/NitroxPatcher.PatternMatching.OperandPattern.op_Inequality.html",
    "title": "Operator operator != | Nitrox",
    "keywords": "Operator operator != Namespace NitroxPatcher.PatternMatching Assembly NitroxPatcher.dll operator !=(OperandPattern, object) public static bool operator !=(OperandPattern pattern, object operand) Parameters pattern OperandPattern operand object Returns bool"
  },
  "api/NitroxPatcher.PatternMatching.html": {
    "href": "api/NitroxPatcher.PatternMatching.html",
    "title": "Namespace NitroxPatcher.PatternMatching | Nitrox",
    "keywords": "Namespace NitroxPatcher.PatternMatching Classes InstructionsPattern Structs InstructionPattern OpCodePattern OperandPattern"
  },
  "api/NitroxPatcher.html": {
    "href": "api/NitroxPatcher.html",
    "title": "Namespace NitroxPatcher | Nitrox",
    "keywords": "Namespace NitroxPatcher Namespaces NitroxPatcher.Modules NitroxPatcher.Patches NitroxPatcher.PatternMatching Classes Main"
  },
  "api/NitroxServer.Communication.LANBroadcastServer.Start.html": {
    "href": "api/NitroxServer.Communication.LANBroadcastServer.Start.html",
    "title": "Method Start | Nitrox",
    "keywords": "Method Start Namespace NitroxServer.Communication Assembly NitroxServer.dll Start() public static void Start()"
  },
  "api/NitroxServer.Communication.LANBroadcastServer.Stop.html": {
    "href": "api/NitroxServer.Communication.LANBroadcastServer.Stop.html",
    "title": "Method Stop | Nitrox",
    "keywords": "Method Stop Namespace NitroxServer.Communication Assembly NitroxServer.dll Stop() public static void Stop()"
  },
  "api/NitroxServer.Communication.LANBroadcastServer.html": {
    "href": "api/NitroxServer.Communication.LANBroadcastServer.html",
    "title": "Class LANBroadcastServer | Nitrox",
    "keywords": "Class LANBroadcastServer Namespace NitroxServer.Communication Assembly NitroxServer.dll public static class LANBroadcastServer Inheritance object LANBroadcastServer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Start() Stop()"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.-ctor.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.-ctor.html",
    "title": "Constructor LiteNetLibConnection | Nitrox",
    "keywords": "Constructor LiteNetLibConnection Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll LiteNetLibConnection(NetPeer) public LiteNetLibConnection(NetPeer peer) Parameters peer NetPeer"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.Endpoint.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.Endpoint.html",
    "title": "Property Endpoint | Nitrox",
    "keywords": "Property Endpoint Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll Endpoint public IPEndPoint Endpoint { get; } Property Value IPEndPoint"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.Equals.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. Equals(LiteNetLibConnection) Indicates whether the current object is equal to another object of the same type. public bool Equals(LiteNetLibConnection other) Parameters other LiteNetLibConnection An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false."
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.GetHashCode.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.SendPacket.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.SendPacket.html",
    "title": "Method SendPacket | Nitrox",
    "keywords": "Method SendPacket Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll SendPacket(Packet) public void SendPacket(Packet packet) Parameters packet Packet"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.State.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.State.html",
    "title": "Property State | Nitrox",
    "keywords": "Property State Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll State public NitroxConnectionState State { get; } Property Value NitroxConnectionState"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.html",
    "title": "Class LiteNetLibConnection | Nitrox",
    "keywords": "Class LiteNetLibConnection Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll public class LiteNetLibConnection : NitroxConnection, IProcessorContext, IEquatable<LiteNetLibConnection> Inheritance object LiteNetLibConnection Implements NitroxConnection IProcessorContext IEquatable<LiteNetLibConnection> Inherited Members object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors LiteNetLibConnection(NetPeer) Properties Endpoint State Methods Equals(LiteNetLibConnection) Indicates whether the current object is equal to another object of the same type. Equals(object) Determines whether the specified object is equal to the current object. GetHashCode() Serves as the default hash function. SendPacket(Packet) Operators operator ==(LiteNetLibConnection, LiteNetLibConnection) operator !=(LiteNetLibConnection, LiteNetLibConnection)"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.op_Equality.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.op_Equality.html",
    "title": "Operator operator == | Nitrox",
    "keywords": "Operator operator == Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll operator ==(LiteNetLibConnection, LiteNetLibConnection) public static bool operator ==(LiteNetLibConnection left, LiteNetLibConnection right) Parameters left LiteNetLibConnection right LiteNetLibConnection Returns bool"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.op_Inequality.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibConnection.op_Inequality.html",
    "title": "Operator operator != | Nitrox",
    "keywords": "Operator operator != Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll operator !=(LiteNetLibConnection, LiteNetLibConnection) public static bool operator !=(LiteNetLibConnection left, LiteNetLibConnection right) Parameters left LiteNetLibConnection right LiteNetLibConnection Returns bool"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibServer.-ctor.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibServer.-ctor.html",
    "title": "Constructor LiteNetLibServer | Nitrox",
    "keywords": "Constructor LiteNetLibServer Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll LiteNetLibServer(PacketHandler, PlayerManager, EntitySimulation, ServerConfig) public LiteNetLibServer(PacketHandler packetHandler, PlayerManager playerManager, EntitySimulation entitySimulation, ServerConfig serverConfig) Parameters packetHandler PacketHandler playerManager PlayerManager entitySimulation EntitySimulation serverConfig ServerConfig"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibServer.OnConnectionRequest.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibServer.OnConnectionRequest.html",
    "title": "Method OnConnectionRequest | Nitrox",
    "keywords": "Method OnConnectionRequest Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll OnConnectionRequest(ConnectionRequest) public void OnConnectionRequest(ConnectionRequest request) Parameters request ConnectionRequest"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibServer.Start.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibServer.Start.html",
    "title": "Method Start | Nitrox",
    "keywords": "Method Start Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll Start() public override bool Start() Returns bool"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibServer.Stop.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibServer.Stop.html",
    "title": "Method Stop | Nitrox",
    "keywords": "Method Stop Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll Stop() public override void Stop()"
  },
  "api/NitroxServer.Communication.LiteNetLib.LiteNetLibServer.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.LiteNetLibServer.html",
    "title": "Class LiteNetLibServer | Nitrox",
    "keywords": "Class LiteNetLibServer Namespace NitroxServer.Communication.LiteNetLib Assembly NitroxServer.dll public class LiteNetLibServer : NitroxServer Inheritance object NitroxServer LiteNetLibServer Inherited Members NitroxServer.portNumber NitroxServer.maxConnections NitroxServer.useUpnpPortForwarding NitroxServer.useLANBroadcast NitroxServer.packetHandler NitroxServer.entitySimulation NitroxServer.connectionsByRemoteIdentifier NitroxServer.playerManager NitroxServer.ClientDisconnected(NitroxConnection) NitroxServer.ProcessIncomingData(NitroxConnection, Packet) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LiteNetLibServer(PacketHandler, PlayerManager, EntitySimulation, ServerConfig) Methods OnConnectionRequest(ConnectionRequest) Start() Stop()"
  },
  "api/NitroxServer.Communication.LiteNetLib.html": {
    "href": "api/NitroxServer.Communication.LiteNetLib.html",
    "title": "Namespace NitroxServer.Communication.LiteNetLib | Nitrox",
    "keywords": "Namespace NitroxServer.Communication.LiteNetLib Classes LiteNetLibConnection LiteNetLibServer"
  },
  "api/NitroxServer.Communication.NitroxConnection.Endpoint.html": {
    "href": "api/NitroxServer.Communication.NitroxConnection.Endpoint.html",
    "title": "Property Endpoint | Nitrox",
    "keywords": "Property Endpoint Namespace NitroxServer.Communication Assembly NitroxServer.dll Endpoint IPEndPoint Endpoint { get; } Property Value IPEndPoint"
  },
  "api/NitroxServer.Communication.NitroxConnection.SendPacket.html": {
    "href": "api/NitroxServer.Communication.NitroxConnection.SendPacket.html",
    "title": "Method SendPacket | Nitrox",
    "keywords": "Method SendPacket Namespace NitroxServer.Communication Assembly NitroxServer.dll SendPacket(Packet) void SendPacket(Packet packet) Parameters packet Packet"
  },
  "api/NitroxServer.Communication.NitroxConnection.State.html": {
    "href": "api/NitroxServer.Communication.NitroxConnection.State.html",
    "title": "Property State | Nitrox",
    "keywords": "Property State Namespace NitroxServer.Communication Assembly NitroxServer.dll State NitroxConnectionState State { get; } Property Value NitroxConnectionState"
  },
  "api/NitroxServer.Communication.NitroxConnection.html": {
    "href": "api/NitroxServer.Communication.NitroxConnection.html",
    "title": "Interface NitroxConnection | Nitrox",
    "keywords": "Interface NitroxConnection Namespace NitroxServer.Communication Assembly NitroxServer.dll public interface NitroxConnection : IProcessorContext Properties Endpoint State Methods SendPacket(Packet)"
  },
  "api/NitroxServer.Communication.NitroxConnectionState.html": {
    "href": "api/NitroxServer.Communication.NitroxConnectionState.html",
    "title": "Enum NitroxConnectionState | Nitrox",
    "keywords": "Enum NitroxConnectionState Namespace NitroxServer.Communication Assembly NitroxServer.dll public enum NitroxConnectionState Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields Connected = 2 Disconnected = 1 InGame = 4 Reserved = 3 Unknown = 0"
  },
  "api/NitroxServer.Communication.NitroxConnectionStateExtensions.ToNitrox.html": {
    "href": "api/NitroxServer.Communication.NitroxConnectionStateExtensions.ToNitrox.html",
    "title": "Method ToNitrox | Nitrox",
    "keywords": "Method ToNitrox Namespace NitroxServer.Communication Assembly NitroxServer.dll ToNitrox(ConnectionState) public static NitroxConnectionState ToNitrox(this ConnectionState connectionState) Parameters connectionState ConnectionState Returns NitroxConnectionState"
  },
  "api/NitroxServer.Communication.NitroxConnectionStateExtensions.html": {
    "href": "api/NitroxServer.Communication.NitroxConnectionStateExtensions.html",
    "title": "Class NitroxConnectionStateExtensions | Nitrox",
    "keywords": "Class NitroxConnectionStateExtensions Namespace NitroxServer.Communication Assembly NitroxServer.dll public static class NitroxConnectionStateExtensions Inheritance object NitroxConnectionStateExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ToNitrox(ConnectionState)"
  },
  "api/NitroxServer.Communication.NitroxServer.-ctor.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.-ctor.html",
    "title": "Constructor NitroxServer | Nitrox",
    "keywords": "Constructor NitroxServer Namespace NitroxServer.Communication Assembly NitroxServer.dll NitroxServer(PacketHandler, PlayerManager, EntitySimulation, ServerConfig) public NitroxServer(PacketHandler packetHandler, PlayerManager playerManager, EntitySimulation entitySimulation, ServerConfig serverConfig) Parameters packetHandler PacketHandler playerManager PlayerManager entitySimulation EntitySimulation serverConfig ServerConfig"
  },
  "api/NitroxServer.Communication.NitroxServer.ClientDisconnected.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.ClientDisconnected.html",
    "title": "Method ClientDisconnected | Nitrox",
    "keywords": "Method ClientDisconnected Namespace NitroxServer.Communication Assembly NitroxServer.dll ClientDisconnected(NitroxConnection) protected void ClientDisconnected(NitroxConnection connection) Parameters connection NitroxConnection"
  },
  "api/NitroxServer.Communication.NitroxServer.ProcessIncomingData.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.ProcessIncomingData.html",
    "title": "Method ProcessIncomingData | Nitrox",
    "keywords": "Method ProcessIncomingData Namespace NitroxServer.Communication Assembly NitroxServer.dll ProcessIncomingData(NitroxConnection, Packet) protected void ProcessIncomingData(NitroxConnection connection, Packet packet) Parameters connection NitroxConnection packet Packet"
  },
  "api/NitroxServer.Communication.NitroxServer.Start.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.Start.html",
    "title": "Method Start | Nitrox",
    "keywords": "Method Start Namespace NitroxServer.Communication Assembly NitroxServer.dll Start() public abstract bool Start() Returns bool"
  },
  "api/NitroxServer.Communication.NitroxServer.Stop.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.Stop.html",
    "title": "Method Stop | Nitrox",
    "keywords": "Method Stop Namespace NitroxServer.Communication Assembly NitroxServer.dll Stop() public abstract void Stop()"
  },
  "api/NitroxServer.Communication.NitroxServer.connectionsByRemoteIdentifier.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.connectionsByRemoteIdentifier.html",
    "title": "Field connectionsByRemoteIdentifier | Nitrox",
    "keywords": "Field connectionsByRemoteIdentifier Namespace NitroxServer.Communication Assembly NitroxServer.dll protected readonly Dictionary<int, NitroxConnection> connectionsByRemoteIdentifier Returns Dictionary<int, NitroxConnection>"
  },
  "api/NitroxServer.Communication.NitroxServer.entitySimulation.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.entitySimulation.html",
    "title": "Field entitySimulation | Nitrox",
    "keywords": "Field entitySimulation Namespace NitroxServer.Communication Assembly NitroxServer.dll protected readonly EntitySimulation entitySimulation Returns EntitySimulation"
  },
  "api/NitroxServer.Communication.NitroxServer.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.html",
    "title": "Class NitroxServer | Nitrox",
    "keywords": "Class NitroxServer Namespace NitroxServer.Communication Assembly NitroxServer.dll public abstract class NitroxServer Inheritance object NitroxServer Derived LiteNetLibServer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxServer(PacketHandler, PlayerManager, EntitySimulation, ServerConfig) Fields connectionsByRemoteIdentifier entitySimulation maxConnections packetHandler playerManager portNumber useLANBroadcast useUpnpPortForwarding Methods ClientDisconnected(NitroxConnection) ProcessIncomingData(NitroxConnection, Packet) Start() Stop()"
  },
  "api/NitroxServer.Communication.NitroxServer.maxConnections.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.maxConnections.html",
    "title": "Field maxConnections | Nitrox",
    "keywords": "Field maxConnections Namespace NitroxServer.Communication Assembly NitroxServer.dll protected readonly int maxConnections Returns int"
  },
  "api/NitroxServer.Communication.NitroxServer.packetHandler.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.packetHandler.html",
    "title": "Field packetHandler | Nitrox",
    "keywords": "Field packetHandler Namespace NitroxServer.Communication Assembly NitroxServer.dll protected readonly PacketHandler packetHandler Returns PacketHandler"
  },
  "api/NitroxServer.Communication.NitroxServer.playerManager.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.playerManager.html",
    "title": "Field playerManager | Nitrox",
    "keywords": "Field playerManager Namespace NitroxServer.Communication Assembly NitroxServer.dll protected readonly PlayerManager playerManager Returns PlayerManager"
  },
  "api/NitroxServer.Communication.NitroxServer.portNumber.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.portNumber.html",
    "title": "Field portNumber | Nitrox",
    "keywords": "Field portNumber Namespace NitroxServer.Communication Assembly NitroxServer.dll protected readonly int portNumber Returns int"
  },
  "api/NitroxServer.Communication.NitroxServer.useLANBroadcast.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.useLANBroadcast.html",
    "title": "Field useLANBroadcast | Nitrox",
    "keywords": "Field useLANBroadcast Namespace NitroxServer.Communication Assembly NitroxServer.dll protected readonly bool useLANBroadcast Returns bool"
  },
  "api/NitroxServer.Communication.NitroxServer.useUpnpPortForwarding.html": {
    "href": "api/NitroxServer.Communication.NitroxServer.useUpnpPortForwarding.html",
    "title": "Field useUpnpPortForwarding | Nitrox",
    "keywords": "Field useUpnpPortForwarding Namespace NitroxServer.Communication Assembly NitroxServer.dll protected readonly bool useUpnpPortForwarding Returns bool"
  },
  "api/NitroxServer.Communication.Packets.PacketHandler.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.PacketHandler.-ctor.html",
    "title": "Constructor PacketHandler | Nitrox",
    "keywords": "Constructor PacketHandler Namespace NitroxServer.Communication.Packets Assembly NitroxServer.dll PacketHandler(PlayerManager, DefaultServerPacketProcessor) public PacketHandler(PlayerManager playerManager, DefaultServerPacketProcessor packetProcessor) Parameters playerManager PlayerManager packetProcessor DefaultServerPacketProcessor"
  },
  "api/NitroxServer.Communication.Packets.PacketHandler.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.PacketHandler.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets Assembly NitroxServer.dll Process(Packet, NitroxConnection) public void Process(Packet packet, NitroxConnection connection) Parameters packet Packet connection NitroxConnection"
  },
  "api/NitroxServer.Communication.Packets.PacketHandler.html": {
    "href": "api/NitroxServer.Communication.Packets.PacketHandler.html",
    "title": "Class PacketHandler | Nitrox",
    "keywords": "Class PacketHandler Namespace NitroxServer.Communication.Packets Assembly NitroxServer.dll public class PacketHandler Inheritance object PacketHandler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PacketHandler(PlayerManager, DefaultServerPacketProcessor) Methods Process(Packet, NitroxConnection)"
  },
  "api/NitroxServer.Communication.Packets.Processors.Abstract.AuthenticatedPacketProcessor-1.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.Abstract.AuthenticatedPacketProcessor-1.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors.Abstract Assembly NitroxServer.dll Process(T, Player) public abstract void Process(T packet, Player player) Parameters packet T player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.Abstract.AuthenticatedPacketProcessor-1.ProcessPacket.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.Abstract.AuthenticatedPacketProcessor-1.ProcessPacket.html",
    "title": "Method ProcessPacket | Nitrox",
    "keywords": "Method ProcessPacket Namespace NitroxServer.Communication.Packets.Processors.Abstract Assembly NitroxServer.dll ProcessPacket(Packet, IProcessorContext) public override void ProcessPacket(Packet packet, IProcessorContext player) Parameters packet Packet player IProcessorContext"
  },
  "api/NitroxServer.Communication.Packets.Processors.Abstract.AuthenticatedPacketProcessor-1.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.Abstract.AuthenticatedPacketProcessor-1.html",
    "title": "Class AuthenticatedPacketProcessor<T> | Nitrox",
    "keywords": "Class AuthenticatedPacketProcessor<T> Namespace NitroxServer.Communication.Packets.Processors.Abstract Assembly NitroxServer.dll public abstract class AuthenticatedPacketProcessor<T> : PacketProcessor where T : Packet Type Parameters T Inheritance object PacketProcessor AuthenticatedPacketProcessor<T> Derived BatchVisibilityChangedProcessor BedEnterProcessor BuildingProcessor<T> BuildingResyncRequestProcessor ChatMessageProcessor DefaultServerPacketProcessor DiscordRequestIPProcessor EntityDestroyedPacketProcessor EntityMetadataUpdateProcessor EntityReparentedProcessor EscapePodChangedPacketProcessor GoalCompletedProcessor KnownTechEntryAddProcessor PDAEncyclopediaEntryAddProcessor PDALogEntryAddProcessor PDAScanFinishedPacketProcessor PickupItemPacketProcessor PingRenamedPacketProcessor PinnedRecipeMovedProcessor PinnedRecipeProcessor PlayFMODAssetProcessor PlayerHeldItemChangedProcessor PlayerQuickSlotsBindingChangedProcessor PlayerStatsProcessor PlayerSyncFinishedProcessor RadioPlayPendingMessageProcessor ScheduleProcessor ServerCommandProcessor SignalPingPreferenceChangedProcessor StoryGoalExecutedProcessor VehicleDockingProcessor VehicleUndockingProcessor CyclopsDamageProcessor Inherited Members PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(T, Player) ProcessPacket(Packet, IProcessorContext)"
  },
  "api/NitroxServer.Communication.Packets.Processors.Abstract.UnauthenticatedPacketProcessor-1.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.Abstract.UnauthenticatedPacketProcessor-1.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors.Abstract Assembly NitroxServer.dll Process(T, NitroxConnection) public abstract void Process(T packet, NitroxConnection connection) Parameters packet T connection NitroxConnection"
  },
  "api/NitroxServer.Communication.Packets.Processors.Abstract.UnauthenticatedPacketProcessor-1.ProcessPacket.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.Abstract.UnauthenticatedPacketProcessor-1.ProcessPacket.html",
    "title": "Method ProcessPacket | Nitrox",
    "keywords": "Method ProcessPacket Namespace NitroxServer.Communication.Packets.Processors.Abstract Assembly NitroxServer.dll ProcessPacket(Packet, IProcessorContext) public override void ProcessPacket(Packet packet, IProcessorContext connection) Parameters packet Packet connection IProcessorContext"
  },
  "api/NitroxServer.Communication.Packets.Processors.Abstract.UnauthenticatedPacketProcessor-1.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.Abstract.UnauthenticatedPacketProcessor-1.html",
    "title": "Class UnauthenticatedPacketProcessor<T> | Nitrox",
    "keywords": "Class UnauthenticatedPacketProcessor<T> Namespace NitroxServer.Communication.Packets.Processors.Abstract Assembly NitroxServer.dll public abstract class UnauthenticatedPacketProcessor<T> : PacketProcessor where T : Packet Type Parameters T Inheritance object PacketProcessor UnauthenticatedPacketProcessor<T> Derived MultiplayerSessionPolicyRequestProcessor MultiplayerSessionReservationRequestProcessor PlayerJoiningMultiplayerSessionProcessor Inherited Members PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(T, NitroxConnection) ProcessPacket(Packet, IProcessorContext)"
  },
  "api/NitroxServer.Communication.Packets.Processors.Abstract.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.Abstract.html",
    "title": "Namespace NitroxServer.Communication.Packets.Processors.Abstract | Nitrox",
    "keywords": "Namespace NitroxServer.Communication.Packets.Processors.Abstract Classes AuthenticatedPacketProcessor<T> UnauthenticatedPacketProcessor<T>"
  },
  "api/NitroxServer.Communication.Packets.Processors.BaseDeconstructedProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BaseDeconstructedProcessor.-ctor.html",
    "title": "Constructor BaseDeconstructedProcessor | Nitrox",
    "keywords": "Constructor BaseDeconstructedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll BaseDeconstructedProcessor(BuildingManager, PlayerManager) public BaseDeconstructedProcessor(BuildingManager buildingManager, PlayerManager playerManager) Parameters buildingManager BuildingManager playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.BaseDeconstructedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BaseDeconstructedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(BaseDeconstructed, Player) public override void Process(BaseDeconstructed packet, Player player) Parameters packet BaseDeconstructed player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.BaseDeconstructedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BaseDeconstructedProcessor.html",
    "title": "Class BaseDeconstructedProcessor | Nitrox",
    "keywords": "Class BaseDeconstructedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class BaseDeconstructedProcessor : BuildingProcessor<BaseDeconstructed> Inheritance object PacketProcessor AuthenticatedPacketProcessor<BaseDeconstructed> BuildingProcessor<BaseDeconstructed> BaseDeconstructedProcessor Inherited Members BuildingProcessor<BaseDeconstructed>.SendToOtherPlayersWithOperationId(BaseDeconstructed, Player, int) AuthenticatedPacketProcessor<BaseDeconstructed>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BaseDeconstructedProcessor(BuildingManager, PlayerManager) Methods Process(BaseDeconstructed, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.BatchVisibilityChangedProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BatchVisibilityChangedProcessor.-ctor.html",
    "title": "Constructor BatchVisibilityChangedProcessor | Nitrox",
    "keywords": "Constructor BatchVisibilityChangedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll BatchVisibilityChangedProcessor(EntitySimulation, WorldEntityManager) public BatchVisibilityChangedProcessor(EntitySimulation entitySimulation, WorldEntityManager worldEntityManager) Parameters entitySimulation EntitySimulation worldEntityManager WorldEntityManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.BatchVisibilityChangedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BatchVisibilityChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(BatchVisibilityChanged, Player) public override void Process(BatchVisibilityChanged packet, Player player) Parameters packet BatchVisibilityChanged player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.BatchVisibilityChangedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BatchVisibilityChangedProcessor.html",
    "title": "Class BatchVisibilityChangedProcessor | Nitrox",
    "keywords": "Class BatchVisibilityChangedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class BatchVisibilityChangedProcessor : AuthenticatedPacketProcessor<BatchVisibilityChanged> Inheritance object PacketProcessor AuthenticatedPacketProcessor<BatchVisibilityChanged> BatchVisibilityChangedProcessor Inherited Members AuthenticatedPacketProcessor<BatchVisibilityChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BatchVisibilityChangedProcessor(EntitySimulation, WorldEntityManager) Methods Process(BatchVisibilityChanged, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.BedEnterProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BedEnterProcessor.-ctor.html",
    "title": "Constructor BedEnterProcessor | Nitrox",
    "keywords": "Constructor BedEnterProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll BedEnterProcessor(StoryManager) public BedEnterProcessor(StoryManager storyManager) Parameters storyManager StoryManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.BedEnterProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BedEnterProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(BedEnter, Player) public override void Process(BedEnter packet, Player player) Parameters packet BedEnter player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.BedEnterProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BedEnterProcessor.html",
    "title": "Class BedEnterProcessor | Nitrox",
    "keywords": "Class BedEnterProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class BedEnterProcessor : AuthenticatedPacketProcessor<BedEnter> Inheritance object PacketProcessor AuthenticatedPacketProcessor<BedEnter> BedEnterProcessor Inherited Members AuthenticatedPacketProcessor<BedEnter>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BedEnterProcessor(StoryManager) Methods Process(BedEnter, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.BuildingProcessor-1.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BuildingProcessor-1.-ctor.html",
    "title": "Constructor BuildingProcessor | Nitrox",
    "keywords": "Constructor BuildingProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll BuildingProcessor(BuildingManager, PlayerManager) public BuildingProcessor(BuildingManager buildingManager, PlayerManager playerManager) Parameters buildingManager BuildingManager playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.BuildingProcessor-1.SendToOtherPlayersWithOperationId.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BuildingProcessor-1.SendToOtherPlayersWithOperationId.html",
    "title": "Method SendToOtherPlayersWithOperationId | Nitrox",
    "keywords": "Method SendToOtherPlayersWithOperationId Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll SendToOtherPlayersWithOperationId(T, Player, int) public void SendToOtherPlayersWithOperationId(T packet, Player player, int operationId) Parameters packet T player Player operationId int"
  },
  "api/NitroxServer.Communication.Packets.Processors.BuildingProcessor-1.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BuildingProcessor-1.html",
    "title": "Class BuildingProcessor<T> | Nitrox",
    "keywords": "Class BuildingProcessor<T> Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public abstract class BuildingProcessor<T> : AuthenticatedPacketProcessor<T> where T : Packet Type Parameters T Inheritance object PacketProcessor AuthenticatedPacketProcessor<T> BuildingProcessor<T> Derived BaseDeconstructedProcessor ModifyConstructedAmountProcessor PieceDeconstructedProcessor PlaceBaseProcessor PlaceGhostProcessor PlaceModuleProcessor UpdateBaseProcessor WaterParkDeconstructedProcessor Inherited Members AuthenticatedPacketProcessor<T>.ProcessPacket(Packet, IProcessorContext) AuthenticatedPacketProcessor<T>.Process(T, Player) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BuildingProcessor(BuildingManager, PlayerManager) Methods SendToOtherPlayersWithOperationId(T, Player, int)"
  },
  "api/NitroxServer.Communication.Packets.Processors.BuildingResyncRequestProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BuildingResyncRequestProcessor.-ctor.html",
    "title": "Constructor BuildingResyncRequestProcessor | Nitrox",
    "keywords": "Constructor BuildingResyncRequestProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll BuildingResyncRequestProcessor(EntityRegistry, WorldEntityManager) public BuildingResyncRequestProcessor(EntityRegistry entityRegistry, WorldEntityManager worldEntityManager) Parameters entityRegistry EntityRegistry worldEntityManager WorldEntityManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.BuildingResyncRequestProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BuildingResyncRequestProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(BuildingResyncRequest, Player) public override void Process(BuildingResyncRequest packet, Player player) Parameters packet BuildingResyncRequest player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.BuildingResyncRequestProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.BuildingResyncRequestProcessor.html",
    "title": "Class BuildingResyncRequestProcessor | Nitrox",
    "keywords": "Class BuildingResyncRequestProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class BuildingResyncRequestProcessor : AuthenticatedPacketProcessor<BuildingResyncRequest> Inheritance object PacketProcessor AuthenticatedPacketProcessor<BuildingResyncRequest> BuildingResyncRequestProcessor Inherited Members AuthenticatedPacketProcessor<BuildingResyncRequest>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BuildingResyncRequestProcessor(EntityRegistry, WorldEntityManager) Methods Process(BuildingResyncRequest, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.ChatMessageProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ChatMessageProcessor.-ctor.html",
    "title": "Constructor ChatMessageProcessor | Nitrox",
    "keywords": "Constructor ChatMessageProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll ChatMessageProcessor(PlayerManager) public ChatMessageProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.ChatMessageProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ChatMessageProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(ChatMessage, Player) public override void Process(ChatMessage packet, Player player) Parameters packet ChatMessage player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.ChatMessageProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ChatMessageProcessor.html",
    "title": "Class ChatMessageProcessor | Nitrox",
    "keywords": "Class ChatMessageProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class ChatMessageProcessor : AuthenticatedPacketProcessor<ChatMessage> Inheritance object PacketProcessor AuthenticatedPacketProcessor<ChatMessage> ChatMessageProcessor Inherited Members AuthenticatedPacketProcessor<ChatMessage>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ChatMessageProcessor(PlayerManager) Methods Process(ChatMessage, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.DefaultServerPacketProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.DefaultServerPacketProcessor.-ctor.html",
    "title": "Constructor DefaultServerPacketProcessor | Nitrox",
    "keywords": "Constructor DefaultServerPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll DefaultServerPacketProcessor(PlayerManager) public DefaultServerPacketProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.DefaultServerPacketProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.DefaultServerPacketProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(Packet, Player) public override void Process(Packet packet, Player player) Parameters packet Packet player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.DefaultServerPacketProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.DefaultServerPacketProcessor.html",
    "title": "Class DefaultServerPacketProcessor | Nitrox",
    "keywords": "Class DefaultServerPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class DefaultServerPacketProcessor : AuthenticatedPacketProcessor<Packet> Inheritance object PacketProcessor AuthenticatedPacketProcessor<Packet> DefaultServerPacketProcessor Inherited Members AuthenticatedPacketProcessor<Packet>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DefaultServerPacketProcessor(PlayerManager) Methods Process(Packet, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.DiscordRequestIPProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.DiscordRequestIPProcessor.-ctor.html",
    "title": "Constructor DiscordRequestIPProcessor | Nitrox",
    "keywords": "Constructor DiscordRequestIPProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll DiscordRequestIPProcessor(ServerConfig) public DiscordRequestIPProcessor(ServerConfig serverConfig) Parameters serverConfig ServerConfig"
  },
  "api/NitroxServer.Communication.Packets.Processors.DiscordRequestIPProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.DiscordRequestIPProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(DiscordRequestIP, Player) public override void Process(DiscordRequestIP packet, Player player) Parameters packet DiscordRequestIP player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.DiscordRequestIPProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.DiscordRequestIPProcessor.html",
    "title": "Class DiscordRequestIPProcessor | Nitrox",
    "keywords": "Class DiscordRequestIPProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class DiscordRequestIPProcessor : AuthenticatedPacketProcessor<DiscordRequestIP> Inheritance object PacketProcessor AuthenticatedPacketProcessor<DiscordRequestIP> DiscordRequestIPProcessor Inherited Members AuthenticatedPacketProcessor<DiscordRequestIP>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DiscordRequestIPProcessor(ServerConfig) Methods Process(DiscordRequestIP, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.EntityDestroyedPacketProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EntityDestroyedPacketProcessor.-ctor.html",
    "title": "Constructor EntityDestroyedPacketProcessor | Nitrox",
    "keywords": "Constructor EntityDestroyedPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll EntityDestroyedPacketProcessor(PlayerManager, EntitySimulation, WorldEntityManager) public EntityDestroyedPacketProcessor(PlayerManager playerManager, EntitySimulation entitySimulation, WorldEntityManager worldEntityManager) Parameters playerManager PlayerManager entitySimulation EntitySimulation worldEntityManager WorldEntityManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.EntityDestroyedPacketProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EntityDestroyedPacketProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(EntityDestroyed, Player) public override void Process(EntityDestroyed packet, Player destroyingPlayer) Parameters packet EntityDestroyed destroyingPlayer Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.EntityDestroyedPacketProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EntityDestroyedPacketProcessor.html",
    "title": "Class EntityDestroyedPacketProcessor | Nitrox",
    "keywords": "Class EntityDestroyedPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class EntityDestroyedPacketProcessor : AuthenticatedPacketProcessor<EntityDestroyed> Inheritance object PacketProcessor AuthenticatedPacketProcessor<EntityDestroyed> EntityDestroyedPacketProcessor Inherited Members AuthenticatedPacketProcessor<EntityDestroyed>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityDestroyedPacketProcessor(PlayerManager, EntitySimulation, WorldEntityManager) Methods Process(EntityDestroyed, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.EntityMetadataUpdateProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EntityMetadataUpdateProcessor.-ctor.html",
    "title": "Constructor EntityMetadataUpdateProcessor | Nitrox",
    "keywords": "Constructor EntityMetadataUpdateProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll EntityMetadataUpdateProcessor(PlayerManager, EntityRegistry) public EntityMetadataUpdateProcessor(PlayerManager playerManager, EntityRegistry entityRegistry) Parameters playerManager PlayerManager entityRegistry EntityRegistry"
  },
  "api/NitroxServer.Communication.Packets.Processors.EntityMetadataUpdateProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EntityMetadataUpdateProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(EntityMetadataUpdate, Player) public override void Process(EntityMetadataUpdate packet, Player sendingPlayer) Parameters packet EntityMetadataUpdate sendingPlayer Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.EntityMetadataUpdateProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EntityMetadataUpdateProcessor.html",
    "title": "Class EntityMetadataUpdateProcessor | Nitrox",
    "keywords": "Class EntityMetadataUpdateProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class EntityMetadataUpdateProcessor : AuthenticatedPacketProcessor<EntityMetadataUpdate> Inheritance object PacketProcessor AuthenticatedPacketProcessor<EntityMetadataUpdate> EntityMetadataUpdateProcessor Inherited Members AuthenticatedPacketProcessor<EntityMetadataUpdate>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityMetadataUpdateProcessor(PlayerManager, EntityRegistry) Methods Process(EntityMetadataUpdate, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.EntityReparentedProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EntityReparentedProcessor.-ctor.html",
    "title": "Constructor EntityReparentedProcessor | Nitrox",
    "keywords": "Constructor EntityReparentedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll EntityReparentedProcessor(EntityRegistry, PlayerManager) public EntityReparentedProcessor(EntityRegistry entityRegistry, PlayerManager playerManager) Parameters entityRegistry EntityRegistry playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.EntityReparentedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EntityReparentedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(EntityReparented, Player) public override void Process(EntityReparented packet, Player player) Parameters packet EntityReparented player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.EntityReparentedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EntityReparentedProcessor.html",
    "title": "Class EntityReparentedProcessor | Nitrox",
    "keywords": "Class EntityReparentedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class EntityReparentedProcessor : AuthenticatedPacketProcessor<EntityReparented> Inheritance object PacketProcessor AuthenticatedPacketProcessor<EntityReparented> EntityReparentedProcessor Inherited Members AuthenticatedPacketProcessor<EntityReparented>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityReparentedProcessor(EntityRegistry, PlayerManager) Methods Process(EntityReparented, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.EscapePodChangedPacketProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EscapePodChangedPacketProcessor.-ctor.html",
    "title": "Constructor EscapePodChangedPacketProcessor | Nitrox",
    "keywords": "Constructor EscapePodChangedPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll EscapePodChangedPacketProcessor(PlayerManager) public EscapePodChangedPacketProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.EscapePodChangedPacketProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EscapePodChangedPacketProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(EscapePodChanged, Player) public override void Process(EscapePodChanged packet, Player player) Parameters packet EscapePodChanged player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.EscapePodChangedPacketProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.EscapePodChangedPacketProcessor.html",
    "title": "Class EscapePodChangedPacketProcessor | Nitrox",
    "keywords": "Class EscapePodChangedPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class EscapePodChangedPacketProcessor : AuthenticatedPacketProcessor<EscapePodChanged> Inheritance object PacketProcessor AuthenticatedPacketProcessor<EscapePodChanged> EscapePodChangedPacketProcessor Inherited Members AuthenticatedPacketProcessor<EscapePodChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EscapePodChangedPacketProcessor(PlayerManager) Methods Process(EscapePodChanged, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.GoalCompletedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.GoalCompletedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(GoalCompleted, Player) public override void Process(GoalCompleted packet, Player player) Parameters packet GoalCompleted player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.GoalCompletedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.GoalCompletedProcessor.html",
    "title": "Class GoalCompletedProcessor | Nitrox",
    "keywords": "Class GoalCompletedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class GoalCompletedProcessor : AuthenticatedPacketProcessor<GoalCompleted> Inheritance object PacketProcessor AuthenticatedPacketProcessor<GoalCompleted> GoalCompletedProcessor Inherited Members AuthenticatedPacketProcessor<GoalCompleted>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(GoalCompleted, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.KnownTechEntryAddProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.KnownTechEntryAddProcessor.-ctor.html",
    "title": "Constructor KnownTechEntryAddProcessor | Nitrox",
    "keywords": "Constructor KnownTechEntryAddProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll KnownTechEntryAddProcessor(PlayerManager, PDAStateData) public KnownTechEntryAddProcessor(PlayerManager playerManager, PDAStateData pdaStateData) Parameters playerManager PlayerManager pdaStateData PDAStateData"
  },
  "api/NitroxServer.Communication.Packets.Processors.KnownTechEntryAddProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.KnownTechEntryAddProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(KnownTechEntryAdd, Player) public override void Process(KnownTechEntryAdd packet, Player player) Parameters packet KnownTechEntryAdd player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.KnownTechEntryAddProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.KnownTechEntryAddProcessor.html",
    "title": "Class KnownTechEntryAddProcessor | Nitrox",
    "keywords": "Class KnownTechEntryAddProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class KnownTechEntryAddProcessor : AuthenticatedPacketProcessor<KnownTechEntryAdd> Inheritance object PacketProcessor AuthenticatedPacketProcessor<KnownTechEntryAdd> KnownTechEntryAddProcessor Inherited Members AuthenticatedPacketProcessor<KnownTechEntryAdd>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KnownTechEntryAddProcessor(PlayerManager, PDAStateData) Methods Process(KnownTechEntryAdd, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.ModifyConstructedAmountProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ModifyConstructedAmountProcessor.-ctor.html",
    "title": "Constructor ModifyConstructedAmountProcessor | Nitrox",
    "keywords": "Constructor ModifyConstructedAmountProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll ModifyConstructedAmountProcessor(BuildingManager, PlayerManager) public ModifyConstructedAmountProcessor(BuildingManager buildingManager, PlayerManager playerManager) Parameters buildingManager BuildingManager playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.ModifyConstructedAmountProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ModifyConstructedAmountProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(ModifyConstructedAmount, Player) public override void Process(ModifyConstructedAmount packet, Player player) Parameters packet ModifyConstructedAmount player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.ModifyConstructedAmountProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ModifyConstructedAmountProcessor.html",
    "title": "Class ModifyConstructedAmountProcessor | Nitrox",
    "keywords": "Class ModifyConstructedAmountProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class ModifyConstructedAmountProcessor : BuildingProcessor<ModifyConstructedAmount> Inheritance object PacketProcessor AuthenticatedPacketProcessor<ModifyConstructedAmount> BuildingProcessor<ModifyConstructedAmount> ModifyConstructedAmountProcessor Inherited Members BuildingProcessor<ModifyConstructedAmount>.SendToOtherPlayersWithOperationId(ModifyConstructedAmount, Player, int) AuthenticatedPacketProcessor<ModifyConstructedAmount>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ModifyConstructedAmountProcessor(BuildingManager, PlayerManager) Methods Process(ModifyConstructedAmount, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionPolicyRequestProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionPolicyRequestProcessor.-ctor.html",
    "title": "Constructor MultiplayerSessionPolicyRequestProcessor | Nitrox",
    "keywords": "Constructor MultiplayerSessionPolicyRequestProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll MultiplayerSessionPolicyRequestProcessor(ServerConfig) public MultiplayerSessionPolicyRequestProcessor(ServerConfig config) Parameters config ServerConfig"
  },
  "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionPolicyRequestProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionPolicyRequestProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(MultiplayerSessionPolicyRequest, NitroxConnection) public override void Process(MultiplayerSessionPolicyRequest packet, NitroxConnection connection) Parameters packet MultiplayerSessionPolicyRequest connection NitroxConnection"
  },
  "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionPolicyRequestProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionPolicyRequestProcessor.html",
    "title": "Class MultiplayerSessionPolicyRequestProcessor | Nitrox",
    "keywords": "Class MultiplayerSessionPolicyRequestProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class MultiplayerSessionPolicyRequestProcessor : UnauthenticatedPacketProcessor<MultiplayerSessionPolicyRequest> Inheritance object PacketProcessor UnauthenticatedPacketProcessor<MultiplayerSessionPolicyRequest> MultiplayerSessionPolicyRequestProcessor Inherited Members UnauthenticatedPacketProcessor<MultiplayerSessionPolicyRequest>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MultiplayerSessionPolicyRequestProcessor(ServerConfig) Methods Process(MultiplayerSessionPolicyRequest, NitroxConnection)"
  },
  "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionReservationRequestProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionReservationRequestProcessor.-ctor.html",
    "title": "Constructor MultiplayerSessionReservationRequestProcessor | Nitrox",
    "keywords": "Constructor MultiplayerSessionReservationRequestProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll MultiplayerSessionReservationRequestProcessor(PlayerManager) public MultiplayerSessionReservationRequestProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionReservationRequestProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionReservationRequestProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(MultiplayerSessionReservationRequest, NitroxConnection) public override void Process(MultiplayerSessionReservationRequest packet, NitroxConnection connection) Parameters packet MultiplayerSessionReservationRequest connection NitroxConnection"
  },
  "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionReservationRequestProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.MultiplayerSessionReservationRequestProcessor.html",
    "title": "Class MultiplayerSessionReservationRequestProcessor | Nitrox",
    "keywords": "Class MultiplayerSessionReservationRequestProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class MultiplayerSessionReservationRequestProcessor : UnauthenticatedPacketProcessor<MultiplayerSessionReservationRequest> Inheritance object PacketProcessor UnauthenticatedPacketProcessor<MultiplayerSessionReservationRequest> MultiplayerSessionReservationRequestProcessor Inherited Members UnauthenticatedPacketProcessor<MultiplayerSessionReservationRequest>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MultiplayerSessionReservationRequestProcessor(PlayerManager) Methods Process(MultiplayerSessionReservationRequest, NitroxConnection)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.-ctor.html",
    "title": "Constructor PDAEncyclopediaEntryAddProcessor | Nitrox",
    "keywords": "Constructor PDAEncyclopediaEntryAddProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PDAEncyclopediaEntryAddProcessor(PlayerManager, PDAStateData) public PDAEncyclopediaEntryAddProcessor(PlayerManager playerManager, PDAStateData pdaStateData) Parameters playerManager PlayerManager pdaStateData PDAStateData"
  },
  "api/NitroxServer.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PDAEncyclopediaEntryAdd, Player) public override void Process(PDAEncyclopediaEntryAdd packet, Player player) Parameters packet PDAEncyclopediaEntryAdd player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PDAEncyclopediaEntryAddProcessor.html",
    "title": "Class PDAEncyclopediaEntryAddProcessor | Nitrox",
    "keywords": "Class PDAEncyclopediaEntryAddProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PDAEncyclopediaEntryAddProcessor : AuthenticatedPacketProcessor<PDAEncyclopediaEntryAdd> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PDAEncyclopediaEntryAdd> PDAEncyclopediaEntryAddProcessor Inherited Members AuthenticatedPacketProcessor<PDAEncyclopediaEntryAdd>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PDAEncyclopediaEntryAddProcessor(PlayerManager, PDAStateData) Methods Process(PDAEncyclopediaEntryAdd, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PDALogEntryAddProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PDALogEntryAddProcessor.-ctor.html",
    "title": "Constructor PDALogEntryAddProcessor | Nitrox",
    "keywords": "Constructor PDALogEntryAddProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PDALogEntryAddProcessor(PlayerManager, PDAStateData, ScheduleKeeper) public PDALogEntryAddProcessor(PlayerManager playerManager, PDAStateData pdaState, ScheduleKeeper scheduleKeeper) Parameters playerManager PlayerManager pdaState PDAStateData scheduleKeeper ScheduleKeeper"
  },
  "api/NitroxServer.Communication.Packets.Processors.PDALogEntryAddProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PDALogEntryAddProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PDALogEntryAdd, Player) public override void Process(PDALogEntryAdd packet, Player player) Parameters packet PDALogEntryAdd player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PDALogEntryAddProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PDALogEntryAddProcessor.html",
    "title": "Class PDALogEntryAddProcessor | Nitrox",
    "keywords": "Class PDALogEntryAddProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PDALogEntryAddProcessor : AuthenticatedPacketProcessor<PDALogEntryAdd> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PDALogEntryAdd> PDALogEntryAddProcessor Inherited Members AuthenticatedPacketProcessor<PDALogEntryAdd>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PDALogEntryAddProcessor(PlayerManager, PDAStateData, ScheduleKeeper) Methods Process(PDALogEntryAdd, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PDAScanFinishedPacketProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PDAScanFinishedPacketProcessor.-ctor.html",
    "title": "Constructor PDAScanFinishedPacketProcessor | Nitrox",
    "keywords": "Constructor PDAScanFinishedPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PDAScanFinishedPacketProcessor(PlayerManager, PDAStateData, WorldEntityManager) public PDAScanFinishedPacketProcessor(PlayerManager playerManager, PDAStateData pdaStateData, WorldEntityManager worldEntityManager) Parameters playerManager PlayerManager pdaStateData PDAStateData worldEntityManager WorldEntityManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.PDAScanFinishedPacketProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PDAScanFinishedPacketProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PDAScanFinished, Player) public override void Process(PDAScanFinished packet, Player player) Parameters packet PDAScanFinished player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PDAScanFinishedPacketProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PDAScanFinishedPacketProcessor.html",
    "title": "Class PDAScanFinishedPacketProcessor | Nitrox",
    "keywords": "Class PDAScanFinishedPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PDAScanFinishedPacketProcessor : AuthenticatedPacketProcessor<PDAScanFinished> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PDAScanFinished> PDAScanFinishedPacketProcessor Inherited Members AuthenticatedPacketProcessor<PDAScanFinished>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PDAScanFinishedPacketProcessor(PlayerManager, PDAStateData, WorldEntityManager) Methods Process(PDAScanFinished, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PickupItemPacketProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PickupItemPacketProcessor.-ctor.html",
    "title": "Constructor PickupItemPacketProcessor | Nitrox",
    "keywords": "Constructor PickupItemPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PickupItemPacketProcessor(EntityRegistry, WorldEntityManager, PlayerManager, SimulationOwnershipData) public PickupItemPacketProcessor(EntityRegistry entityRegistry, WorldEntityManager worldEntityManager, PlayerManager playerManager, SimulationOwnershipData simulationOwnershipData) Parameters entityRegistry EntityRegistry worldEntityManager WorldEntityManager playerManager PlayerManager simulationOwnershipData SimulationOwnershipData"
  },
  "api/NitroxServer.Communication.Packets.Processors.PickupItemPacketProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PickupItemPacketProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PickupItem, Player) public override void Process(PickupItem packet, Player player) Parameters packet PickupItem player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PickupItemPacketProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PickupItemPacketProcessor.html",
    "title": "Class PickupItemPacketProcessor | Nitrox",
    "keywords": "Class PickupItemPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PickupItemPacketProcessor : AuthenticatedPacketProcessor<PickupItem> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PickupItem> PickupItemPacketProcessor Inherited Members AuthenticatedPacketProcessor<PickupItem>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PickupItemPacketProcessor(EntityRegistry, WorldEntityManager, PlayerManager, SimulationOwnershipData) Methods Process(PickupItem, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PieceDeconstructedProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PieceDeconstructedProcessor.-ctor.html",
    "title": "Constructor PieceDeconstructedProcessor | Nitrox",
    "keywords": "Constructor PieceDeconstructedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PieceDeconstructedProcessor(BuildingManager, PlayerManager) public PieceDeconstructedProcessor(BuildingManager buildingManager, PlayerManager playerManager) Parameters buildingManager BuildingManager playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.PieceDeconstructedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PieceDeconstructedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PieceDeconstructed, Player) public override void Process(PieceDeconstructed packet, Player player) Parameters packet PieceDeconstructed player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PieceDeconstructedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PieceDeconstructedProcessor.html",
    "title": "Class PieceDeconstructedProcessor | Nitrox",
    "keywords": "Class PieceDeconstructedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PieceDeconstructedProcessor : BuildingProcessor<PieceDeconstructed> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PieceDeconstructed> BuildingProcessor<PieceDeconstructed> PieceDeconstructedProcessor Inherited Members BuildingProcessor<PieceDeconstructed>.SendToOtherPlayersWithOperationId(PieceDeconstructed, Player, int) AuthenticatedPacketProcessor<PieceDeconstructed>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PieceDeconstructedProcessor(BuildingManager, PlayerManager) Methods Process(PieceDeconstructed, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PingRenamedPacketProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PingRenamedPacketProcessor.-ctor.html",
    "title": "Constructor PingRenamedPacketProcessor | Nitrox",
    "keywords": "Constructor PingRenamedPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PingRenamedPacketProcessor(PlayerManager, EntityRegistry) public PingRenamedPacketProcessor(PlayerManager playerManager, EntityRegistry entityRegistry) Parameters playerManager PlayerManager entityRegistry EntityRegistry"
  },
  "api/NitroxServer.Communication.Packets.Processors.PingRenamedPacketProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PingRenamedPacketProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PingRenamed, Player) public override void Process(PingRenamed packet, Player player) Parameters packet PingRenamed player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PingRenamedPacketProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PingRenamedPacketProcessor.html",
    "title": "Class PingRenamedPacketProcessor | Nitrox",
    "keywords": "Class PingRenamedPacketProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PingRenamedPacketProcessor : AuthenticatedPacketProcessor<PingRenamed> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PingRenamed> PingRenamedPacketProcessor Inherited Members AuthenticatedPacketProcessor<PingRenamed>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PingRenamedPacketProcessor(PlayerManager, EntityRegistry) Methods Process(PingRenamed, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PinnedRecipeMovedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PinnedRecipeMovedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PinnedRecipeMoved, Player) public override void Process(PinnedRecipeMoved packet, Player player) Parameters packet PinnedRecipeMoved player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PinnedRecipeMovedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PinnedRecipeMovedProcessor.html",
    "title": "Class PinnedRecipeMovedProcessor | Nitrox",
    "keywords": "Class PinnedRecipeMovedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PinnedRecipeMovedProcessor : AuthenticatedPacketProcessor<PinnedRecipeMoved> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PinnedRecipeMoved> PinnedRecipeMovedProcessor Inherited Members AuthenticatedPacketProcessor<PinnedRecipeMoved>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(PinnedRecipeMoved, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PinnedRecipeProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PinnedRecipeProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(RecipePinned, Player) public override void Process(RecipePinned packet, Player player) Parameters packet RecipePinned player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PinnedRecipeProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PinnedRecipeProcessor.html",
    "title": "Class PinnedRecipeProcessor | Nitrox",
    "keywords": "Class PinnedRecipeProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PinnedRecipeProcessor : AuthenticatedPacketProcessor<RecipePinned> Inheritance object PacketProcessor AuthenticatedPacketProcessor<RecipePinned> PinnedRecipeProcessor Inherited Members AuthenticatedPacketProcessor<RecipePinned>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(RecipePinned, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlaceBaseProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlaceBaseProcessor.-ctor.html",
    "title": "Constructor PlaceBaseProcessor | Nitrox",
    "keywords": "Constructor PlaceBaseProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PlaceBaseProcessor(BuildingManager, PlayerManager) public PlaceBaseProcessor(BuildingManager buildingManager, PlayerManager playerManager) Parameters buildingManager BuildingManager playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlaceBaseProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlaceBaseProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PlaceBase, Player) public override void Process(PlaceBase packet, Player player) Parameters packet PlaceBase player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlaceBaseProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlaceBaseProcessor.html",
    "title": "Class PlaceBaseProcessor | Nitrox",
    "keywords": "Class PlaceBaseProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PlaceBaseProcessor : BuildingProcessor<PlaceBase> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PlaceBase> BuildingProcessor<PlaceBase> PlaceBaseProcessor Inherited Members BuildingProcessor<PlaceBase>.SendToOtherPlayersWithOperationId(PlaceBase, Player, int) AuthenticatedPacketProcessor<PlaceBase>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlaceBaseProcessor(BuildingManager, PlayerManager) Methods Process(PlaceBase, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlaceGhostProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlaceGhostProcessor.-ctor.html",
    "title": "Constructor PlaceGhostProcessor | Nitrox",
    "keywords": "Constructor PlaceGhostProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PlaceGhostProcessor(BuildingManager, PlayerManager) public PlaceGhostProcessor(BuildingManager buildingManager, PlayerManager playerManager) Parameters buildingManager BuildingManager playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlaceGhostProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlaceGhostProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PlaceGhost, Player) public override void Process(PlaceGhost packet, Player player) Parameters packet PlaceGhost player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlaceGhostProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlaceGhostProcessor.html",
    "title": "Class PlaceGhostProcessor | Nitrox",
    "keywords": "Class PlaceGhostProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PlaceGhostProcessor : BuildingProcessor<PlaceGhost> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PlaceGhost> BuildingProcessor<PlaceGhost> PlaceGhostProcessor Inherited Members BuildingProcessor<PlaceGhost>.SendToOtherPlayersWithOperationId(PlaceGhost, Player, int) AuthenticatedPacketProcessor<PlaceGhost>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlaceGhostProcessor(BuildingManager, PlayerManager) Methods Process(PlaceGhost, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlaceModuleProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlaceModuleProcessor.-ctor.html",
    "title": "Constructor PlaceModuleProcessor | Nitrox",
    "keywords": "Constructor PlaceModuleProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PlaceModuleProcessor(BuildingManager, PlayerManager) public PlaceModuleProcessor(BuildingManager buildingManager, PlayerManager playerManager) Parameters buildingManager BuildingManager playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlaceModuleProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlaceModuleProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PlaceModule, Player) public override void Process(PlaceModule packet, Player player) Parameters packet PlaceModule player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlaceModuleProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlaceModuleProcessor.html",
    "title": "Class PlaceModuleProcessor | Nitrox",
    "keywords": "Class PlaceModuleProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PlaceModuleProcessor : BuildingProcessor<PlaceModule> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PlaceModule> BuildingProcessor<PlaceModule> PlaceModuleProcessor Inherited Members BuildingProcessor<PlaceModule>.SendToOtherPlayersWithOperationId(PlaceModule, Player, int) AuthenticatedPacketProcessor<PlaceModule>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlaceModuleProcessor(BuildingManager, PlayerManager) Methods Process(PlaceModule, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayFMODAssetProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayFMODAssetProcessor.-ctor.html",
    "title": "Constructor PlayFMODAssetProcessor | Nitrox",
    "keywords": "Constructor PlayFMODAssetProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PlayFMODAssetProcessor(PlayerManager) public PlayFMODAssetProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayFMODAssetProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayFMODAssetProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PlayFMODAsset, Player) public override void Process(PlayFMODAsset packet, Player sendingPlayer) Parameters packet PlayFMODAsset sendingPlayer Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayFMODAssetProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayFMODAssetProcessor.html",
    "title": "Class PlayFMODAssetProcessor | Nitrox",
    "keywords": "Class PlayFMODAssetProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PlayFMODAssetProcessor : AuthenticatedPacketProcessor<PlayFMODAsset> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PlayFMODAsset> PlayFMODAssetProcessor Inherited Members AuthenticatedPacketProcessor<PlayFMODAsset>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayFMODAssetProcessor(PlayerManager) Methods Process(PlayFMODAsset, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.-ctor.html",
    "title": "Constructor PlayerHeldItemChangedProcessor | Nitrox",
    "keywords": "Constructor PlayerHeldItemChangedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PlayerHeldItemChangedProcessor(PlayerManager) public PlayerHeldItemChangedProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PlayerHeldItemChanged, Player) public override void Process(PlayerHeldItemChanged packet, Player player) Parameters packet PlayerHeldItemChanged player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerHeldItemChangedProcessor.html",
    "title": "Class PlayerHeldItemChangedProcessor | Nitrox",
    "keywords": "Class PlayerHeldItemChangedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PlayerHeldItemChangedProcessor : AuthenticatedPacketProcessor<PlayerHeldItemChanged> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PlayerHeldItemChanged> PlayerHeldItemChangedProcessor Inherited Members AuthenticatedPacketProcessor<PlayerHeldItemChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerHeldItemChangedProcessor(PlayerManager) Methods Process(PlayerHeldItemChanged, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerJoiningMultiplayerSessionProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerJoiningMultiplayerSessionProcessor.-ctor.html",
    "title": "Constructor PlayerJoiningMultiplayerSessionProcessor | Nitrox",
    "keywords": "Constructor PlayerJoiningMultiplayerSessionProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PlayerJoiningMultiplayerSessionProcessor(ScheduleKeeper, StoryManager, PlayerManager, World, EntityRegistry, BuildingManager) public PlayerJoiningMultiplayerSessionProcessor(ScheduleKeeper scheduleKeeper, StoryManager storyManager, PlayerManager playerManager, World world, EntityRegistry entityRegistry, BuildingManager buildingManager) Parameters scheduleKeeper ScheduleKeeper storyManager StoryManager playerManager PlayerManager world World entityRegistry EntityRegistry buildingManager BuildingManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerJoiningMultiplayerSessionProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerJoiningMultiplayerSessionProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PlayerJoiningMultiplayerSession, NitroxConnection) public override void Process(PlayerJoiningMultiplayerSession packet, NitroxConnection connection) Parameters packet PlayerJoiningMultiplayerSession connection NitroxConnection"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerJoiningMultiplayerSessionProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerJoiningMultiplayerSessionProcessor.html",
    "title": "Class PlayerJoiningMultiplayerSessionProcessor | Nitrox",
    "keywords": "Class PlayerJoiningMultiplayerSessionProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PlayerJoiningMultiplayerSessionProcessor : UnauthenticatedPacketProcessor<PlayerJoiningMultiplayerSession> Inheritance object PacketProcessor UnauthenticatedPacketProcessor<PlayerJoiningMultiplayerSession> PlayerJoiningMultiplayerSessionProcessor Inherited Members UnauthenticatedPacketProcessor<PlayerJoiningMultiplayerSession>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerJoiningMultiplayerSessionProcessor(ScheduleKeeper, StoryManager, PlayerManager, World, EntityRegistry, BuildingManager) Methods Process(PlayerJoiningMultiplayerSession, NitroxConnection)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerQuickSlotsBindingChangedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerQuickSlotsBindingChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PlayerQuickSlotsBindingChanged, Player) public override void Process(PlayerQuickSlotsBindingChanged packet, Player player) Parameters packet PlayerQuickSlotsBindingChanged player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerQuickSlotsBindingChangedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerQuickSlotsBindingChangedProcessor.html",
    "title": "Class PlayerQuickSlotsBindingChangedProcessor | Nitrox",
    "keywords": "Class PlayerQuickSlotsBindingChangedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PlayerQuickSlotsBindingChangedProcessor : AuthenticatedPacketProcessor<PlayerQuickSlotsBindingChanged> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PlayerQuickSlotsBindingChanged> PlayerQuickSlotsBindingChangedProcessor Inherited Members AuthenticatedPacketProcessor<PlayerQuickSlotsBindingChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(PlayerQuickSlotsBindingChanged, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerStatsProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerStatsProcessor.-ctor.html",
    "title": "Constructor PlayerStatsProcessor | Nitrox",
    "keywords": "Constructor PlayerStatsProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PlayerStatsProcessor(PlayerManager) public PlayerStatsProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerStatsProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerStatsProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PlayerStats, Player) public override void Process(PlayerStats packet, Player player) Parameters packet PlayerStats player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerStatsProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerStatsProcessor.html",
    "title": "Class PlayerStatsProcessor | Nitrox",
    "keywords": "Class PlayerStatsProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PlayerStatsProcessor : AuthenticatedPacketProcessor<PlayerStats> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PlayerStats> PlayerStatsProcessor Inherited Members AuthenticatedPacketProcessor<PlayerStats>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerStatsProcessor(PlayerManager) Methods Process(PlayerStats, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerSyncFinishedProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerSyncFinishedProcessor.-ctor.html",
    "title": "Constructor PlayerSyncFinishedProcessor | Nitrox",
    "keywords": "Constructor PlayerSyncFinishedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll PlayerSyncFinishedProcessor(PlayerManager) public PlayerSyncFinishedProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerSyncFinishedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerSyncFinishedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(PlayerSyncFinished, Player) public override void Process(PlayerSyncFinished packet, Player player) Parameters packet PlayerSyncFinished player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.PlayerSyncFinishedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.PlayerSyncFinishedProcessor.html",
    "title": "Class PlayerSyncFinishedProcessor | Nitrox",
    "keywords": "Class PlayerSyncFinishedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class PlayerSyncFinishedProcessor : AuthenticatedPacketProcessor<PlayerSyncFinished> Inheritance object PacketProcessor AuthenticatedPacketProcessor<PlayerSyncFinished> PlayerSyncFinishedProcessor Inherited Members AuthenticatedPacketProcessor<PlayerSyncFinished>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerSyncFinishedProcessor(PlayerManager) Methods Process(PlayerSyncFinished, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.RadioPlayPendingMessageProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.RadioPlayPendingMessageProcessor.-ctor.html",
    "title": "Constructor RadioPlayPendingMessageProcessor | Nitrox",
    "keywords": "Constructor RadioPlayPendingMessageProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll RadioPlayPendingMessageProcessor(StoryGoalData, PlayerManager) public RadioPlayPendingMessageProcessor(StoryGoalData storyGoalData, PlayerManager playerManager) Parameters storyGoalData StoryGoalData playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.RadioPlayPendingMessageProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.RadioPlayPendingMessageProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(RadioPlayPendingMessage, Player) public override void Process(RadioPlayPendingMessage packet, Player player) Parameters packet RadioPlayPendingMessage player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.RadioPlayPendingMessageProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.RadioPlayPendingMessageProcessor.html",
    "title": "Class RadioPlayPendingMessageProcessor | Nitrox",
    "keywords": "Class RadioPlayPendingMessageProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class RadioPlayPendingMessageProcessor : AuthenticatedPacketProcessor<RadioPlayPendingMessage> Inheritance object PacketProcessor AuthenticatedPacketProcessor<RadioPlayPendingMessage> RadioPlayPendingMessageProcessor Inherited Members AuthenticatedPacketProcessor<RadioPlayPendingMessage>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RadioPlayPendingMessageProcessor(StoryGoalData, PlayerManager) Methods Process(RadioPlayPendingMessage, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.ScheduleProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ScheduleProcessor.-ctor.html",
    "title": "Constructor ScheduleProcessor | Nitrox",
    "keywords": "Constructor ScheduleProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll ScheduleProcessor(PlayerManager, ScheduleKeeper) public ScheduleProcessor(PlayerManager playerManager, ScheduleKeeper scheduleKeeper) Parameters playerManager PlayerManager scheduleKeeper ScheduleKeeper"
  },
  "api/NitroxServer.Communication.Packets.Processors.ScheduleProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ScheduleProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(Schedule, Player) public override void Process(Schedule packet, Player player) Parameters packet Schedule player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.ScheduleProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ScheduleProcessor.html",
    "title": "Class ScheduleProcessor | Nitrox",
    "keywords": "Class ScheduleProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class ScheduleProcessor : AuthenticatedPacketProcessor<Schedule> Inheritance object PacketProcessor AuthenticatedPacketProcessor<Schedule> ScheduleProcessor Inherited Members AuthenticatedPacketProcessor<Schedule>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ScheduleProcessor(PlayerManager, ScheduleKeeper) Methods Process(Schedule, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.ServerCommandProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ServerCommandProcessor.-ctor.html",
    "title": "Constructor ServerCommandProcessor | Nitrox",
    "keywords": "Constructor ServerCommandProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll ServerCommandProcessor(ConsoleCommandProcessor) public ServerCommandProcessor(ConsoleCommandProcessor cmdProcessor) Parameters cmdProcessor ConsoleCommandProcessor"
  },
  "api/NitroxServer.Communication.Packets.Processors.ServerCommandProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ServerCommandProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(ServerCommand, Player) public override void Process(ServerCommand packet, Player player) Parameters packet ServerCommand player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.ServerCommandProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.ServerCommandProcessor.html",
    "title": "Class ServerCommandProcessor | Nitrox",
    "keywords": "Class ServerCommandProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class ServerCommandProcessor : AuthenticatedPacketProcessor<ServerCommand> Inheritance object PacketProcessor AuthenticatedPacketProcessor<ServerCommand> ServerCommandProcessor Inherited Members AuthenticatedPacketProcessor<ServerCommand>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerCommandProcessor(ConsoleCommandProcessor) Methods Process(ServerCommand, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.SignalPingPreferenceChangedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.SignalPingPreferenceChangedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(SignalPingPreferenceChanged, Player) public override void Process(SignalPingPreferenceChanged packet, Player player) Parameters packet SignalPingPreferenceChanged player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.SignalPingPreferenceChangedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.SignalPingPreferenceChangedProcessor.html",
    "title": "Class SignalPingPreferenceChangedProcessor | Nitrox",
    "keywords": "Class SignalPingPreferenceChangedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class SignalPingPreferenceChangedProcessor : AuthenticatedPacketProcessor<SignalPingPreferenceChanged> Inheritance object PacketProcessor AuthenticatedPacketProcessor<SignalPingPreferenceChanged> SignalPingPreferenceChangedProcessor Inherited Members AuthenticatedPacketProcessor<SignalPingPreferenceChanged>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Process(SignalPingPreferenceChanged, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.StoryGoalExecutedProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.StoryGoalExecutedProcessor.-ctor.html",
    "title": "Constructor StoryGoalExecutedProcessor | Nitrox",
    "keywords": "Constructor StoryGoalExecutedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll StoryGoalExecutedProcessor(PlayerManager, StoryGoalData, ScheduleKeeper, PDAStateData) public StoryGoalExecutedProcessor(PlayerManager playerManager, StoryGoalData storyGoalData, ScheduleKeeper scheduleKeeper, PDAStateData pdaStateData) Parameters playerManager PlayerManager storyGoalData StoryGoalData scheduleKeeper ScheduleKeeper pdaStateData PDAStateData"
  },
  "api/NitroxServer.Communication.Packets.Processors.StoryGoalExecutedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.StoryGoalExecutedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(StoryGoalExecuted, Player) public override void Process(StoryGoalExecuted packet, Player player) Parameters packet StoryGoalExecuted player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.StoryGoalExecutedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.StoryGoalExecutedProcessor.html",
    "title": "Class StoryGoalExecutedProcessor | Nitrox",
    "keywords": "Class StoryGoalExecutedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class StoryGoalExecutedProcessor : AuthenticatedPacketProcessor<StoryGoalExecuted> Inheritance object PacketProcessor AuthenticatedPacketProcessor<StoryGoalExecuted> StoryGoalExecutedProcessor Inherited Members AuthenticatedPacketProcessor<StoryGoalExecuted>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StoryGoalExecutedProcessor(PlayerManager, StoryGoalData, ScheduleKeeper, PDAStateData) Methods Process(StoryGoalExecuted, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.UpdateBaseProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.UpdateBaseProcessor.-ctor.html",
    "title": "Constructor UpdateBaseProcessor | Nitrox",
    "keywords": "Constructor UpdateBaseProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll UpdateBaseProcessor(BuildingManager, PlayerManager) public UpdateBaseProcessor(BuildingManager buildingManager, PlayerManager playerManager) Parameters buildingManager BuildingManager playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.UpdateBaseProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.UpdateBaseProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(UpdateBase, Player) public override void Process(UpdateBase packet, Player player) Parameters packet UpdateBase player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.UpdateBaseProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.UpdateBaseProcessor.html",
    "title": "Class UpdateBaseProcessor | Nitrox",
    "keywords": "Class UpdateBaseProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class UpdateBaseProcessor : BuildingProcessor<UpdateBase> Inheritance object PacketProcessor AuthenticatedPacketProcessor<UpdateBase> BuildingProcessor<UpdateBase> UpdateBaseProcessor Inherited Members BuildingProcessor<UpdateBase>.SendToOtherPlayersWithOperationId(UpdateBase, Player, int) AuthenticatedPacketProcessor<UpdateBase>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UpdateBaseProcessor(BuildingManager, PlayerManager) Methods Process(UpdateBase, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.VehicleDockingProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.VehicleDockingProcessor.-ctor.html",
    "title": "Constructor VehicleDockingProcessor | Nitrox",
    "keywords": "Constructor VehicleDockingProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll VehicleDockingProcessor(PlayerManager, EntityRegistry) public VehicleDockingProcessor(PlayerManager playerManager, EntityRegistry entityRegistry) Parameters playerManager PlayerManager entityRegistry EntityRegistry"
  },
  "api/NitroxServer.Communication.Packets.Processors.VehicleDockingProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.VehicleDockingProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(VehicleDocking, Player) public override void Process(VehicleDocking packet, Player player) Parameters packet VehicleDocking player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.VehicleDockingProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.VehicleDockingProcessor.html",
    "title": "Class VehicleDockingProcessor | Nitrox",
    "keywords": "Class VehicleDockingProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class VehicleDockingProcessor : AuthenticatedPacketProcessor<VehicleDocking> Inheritance object PacketProcessor AuthenticatedPacketProcessor<VehicleDocking> VehicleDockingProcessor Inherited Members AuthenticatedPacketProcessor<VehicleDocking>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleDockingProcessor(PlayerManager, EntityRegistry) Methods Process(VehicleDocking, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.VehicleUndockingProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.VehicleUndockingProcessor.-ctor.html",
    "title": "Constructor VehicleUndockingProcessor | Nitrox",
    "keywords": "Constructor VehicleUndockingProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll VehicleUndockingProcessor(PlayerManager, EntityRegistry) public VehicleUndockingProcessor(PlayerManager playerManager, EntityRegistry entityRegistry) Parameters playerManager PlayerManager entityRegistry EntityRegistry"
  },
  "api/NitroxServer.Communication.Packets.Processors.VehicleUndockingProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.VehicleUndockingProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(VehicleUndocking, Player) public override void Process(VehicleUndocking packet, Player player) Parameters packet VehicleUndocking player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.VehicleUndockingProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.VehicleUndockingProcessor.html",
    "title": "Class VehicleUndockingProcessor | Nitrox",
    "keywords": "Class VehicleUndockingProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class VehicleUndockingProcessor : AuthenticatedPacketProcessor<VehicleUndocking> Inheritance object PacketProcessor AuthenticatedPacketProcessor<VehicleUndocking> VehicleUndockingProcessor Inherited Members AuthenticatedPacketProcessor<VehicleUndocking>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleUndockingProcessor(PlayerManager, EntityRegistry) Methods Process(VehicleUndocking, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.WaterParkDeconstructedProcessor.-ctor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.WaterParkDeconstructedProcessor.-ctor.html",
    "title": "Constructor WaterParkDeconstructedProcessor | Nitrox",
    "keywords": "Constructor WaterParkDeconstructedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll WaterParkDeconstructedProcessor(BuildingManager, PlayerManager) public WaterParkDeconstructedProcessor(BuildingManager buildingManager, PlayerManager playerManager) Parameters buildingManager BuildingManager playerManager PlayerManager"
  },
  "api/NitroxServer.Communication.Packets.Processors.WaterParkDeconstructedProcessor.Process.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.WaterParkDeconstructedProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll Process(WaterParkDeconstructed, Player) public override void Process(WaterParkDeconstructed packet, Player player) Parameters packet WaterParkDeconstructed player Player"
  },
  "api/NitroxServer.Communication.Packets.Processors.WaterParkDeconstructedProcessor.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.WaterParkDeconstructedProcessor.html",
    "title": "Class WaterParkDeconstructedProcessor | Nitrox",
    "keywords": "Class WaterParkDeconstructedProcessor Namespace NitroxServer.Communication.Packets.Processors Assembly NitroxServer.dll public class WaterParkDeconstructedProcessor : BuildingProcessor<WaterParkDeconstructed> Inheritance object PacketProcessor AuthenticatedPacketProcessor<WaterParkDeconstructed> BuildingProcessor<WaterParkDeconstructed> WaterParkDeconstructedProcessor Inherited Members BuildingProcessor<WaterParkDeconstructed>.SendToOtherPlayersWithOperationId(WaterParkDeconstructed, Player, int) AuthenticatedPacketProcessor<WaterParkDeconstructed>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WaterParkDeconstructedProcessor(BuildingManager, PlayerManager) Methods Process(WaterParkDeconstructed, Player)"
  },
  "api/NitroxServer.Communication.Packets.Processors.html": {
    "href": "api/NitroxServer.Communication.Packets.Processors.html",
    "title": "Namespace NitroxServer.Communication.Packets.Processors | Nitrox",
    "keywords": "Namespace NitroxServer.Communication.Packets.Processors Namespaces NitroxServer.Communication.Packets.Processors.Abstract Classes BaseDeconstructedProcessor BatchVisibilityChangedProcessor BedEnterProcessor BuildingProcessor<T> BuildingResyncRequestProcessor ChatMessageProcessor DefaultServerPacketProcessor DiscordRequestIPProcessor EntityDestroyedPacketProcessor EntityMetadataUpdateProcessor EntityReparentedProcessor EscapePodChangedPacketProcessor GoalCompletedProcessor KnownTechEntryAddProcessor ModifyConstructedAmountProcessor MultiplayerSessionPolicyRequestProcessor MultiplayerSessionReservationRequestProcessor PDAEncyclopediaEntryAddProcessor PDALogEntryAddProcessor PDAScanFinishedPacketProcessor PickupItemPacketProcessor PieceDeconstructedProcessor PingRenamedPacketProcessor PinnedRecipeMovedProcessor PinnedRecipeProcessor PlaceBaseProcessor PlaceGhostProcessor PlaceModuleProcessor PlayFMODAssetProcessor PlayerHeldItemChangedProcessor PlayerJoiningMultiplayerSessionProcessor PlayerQuickSlotsBindingChangedProcessor PlayerStatsProcessor PlayerSyncFinishedProcessor RadioPlayPendingMessageProcessor ScheduleProcessor ServerCommandProcessor SignalPingPreferenceChangedProcessor StoryGoalExecutedProcessor UpdateBaseProcessor VehicleDockingProcessor VehicleUndockingProcessor WaterParkDeconstructedProcessor"
  },
  "api/NitroxServer.Communication.Packets.html": {
    "href": "api/NitroxServer.Communication.Packets.html",
    "title": "Namespace NitroxServer.Communication.Packets | Nitrox",
    "keywords": "Namespace NitroxServer.Communication.Packets Namespaces NitroxServer.Communication.Packets.Processors Classes PacketHandler"
  },
  "api/NitroxServer.Communication.html": {
    "href": "api/NitroxServer.Communication.html",
    "title": "Namespace NitroxServer.Communication | Nitrox",
    "keywords": "Namespace NitroxServer.Communication Namespaces NitroxServer.Communication.LiteNetLib NitroxServer.Communication.Packets Classes LANBroadcastServer NitroxConnectionStateExtensions NitroxServer Interfaces NitroxConnection Enums NitroxConnectionState"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.-ctor.html",
    "title": "Constructor Command | Nitrox",
    "keywords": "Constructor Command Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Command(string, Perms, PermsFlag, string) protected Command(string name, Perms perms, PermsFlag flag, string description) Parameters name string perms Perms flag PermsFlag description string Command(string, Perms, string) protected Command(string name, Perms perms, string description) Parameters name string perms Perms description string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.AddParameter.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.AddParameter.html",
    "title": "Method AddParameter | Nitrox",
    "keywords": "Method AddParameter Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll AddParameter<T>(T) protected void AddParameter<T>(T param) where T : IParameter<object> Parameters param T Type Parameters T"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.Aliases.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.Aliases.html",
    "title": "Property Aliases | Nitrox",
    "keywords": "Property Aliases Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Aliases public virtual IEnumerable<string> Aliases { get; } Property Value IEnumerable<string>"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.AllowedArgOverflow.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.AllowedArgOverflow.html",
    "title": "Property AllowedArgOverflow | Nitrox",
    "keywords": "Property AllowedArgOverflow Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll AllowedArgOverflow public bool AllowedArgOverflow { get; set; } Property Value bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.-ctor.html",
    "title": "Constructor CallArgs | Nitrox",
    "keywords": "Constructor CallArgs Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll CallArgs(Command, Optional<Player>, Span<string>) public CallArgs(Command command, Optional<Player> sender, Span<string> args) Parameters command Command sender Optional<Player> args Span<string>"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.Args.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.Args.html",
    "title": "Property Args | Nitrox",
    "keywords": "Property Args Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Args public readonly Span<string> Args { get; } Property Value Span<string>"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.Command.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.Command.html",
    "title": "Property Command | Nitrox",
    "keywords": "Property Command Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Command public readonly Command Command { get; } Property Value Command"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.Get.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.Get.html",
    "title": "Method Get | Nitrox",
    "keywords": "Method Get Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Get(int) public string Get(int index) Parameters index int Returns string Get<T>(int) public T Get<T>(int index) Parameters index int Returns T Type Parameters T"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.GetTillEnd.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.GetTillEnd.html",
    "title": "Method GetTillEnd | Nitrox",
    "keywords": "Method GetTillEnd Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll GetTillEnd(int) public string GetTillEnd(int startIndex = 0) Parameters startIndex int Returns string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.IsConsole.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.IsConsole.html",
    "title": "Property IsConsole | Nitrox",
    "keywords": "Property IsConsole Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll IsConsole public bool IsConsole { get; } Property Value bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.IsValid.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll IsValid(int) public bool IsValid(int index) Parameters index int Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.Sender.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.Sender.html",
    "title": "Property Sender | Nitrox",
    "keywords": "Property Sender Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Sender public readonly Optional<Player> Sender { get; } Property Value Optional<Player>"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.SenderName.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.SenderName.html",
    "title": "Property SenderName | Nitrox",
    "keywords": "Property SenderName Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll SenderName public string SenderName { get; } Property Value string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CallArgs.html",
    "title": "Struct Command.CallArgs | Nitrox",
    "keywords": "Struct Command.CallArgs Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll public ref struct Command.CallArgs Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors CallArgs(Command, Optional<Player>, Span<string>) Properties Args Command IsConsole Sender SenderName Methods Get(int) GetTillEnd(int) Get<T>(int) IsValid(int)"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.CanExecute.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.CanExecute.html",
    "title": "Method CanExecute | Nitrox",
    "keywords": "Method CanExecute Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll CanExecute(Perms) public bool CanExecute(Perms treshold) Parameters treshold Perms Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.Description.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.Description.html",
    "title": "Property Description | Nitrox",
    "keywords": "Property Description Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Description public string Description { get; } Property Value string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.Execute.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.Execute.html",
    "title": "Method Execute | Nitrox",
    "keywords": "Method Execute Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Execute(CallArgs) protected abstract void Execute(Command.CallArgs args) Parameters args Command.CallArgs"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.Flags.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.Flags.html",
    "title": "Property Flags | Nitrox",
    "keywords": "Property Flags Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Flags public PermsFlag Flags { get; } Property Value PermsFlag"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.Name.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.Parameters.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.Parameters.html",
    "title": "Property Parameters | Nitrox",
    "keywords": "Property Parameters Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Parameters public List<IParameter<object>> Parameters { get; } Property Value List<IParameter<object>>"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.RequiredPermLevel.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.RequiredPermLevel.html",
    "title": "Property RequiredPermLevel | Nitrox",
    "keywords": "Property RequiredPermLevel Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll RequiredPermLevel public Perms RequiredPermLevel { get; } Property Value Perms"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.SendMessage.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.SendMessage.html",
    "title": "Method SendMessage | Nitrox",
    "keywords": "Method SendMessage Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll SendMessage(Optional<Player>, string) Send a message to an existing player and logs it in the console public static void SendMessage(Optional<Player> player, string message) Parameters player Optional<Player> message string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.SendMessageToAllPlayers.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.SendMessageToAllPlayers.html",
    "title": "Method SendMessageToAllPlayers | Nitrox",
    "keywords": "Method SendMessageToAllPlayers Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll SendMessageToAllPlayers(string) Send a message to all connected players public static void SendMessageToAllPlayers(string message) Parameters message string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.SendMessageToPlayer.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.SendMessageToPlayer.html",
    "title": "Method SendMessageToPlayer | Nitrox",
    "keywords": "Method SendMessageToPlayer Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll SendMessageToPlayer(Optional<Player>, string) Send a message to an existing player public static void SendMessageToPlayer(Optional<Player> player, string message) Parameters player Optional<Player> message string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.ToHelpText.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.ToHelpText.html",
    "title": "Method ToHelpText | Nitrox",
    "keywords": "Method ToHelpText Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll ToHelpText(bool, bool) public string ToHelpText(bool singleCommand, bool cropText = false) Parameters singleCommand bool cropText bool Returns string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.TryExecute.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.TryExecute.html",
    "title": "Method TryExecute | Nitrox",
    "keywords": "Method TryExecute Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll TryExecute(Optional<Player>, Span<string>) public void TryExecute(Optional<Player> sender, Span<string> args) Parameters sender Optional<Player> args Span<string>"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Command.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Command.html",
    "title": "Class Command | Nitrox",
    "keywords": "Class Command Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll public abstract class Command Inheritance object Command Derived AuroraCommand SunbeamCommand TimeCommand Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Command(string, Perms, PermsFlag, string) Command(string, Perms, string) Properties Aliases AllowedArgOverflow Description Flags Name Parameters RequiredPermLevel Methods AddParameter<T>(T) CanExecute(Perms) Execute(CallArgs) SendMessage(Optional<Player>, string) Send a message to an existing player and logs it in the console SendMessageToAllPlayers(string) Send a message to all connected players SendMessageToPlayer(Optional<Player>, string) Send a message to an existing player ToHelpText(bool, bool) TryExecute(Optional<Player>, Span<string>)"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.GetDescription.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.GetDescription.html",
    "title": "Method GetDescription | Nitrox",
    "keywords": "Method GetDescription Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll GetDescription() string GetDescription() Returns string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.IsRequired.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.IsRequired.html",
    "title": "Property IsRequired | Nitrox",
    "keywords": "Property IsRequired Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll IsRequired bool IsRequired { get; } Property Value bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.IsValid.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll IsValid(string) bool IsValid(string arg) Parameters arg string Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.Name.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Name string Name { get; } Property Value string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.Read.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.Read.html",
    "title": "Method Read | Nitrox",
    "keywords": "Method Read Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Read(string) T Read(string arg) Parameters arg string Returns T"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.IParameter-1.html",
    "title": "Interface IParameter<T> | Nitrox",
    "keywords": "Interface IParameter<T> Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll public interface IParameter<out T> Type Parameters T Properties IsRequired Name Methods GetDescription() IsValid(string) Read(string)"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.-ctor.html",
    "title": "Constructor Parameter | Nitrox",
    "keywords": "Constructor Parameter Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Parameter(string, bool, string) protected Parameter(string name, bool isRequired, string description) Parameters name string isRequired bool description string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.GetDescription.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.GetDescription.html",
    "title": "Method GetDescription | Nitrox",
    "keywords": "Method GetDescription Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll GetDescription() public virtual string GetDescription() Returns string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.IsRequired.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.IsRequired.html",
    "title": "Property IsRequired | Nitrox",
    "keywords": "Property IsRequired Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll IsRequired public bool IsRequired { get; } Property Value bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.IsValid.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll IsValid(string) public abstract bool IsValid(string arg) Parameters arg string Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.Name.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.Read.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.Read.html",
    "title": "Method Read | Nitrox",
    "keywords": "Method Read Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll Read(string) public abstract T Read(string arg) Parameters arg string Returns T"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.ToString.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Parameter-1.html",
    "title": "Class Parameter<T> | Nitrox",
    "keywords": "Class Parameter<T> Namespace NitroxServer.ConsoleCommands.Abstract Assembly NitroxServer.dll public abstract class Parameter<T> : IParameter<T> Type Parameters T Inheritance object Parameter<T> Implements IParameter<T> Derived TypeBoolean TypeEnum<T> TypeFloat TypeInt TypePlayer TypeString Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Parameter(string, bool, string) Properties IsRequired Name Methods GetDescription() IsValid(string) Read(string) ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeBoolean.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeBoolean.-ctor.html",
    "title": "Constructor TypeBoolean | Nitrox",
    "keywords": "Constructor TypeBoolean Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll TypeBoolean(string, bool, string) public TypeBoolean(string name, bool isRequired, string description) Parameters name string isRequired bool description string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeBoolean.IsValid.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeBoolean.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll IsValid(string) public override bool IsValid(string arg) Parameters arg string Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeBoolean.Read.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeBoolean.Read.html",
    "title": "Method Read | Nitrox",
    "keywords": "Method Read Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll Read(string) public override bool Read(string arg) Parameters arg string Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeBoolean.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeBoolean.html",
    "title": "Class TypeBoolean | Nitrox",
    "keywords": "Class TypeBoolean Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll public class TypeBoolean : Parameter<bool>, IParameter<bool>, IParameter<object> Inheritance object Parameter<bool> TypeBoolean Implements IParameter<bool> IParameter<object> Inherited Members Parameter<bool>.IsRequired Parameter<bool>.Name Parameter<bool>.GetDescription() Parameter<bool>.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TypeBoolean(string, bool, string) Methods IsValid(string) Read(string)"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeEnum-1.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeEnum-1.-ctor.html",
    "title": "Constructor TypeEnum | Nitrox",
    "keywords": "Constructor TypeEnum Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll TypeEnum(string, bool, string) public TypeEnum(string name, bool required, string description) Parameters name string required bool description string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeEnum-1.GetDescription.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeEnum-1.GetDescription.html",
    "title": "Method GetDescription | Nitrox",
    "keywords": "Method GetDescription Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll GetDescription() public override string GetDescription() Returns string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeEnum-1.IsValid.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeEnum-1.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll IsValid(string) public override bool IsValid(string arg) Parameters arg string Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeEnum-1.Read.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeEnum-1.Read.html",
    "title": "Method Read | Nitrox",
    "keywords": "Method Read Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll Read(string) public override object Read(string arg) Parameters arg string Returns object"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeEnum-1.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeEnum-1.html",
    "title": "Class TypeEnum<T> | Nitrox",
    "keywords": "Class TypeEnum<T> Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll public class TypeEnum<T> : Parameter<object>, IParameter<object> where T : struct, Enum Type Parameters T Inheritance object Parameter<object> TypeEnum<T> Implements IParameter<object> Inherited Members Parameter<object>.IsRequired Parameter<object>.Name Parameter<object>.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TypeEnum(string, bool, string) Methods GetDescription() IsValid(string) Read(string)"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeFloat.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeFloat.-ctor.html",
    "title": "Constructor TypeFloat | Nitrox",
    "keywords": "Constructor TypeFloat Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll TypeFloat(string, bool, string) public TypeFloat(string name, bool isRequired, string description) Parameters name string isRequired bool description string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeFloat.IsValid.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeFloat.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll IsValid(string) public override bool IsValid(string arg) Parameters arg string Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeFloat.Read.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeFloat.Read.html",
    "title": "Method Read | Nitrox",
    "keywords": "Method Read Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll Read(string) public override float Read(string arg) Parameters arg string Returns float"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeFloat.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeFloat.html",
    "title": "Class TypeFloat | Nitrox",
    "keywords": "Class TypeFloat Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll public class TypeFloat : Parameter<float>, IParameter<float>, IParameter<object> Inheritance object Parameter<float> TypeFloat Implements IParameter<float> IParameter<object> Inherited Members Parameter<float>.IsRequired Parameter<float>.Name Parameter<float>.GetDescription() Parameter<float>.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TypeFloat(string, bool, string) Methods IsValid(string) Read(string)"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeInt.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeInt.-ctor.html",
    "title": "Constructor TypeInt | Nitrox",
    "keywords": "Constructor TypeInt Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll TypeInt(string, bool, string) public TypeInt(string name, bool isRequired, string description) Parameters name string isRequired bool description string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeInt.IsValid.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeInt.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll IsValid(string) public override bool IsValid(string arg) Parameters arg string Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeInt.Read.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeInt.Read.html",
    "title": "Method Read | Nitrox",
    "keywords": "Method Read Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll Read(string) public override int Read(string arg) Parameters arg string Returns int"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeInt.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeInt.html",
    "title": "Class TypeInt | Nitrox",
    "keywords": "Class TypeInt Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll public class TypeInt : Parameter<int>, IParameter<int>, IParameter<object> Inheritance object Parameter<int> TypeInt Implements IParameter<int> IParameter<object> Inherited Members Parameter<int>.IsRequired Parameter<int>.Name Parameter<int>.GetDescription() Parameter<int>.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TypeInt(string, bool, string) Methods IsValid(string) Read(string)"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypePlayer.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypePlayer.-ctor.html",
    "title": "Constructor TypePlayer | Nitrox",
    "keywords": "Constructor TypePlayer Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll TypePlayer(string, bool, string) public TypePlayer(string name, bool required, string description) Parameters name string required bool description string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypePlayer.IsValid.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypePlayer.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll IsValid(string) public override bool IsValid(string arg) Parameters arg string Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypePlayer.Read.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypePlayer.Read.html",
    "title": "Method Read | Nitrox",
    "keywords": "Method Read Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll Read(string) public override Player Read(string arg) Parameters arg string Returns Player"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypePlayer.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypePlayer.html",
    "title": "Class TypePlayer | Nitrox",
    "keywords": "Class TypePlayer Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll public class TypePlayer : Parameter<Player>, IParameter<Player> Inheritance object Parameter<Player> TypePlayer Implements IParameter<Player> Inherited Members Parameter<Player>.IsRequired Parameter<Player>.Name Parameter<Player>.GetDescription() Parameter<Player>.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TypePlayer(string, bool, string) Methods IsValid(string) Read(string)"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeString.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeString.-ctor.html",
    "title": "Constructor TypeString | Nitrox",
    "keywords": "Constructor TypeString Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll TypeString(string, bool, string) public TypeString(string name, bool isRequired, string description) Parameters name string isRequired bool description string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeString.IsValid.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeString.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll IsValid(string) public override bool IsValid(string arg) Parameters arg string Returns bool"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeString.Read.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeString.Read.html",
    "title": "Method Read | Nitrox",
    "keywords": "Method Read Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll Read(string) public override string Read(string arg) Parameters arg string Returns string"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeString.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.TypeString.html",
    "title": "Class TypeString | Nitrox",
    "keywords": "Class TypeString Namespace NitroxServer.ConsoleCommands.Abstract.Type Assembly NitroxServer.dll public class TypeString : Parameter<string>, IParameter<string> Inheritance object Parameter<string> TypeString Implements IParameter<string> Inherited Members Parameter<string>.IsRequired Parameter<string>.Name Parameter<string>.GetDescription() Parameter<string>.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TypeString(string, bool, string) Methods IsValid(string) Read(string)"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.Type.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.Type.html",
    "title": "Namespace NitroxServer.ConsoleCommands.Abstract.Type | Nitrox",
    "keywords": "Namespace NitroxServer.ConsoleCommands.Abstract.Type Classes TypeBoolean TypeEnum<T> TypeFloat TypeInt TypePlayer TypeString"
  },
  "api/NitroxServer.ConsoleCommands.Abstract.html": {
    "href": "api/NitroxServer.ConsoleCommands.Abstract.html",
    "title": "Namespace NitroxServer.ConsoleCommands.Abstract | Nitrox",
    "keywords": "Namespace NitroxServer.ConsoleCommands.Abstract Namespaces NitroxServer.ConsoleCommands.Abstract.Type Classes Command Parameter<T> Structs Command.CallArgs Interfaces IParameter<T>"
  },
  "api/NitroxServer.ConsoleCommands.AuroraCommand.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.AuroraCommand.-ctor.html",
    "title": "Constructor AuroraCommand | Nitrox",
    "keywords": "Constructor AuroraCommand Namespace NitroxServer.ConsoleCommands Assembly NitroxServer.dll AuroraCommand(StoryManager) public AuroraCommand(StoryManager storyManager) Parameters storyManager StoryManager"
  },
  "api/NitroxServer.ConsoleCommands.AuroraCommand.Execute.html": {
    "href": "api/NitroxServer.ConsoleCommands.AuroraCommand.Execute.html",
    "title": "Method Execute | Nitrox",
    "keywords": "Method Execute Namespace NitroxServer.ConsoleCommands Assembly NitroxServer.dll Execute(CallArgs) protected override void Execute(Command.CallArgs args) Parameters args Command.CallArgs"
  },
  "api/NitroxServer.ConsoleCommands.AuroraCommand.html": {
    "href": "api/NitroxServer.ConsoleCommands.AuroraCommand.html",
    "title": "Class AuroraCommand | Nitrox",
    "keywords": "Class AuroraCommand Namespace NitroxServer.ConsoleCommands Assembly NitroxServer.dll public class AuroraCommand : Command Inheritance object Command AuroraCommand Inherited Members Command.Aliases Command.Name Command.Description Command.RequiredPermLevel Command.Flags Command.AllowedArgOverflow Command.Parameters Command.TryExecute(Optional<Player>, Span<string>) Command.CanExecute(Perms) Command.ToHelpText(bool, bool) Command.AddParameter<T>(T) Command.SendMessageToPlayer(Optional<Player>, string) Command.SendMessage(Optional<Player>, string) Command.SendMessageToAllPlayers(string) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AuroraCommand(StoryManager) Methods Execute(CallArgs)"
  },
  "api/NitroxServer.ConsoleCommands.Processor.ConsoleCommandProcessor.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Processor.ConsoleCommandProcessor.-ctor.html",
    "title": "Constructor ConsoleCommandProcessor | Nitrox",
    "keywords": "Constructor ConsoleCommandProcessor Namespace NitroxServer.ConsoleCommands.Processor Assembly NitroxServer.dll ConsoleCommandProcessor(IEnumerable<Command>) public ConsoleCommandProcessor(IEnumerable<Command> cmds) Parameters cmds IEnumerable<Command>"
  },
  "api/NitroxServer.ConsoleCommands.Processor.ConsoleCommandProcessor.ProcessCommand.html": {
    "href": "api/NitroxServer.ConsoleCommands.Processor.ConsoleCommandProcessor.ProcessCommand.html",
    "title": "Method ProcessCommand | Nitrox",
    "keywords": "Method ProcessCommand Namespace NitroxServer.ConsoleCommands.Processor Assembly NitroxServer.dll ProcessCommand(string, Optional<Player>, Perms) public void ProcessCommand(string msg, Optional<Player> sender, Perms permissions) Parameters msg string sender Optional<Player> permissions Perms"
  },
  "api/NitroxServer.ConsoleCommands.Processor.ConsoleCommandProcessor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Processor.ConsoleCommandProcessor.html",
    "title": "Class ConsoleCommandProcessor | Nitrox",
    "keywords": "Class ConsoleCommandProcessor Namespace NitroxServer.ConsoleCommands.Processor Assembly NitroxServer.dll public class ConsoleCommandProcessor Inheritance object ConsoleCommandProcessor Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ConsoleCommandProcessor(IEnumerable<Command>) Methods ProcessCommand(string, Optional<Player>, Perms)"
  },
  "api/NitroxServer.ConsoleCommands.Processor.html": {
    "href": "api/NitroxServer.ConsoleCommands.Processor.html",
    "title": "Namespace NitroxServer.ConsoleCommands.Processor | Nitrox",
    "keywords": "Namespace NitroxServer.ConsoleCommands.Processor Classes ConsoleCommandProcessor"
  },
  "api/NitroxServer.ConsoleCommands.SunbeamCommand.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.SunbeamCommand.-ctor.html",
    "title": "Constructor SunbeamCommand | Nitrox",
    "keywords": "Constructor SunbeamCommand Namespace NitroxServer.ConsoleCommands Assembly NitroxServer.dll SunbeamCommand(StoryManager) public SunbeamCommand(StoryManager storyManager) Parameters storyManager StoryManager"
  },
  "api/NitroxServer.ConsoleCommands.SunbeamCommand.Execute.html": {
    "href": "api/NitroxServer.ConsoleCommands.SunbeamCommand.Execute.html",
    "title": "Method Execute | Nitrox",
    "keywords": "Method Execute Namespace NitroxServer.ConsoleCommands Assembly NitroxServer.dll Execute(CallArgs) protected override void Execute(Command.CallArgs args) Parameters args Command.CallArgs"
  },
  "api/NitroxServer.ConsoleCommands.SunbeamCommand.html": {
    "href": "api/NitroxServer.ConsoleCommands.SunbeamCommand.html",
    "title": "Class SunbeamCommand | Nitrox",
    "keywords": "Class SunbeamCommand Namespace NitroxServer.ConsoleCommands Assembly NitroxServer.dll public class SunbeamCommand : Command Inheritance object Command SunbeamCommand Inherited Members Command.Aliases Command.Name Command.Description Command.RequiredPermLevel Command.Flags Command.AllowedArgOverflow Command.Parameters Command.TryExecute(Optional<Player>, Span<string>) Command.CanExecute(Perms) Command.ToHelpText(bool, bool) Command.AddParameter<T>(T) Command.SendMessageToPlayer(Optional<Player>, string) Command.SendMessage(Optional<Player>, string) Command.SendMessageToAllPlayers(string) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SunbeamCommand(StoryManager) Methods Execute(CallArgs)"
  },
  "api/NitroxServer.ConsoleCommands.TimeCommand.-ctor.html": {
    "href": "api/NitroxServer.ConsoleCommands.TimeCommand.-ctor.html",
    "title": "Constructor TimeCommand | Nitrox",
    "keywords": "Constructor TimeCommand Namespace NitroxServer.ConsoleCommands Assembly NitroxServer.dll TimeCommand(TimeKeeper) public TimeCommand(TimeKeeper timeKeeper) Parameters timeKeeper TimeKeeper"
  },
  "api/NitroxServer.ConsoleCommands.TimeCommand.Execute.html": {
    "href": "api/NitroxServer.ConsoleCommands.TimeCommand.Execute.html",
    "title": "Method Execute | Nitrox",
    "keywords": "Method Execute Namespace NitroxServer.ConsoleCommands Assembly NitroxServer.dll Execute(CallArgs) protected override void Execute(Command.CallArgs args) Parameters args Command.CallArgs"
  },
  "api/NitroxServer.ConsoleCommands.TimeCommand.html": {
    "href": "api/NitroxServer.ConsoleCommands.TimeCommand.html",
    "title": "Class TimeCommand | Nitrox",
    "keywords": "Class TimeCommand Namespace NitroxServer.ConsoleCommands Assembly NitroxServer.dll public class TimeCommand : Command Inheritance object Command TimeCommand Inherited Members Command.Aliases Command.Name Command.Description Command.RequiredPermLevel Command.Flags Command.AllowedArgOverflow Command.Parameters Command.TryExecute(Optional<Player>, Span<string>) Command.CanExecute(Perms) Command.ToHelpText(bool, bool) Command.AddParameter<T>(T) Command.SendMessageToPlayer(Optional<Player>, string) Command.SendMessage(Optional<Player>, string) Command.SendMessageToAllPlayers(string) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeCommand(TimeKeeper) Methods Execute(CallArgs)"
  },
  "api/NitroxServer.ConsoleCommands.html": {
    "href": "api/NitroxServer.ConsoleCommands.html",
    "title": "Namespace NitroxServer.ConsoleCommands | Nitrox",
    "keywords": "Namespace NitroxServer.ConsoleCommands Namespaces NitroxServer.ConsoleCommands.Abstract NitroxServer.ConsoleCommands.Processor Classes AuroraCommand SunbeamCommand TimeCommand"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.-ctor.html",
    "title": "Constructor BuildingManager | Nitrox",
    "keywords": "Constructor BuildingManager Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll BuildingManager(EntityRegistry, WorldEntityManager, ServerConfig) public BuildingManager(EntityRegistry entityRegistry, WorldEntityManager worldEntityManager, ServerConfig config) Parameters entityRegistry EntityRegistry worldEntityManager WorldEntityManager config ServerConfig"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.AddGhost.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.AddGhost.html",
    "title": "Method AddGhost | Nitrox",
    "keywords": "Method AddGhost Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll AddGhost(PlaceGhost) public bool AddGhost(PlaceGhost placeGhost) Parameters placeGhost PlaceGhost Returns bool"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.AddModule.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.AddModule.html",
    "title": "Method AddModule | Nitrox",
    "keywords": "Method AddModule Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll AddModule(PlaceModule) public bool AddModule(PlaceModule placeModule) Parameters placeModule PlaceModule Returns bool"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.CreateBase.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.CreateBase.html",
    "title": "Method CreateBase | Nitrox",
    "keywords": "Method CreateBase Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll CreateBase(PlaceBase) public bool CreateBase(PlaceBase placeBase) Parameters placeBase PlaceBase Returns bool"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.CreateWaterParkPiece.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.CreateWaterParkPiece.html",
    "title": "Method CreateWaterParkPiece | Nitrox",
    "keywords": "Method CreateWaterParkPiece Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll CreateWaterParkPiece(WaterParkDeconstructed, Entity) public bool CreateWaterParkPiece(WaterParkDeconstructed waterParkDeconstructed, Entity removedEntity) Parameters waterParkDeconstructed WaterParkDeconstructed removedEntity Entity Returns bool"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.GetEntitiesOperations.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.GetEntitiesOperations.html",
    "title": "Method GetEntitiesOperations | Nitrox",
    "keywords": "Method GetEntitiesOperations Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll GetEntitiesOperations(List<GlobalRootEntity>) public static Dictionary<NitroxId, int> GetEntitiesOperations(List<GlobalRootEntity> entities) Parameters entities List<GlobalRootEntity> Returns Dictionary<NitroxId, int>"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.ModifyConstructedAmount.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.ModifyConstructedAmount.html",
    "title": "Method ModifyConstructedAmount | Nitrox",
    "keywords": "Method ModifyConstructedAmount Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll ModifyConstructedAmount(ModifyConstructedAmount) public bool ModifyConstructedAmount(ModifyConstructedAmount modifyConstructedAmount) Parameters modifyConstructedAmount ModifyConstructedAmount Returns bool"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.ReplaceBaseByGhost.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.ReplaceBaseByGhost.html",
    "title": "Method ReplaceBaseByGhost | Nitrox",
    "keywords": "Method ReplaceBaseByGhost Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll ReplaceBaseByGhost(BaseDeconstructed) public bool ReplaceBaseByGhost(BaseDeconstructed baseDeconstructed) Parameters baseDeconstructed BaseDeconstructed Returns bool"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.ReplacePieceByGhost.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.ReplacePieceByGhost.html",
    "title": "Method ReplacePieceByGhost | Nitrox",
    "keywords": "Method ReplacePieceByGhost Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll ReplacePieceByGhost(Player, PieceDeconstructed, out Entity, out int) public bool ReplacePieceByGhost(Player player, PieceDeconstructed pieceDeconstructed, out Entity removedEntity, out int operationId) Parameters player Player pieceDeconstructed PieceDeconstructed removedEntity Entity operationId int Returns bool"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.UpdateBase.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.UpdateBase.html",
    "title": "Method UpdateBase | Nitrox",
    "keywords": "Method UpdateBase Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll UpdateBase(Player, UpdateBase, out int) public bool UpdateBase(Player player, UpdateBase updateBase, out int operationId) Parameters player Player updateBase UpdateBase operationId int Returns bool"
  },
  "api/NitroxServer.GameLogic.Bases.BuildingManager.html": {
    "href": "api/NitroxServer.GameLogic.Bases.BuildingManager.html",
    "title": "Class BuildingManager | Nitrox",
    "keywords": "Class BuildingManager Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll public class BuildingManager Inheritance object BuildingManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BuildingManager(EntityRegistry, WorldEntityManager, ServerConfig) Methods AddGhost(PlaceGhost) AddModule(PlaceModule) CreateBase(PlaceBase) CreateWaterParkPiece(WaterParkDeconstructed, Entity) GetEntitiesOperations(List<GlobalRootEntity>) ModifyConstructedAmount(ModifyConstructedAmount) ReplaceBaseByGhost(BaseDeconstructed) ReplacePieceByGhost(Player, PieceDeconstructed, out Entity, out int) UpdateBase(Player, UpdateBase, out int)"
  },
  "api/NitroxServer.GameLogic.Bases.GameData.From.html": {
    "href": "api/NitroxServer.GameLogic.Bases.GameData.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll From(PDAStateData, StoryGoalData, ScheduleKeeper, StoryManager, TimeKeeper) public static GameData From(PDAStateData pdaState, StoryGoalData storyGoals, ScheduleKeeper scheduleKeeper, StoryManager storyManager, TimeKeeper timeKeeper) Parameters pdaState PDAStateData storyGoals StoryGoalData scheduleKeeper ScheduleKeeper storyManager StoryManager timeKeeper TimeKeeper Returns GameData"
  },
  "api/NitroxServer.GameLogic.Bases.GameData.PDAState.html": {
    "href": "api/NitroxServer.GameLogic.Bases.GameData.PDAState.html",
    "title": "Property PDAState | Nitrox",
    "keywords": "Property PDAState Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll PDAState [DataMember(Order = 1)] public PDAStateData PDAState { get; set; } Property Value PDAStateData"
  },
  "api/NitroxServer.GameLogic.Bases.GameData.StoryGoals.html": {
    "href": "api/NitroxServer.GameLogic.Bases.GameData.StoryGoals.html",
    "title": "Property StoryGoals | Nitrox",
    "keywords": "Property StoryGoals Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll StoryGoals [DataMember(Order = 2)] public StoryGoalData StoryGoals { get; set; } Property Value StoryGoalData"
  },
  "api/NitroxServer.GameLogic.Bases.GameData.StoryTiming.html": {
    "href": "api/NitroxServer.GameLogic.Bases.GameData.StoryTiming.html",
    "title": "Property StoryTiming | Nitrox",
    "keywords": "Property StoryTiming Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll StoryTiming [DataMember(Order = 3)] public StoryTimingData StoryTiming { get; set; } Property Value StoryTimingData"
  },
  "api/NitroxServer.GameLogic.Bases.GameData.html": {
    "href": "api/NitroxServer.GameLogic.Bases.GameData.html",
    "title": "Class GameData | Nitrox",
    "keywords": "Class GameData Namespace NitroxServer.GameLogic.Bases Assembly NitroxServer.dll [Serializable] [DataContract] public class GameData Inheritance object GameData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties PDAState StoryGoals StoryTiming Methods From(PDAStateData, StoryGoalData, ScheduleKeeper, StoryManager, TimeKeeper)"
  },
  "api/NitroxServer.GameLogic.Bases.html": {
    "href": "api/NitroxServer.GameLogic.Bases.html",
    "title": "Namespace NitroxServer.GameLogic.Bases | Nitrox",
    "keywords": "Namespace NitroxServer.GameLogic.Bases Classes BuildingManager GameData"
  },
  "api/NitroxServer.GameLogic.Entities.EntityData.Entities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityData.Entities.html",
    "title": "Field Entities | Nitrox",
    "keywords": "Field Entities Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll [DataMember(Order = 1)] public List<Entity> Entities Returns List<Entity>"
  },
  "api/NitroxServer.GameLogic.Entities.EntityData.From.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityData.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll From(List<Entity>) public static EntityData From(List<Entity> entities) Parameters entities List<Entity> Returns EntityData"
  },
  "api/NitroxServer.GameLogic.Entities.EntityData.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityData.html",
    "title": "Class EntityData | Nitrox",
    "keywords": "Class EntityData Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll [DataContract] public class EntityData Inheritance object EntityData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields Entities Methods From(List<Entity>)"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.AddEntities.html",
    "title": "Method AddEntities | Nitrox",
    "keywords": "Method AddEntities Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll AddEntities(IEnumerable<Entity>) public void AddEntities(IEnumerable<Entity> entities) Parameters entities IEnumerable<Entity>"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.AddEntitiesIgnoringDuplicate.html",
    "title": "Method AddEntitiesIgnoringDuplicate | Nitrox",
    "keywords": "Method AddEntitiesIgnoringDuplicate Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll AddEntitiesIgnoringDuplicate(IEnumerable<Entity>) Used for situations when some children may be new but others may not be. For example a dropped InventoryEntity turns into a WorldEntity but keeps its battery inside (already known). public void AddEntitiesIgnoringDuplicate(IEnumerable<Entity> entities) Parameters entities IEnumerable<Entity>"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.AddEntity.html",
    "title": "Method AddEntity | Nitrox",
    "keywords": "Method AddEntity Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll AddEntity(Entity) public void AddEntity(Entity entity) Parameters entity Entity"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.AddOrUpdate.html",
    "title": "Method AddOrUpdate | Nitrox",
    "keywords": "Method AddOrUpdate Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll AddOrUpdate(Entity) public void AddOrUpdate(Entity entity) Parameters entity Entity"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.AddToParent.html",
    "title": "Method AddToParent | Nitrox",
    "keywords": "Method AddToParent Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll AddToParent(Entity) public void AddToParent(Entity entity) Parameters entity Entity"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.GetAllEntities.html",
    "title": "Method GetAllEntities | Nitrox",
    "keywords": "Method GetAllEntities Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll GetAllEntities(bool) public List<Entity> GetAllEntities(bool exceptGlobalRoot = false) Parameters exceptGlobalRoot bool Returns List<Entity>"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.GetEntities.html",
    "title": "Method GetEntities | Nitrox",
    "keywords": "Method GetEntities Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll GetEntities(List<NitroxId>) public List<Entity> GetEntities(List<NitroxId> ids) Parameters ids List<NitroxId> Returns List<Entity> GetEntities<T>() public List<T> GetEntities<T>() Returns List<T> Type Parameters T"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.GetEntityById.html",
    "title": "Method GetEntityById | Nitrox",
    "keywords": "Method GetEntityById Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll GetEntityById<T>(NitroxId) public Optional<T> GetEntityById<T>(NitroxId id) where T : Entity Parameters id NitroxId Returns Optional<T> Type Parameters T GetEntityById(NitroxId) public Optional<Entity> GetEntityById(NitroxId id) Parameters id NitroxId Returns Optional<Entity>"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.RemoveEntity.html",
    "title": "Method RemoveEntity | Nitrox",
    "keywords": "Method RemoveEntity Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll RemoveEntity(NitroxId) public Optional<Entity> RemoveEntity(NitroxId id) Parameters id NitroxId Returns Optional<Entity>"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.RemoveFromParent.html",
    "title": "Method RemoveFromParent | Nitrox",
    "keywords": "Method RemoveFromParent Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll RemoveFromParent(Entity) public void RemoveFromParent(Entity entity) Parameters entity Entity"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.ReparentEntity.html",
    "title": "Method ReparentEntity | Nitrox",
    "keywords": "Method ReparentEntity Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll ReparentEntity(NitroxId, NitroxId) public void ReparentEntity(NitroxId entityId, NitroxId newParentId) Parameters entityId NitroxId newParentId NitroxId ReparentEntity(NitroxId, Entity) public void ReparentEntity(NitroxId entityId, Entity newParent) Parameters entityId NitroxId newParent Entity ReparentEntity(Entity, NitroxId) public void ReparentEntity(Entity entity, NitroxId newParentId) Parameters entity Entity newParentId NitroxId ReparentEntity(Entity, Entity) public void ReparentEntity(Entity entity, Entity newParent) Parameters entity Entity newParent Entity"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.TransferChildren.html",
    "title": "Method TransferChildren | Nitrox",
    "keywords": "Method TransferChildren Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll TransferChildren(NitroxId, NitroxId, Func<Entity, bool>) public void TransferChildren(NitroxId parentId, NitroxId newParentId, Func<Entity, bool> filter = null) Parameters parentId NitroxId newParentId NitroxId filter Func<Entity, bool> TransferChildren(Entity, Entity, Func<Entity, bool>) public void TransferChildren(Entity parent, Entity newParent, Func<Entity, bool> filter = null) Parameters parent Entity newParent Entity filter Func<Entity, bool>"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.TryGetEntityById.html",
    "title": "Method TryGetEntityById | Nitrox",
    "keywords": "Method TryGetEntityById Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll TryGetEntityById<T>(NitroxId, out T) public bool TryGetEntityById<T>(NitroxId id, out T entity) where T : Entity Parameters id NitroxId entity T Returns bool Type Parameters T"
  },
  "api/NitroxServer.GameLogic.Entities.EntityRegistry.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntityRegistry.html",
    "title": "Class EntityRegistry | Nitrox",
    "keywords": "Class EntityRegistry Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll public class EntityRegistry Inheritance object EntityRegistry Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AddEntities(IEnumerable<Entity>) AddEntitiesIgnoringDuplicate(IEnumerable<Entity>) Used for situations when some children may be new but others may not be. For example a dropped InventoryEntity turns into a WorldEntity but keeps its battery inside (already known). AddEntity(Entity) AddOrUpdate(Entity) AddToParent(Entity) GetAllEntities(bool) GetEntities(List<NitroxId>) GetEntities<T>() GetEntityById(NitroxId) GetEntityById<T>(NitroxId) RemoveEntity(NitroxId) RemoveFromParent(Entity) ReparentEntity(Entity, Entity) ReparentEntity(Entity, NitroxId) ReparentEntity(NitroxId, Entity) ReparentEntity(NitroxId, NitroxId) TransferChildren(Entity, Entity, Func<Entity, bool>) TransferChildren(NitroxId, NitroxId, Func<Entity, bool>) TryGetEntityById<T>(NitroxId, out T)"
  },
  "api/NitroxServer.GameLogic.Entities.EntitySimulation.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntitySimulation.-ctor.html",
    "title": "Constructor EntitySimulation | Nitrox",
    "keywords": "Constructor EntitySimulation Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll EntitySimulation(EntityRegistry, WorldEntityManager, SimulationOwnershipData, PlayerManager, HashSet<NitroxTechType>) public EntitySimulation(EntityRegistry entityRegistry, WorldEntityManager worldEntityManager, SimulationOwnershipData simulationOwnershipData, PlayerManager playerManager, HashSet<NitroxTechType> serverSpawnedSimulationWhiteList) Parameters entityRegistry EntityRegistry worldEntityManager WorldEntityManager simulationOwnershipData SimulationOwnershipData playerManager PlayerManager serverSpawnedSimulationWhiteList HashSet<NitroxTechType>"
  },
  "api/NitroxServer.GameLogic.Entities.EntitySimulation.AssignGlobalRootEntities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntitySimulation.AssignGlobalRootEntities.html",
    "title": "Method AssignGlobalRootEntities | Nitrox",
    "keywords": "Method AssignGlobalRootEntities Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll AssignGlobalRootEntities(Player) public IEnumerable<NitroxId> AssignGlobalRootEntities(Player player) Parameters player Player Returns IEnumerable<NitroxId>"
  },
  "api/NitroxServer.GameLogic.Entities.EntitySimulation.AssignNewEntityToPlayer.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntitySimulation.AssignNewEntityToPlayer.html",
    "title": "Method AssignNewEntityToPlayer | Nitrox",
    "keywords": "Method AssignNewEntityToPlayer Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll AssignNewEntityToPlayer(Entity, Player) public SimulatedEntity AssignNewEntityToPlayer(Entity entity, Player player) Parameters entity Entity player Player Returns SimulatedEntity"
  },
  "api/NitroxServer.GameLogic.Entities.EntitySimulation.BroadcastSimulationChangesForBatchAddition.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntitySimulation.BroadcastSimulationChangesForBatchAddition.html",
    "title": "Method BroadcastSimulationChangesForBatchAddition | Nitrox",
    "keywords": "Method BroadcastSimulationChangesForBatchAddition Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll BroadcastSimulationChangesForBatchAddition(Player, NitroxInt3) public void BroadcastSimulationChangesForBatchAddition(Player player, NitroxInt3 batchId) Parameters player Player batchId NitroxInt3"
  },
  "api/NitroxServer.GameLogic.Entities.EntitySimulation.BroadcastSimulationChangesForCellUpdates.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntitySimulation.BroadcastSimulationChangesForCellUpdates.html",
    "title": "Method BroadcastSimulationChangesForCellUpdates | Nitrox",
    "keywords": "Method BroadcastSimulationChangesForCellUpdates Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll BroadcastSimulationChangesForCellUpdates(Player, AbsoluteEntityCell[], AbsoluteEntityCell[]) public void BroadcastSimulationChangesForCellUpdates(Player player, AbsoluteEntityCell[] added, AbsoluteEntityCell[] removed) Parameters player Player added AbsoluteEntityCell[] removed AbsoluteEntityCell[]"
  },
  "api/NitroxServer.GameLogic.Entities.EntitySimulation.CalculateSimulationChangesFromPlayerDisconnect.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntitySimulation.CalculateSimulationChangesFromPlayerDisconnect.html",
    "title": "Method CalculateSimulationChangesFromPlayerDisconnect | Nitrox",
    "keywords": "Method CalculateSimulationChangesFromPlayerDisconnect Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll CalculateSimulationChangesFromPlayerDisconnect(Player) public List<SimulatedEntity> CalculateSimulationChangesFromPlayerDisconnect(Player player) Parameters player Player Returns List<SimulatedEntity>"
  },
  "api/NitroxServer.GameLogic.Entities.EntitySimulation.EntityDestroyed.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntitySimulation.EntityDestroyed.html",
    "title": "Method EntityDestroyed | Nitrox",
    "keywords": "Method EntityDestroyed Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll EntityDestroyed(NitroxId) public void EntityDestroyed(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxServer.GameLogic.Entities.EntitySimulation.html": {
    "href": "api/NitroxServer.GameLogic.Entities.EntitySimulation.html",
    "title": "Class EntitySimulation | Nitrox",
    "keywords": "Class EntitySimulation Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll public class EntitySimulation Inheritance object EntitySimulation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntitySimulation(EntityRegistry, WorldEntityManager, SimulationOwnershipData, PlayerManager, HashSet<NitroxTechType>) Methods AssignGlobalRootEntities(Player) AssignNewEntityToPlayer(Entity, Player) BroadcastSimulationChangesForBatchAddition(Player, NitroxInt3) BroadcastSimulationChangesForCellUpdates(Player, AbsoluteEntityCell[], AbsoluteEntityCell[]) CalculateSimulationChangesFromPlayerDisconnect(Player) EntityDestroyed(NitroxId)"
  },
  "api/NitroxServer.GameLogic.Entities.GlobalRootData.Entities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.GlobalRootData.Entities.html",
    "title": "Field Entities | Nitrox",
    "keywords": "Field Entities Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll [DataMember(Order = 1)] public List<GlobalRootEntity> Entities Returns List<GlobalRootEntity>"
  },
  "api/NitroxServer.GameLogic.Entities.GlobalRootData.From.html": {
    "href": "api/NitroxServer.GameLogic.Entities.GlobalRootData.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll From(List<GlobalRootEntity>) public static GlobalRootData From(List<GlobalRootEntity> entities) Parameters entities List<GlobalRootEntity> Returns GlobalRootData"
  },
  "api/NitroxServer.GameLogic.Entities.GlobalRootData.html": {
    "href": "api/NitroxServer.GameLogic.Entities.GlobalRootData.html",
    "title": "Class GlobalRootData | Nitrox",
    "keywords": "Class GlobalRootData Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll [DataContract] public class GlobalRootData Inheritance object GlobalRootData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields Entities Methods From(List<GlobalRootEntity>)"
  },
  "api/NitroxServer.GameLogic.Entities.NitroxEntitySlot.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.Entities.NitroxEntitySlot.-ctor.html",
    "title": "Constructor NitroxEntitySlot | Nitrox",
    "keywords": "Constructor NitroxEntitySlot Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll NitroxEntitySlot(string, string[]) public NitroxEntitySlot(string biomeType, string[] allowedTypes) Parameters biomeType string allowedTypes string[]"
  },
  "api/NitroxServer.GameLogic.Entities.NitroxEntitySlot.AllowedTypes.html": {
    "href": "api/NitroxServer.GameLogic.Entities.NitroxEntitySlot.AllowedTypes.html",
    "title": "Field AllowedTypes | Nitrox",
    "keywords": "Field AllowedTypes Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll public string[] AllowedTypes Returns string[]"
  },
  "api/NitroxServer.GameLogic.Entities.NitroxEntitySlot.BiomeType.html": {
    "href": "api/NitroxServer.GameLogic.Entities.NitroxEntitySlot.BiomeType.html",
    "title": "Field BiomeType | Nitrox",
    "keywords": "Field BiomeType Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll public string BiomeType Returns string"
  },
  "api/NitroxServer.GameLogic.Entities.NitroxEntitySlot.html": {
    "href": "api/NitroxServer.GameLogic.Entities.NitroxEntitySlot.html",
    "title": "Class NitroxEntitySlot | Nitrox",
    "keywords": "Class NitroxEntitySlot Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll public class NitroxEntitySlot Inheritance object NitroxEntitySlot Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NitroxEntitySlot(string, string[]) Fields AllowedTypes BiomeType"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.BatchEntitySpawner.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.BatchEntitySpawner.-ctor.html",
    "title": "Constructor BatchEntitySpawner | Nitrox",
    "keywords": "Constructor BatchEntitySpawner Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll BatchEntitySpawner(EntitySpawnPointFactory, UweWorldEntityFactory, UwePrefabFactory, List<NitroxInt3>, ServerProtoBufSerializer, Dictionary<NitroxTechType, IEntityBootstrapper>, Dictionary<string, PrefabPlaceholdersGroupAsset>, string) public BatchEntitySpawner(EntitySpawnPointFactory entitySpawnPointFactory, UweWorldEntityFactory worldEntityFactory, UwePrefabFactory prefabFactory, List<NitroxInt3> loadedPreviousParsed, ServerProtoBufSerializer serializer, Dictionary<NitroxTechType, IEntityBootstrapper> customBootstrappersByTechType, Dictionary<string, PrefabPlaceholdersGroupAsset> prefabPlaceholderGroupsByClassId, string seed) Parameters entitySpawnPointFactory EntitySpawnPointFactory worldEntityFactory UweWorldEntityFactory prefabFactory UwePrefabFactory loadedPreviousParsed List<NitroxInt3> serializer ServerProtoBufSerializer customBootstrappersByTechType Dictionary<NitroxTechType, IEntityBootstrapper> prefabPlaceholderGroupsByClassId Dictionary<string, PrefabPlaceholdersGroupAsset> seed string"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.BatchEntitySpawner.IsBatchSpawned.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.BatchEntitySpawner.IsBatchSpawned.html",
    "title": "Method IsBatchSpawned | Nitrox",
    "keywords": "Method IsBatchSpawned Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll IsBatchSpawned(NitroxInt3) public bool IsBatchSpawned(NitroxInt3 batchId) Parameters batchId NitroxInt3 Returns bool"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.BatchEntitySpawner.LoadUnspawnedEntities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.BatchEntitySpawner.LoadUnspawnedEntities.html",
    "title": "Method LoadUnspawnedEntities | Nitrox",
    "keywords": "Method LoadUnspawnedEntities Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll LoadUnspawnedEntities(NitroxInt3, bool) public List<Entity> LoadUnspawnedEntities(NitroxInt3 batchId, bool fullCacheCreation = false) Parameters batchId NitroxInt3 fullCacheCreation bool Returns List<Entity>"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.BatchEntitySpawner.SerializableParsedBatches.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.BatchEntitySpawner.SerializableParsedBatches.html",
    "title": "Property SerializableParsedBatches | Nitrox",
    "keywords": "Property SerializableParsedBatches Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll SerializableParsedBatches public List<NitroxInt3> SerializableParsedBatches { get; set; } Property Value List<NitroxInt3>"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.BatchEntitySpawner.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.BatchEntitySpawner.html",
    "title": "Class BatchEntitySpawner | Nitrox",
    "keywords": "Class BatchEntitySpawner Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll public class BatchEntitySpawner : IEntitySpawner Inheritance object BatchEntitySpawner Implements IEntitySpawner Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BatchEntitySpawner(EntitySpawnPointFactory, UweWorldEntityFactory, UwePrefabFactory, List<NitroxInt3>, ServerProtoBufSerializer, Dictionary<NitroxTechType, IEntityBootstrapper>, Dictionary<string, PrefabPlaceholdersGroupAsset>, string) Properties SerializableParsedBatches Methods IsBatchSpawned(NitroxInt3) LoadUnspawnedEntities(NitroxInt3, bool)"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.-ctor.html",
    "title": "Constructor EntitySpawnPoint | Nitrox",
    "keywords": "Constructor EntitySpawnPoint Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll EntitySpawnPoint(AbsoluteEntityCell, NitroxVector3, NitroxQuaternion, List<string>, float, string) public EntitySpawnPoint(AbsoluteEntityCell absoluteEntityCell, NitroxVector3 localPosition, NitroxQuaternion localRotation, List<string> allowedTypes, float density, string biomeType) Parameters absoluteEntityCell AbsoluteEntityCell localPosition NitroxVector3 localRotation NitroxQuaternion allowedTypes List<string> density float biomeType string EntitySpawnPoint(AbsoluteEntityCell, NitroxVector3, NitroxQuaternion, NitroxVector3, string) public EntitySpawnPoint(AbsoluteEntityCell absoluteEntityCell, NitroxVector3 localPosition, NitroxQuaternion localRotation, NitroxVector3 scale, string classId) Parameters absoluteEntityCell AbsoluteEntityCell localPosition NitroxVector3 localRotation NitroxQuaternion scale NitroxVector3 classId string"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.AbsoluteEntityCell.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.AbsoluteEntityCell.html",
    "title": "Property AbsoluteEntityCell | Nitrox",
    "keywords": "Property AbsoluteEntityCell Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll AbsoluteEntityCell public AbsoluteEntityCell AbsoluteEntityCell { get; } Property Value AbsoluteEntityCell"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.AllowedTypes.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.AllowedTypes.html",
    "title": "Property AllowedTypes | Nitrox",
    "keywords": "Property AllowedTypes Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll AllowedTypes public List<string> AllowedTypes { get; } Property Value List<string>"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.BiomeType.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.BiomeType.html",
    "title": "Property BiomeType | Nitrox",
    "keywords": "Property BiomeType Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll BiomeType public string BiomeType { get; } Property Value string"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.CanSpawnCreature.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.CanSpawnCreature.html",
    "title": "Property CanSpawnCreature | Nitrox",
    "keywords": "Property CanSpawnCreature Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll CanSpawnCreature public bool CanSpawnCreature { get; } Property Value bool"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.Children.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.Children.html",
    "title": "Field Children | Nitrox",
    "keywords": "Field Children Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll public readonly List<EntitySpawnPoint> Children Returns List<EntitySpawnPoint>"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.ClassId.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll ClassId public string ClassId { get; } Property Value string"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.Density.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.Density.html",
    "title": "Property Density | Nitrox",
    "keywords": "Property Density Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll Density public float Density { get; } Property Value float"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.LocalPosition.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.LocalPosition.html",
    "title": "Field LocalPosition | Nitrox",
    "keywords": "Field LocalPosition Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll public NitroxVector3 LocalPosition Returns NitroxVector3"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.LocalRotation.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.LocalRotation.html",
    "title": "Field LocalRotation | Nitrox",
    "keywords": "Field LocalRotation Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll public NitroxQuaternion LocalRotation Returns NitroxQuaternion"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.Parent.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.Parent.html",
    "title": "Property Parent | Nitrox",
    "keywords": "Property Parent Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll Parent public EntitySpawnPoint Parent { get; set; } Property Value EntitySpawnPoint"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.Scale.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.Scale.html",
    "title": "Property Scale | Nitrox",
    "keywords": "Property Scale Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll Scale public NitroxVector3 Scale { get; } Property Value NitroxVector3"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.ToString.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPoint.html",
    "title": "Class EntitySpawnPoint | Nitrox",
    "keywords": "Class EntitySpawnPoint Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll public class EntitySpawnPoint Inheritance object EntitySpawnPoint Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntitySpawnPoint(AbsoluteEntityCell, NitroxVector3, NitroxQuaternion, NitroxVector3, string) EntitySpawnPoint(AbsoluteEntityCell, NitroxVector3, NitroxQuaternion, List<string>, float, string) Fields Children LocalPosition LocalRotation Properties AbsoluteEntityCell AllowedTypes BiomeType CanSpawnCreature ClassId Density Parent Scale Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPointFactory.From.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPointFactory.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll From(AbsoluteEntityCell, NitroxTransform, GameObject) public abstract List<EntitySpawnPoint> From(AbsoluteEntityCell absoluteEntityCell, NitroxTransform transform, GameObject gameObject) Parameters absoluteEntityCell AbsoluteEntityCell transform NitroxTransform gameObject GameObject Returns List<EntitySpawnPoint>"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPointFactory.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.EntitySpawnPointFactory.html",
    "title": "Class EntitySpawnPointFactory | Nitrox",
    "keywords": "Class EntitySpawnPointFactory Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll public abstract class EntitySpawnPointFactory Inheritance object EntitySpawnPointFactory Derived SubnauticaEntitySpawnPointFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods From(AbsoluteEntityCell, NitroxTransform, GameObject)"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.IEntityBootstrapper.Prepare.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.IEntityBootstrapper.Prepare.html",
    "title": "Method Prepare | Nitrox",
    "keywords": "Method Prepare Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll Prepare(WorldEntity, DeterministicGenerator) void Prepare(WorldEntity spawnedEntity, DeterministicGenerator idGenerator) Parameters spawnedEntity WorldEntity idGenerator DeterministicGenerator"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.IEntityBootstrapper.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.IEntityBootstrapper.html",
    "title": "Interface IEntityBootstrapper | Nitrox",
    "keywords": "Interface IEntityBootstrapper Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll public interface IEntityBootstrapper Methods Prepare(WorldEntity, DeterministicGenerator)"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.IEntitySpawner.LoadUnspawnedEntities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.IEntitySpawner.LoadUnspawnedEntities.html",
    "title": "Method LoadUnspawnedEntities | Nitrox",
    "keywords": "Method LoadUnspawnedEntities Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll LoadUnspawnedEntities(NitroxInt3, bool) List<Entity> LoadUnspawnedEntities(NitroxInt3 batchId, bool fullCacheCreation = false) Parameters batchId NitroxInt3 fullCacheCreation bool Returns List<Entity>"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.IEntitySpawner.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.IEntitySpawner.html",
    "title": "Interface IEntitySpawner | Nitrox",
    "keywords": "Interface IEntitySpawner Namespace NitroxServer.GameLogic.Entities.Spawning Assembly NitroxServer.dll public interface IEntitySpawner Methods LoadUnspawnedEntities(NitroxInt3, bool)"
  },
  "api/NitroxServer.GameLogic.Entities.Spawning.html": {
    "href": "api/NitroxServer.GameLogic.Entities.Spawning.html",
    "title": "Namespace NitroxServer.GameLogic.Entities.Spawning | Nitrox",
    "keywords": "Namespace NitroxServer.GameLogic.Entities.Spawning Classes BatchEntitySpawner EntitySpawnPoint EntitySpawnPointFactory Interfaces IEntityBootstrapper IEntitySpawner"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.-ctor.html",
    "title": "Constructor WorldEntityManager | Nitrox",
    "keywords": "Constructor WorldEntityManager Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll WorldEntityManager(EntityRegistry, BatchEntitySpawner) public WorldEntityManager(EntityRegistry entityRegistry, BatchEntitySpawner batchEntitySpawner) Parameters entityRegistry EntityRegistry batchEntitySpawner BatchEntitySpawner"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.AddGlobalRootEntity.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.AddGlobalRootEntity.html",
    "title": "Method AddGlobalRootEntity | Nitrox",
    "keywords": "Method AddGlobalRootEntity Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll AddGlobalRootEntity(GlobalRootEntity, bool) public void AddGlobalRootEntity(GlobalRootEntity entity, bool addToRegistry = true) Parameters entity GlobalRootEntity addToRegistry bool"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.GetEntities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.GetEntities.html",
    "title": "Method GetEntities | Nitrox",
    "keywords": "Method GetEntities Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll GetEntities(NitroxInt3) public List<WorldEntity> GetEntities(NitroxInt3 batchId) Parameters batchId NitroxInt3 Returns List<WorldEntity> GetEntities(AbsoluteEntityCell) public List<WorldEntity> GetEntities(AbsoluteEntityCell cellId) Parameters cellId AbsoluteEntityCell Returns List<WorldEntity>"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.GetGlobalRootEntities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.GetGlobalRootEntities.html",
    "title": "Method GetGlobalRootEntities | Nitrox",
    "keywords": "Method GetGlobalRootEntities Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll GetGlobalRootEntities(bool) public List<GlobalRootEntity> GetGlobalRootEntities(bool rootOnly = false) Parameters rootOnly bool Returns List<GlobalRootEntity> GetGlobalRootEntities<T>() public List<T> GetGlobalRootEntities<T>() where T : GlobalRootEntity Returns List<T> Type Parameters T"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.IsBatchSpawned.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.IsBatchSpawned.html",
    "title": "Method IsBatchSpawned | Nitrox",
    "keywords": "Method IsBatchSpawned Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll IsBatchSpawned(NitroxInt3) public bool IsBatchSpawned(NitroxInt3 batchId) Parameters batchId NitroxInt3 Returns bool"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.LoadAllUnspawnedEntities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.LoadAllUnspawnedEntities.html",
    "title": "Method LoadAllUnspawnedEntities | Nitrox",
    "keywords": "Method LoadAllUnspawnedEntities Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll LoadAllUnspawnedEntities(CancellationToken) public void LoadAllUnspawnedEntities(CancellationToken token) Parameters token CancellationToken"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.LoadUnspawnedEntities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.LoadUnspawnedEntities.html",
    "title": "Method LoadUnspawnedEntities | Nitrox",
    "keywords": "Method LoadUnspawnedEntities Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll LoadUnspawnedEntities(NitroxInt3, bool) public int LoadUnspawnedEntities(NitroxInt3 batchId, bool suppressLogs) Parameters batchId NitroxInt3 suppressLogs bool Returns int"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.RemoveGlobalRootEntity.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.RemoveGlobalRootEntity.html",
    "title": "Method RemoveGlobalRootEntity | Nitrox",
    "keywords": "Method RemoveGlobalRootEntity Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll RemoveGlobalRootEntity(NitroxId, bool) public Optional<Entity> RemoveGlobalRootEntity(NitroxId entityId, bool removeFromRegistry = true) Parameters entityId NitroxId removeFromRegistry bool Returns Optional<Entity>"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.StopTrackingEntity.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.StopTrackingEntity.html",
    "title": "Method StopTrackingEntity | Nitrox",
    "keywords": "Method StopTrackingEntity Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll StopTrackingEntity(WorldEntity) public void StopTrackingEntity(WorldEntity entity) Parameters entity WorldEntity"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.TrackEntityInTheWorld.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.TrackEntityInTheWorld.html",
    "title": "Method TrackEntityInTheWorld | Nitrox",
    "keywords": "Method TrackEntityInTheWorld Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll TrackEntityInTheWorld(WorldEntity) public void TrackEntityInTheWorld(WorldEntity entity) Parameters entity WorldEntity"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.TryDestroyEntity.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.TryDestroyEntity.html",
    "title": "Method TryDestroyEntity | Nitrox",
    "keywords": "Method TryDestroyEntity Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll TryDestroyEntity(NitroxId, out Optional<Entity>) public bool TryDestroyEntity(NitroxId entityId, out Optional<Entity> entity) Parameters entityId NitroxId entity Optional<Entity> Returns bool"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.UpdateEntityPosition.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.UpdateEntityPosition.html",
    "title": "Method UpdateEntityPosition | Nitrox",
    "keywords": "Method UpdateEntityPosition Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll UpdateEntityPosition(NitroxId, NitroxVector3, NitroxQuaternion) public Optional<AbsoluteEntityCell> UpdateEntityPosition(NitroxId id, NitroxVector3 position, NitroxQuaternion rotation) Parameters id NitroxId position NitroxVector3 rotation NitroxQuaternion Returns Optional<AbsoluteEntityCell>"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.UpdateGlobalRootEntity.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.UpdateGlobalRootEntity.html",
    "title": "Method UpdateGlobalRootEntity | Nitrox",
    "keywords": "Method UpdateGlobalRootEntity Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll UpdateGlobalRootEntity(GlobalRootEntity) To avoid risking not having the same entity in globalRootEntitiesById and in EntityRegistry, we update both at the same time. public void UpdateGlobalRootEntity(GlobalRootEntity entity) Parameters entity GlobalRootEntity"
  },
  "api/NitroxServer.GameLogic.Entities.WorldEntityManager.html": {
    "href": "api/NitroxServer.GameLogic.Entities.WorldEntityManager.html",
    "title": "Class WorldEntityManager | Nitrox",
    "keywords": "Class WorldEntityManager Namespace NitroxServer.GameLogic.Entities Assembly NitroxServer.dll public class WorldEntityManager Inheritance object WorldEntityManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WorldEntityManager(EntityRegistry, BatchEntitySpawner) Methods AddGlobalRootEntity(GlobalRootEntity, bool) GetEntities(AbsoluteEntityCell) GetEntities(NitroxInt3) GetGlobalRootEntities(bool) GetGlobalRootEntities<T>() IsBatchSpawned(NitroxInt3) LoadAllUnspawnedEntities(CancellationToken) LoadUnspawnedEntities(NitroxInt3, bool) RemoveGlobalRootEntity(NitroxId, bool) StopTrackingEntity(WorldEntity) TrackEntityInTheWorld(WorldEntity) TryDestroyEntity(NitroxId, out Optional<Entity>) UpdateEntityPosition(NitroxId, NitroxVector3, NitroxQuaternion) UpdateGlobalRootEntity(GlobalRootEntity) To avoid risking not having the same entity in globalRootEntitiesById and in EntityRegistry, we update both at the same time."
  },
  "api/NitroxServer.GameLogic.Entities.html": {
    "href": "api/NitroxServer.GameLogic.Entities.html",
    "title": "Namespace NitroxServer.GameLogic.Entities | Nitrox",
    "keywords": "Namespace NitroxServer.GameLogic.Entities Namespaces NitroxServer.GameLogic.Entities.Spawning Classes EntityData EntityRegistry EntitySimulation GlobalRootData NitroxEntitySlot WorldEntityManager"
  },
  "api/NitroxServer.GameLogic.EscapePodManager.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.EscapePodManager.-ctor.html",
    "title": "Constructor EscapePodManager | Nitrox",
    "keywords": "Constructor EscapePodManager Namespace NitroxServer.GameLogic Assembly NitroxServer.dll EscapePodManager(EntityRegistry, RandomStartGenerator, string) public EscapePodManager(EntityRegistry entityRegistry, RandomStartGenerator randomStart, string seed) Parameters entityRegistry EntityRegistry randomStart RandomStartGenerator seed string"
  },
  "api/NitroxServer.GameLogic.EscapePodManager.AssignPlayerToEscapePod.html": {
    "href": "api/NitroxServer.GameLogic.EscapePodManager.AssignPlayerToEscapePod.html",
    "title": "Method AssignPlayerToEscapePod | Nitrox",
    "keywords": "Method AssignPlayerToEscapePod Namespace NitroxServer.GameLogic Assembly NitroxServer.dll AssignPlayerToEscapePod(ushort, out Optional<EscapePodWorldEntity>) public NitroxId AssignPlayerToEscapePod(ushort playerId, out Optional<EscapePodWorldEntity> newlyCreatedPod) Parameters playerId ushort newlyCreatedPod Optional<EscapePodWorldEntity> Returns NitroxId"
  },
  "api/NitroxServer.GameLogic.EscapePodManager.ESCAPE_POD_X_OFFSET.html": {
    "href": "api/NitroxServer.GameLogic.EscapePodManager.ESCAPE_POD_X_OFFSET.html",
    "title": "Field ESCAPE_POD_X_OFFSET | Nitrox",
    "keywords": "Field ESCAPE_POD_X_OFFSET Namespace NitroxServer.GameLogic Assembly NitroxServer.dll public const int ESCAPE_POD_X_OFFSET = 40 Returns int"
  },
  "api/NitroxServer.GameLogic.EscapePodManager.PLAYERS_PER_ESCAPEPOD.html": {
    "href": "api/NitroxServer.GameLogic.EscapePodManager.PLAYERS_PER_ESCAPEPOD.html",
    "title": "Field PLAYERS_PER_ESCAPEPOD | Nitrox",
    "keywords": "Field PLAYERS_PER_ESCAPEPOD Namespace NitroxServer.GameLogic Assembly NitroxServer.dll public const int PLAYERS_PER_ESCAPEPOD = 50 Returns int"
  },
  "api/NitroxServer.GameLogic.EscapePodManager.html": {
    "href": "api/NitroxServer.GameLogic.EscapePodManager.html",
    "title": "Class EscapePodManager | Nitrox",
    "keywords": "Class EscapePodManager Namespace NitroxServer.GameLogic Assembly NitroxServer.dll public class EscapePodManager Inheritance object EscapePodManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EscapePodManager(EntityRegistry, RandomStartGenerator, string) Fields ESCAPE_POD_X_OFFSET PLAYERS_PER_ESCAPEPOD Methods AssignPlayerToEscapePod(ushort, out Optional<EscapePodWorldEntity>)"
  },
  "api/NitroxServer.GameLogic.PlayerManager.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.-ctor.html",
    "title": "Constructor PlayerManager | Nitrox",
    "keywords": "Constructor PlayerManager Namespace NitroxServer.GameLogic Assembly NitroxServer.dll PlayerManager(List<Player>, ServerConfig) public PlayerManager(List<Player> players, ServerConfig serverConfig) Parameters players List<Player> serverConfig ServerConfig"
  },
  "api/NitroxServer.GameLogic.PlayerManager.FinishProcessingReservation.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.FinishProcessingReservation.html",
    "title": "Method FinishProcessingReservation | Nitrox",
    "keywords": "Method FinishProcessingReservation Namespace NitroxServer.GameLogic Assembly NitroxServer.dll FinishProcessingReservation(Player) public void FinishProcessingReservation(Player player = null) Parameters player Player"
  },
  "api/NitroxServer.GameLogic.PlayerManager.GetAllPlayers.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.GetAllPlayers.html",
    "title": "Method GetAllPlayers | Nitrox",
    "keywords": "Method GetAllPlayers Namespace NitroxServer.GameLogic Assembly NitroxServer.dll GetAllPlayers() public IEnumerable<Player> GetAllPlayers() Returns IEnumerable<Player>"
  },
  "api/NitroxServer.GameLogic.PlayerManager.GetConnectedPlayers.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.GetConnectedPlayers.html",
    "title": "Method GetConnectedPlayers | Nitrox",
    "keywords": "Method GetConnectedPlayers Namespace NitroxServer.GameLogic Assembly NitroxServer.dll GetConnectedPlayers() public List<Player> GetConnectedPlayers() Returns List<Player>"
  },
  "api/NitroxServer.GameLogic.PlayerManager.GetPlayer.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.GetPlayer.html",
    "title": "Method GetPlayer | Nitrox",
    "keywords": "Method GetPlayer Namespace NitroxServer.GameLogic Assembly NitroxServer.dll GetPlayer(NitroxConnection) public Player GetPlayer(NitroxConnection connection) Parameters connection NitroxConnection Returns Player GetPlayer(string) public Optional<Player> GetPlayer(string playerName) Parameters playerName string Returns Optional<Player>"
  },
  "api/NitroxServer.GameLogic.PlayerManager.NonPlayerDisconnected.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.NonPlayerDisconnected.html",
    "title": "Method NonPlayerDisconnected | Nitrox",
    "keywords": "Method NonPlayerDisconnected Namespace NitroxServer.GameLogic Assembly NitroxServer.dll NonPlayerDisconnected(NitroxConnection) public void NonPlayerDisconnected(NitroxConnection connection) Parameters connection NitroxConnection"
  },
  "api/NitroxServer.GameLogic.PlayerManager.PlayerConnected.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.PlayerConnected.html",
    "title": "Method PlayerConnected | Nitrox",
    "keywords": "Method PlayerConnected Namespace NitroxServer.GameLogic Assembly NitroxServer.dll PlayerConnected(NitroxConnection, string, out bool) public Player PlayerConnected(NitroxConnection connection, string reservationKey, out bool wasBrandNewPlayer) Parameters connection NitroxConnection reservationKey string wasBrandNewPlayer bool Returns Player"
  },
  "api/NitroxServer.GameLogic.PlayerManager.PlayerDisconnected.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.PlayerDisconnected.html",
    "title": "Method PlayerDisconnected | Nitrox",
    "keywords": "Method PlayerDisconnected Namespace NitroxServer.GameLogic Assembly NitroxServer.dll PlayerDisconnected(NitroxConnection) public void PlayerDisconnected(NitroxConnection connection) Parameters connection NitroxConnection"
  },
  "api/NitroxServer.GameLogic.PlayerManager.ReservePlayerContext.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.ReservePlayerContext.html",
    "title": "Method ReservePlayerContext | Nitrox",
    "keywords": "Method ReservePlayerContext Namespace NitroxServer.GameLogic Assembly NitroxServer.dll ReservePlayerContext(NitroxConnection, PlayerSettings, AuthenticationContext, string) public MultiplayerSessionReservation ReservePlayerContext(NitroxConnection connection, PlayerSettings playerSettings, AuthenticationContext authenticationContext, string correlationId) Parameters connection NitroxConnection playerSettings PlayerSettings authenticationContext AuthenticationContext correlationId string Returns MultiplayerSessionReservation"
  },
  "api/NitroxServer.GameLogic.PlayerManager.SendPacketToAllPlayers.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.SendPacketToAllPlayers.html",
    "title": "Method SendPacketToAllPlayers | Nitrox",
    "keywords": "Method SendPacketToAllPlayers Namespace NitroxServer.GameLogic Assembly NitroxServer.dll SendPacketToAllPlayers(Packet) public void SendPacketToAllPlayers(Packet packet) Parameters packet Packet"
  },
  "api/NitroxServer.GameLogic.PlayerManager.SendPacketToOtherPlayers.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.SendPacketToOtherPlayers.html",
    "title": "Method SendPacketToOtherPlayers | Nitrox",
    "keywords": "Method SendPacketToOtherPlayers Namespace NitroxServer.GameLogic Assembly NitroxServer.dll SendPacketToOtherPlayers(Packet, Player) public void SendPacketToOtherPlayers(Packet packet, Player sendingPlayer) Parameters packet Packet sendingPlayer Player"
  },
  "api/NitroxServer.GameLogic.PlayerManager.TryGetPlayerByName.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.TryGetPlayerByName.html",
    "title": "Method TryGetPlayerByName | Nitrox",
    "keywords": "Method TryGetPlayerByName Namespace NitroxServer.GameLogic Assembly NitroxServer.dll TryGetPlayerByName(string, out Player) public bool TryGetPlayerByName(string playerName, out Player foundPlayer) Parameters playerName string foundPlayer Player Returns bool"
  },
  "api/NitroxServer.GameLogic.PlayerManager.html": {
    "href": "api/NitroxServer.GameLogic.PlayerManager.html",
    "title": "Class PlayerManager | Nitrox",
    "keywords": "Class PlayerManager Namespace NitroxServer.GameLogic Assembly NitroxServer.dll public class PlayerManager Inheritance object PlayerManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerManager(List<Player>, ServerConfig) Methods FinishProcessingReservation(Player) GetAllPlayers() GetConnectedPlayers() GetPlayer(NitroxConnection) GetPlayer(string) NonPlayerDisconnected(NitroxConnection) PlayerConnected(NitroxConnection, string, out bool) PlayerDisconnected(NitroxConnection) ReservePlayerContext(NitroxConnection, PlayerSettings, AuthenticationContext, string) SendPacketToAllPlayers(Packet) SendPacketToOtherPlayers(Packet, Player) TryGetPlayerByName(string, out Player)"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.CurrentStats.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.CurrentStats.html",
    "title": "Property CurrentStats | Nitrox",
    "keywords": "Property CurrentStats Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll CurrentStats [DataMember(Order = 9)] public PlayerStatsData CurrentStats { get; set; } Property Value PlayerStatsData"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.EquippedItems.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.EquippedItems.html",
    "title": "Property EquippedItems | Nitrox",
    "keywords": "Property EquippedItems Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll EquippedItems [DataMember(Order = 4)] public List<EquippedItemData> EquippedItems { get; set; } Property Value List<EquippedItemData>"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.FromPlayer.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.FromPlayer.html",
    "title": "Method FromPlayer | Nitrox",
    "keywords": "Method FromPlayer Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll FromPlayer(Player) public static PersistedPlayerData FromPlayer(Player player) Parameters player Player Returns PersistedPlayerData"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.GameMode.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.GameMode.html",
    "title": "Property GameMode | Nitrox",
    "keywords": "Property GameMode Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll GameMode [DataMember(Order = 10)] public NitroxGameMode GameMode { get; set; } Property Value NitroxGameMode"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.Id.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll Id [DataMember(Order = 6)] public ushort Id { get; set; } Property Value ushort"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.IsPermaDeath.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.IsPermaDeath.html",
    "title": "Property IsPermaDeath | Nitrox",
    "keywords": "Property IsPermaDeath Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll IsPermaDeath [DataMember(Order = 14)] public bool IsPermaDeath { get; set; } Property Value bool"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.Modules.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.Modules.html",
    "title": "Property Modules | Nitrox",
    "keywords": "Property Modules Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll Modules [DataMember(Order = 5)] public List<EquippedItemData> Modules { get; set; } Property Value List<EquippedItemData>"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.Name.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll Name [DataMember(Order = 1)] public string Name { get; set; } Property Value string"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.NitroxId.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.NitroxId.html",
    "title": "Property NitroxId | Nitrox",
    "keywords": "Property NitroxId Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll NitroxId [DataMember(Order = 13)] public NitroxId NitroxId { get; set; } Property Value NitroxId"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.Permissions.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.Permissions.html",
    "title": "Property Permissions | Nitrox",
    "keywords": "Property Permissions Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll Permissions [DataMember(Order = 12)] public Perms Permissions { get; set; } Property Value Perms"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.PersonalCompletedGoalsWithTimestamp.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.PersonalCompletedGoalsWithTimestamp.html",
    "title": "Property PersonalCompletedGoalsWithTimestamp | Nitrox",
    "keywords": "Property PersonalCompletedGoalsWithTimestamp Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll PersonalCompletedGoalsWithTimestamp Those goals are unlocked individually (e.g. opening PDA, eating, picking up a fire extinguisher for the first time) [DataMember(Order = 15)] public Dictionary<string, float> PersonalCompletedGoalsWithTimestamp { get; set; } Property Value Dictionary<string, float>"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.PlayerPreferences.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.PlayerPreferences.html",
    "title": "Property PlayerPreferences | Nitrox",
    "keywords": "Property PlayerPreferences Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll PlayerPreferences [DataMember(Order = 16)] public SubnauticaPlayerPreferences PlayerPreferences { get; set; } Property Value SubnauticaPlayerPreferences"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.QuickSlotsBindingIds.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.QuickSlotsBindingIds.html",
    "title": "Property QuickSlotsBindingIds | Nitrox",
    "keywords": "Property QuickSlotsBindingIds Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll QuickSlotsBindingIds [DataMember(Order = 3)] public Optional<NitroxId>[] QuickSlotsBindingIds { get; set; } Property Value Optional<NitroxId>[]"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.SpawnPosition.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.SpawnPosition.html",
    "title": "Property SpawnPosition | Nitrox",
    "keywords": "Property SpawnPosition Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll SpawnPosition [DataMember(Order = 7)] public NitroxVector3 SpawnPosition { get; set; } Property Value NitroxVector3"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.SpawnRotation.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.SpawnRotation.html",
    "title": "Property SpawnRotation | Nitrox",
    "keywords": "Property SpawnRotation Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll SpawnRotation [DataMember(Order = 8)] public NitroxQuaternion SpawnRotation { get; set; } Property Value NitroxQuaternion"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.SubRootId.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.SubRootId.html",
    "title": "Property SubRootId | Nitrox",
    "keywords": "Property SubRootId Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll SubRootId [DataMember(Order = 11)] public NitroxId SubRootId { get; set; } Property Value NitroxId"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.ToPlayer.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.ToPlayer.html",
    "title": "Method ToPlayer | Nitrox",
    "keywords": "Method ToPlayer Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll ToPlayer() public Player ToPlayer() Returns Player"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.UsedItems.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.UsedItems.html",
    "title": "Property UsedItems | Nitrox",
    "keywords": "Property UsedItems Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll UsedItems [DataMember(Order = 2)] public List<NitroxTechType> UsedItems { get; set; } Property Value List<NitroxTechType>"
  },
  "api/NitroxServer.GameLogic.Players.PersistedPlayerData.html": {
    "href": "api/NitroxServer.GameLogic.Players.PersistedPlayerData.html",
    "title": "Class PersistedPlayerData | Nitrox",
    "keywords": "Class PersistedPlayerData Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll [DataContract] public class PersistedPlayerData Inheritance object PersistedPlayerData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CurrentStats EquippedItems GameMode Id IsPermaDeath Modules Name NitroxId Permissions PersonalCompletedGoalsWithTimestamp Those goals are unlocked individually (e.g. opening PDA, eating, picking up a fire extinguisher for the first time) PlayerPreferences QuickSlotsBindingIds SpawnPosition SpawnRotation SubRootId UsedItems Methods FromPlayer(Player) ToPlayer()"
  },
  "api/NitroxServer.GameLogic.Players.PlayerData.From.html": {
    "href": "api/NitroxServer.GameLogic.Players.PlayerData.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll From(IEnumerable<Player>) public static PlayerData From(IEnumerable<Player> players) Parameters players IEnumerable<Player> Returns PlayerData"
  },
  "api/NitroxServer.GameLogic.Players.PlayerData.GetPlayers.html": {
    "href": "api/NitroxServer.GameLogic.Players.PlayerData.GetPlayers.html",
    "title": "Method GetPlayers | Nitrox",
    "keywords": "Method GetPlayers Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll GetPlayers() public List<Player> GetPlayers() Returns List<Player>"
  },
  "api/NitroxServer.GameLogic.Players.PlayerData.Players.html": {
    "href": "api/NitroxServer.GameLogic.Players.PlayerData.Players.html",
    "title": "Field Players | Nitrox",
    "keywords": "Field Players Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll [DataMember(Order = 1)] public List<PersistedPlayerData> Players Returns List<PersistedPlayerData>"
  },
  "api/NitroxServer.GameLogic.Players.PlayerData.html": {
    "href": "api/NitroxServer.GameLogic.Players.PlayerData.html",
    "title": "Class PlayerData | Nitrox",
    "keywords": "Class PlayerData Namespace NitroxServer.GameLogic.Players Assembly NitroxServer.dll [DataContract] public class PlayerData Inheritance object PlayerData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields Players Methods From(IEnumerable<Player>) GetPlayers()"
  },
  "api/NitroxServer.GameLogic.Players.html": {
    "href": "api/NitroxServer.GameLogic.Players.html",
    "title": "Namespace NitroxServer.GameLogic.Players | Nitrox",
    "keywords": "Namespace NitroxServer.GameLogic.Players Classes PersistedPlayerData PlayerData"
  },
  "api/NitroxServer.GameLogic.ScheduleKeeper.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.ScheduleKeeper.-ctor.html",
    "title": "Constructor ScheduleKeeper | Nitrox",
    "keywords": "Constructor ScheduleKeeper Namespace NitroxServer.GameLogic Assembly NitroxServer.dll ScheduleKeeper(PDAStateData, StoryGoalData, TimeKeeper, PlayerManager) public ScheduleKeeper(PDAStateData pdaStateData, StoryGoalData storyGoalData, TimeKeeper timeKeeper, PlayerManager playerManager) Parameters pdaStateData PDAStateData storyGoalData StoryGoalData timeKeeper TimeKeeper playerManager PlayerManager"
  },
  "api/NitroxServer.GameLogic.ScheduleKeeper.ContainsScheduledGoal.html": {
    "href": "api/NitroxServer.GameLogic.ScheduleKeeper.ContainsScheduledGoal.html",
    "title": "Method ContainsScheduledGoal | Nitrox",
    "keywords": "Method ContainsScheduledGoal Namespace NitroxServer.GameLogic Assembly NitroxServer.dll ContainsScheduledGoal(string) public bool ContainsScheduledGoal(string goalKey) Parameters goalKey string Returns bool"
  },
  "api/NitroxServer.GameLogic.ScheduleKeeper.GetScheduledGoals.html": {
    "href": "api/NitroxServer.GameLogic.ScheduleKeeper.GetScheduledGoals.html",
    "title": "Method GetScheduledGoals | Nitrox",
    "keywords": "Method GetScheduledGoals Namespace NitroxServer.GameLogic Assembly NitroxServer.dll GetScheduledGoals() public List<NitroxScheduledGoal> GetScheduledGoals() Returns List<NitroxScheduledGoal>"
  },
  "api/NitroxServer.GameLogic.ScheduleKeeper.IsAlreadyRegistered.html": {
    "href": "api/NitroxServer.GameLogic.ScheduleKeeper.IsAlreadyRegistered.html",
    "title": "Method IsAlreadyRegistered | Nitrox",
    "keywords": "Method IsAlreadyRegistered Namespace NitroxServer.GameLogic Assembly NitroxServer.dll IsAlreadyRegistered(string) public bool IsAlreadyRegistered(string goalKey) Parameters goalKey string Returns bool"
  },
  "api/NitroxServer.GameLogic.ScheduleKeeper.ScheduleGoal.html": {
    "href": "api/NitroxServer.GameLogic.ScheduleKeeper.ScheduleGoal.html",
    "title": "Method ScheduleGoal | Nitrox",
    "keywords": "Method ScheduleGoal Namespace NitroxServer.GameLogic Assembly NitroxServer.dll ScheduleGoal(NitroxScheduledGoal) public void ScheduleGoal(NitroxScheduledGoal scheduledGoal) Parameters scheduledGoal NitroxScheduledGoal"
  },
  "api/NitroxServer.GameLogic.ScheduleKeeper.UnScheduleGoal.html": {
    "href": "api/NitroxServer.GameLogic.ScheduleKeeper.UnScheduleGoal.html",
    "title": "Method UnScheduleGoal | Nitrox",
    "keywords": "Method UnScheduleGoal Namespace NitroxServer.GameLogic Assembly NitroxServer.dll UnScheduleGoal(string, bool) public void UnScheduleGoal(string goalKey, bool becauseOfTime = false) Parameters goalKey string becauseOfTime bool When the server starts, it happens that there are still some goals that were supposed to happen but didn't, so to make sure that they happen on at least one client, we postpone its execution"
  },
  "api/NitroxServer.GameLogic.ScheduleKeeper.html": {
    "href": "api/NitroxServer.GameLogic.ScheduleKeeper.html",
    "title": "Class ScheduleKeeper | Nitrox",
    "keywords": "Class ScheduleKeeper Namespace NitroxServer.GameLogic Assembly NitroxServer.dll public class ScheduleKeeper Inheritance object ScheduleKeeper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ScheduleKeeper(PDAStateData, StoryGoalData, TimeKeeper, PlayerManager) Methods ContainsScheduledGoal(string) GetScheduledGoals() IsAlreadyRegistered(string) ScheduleGoal(NitroxScheduledGoal) UnScheduleGoal(string, bool)"
  },
  "api/NitroxServer.GameLogic.SimulationOwnershipData.GetPlayerForLock.html": {
    "href": "api/NitroxServer.GameLogic.SimulationOwnershipData.GetPlayerForLock.html",
    "title": "Method GetPlayerForLock | Nitrox",
    "keywords": "Method GetPlayerForLock Namespace NitroxServer.GameLogic Assembly NitroxServer.dll GetPlayerForLock(NitroxId) public Player GetPlayerForLock(NitroxId id) Parameters id NitroxId Returns Player"
  },
  "api/NitroxServer.GameLogic.SimulationOwnershipData.RevokeAllForOwner.html": {
    "href": "api/NitroxServer.GameLogic.SimulationOwnershipData.RevokeAllForOwner.html",
    "title": "Method RevokeAllForOwner | Nitrox",
    "keywords": "Method RevokeAllForOwner Namespace NitroxServer.GameLogic Assembly NitroxServer.dll RevokeAllForOwner(Player) public List<NitroxId> RevokeAllForOwner(Player player) Parameters player Player Returns List<NitroxId>"
  },
  "api/NitroxServer.GameLogic.SimulationOwnershipData.RevokeIfOwner.html": {
    "href": "api/NitroxServer.GameLogic.SimulationOwnershipData.RevokeIfOwner.html",
    "title": "Method RevokeIfOwner | Nitrox",
    "keywords": "Method RevokeIfOwner Namespace NitroxServer.GameLogic Assembly NitroxServer.dll RevokeIfOwner(NitroxId, Player) public bool RevokeIfOwner(NitroxId id, Player player) Parameters id NitroxId player Player Returns bool"
  },
  "api/NitroxServer.GameLogic.SimulationOwnershipData.RevokeOwnerOfId.html": {
    "href": "api/NitroxServer.GameLogic.SimulationOwnershipData.RevokeOwnerOfId.html",
    "title": "Method RevokeOwnerOfId | Nitrox",
    "keywords": "Method RevokeOwnerOfId Namespace NitroxServer.GameLogic Assembly NitroxServer.dll RevokeOwnerOfId(NitroxId) public bool RevokeOwnerOfId(NitroxId id) Parameters id NitroxId Returns bool"
  },
  "api/NitroxServer.GameLogic.SimulationOwnershipData.TryToAcquire.html": {
    "href": "api/NitroxServer.GameLogic.SimulationOwnershipData.TryToAcquire.html",
    "title": "Method TryToAcquire | Nitrox",
    "keywords": "Method TryToAcquire Namespace NitroxServer.GameLogic Assembly NitroxServer.dll TryToAcquire(NitroxId, Player, SimulationLockType) public bool TryToAcquire(NitroxId id, Player player, SimulationLockType requestedLock) Parameters id NitroxId player Player requestedLock SimulationLockType Returns bool"
  },
  "api/NitroxServer.GameLogic.SimulationOwnershipData.html": {
    "href": "api/NitroxServer.GameLogic.SimulationOwnershipData.html",
    "title": "Class SimulationOwnershipData | Nitrox",
    "keywords": "Class SimulationOwnershipData Namespace NitroxServer.GameLogic Assembly NitroxServer.dll public class SimulationOwnershipData Inheritance object SimulationOwnershipData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetPlayerForLock(NitroxId) RevokeAllForOwner(Player) RevokeIfOwner(NitroxId, Player) RevokeOwnerOfId(NitroxId) TryToAcquire(NitroxId, Player, SimulationLockType)"
  },
  "api/NitroxServer.GameLogic.StoryManager.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.-ctor.html",
    "title": "Constructor StoryManager | Nitrox",
    "keywords": "Constructor StoryManager Namespace NitroxServer.GameLogic Assembly NitroxServer.dll StoryManager(PlayerManager, PDAStateData, StoryGoalData, TimeKeeper, string, double?, double?) public StoryManager(PlayerManager playerManager, PDAStateData pdaStateData, StoryGoalData storyGoalData, TimeKeeper timeKeeper, string seed, double? auroraExplosionTime, double? auroraWarningTime) Parameters playerManager PlayerManager pdaStateData PDAStateData storyGoalData StoryGoalData timeKeeper TimeKeeper seed string auroraExplosionTime double? auroraWarningTime double?"
  },
  "api/NitroxServer.GameLogic.StoryManager.AuroraCountdownTimeMs.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.AuroraCountdownTimeMs.html",
    "title": "Field AuroraCountdownTimeMs | Nitrox",
    "keywords": "Field AuroraCountdownTimeMs Namespace NitroxServer.GameLogic Assembly NitroxServer.dll Time at which the Aurora explosion countdown will start (last warning is sent). public double AuroraCountdownTimeMs Returns double Remarks It is required to calculate the time at which the Aurora warnings will be sent (along with AuroraWarningTimeMs, look into AuroraWarnings.cs and CrashedShipExploder.cs for more information)."
  },
  "api/NitroxServer.GameLogic.StoryManager.AuroraWarningTimeMs.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.AuroraWarningTimeMs.html",
    "title": "Field AuroraWarningTimeMs | Nitrox",
    "keywords": "Field AuroraWarningTimeMs Namespace NitroxServer.GameLogic Assembly NitroxServer.dll Time at which the Aurora Events start (you start receiving warnings). public double AuroraWarningTimeMs Returns double"
  },
  "api/NitroxServer.GameLogic.StoryManager.BroadcastExplodeAurora.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.BroadcastExplodeAurora.html",
    "title": "Method BroadcastExplodeAurora | Nitrox",
    "keywords": "Method BroadcastExplodeAurora Namespace NitroxServer.GameLogic Assembly NitroxServer.dll BroadcastExplodeAurora(bool) public void BroadcastExplodeAurora(bool instantaneous) Parameters instantaneous bool Whether we should make Aurora explode instantly or after a short countdown"
  },
  "api/NitroxServer.GameLogic.StoryManager.BroadcastRestoreAurora.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.BroadcastRestoreAurora.html",
    "title": "Method BroadcastRestoreAurora | Nitrox",
    "keywords": "Method BroadcastRestoreAurora Namespace NitroxServer.GameLogic Assembly NitroxServer.dll BroadcastRestoreAurora() public void BroadcastRestoreAurora()"
  },
  "api/NitroxServer.GameLogic.StoryManager.GetAuroraStateSummary.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.GetAuroraStateSummary.html",
    "title": "Method GetAuroraStateSummary | Nitrox",
    "keywords": "Method GetAuroraStateSummary Namespace NitroxServer.GameLogic Assembly NitroxServer.dll GetAuroraStateSummary() Makes a nice status of the Aurora events progress for the summary command. public string GetAuroraStateSummary() Returns string"
  },
  "api/NitroxServer.GameLogic.StoryManager.GetTimeData.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.GetTimeData.html",
    "title": "Method GetTimeData | Nitrox",
    "keywords": "Method GetTimeData Namespace NitroxServer.GameLogic Assembly NitroxServer.dll GetTimeData() public TimeData GetTimeData() Returns TimeData"
  },
  "api/NitroxServer.GameLogic.StoryManager.MakeAuroraData.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.MakeAuroraData.html",
    "title": "Method MakeAuroraData | Nitrox",
    "keywords": "Method MakeAuroraData Namespace NitroxServer.GameLogic Assembly NitroxServer.dll MakeAuroraData() public AuroraEventData MakeAuroraData() Returns AuroraEventData"
  },
  "api/NitroxServer.GameLogic.StoryManager.StartSunbeamEvent.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.StartSunbeamEvent.html",
    "title": "Method StartSunbeamEvent | Nitrox",
    "keywords": "Method StartSunbeamEvent Namespace NitroxServer.GameLogic Assembly NitroxServer.dll StartSunbeamEvent(string) Clears the already completed sunbeam events to come and broadcasts it to all players along with the rescheduling of the specified sunbeam event. public void StartSunbeamEvent(string sunbeamEventKey) Parameters sunbeamEventKey string"
  },
  "api/NitroxServer.GameLogic.StoryManager.TimeModification.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.TimeModification.html",
    "title": "Enum StoryManager.TimeModification | Nitrox",
    "keywords": "Enum StoryManager.TimeModification Namespace NitroxServer.GameLogic Assembly NitroxServer.dll public enum StoryManager.TimeModification Extension Methods Extensions.GetAttribute<TAttribute>(Enum) Fields DAY = 0 NIGHT = 1 SKIP = 2"
  },
  "api/NitroxServer.GameLogic.StoryManager.html": {
    "href": "api/NitroxServer.GameLogic.StoryManager.html",
    "title": "Class StoryManager | Nitrox",
    "keywords": "Class StoryManager Namespace NitroxServer.GameLogic Assembly NitroxServer.dll Keeps track of time and Aurora-related events. public class StoryManager Inheritance object StoryManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StoryManager(PlayerManager, PDAStateData, StoryGoalData, TimeKeeper, string, double?, double?) Fields AuroraCountdownTimeMs Time at which the Aurora explosion countdown will start (last warning is sent). AuroraWarningTimeMs Time at which the Aurora Events start (you start receiving warnings). Methods BroadcastExplodeAurora(bool) BroadcastRestoreAurora() GetAuroraStateSummary() Makes a nice status of the Aurora events progress for the summary command. GetTimeData() MakeAuroraData() StartSunbeamEvent(string) Clears the already completed sunbeam events to come and broadcasts it to all players along with the rescheduling of the specified sunbeam event."
  },
  "api/NitroxServer.GameLogic.StoryTimingData.AuroraCountdownTime.html": {
    "href": "api/NitroxServer.GameLogic.StoryTimingData.AuroraCountdownTime.html",
    "title": "Property AuroraCountdownTime | Nitrox",
    "keywords": "Property AuroraCountdownTime Namespace NitroxServer.GameLogic Assembly NitroxServer.dll AuroraCountdownTime [DataMember(Order = 2)] public double? AuroraCountdownTime { get; set; } Property Value double?"
  },
  "api/NitroxServer.GameLogic.StoryTimingData.AuroraWarningTime.html": {
    "href": "api/NitroxServer.GameLogic.StoryTimingData.AuroraWarningTime.html",
    "title": "Property AuroraWarningTime | Nitrox",
    "keywords": "Property AuroraWarningTime Namespace NitroxServer.GameLogic Assembly NitroxServer.dll AuroraWarningTime [DataMember(Order = 3)] public double? AuroraWarningTime { get; set; } Property Value double?"
  },
  "api/NitroxServer.GameLogic.StoryTimingData.ElapsedSeconds.html": {
    "href": "api/NitroxServer.GameLogic.StoryTimingData.ElapsedSeconds.html",
    "title": "Property ElapsedSeconds | Nitrox",
    "keywords": "Property ElapsedSeconds Namespace NitroxServer.GameLogic Assembly NitroxServer.dll ElapsedSeconds [DataMember(Order = 1)] public double ElapsedSeconds { get; set; } Property Value double"
  },
  "api/NitroxServer.GameLogic.StoryTimingData.From.html": {
    "href": "api/NitroxServer.GameLogic.StoryTimingData.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxServer.GameLogic Assembly NitroxServer.dll From(StoryManager, TimeKeeper) public static StoryTimingData From(StoryManager storyManager, TimeKeeper timeKeeper) Parameters storyManager StoryManager timeKeeper TimeKeeper Returns StoryTimingData"
  },
  "api/NitroxServer.GameLogic.StoryTimingData.html": {
    "href": "api/NitroxServer.GameLogic.StoryTimingData.html",
    "title": "Class StoryTimingData | Nitrox",
    "keywords": "Class StoryTimingData Namespace NitroxServer.GameLogic Assembly NitroxServer.dll [Serializable] [DataContract] public class StoryTimingData Inheritance object StoryTimingData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties AuroraCountdownTime AuroraWarningTime ElapsedSeconds Methods From(StoryManager, TimeKeeper)"
  },
  "api/NitroxServer.GameLogic.TimeKeeper.-ctor.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.-ctor.html",
    "title": "Constructor TimeKeeper | Nitrox",
    "keywords": "Constructor TimeKeeper Namespace NitroxServer.GameLogic Assembly NitroxServer.dll TimeKeeper(PlayerManager, double) public TimeKeeper(PlayerManager playerManager, double elapsedSeconds) Parameters playerManager PlayerManager elapsedSeconds double"
  },
  "api/NitroxServer.GameLogic.TimeKeeper.ChangeTime.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.ChangeTime.html",
    "title": "Method ChangeTime | Nitrox",
    "keywords": "Method ChangeTime Namespace NitroxServer.GameLogic Assembly NitroxServer.dll ChangeTime(TimeModification) Set current time depending on the current time in the day (replication of SN's system, see DayNightCycle.cs commands for more information). public void ChangeTime(StoryManager.TimeModification type) Parameters type StoryManager.TimeModification Time to which you want to get to."
  },
  "api/NitroxServer.GameLogic.TimeKeeper.Day.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.Day.html",
    "title": "Property Day | Nitrox",
    "keywords": "Property Day Namespace NitroxServer.GameLogic Assembly NitroxServer.dll Day Subnautica's equivalent of days. public int Day { get; } Property Value int Remarks Uses ceiling because days count start at 1 and not 0."
  },
  "api/NitroxServer.GameLogic.TimeKeeper.ElapsedMilliseconds.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.ElapsedMilliseconds.html",
    "title": "Property ElapsedMilliseconds | Nitrox",
    "keywords": "Property ElapsedMilliseconds Namespace NitroxServer.GameLogic Assembly NitroxServer.dll ElapsedMilliseconds Total elapsed time in milliseconds (adding the current stopwatch time with the latest registered time elapsedTimeOutsideStopWatchMs). public double ElapsedMilliseconds { get; } Property Value double"
  },
  "api/NitroxServer.GameLogic.TimeKeeper.ElapsedSeconds.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.ElapsedSeconds.html",
    "title": "Property ElapsedSeconds | Nitrox",
    "keywords": "Property ElapsedSeconds Namespace NitroxServer.GameLogic Assembly NitroxServer.dll ElapsedSeconds Total elapsed time in seconds (converted from ElapsedMilliseconds). public double ElapsedSeconds { get; set; } Property Value double"
  },
  "api/NitroxServer.GameLogic.TimeKeeper.MakeResyncTimer.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.MakeResyncTimer.html",
    "title": "Method MakeResyncTimer | Nitrox",
    "keywords": "Method MakeResyncTimer Namespace NitroxServer.GameLogic Assembly NitroxServer.dll MakeResyncTimer() Creates a timer that periodically sends resync packets to players. public Timer MakeResyncTimer() Returns Timer"
  },
  "api/NitroxServer.GameLogic.TimeKeeper.MakeTimePacket.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.MakeTimePacket.html",
    "title": "Method MakeTimePacket | Nitrox",
    "keywords": "Method MakeTimePacket Namespace NitroxServer.GameLogic Assembly NitroxServer.dll MakeTimePacket() public TimeChange MakeTimePacket() Returns TimeChange"
  },
  "api/NitroxServer.GameLogic.TimeKeeper.ResetCount.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.ResetCount.html",
    "title": "Method ResetCount | Nitrox",
    "keywords": "Method ResetCount Namespace NitroxServer.GameLogic Assembly NitroxServer.dll ResetCount() public void ResetCount()"
  },
  "api/NitroxServer.GameLogic.TimeKeeper.ResyncTimer.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.ResyncTimer.html",
    "title": "Field ResyncTimer | Nitrox",
    "keywords": "Field ResyncTimer Namespace NitroxServer.GameLogic Assembly NitroxServer.dll Timer responsible for periodically sending time resync packets. public Timer ResyncTimer Returns Timer Remarks Is created by MakeResyncTimer()."
  },
  "api/NitroxServer.GameLogic.TimeKeeper.StartCounting.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.StartCounting.html",
    "title": "Method StartCounting | Nitrox",
    "keywords": "Method StartCounting Namespace NitroxServer.GameLogic Assembly NitroxServer.dll StartCounting() public void StartCounting()"
  },
  "api/NitroxServer.GameLogic.TimeKeeper.StopCounting.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.StopCounting.html",
    "title": "Method StopCounting | Nitrox",
    "keywords": "Method StopCounting Namespace NitroxServer.GameLogic Assembly NitroxServer.dll StopCounting() public void StopCounting()"
  },
  "api/NitroxServer.GameLogic.TimeKeeper.html": {
    "href": "api/NitroxServer.GameLogic.TimeKeeper.html",
    "title": "Class TimeKeeper | Nitrox",
    "keywords": "Class TimeKeeper Namespace NitroxServer.GameLogic Assembly NitroxServer.dll public class TimeKeeper Inheritance object TimeKeeper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeKeeper(PlayerManager, double) Fields ResyncTimer Timer responsible for periodically sending time resync packets. Properties Day Subnautica's equivalent of days. ElapsedMilliseconds Total elapsed time in milliseconds (adding the current stopwatch time with the latest registered time elapsedTimeOutsideStopWatchMs). ElapsedSeconds Total elapsed time in seconds (converted from ElapsedMilliseconds). Methods ChangeTime(TimeModification) Set current time depending on the current time in the day (replication of SN's system, see DayNightCycle.cs commands for more information). MakeResyncTimer() Creates a timer that periodically sends resync packets to players. MakeTimePacket() ResetCount() StartCounting() StopCounting()"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AddAnalyzedTechType.html",
    "title": "Method AddAnalyzedTechType | Nitrox",
    "keywords": "Method AddAnalyzedTechType Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll AddAnalyzedTechType(NitroxTechType) public void AddAnalyzedTechType(NitroxTechType techType) Parameters techType NitroxTechType"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AddEncyclopediaEntry.html",
    "title": "Method AddEncyclopediaEntry | Nitrox",
    "keywords": "Method AddEncyclopediaEntry Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll AddEncyclopediaEntry(string) public void AddEncyclopediaEntry(string entry) Parameters entry string"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AddKnownTechType.html",
    "title": "Method AddKnownTechType | Nitrox",
    "keywords": "Method AddKnownTechType Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll AddKnownTechType(NitroxTechType, List<NitroxTechType>) public void AddKnownTechType(NitroxTechType techType, List<NitroxTechType> partialTechTypesToRemove) Parameters techType NitroxTechType partialTechTypesToRemove List<NitroxTechType>"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AddPDALogEntry.html",
    "title": "Method AddPDALogEntry | Nitrox",
    "keywords": "Method AddPDALogEntry Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll AddPDALogEntry(PDALogEntry) public void AddPDALogEntry(PDALogEntry entry) Parameters entry PDALogEntry"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AddScannerFragment.html",
    "title": "Method AddScannerFragment | Nitrox",
    "keywords": "Method AddScannerFragment Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll AddScannerFragment(NitroxId) public void AddScannerFragment(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.AnalyzedTechTypes.html",
    "title": "Property AnalyzedTechTypes | Nitrox",
    "keywords": "Property AnalyzedTechTypes Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll AnalyzedTechTypes [DataMember(Order = 2)] public ThreadSafeList<NitroxTechType> AnalyzedTechTypes { get; } Property Value ThreadSafeList<NitroxTechType>"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.EncyclopediaEntries.html",
    "title": "Property EncyclopediaEntries | Nitrox",
    "keywords": "Property EncyclopediaEntries Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll EncyclopediaEntries Gets or sets the entries that show up the the PDA's Encyclopedia [DataMember(Order = 4)] public ThreadSafeList<string> EncyclopediaEntries { get; } Property Value ThreadSafeList<string>"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.GetInitialPDAData.html",
    "title": "Method GetInitialPDAData | Nitrox",
    "keywords": "Method GetInitialPDAData Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll GetInitialPDAData() public InitialPDAData GetInitialPDAData() Returns InitialPDAData"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.KnownTechTypes.html",
    "title": "Property KnownTechTypes | Nitrox",
    "keywords": "Property KnownTechTypes Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll KnownTechTypes Gets or sets the KnownTech construct which powers the popup shown to the user when a new TechType is discovered (\"New Creature Discovered!\") The KnownTech construct uses both KnownTech.knownTech and KnownTech.analyzedTech [DataMember(Order = 1)] public ThreadSafeList<NitroxTechType> KnownTechTypes { get; } Property Value ThreadSafeList<NitroxTechType>"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.PdaLog.html",
    "title": "Property PdaLog | Nitrox",
    "keywords": "Property PdaLog Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll PdaLog Gets or sets the log of story events present in the PDA [DataMember(Order = 3)] public ThreadSafeList<PDALogEntry> PdaLog { get; } Property Value ThreadSafeList<PDALogEntry>"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerComplete.html",
    "title": "Property ScannerComplete | Nitrox",
    "keywords": "Property ScannerComplete Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll ScannerComplete Fully unlocked PDA entries [DataMember(Order = 7)] public ThreadSafeList<NitroxTechType> ScannerComplete { get; } Property Value ThreadSafeList<NitroxTechType>"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerFragments.html",
    "title": "Property ScannerFragments | Nitrox",
    "keywords": "Property ScannerFragments Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll ScannerFragments The ids of the already scanned entities. [DataMember(Order = 5)] public ThreadSafeSet<NitroxId> ScannerFragments { get; } Property Value ThreadSafeSet<NitroxId> Remarks In Subnautica, this is a Dictionary, but the value is not used, the only important thing is whether a key is stored or not. We can therefore use it as a list."
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.ScannerPartial.html",
    "title": "Property ScannerPartial | Nitrox",
    "keywords": "Property ScannerPartial Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll ScannerPartial Partially unlocked PDA entries (e.g. fragments) [DataMember(Order = 6)] public ThreadSafeList<PDAEntry> ScannerPartial { get; } Property Value ThreadSafeList<PDAEntry>"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.UpdateEntryUnlockedProgress.html",
    "title": "Method UpdateEntryUnlockedProgress | Nitrox",
    "keywords": "Method UpdateEntryUnlockedProgress Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll UpdateEntryUnlockedProgress(NitroxTechType, int, bool) public void UpdateEntryUnlockedProgress(NitroxTechType techType, int unlockedAmount, bool fullyResearched) Parameters techType NitroxTechType unlockedAmount int fullyResearched bool"
  },
  "api/NitroxServer.GameLogic.Unlockables.PDAStateData.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.PDAStateData.html",
    "title": "Class PDAStateData | Nitrox",
    "keywords": "Class PDAStateData Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll [DataContract] public class PDAStateData Inheritance object PDAStateData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties AnalyzedTechTypes EncyclopediaEntries Gets or sets the entries that show up the the PDA's Encyclopedia KnownTechTypes Gets or sets the KnownTech construct which powers the popup shown to the user when a new TechType is discovered (\"New Creature Discovered!\") The KnownTech construct uses both KnownTech.knownTech and KnownTech.analyzedTech PdaLog Gets or sets the log of story events present in the PDA ScannerComplete Fully unlocked PDA entries ScannerFragments The ids of the already scanned entities. ScannerPartial Partially unlocked PDA entries (e.g. fragments) Methods AddAnalyzedTechType(NitroxTechType) AddEncyclopediaEntry(string) AddKnownTechType(NitroxTechType, List<NitroxTechType>) AddPDALogEntry(PDALogEntry) AddScannerFragment(NitroxId) GetInitialPDAData() UpdateEntryUnlockedProgress(NitroxTechType, int, bool)"
  },
  "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.CompletedGoals.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.CompletedGoals.html",
    "title": "Property CompletedGoals | Nitrox",
    "keywords": "Property CompletedGoals Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll CompletedGoals [DataMember(Order = 1)] public ThreadSafeSet<string> CompletedGoals { get; } Property Value ThreadSafeSet<string>"
  },
  "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.From.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll From(StoryGoalData, ScheduleKeeper) public static StoryGoalData From(StoryGoalData storyGoals, ScheduleKeeper scheduleKeeper) Parameters storyGoals StoryGoalData scheduleKeeper ScheduleKeeper Returns StoryGoalData"
  },
  "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.GetInitialStoryGoalData.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.GetInitialStoryGoalData.html",
    "title": "Method GetInitialStoryGoalData | Nitrox",
    "keywords": "Method GetInitialStoryGoalData Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll GetInitialStoryGoalData(ScheduleKeeper, Player) public InitialStoryGoalData GetInitialStoryGoalData(ScheduleKeeper scheduleKeeper, Player player) Parameters scheduleKeeper ScheduleKeeper player Player Returns InitialStoryGoalData"
  },
  "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.GoalUnlocks.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.GoalUnlocks.html",
    "title": "Property GoalUnlocks | Nitrox",
    "keywords": "Property GoalUnlocks Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll GoalUnlocks [DataMember(Order = 3)] public ThreadSafeSet<string> GoalUnlocks { get; } Property Value ThreadSafeSet<string>"
  },
  "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.RadioQueue.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.RadioQueue.html",
    "title": "Property RadioQueue | Nitrox",
    "keywords": "Property RadioQueue Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll RadioQueue [DataMember(Order = 2)] public ThreadSafeList<string> RadioQueue { get; } Property Value ThreadSafeList<string>"
  },
  "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.RemovedLatestRadioMessage.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.RemovedLatestRadioMessage.html",
    "title": "Method RemovedLatestRadioMessage | Nitrox",
    "keywords": "Method RemovedLatestRadioMessage Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll RemovedLatestRadioMessage() public bool RemovedLatestRadioMessage() Returns bool"
  },
  "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.ScheduledGoals.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.ScheduledGoals.html",
    "title": "Property ScheduledGoals | Nitrox",
    "keywords": "Property ScheduledGoals Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll ScheduledGoals [DataMember(Order = 4)] public ThreadSafeList<NitroxScheduledGoal> ScheduledGoals { get; set; } Property Value ThreadSafeList<NitroxScheduledGoal>"
  },
  "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.StoryGoalData.html",
    "title": "Class StoryGoalData | Nitrox",
    "keywords": "Class StoryGoalData Namespace NitroxServer.GameLogic.Unlockables Assembly NitroxServer.dll [DataContract] public class StoryGoalData Inheritance object StoryGoalData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CompletedGoals GoalUnlocks RadioQueue ScheduledGoals Methods From(StoryGoalData, ScheduleKeeper) GetInitialStoryGoalData(ScheduleKeeper, Player) RemovedLatestRadioMessage()"
  },
  "api/NitroxServer.GameLogic.Unlockables.html": {
    "href": "api/NitroxServer.GameLogic.Unlockables.html",
    "title": "Namespace NitroxServer.GameLogic.Unlockables | Nitrox",
    "keywords": "Namespace NitroxServer.GameLogic.Unlockables Classes PDAStateData StoryGoalData"
  },
  "api/NitroxServer.GameLogic.html": {
    "href": "api/NitroxServer.GameLogic.html",
    "title": "Namespace NitroxServer.GameLogic | Nitrox",
    "keywords": "Namespace NitroxServer.GameLogic Namespaces NitroxServer.GameLogic.Bases NitroxServer.GameLogic.Entities NitroxServer.GameLogic.Players NitroxServer.GameLogic.Unlockables Classes EscapePodManager PlayerManager ScheduleKeeper SimulationOwnershipData StoryManager Keeps track of time and Aurora-related events. StoryTimingData TimeKeeper Enums StoryManager.TimeModification"
  },
  "api/NitroxServer.Helper.DeterministicGenerator.-ctor.html": {
    "href": "api/NitroxServer.Helper.DeterministicGenerator.-ctor.html",
    "title": "Constructor DeterministicGenerator | Nitrox",
    "keywords": "Constructor DeterministicGenerator Namespace NitroxServer.Helper Assembly NitroxServer.dll DeterministicGenerator(string, object) public DeterministicGenerator(string worldSeed, object reference) Parameters worldSeed string reference object"
  },
  "api/NitroxServer.Helper.DeterministicGenerator.NextDouble.html": {
    "href": "api/NitroxServer.Helper.DeterministicGenerator.NextDouble.html",
    "title": "Method NextDouble | Nitrox",
    "keywords": "Method NextDouble Namespace NitroxServer.Helper Assembly NitroxServer.dll NextDouble() public double NextDouble() Returns double NextDouble(double, double) public double NextDouble(double min, double max) Parameters min double max double Returns double"
  },
  "api/NitroxServer.Helper.DeterministicGenerator.NextId.html": {
    "href": "api/NitroxServer.Helper.DeterministicGenerator.NextId.html",
    "title": "Method NextId | Nitrox",
    "keywords": "Method NextId Namespace NitroxServer.Helper Assembly NitroxServer.dll NextId() public NitroxId NextId() Returns NitroxId"
  },
  "api/NitroxServer.Helper.DeterministicGenerator.NextInt.html": {
    "href": "api/NitroxServer.Helper.DeterministicGenerator.NextInt.html",
    "title": "Method NextInt | Nitrox",
    "keywords": "Method NextInt Namespace NitroxServer.Helper Assembly NitroxServer.dll NextInt(int, int) public int NextInt(int min, int max) Parameters min int max int Returns int"
  },
  "api/NitroxServer.Helper.DeterministicGenerator.html": {
    "href": "api/NitroxServer.Helper.DeterministicGenerator.html",
    "title": "Class DeterministicGenerator | Nitrox",
    "keywords": "Class DeterministicGenerator Namespace NitroxServer.Helper Assembly NitroxServer.dll public class DeterministicGenerator Inheritance object DeterministicGenerator Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DeterministicGenerator(string, object) Methods NextDouble() NextDouble(double, double) NextId() NextInt(int, int)"
  },
  "api/NitroxServer.Helper.html": {
    "href": "api/NitroxServer.Helper.html",
    "title": "Namespace NitroxServer.Helper | Nitrox",
    "keywords": "Namespace NitroxServer.Helper Classes DeterministicGenerator"
  },
  "api/NitroxServer.Player.-ctor.html": {
    "href": "api/NitroxServer.Player.-ctor.html",
    "title": "Constructor Player | Nitrox",
    "keywords": "Constructor Player Namespace NitroxServer Assembly NitroxServer.dll Player(ushort, string, bool, PlayerContext, NitroxConnection, NitroxVector3, NitroxQuaternion, NitroxId, Optional<NitroxId>, Perms, PlayerStatsData, NitroxGameMode, IEnumerable<NitroxTechType>, Optional<NitroxId>[], IEnumerable<EquippedItemData>, IEnumerable<EquippedItemData>, IDictionary<string, float>, IDictionary<string, PingInstancePreference>, IList<int>) public Player(ushort id, string name, bool isPermaDeath, PlayerContext playerContext, NitroxConnection connection, NitroxVector3 position, NitroxQuaternion rotation, NitroxId playerId, Optional<NitroxId> subRootId, Perms perms, PlayerStatsData stats, NitroxGameMode gameMode, IEnumerable<NitroxTechType> usedItems, Optional<NitroxId>[] quickSlotsBindingIds, IEnumerable<EquippedItemData> equippedItems, IEnumerable<EquippedItemData> modules, IDictionary<string, float> personalCompletedGoalsWithTimestamp, IDictionary<string, PingInstancePreference> pingInstancePreferences, IList<int> pinnedRecipePreferences) Parameters id ushort name string isPermaDeath bool playerContext PlayerContext connection NitroxConnection position NitroxVector3 rotation NitroxQuaternion playerId NitroxId subRootId Optional<NitroxId> perms Perms stats PlayerStatsData gameMode NitroxGameMode usedItems IEnumerable<NitroxTechType> quickSlotsBindingIds Optional<NitroxId>[] equippedItems IEnumerable<EquippedItemData> modules IEnumerable<EquippedItemData> personalCompletedGoalsWithTimestamp IDictionary<string, float> pingInstancePreferences IDictionary<string, PingInstancePreference> pinnedRecipePreferences IList<int>"
  },
  "api/NitroxServer.Player.AddCells.html": {
    "href": "api/NitroxServer.Player.AddCells.html",
    "title": "Method AddCells | Nitrox",
    "keywords": "Method AddCells Namespace NitroxServer Assembly NitroxServer.dll AddCells(IEnumerable<AbsoluteEntityCell>) public void AddCells(IEnumerable<AbsoluteEntityCell> cells) Parameters cells IEnumerable<AbsoluteEntityCell>"
  },
  "api/NitroxServer.Player.AddEquipment.html": {
    "href": "api/NitroxServer.Player.AddEquipment.html",
    "title": "Method AddEquipment | Nitrox",
    "keywords": "Method AddEquipment Namespace NitroxServer Assembly NitroxServer.dll AddEquipment(EquippedItemData) public void AddEquipment(EquippedItemData equipment) Parameters equipment EquippedItemData"
  },
  "api/NitroxServer.Player.AddModule.html": {
    "href": "api/NitroxServer.Player.AddModule.html",
    "title": "Method AddModule | Nitrox",
    "keywords": "Method AddModule Namespace NitroxServer Assembly NitroxServer.dll AddModule(EquippedItemData) public void AddModule(EquippedItemData module) Parameters module EquippedItemData"
  },
  "api/NitroxServer.Player.CanSee.html": {
    "href": "api/NitroxServer.Player.CanSee.html",
    "title": "Method CanSee | Nitrox",
    "keywords": "Method CanSee Namespace NitroxServer Assembly NitroxServer.dll CanSee(Entity) public bool CanSee(Entity entity) Parameters entity Entity Returns bool"
  },
  "api/NitroxServer.Player.ClearVisibleCells.html": {
    "href": "api/NitroxServer.Player.ClearVisibleCells.html",
    "title": "Method ClearVisibleCells | Nitrox",
    "keywords": "Method ClearVisibleCells Namespace NitroxServer Assembly NitroxServer.dll ClearVisibleCells() public void ClearVisibleCells()"
  },
  "api/NitroxServer.Player.Connection.html": {
    "href": "api/NitroxServer.Player.Connection.html",
    "title": "Property Connection | Nitrox",
    "keywords": "Property Connection Namespace NitroxServer Assembly NitroxServer.dll Connection public NitroxConnection Connection { get; set; } Property Value NitroxConnection"
  },
  "api/NitroxServer.Player.Equals.html": {
    "href": "api/NitroxServer.Player.Equals.html",
    "title": "Method Equals | Nitrox",
    "keywords": "Method Equals Namespace NitroxServer Assembly NitroxServer.dll Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. Equals(Player) protected bool Equals(Player other) Parameters other Player Returns bool"
  },
  "api/NitroxServer.Player.GameMode.html": {
    "href": "api/NitroxServer.Player.GameMode.html",
    "title": "Property GameMode | Nitrox",
    "keywords": "Property GameMode Namespace NitroxServer Assembly NitroxServer.dll GameMode public NitroxGameMode GameMode { get; set; } Property Value NitroxGameMode"
  },
  "api/NitroxServer.Player.GameObjectId.html": {
    "href": "api/NitroxServer.Player.GameObjectId.html",
    "title": "Property GameObjectId | Nitrox",
    "keywords": "Property GameObjectId Namespace NitroxServer Assembly NitroxServer.dll GameObjectId public NitroxId GameObjectId { get; } Property Value NitroxId"
  },
  "api/NitroxServer.Player.GetEquipment.html": {
    "href": "api/NitroxServer.Player.GetEquipment.html",
    "title": "Method GetEquipment | Nitrox",
    "keywords": "Method GetEquipment Namespace NitroxServer Assembly NitroxServer.dll GetEquipment() public List<EquippedItemData> GetEquipment() Returns List<EquippedItemData>"
  },
  "api/NitroxServer.Player.GetHashCode.html": {
    "href": "api/NitroxServer.Player.GetHashCode.html",
    "title": "Method GetHashCode | Nitrox",
    "keywords": "Method GetHashCode Namespace NitroxServer Assembly NitroxServer.dll GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/NitroxServer.Player.GetModules.html": {
    "href": "api/NitroxServer.Player.GetModules.html",
    "title": "Method GetModules | Nitrox",
    "keywords": "Method GetModules Namespace NitroxServer Assembly NitroxServer.dll GetModules() public List<EquippedItemData> GetModules() Returns List<EquippedItemData>"
  },
  "api/NitroxServer.Player.HasCellLoaded.html": {
    "href": "api/NitroxServer.Player.HasCellLoaded.html",
    "title": "Method HasCellLoaded | Nitrox",
    "keywords": "Method HasCellLoaded Namespace NitroxServer Assembly NitroxServer.dll HasCellLoaded(AbsoluteEntityCell) public bool HasCellLoaded(AbsoluteEntityCell cell) Parameters cell AbsoluteEntityCell Returns bool"
  },
  "api/NitroxServer.Player.Id.html": {
    "href": "api/NitroxServer.Player.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxServer Assembly NitroxServer.dll Id public ushort Id { get; } Property Value ushort"
  },
  "api/NitroxServer.Player.IsPermaDeath.html": {
    "href": "api/NitroxServer.Player.IsPermaDeath.html",
    "title": "Property IsPermaDeath | Nitrox",
    "keywords": "Property IsPermaDeath Namespace NitroxServer Assembly NitroxServer.dll IsPermaDeath public bool IsPermaDeath { get; set; } Property Value bool"
  },
  "api/NitroxServer.Player.LastStoredPosition.html": {
    "href": "api/NitroxServer.Player.LastStoredPosition.html",
    "title": "Property LastStoredPosition | Nitrox",
    "keywords": "Property LastStoredPosition Namespace NitroxServer Assembly NitroxServer.dll LastStoredPosition public NitroxVector3? LastStoredPosition { get; set; } Property Value NitroxVector3?"
  },
  "api/NitroxServer.Player.LastStoredSubRootID.html": {
    "href": "api/NitroxServer.Player.LastStoredSubRootID.html",
    "title": "Property LastStoredSubRootID | Nitrox",
    "keywords": "Property LastStoredSubRootID Namespace NitroxServer Assembly NitroxServer.dll LastStoredSubRootID public Optional<NitroxId> LastStoredSubRootID { get; set; } Property Value Optional<NitroxId>"
  },
  "api/NitroxServer.Player.Name.html": {
    "href": "api/NitroxServer.Player.Name.html",
    "title": "Property Name | Nitrox",
    "keywords": "Property Name Namespace NitroxServer Assembly NitroxServer.dll Name public string Name { get; } Property Value string"
  },
  "api/NitroxServer.Player.Permissions.html": {
    "href": "api/NitroxServer.Player.Permissions.html",
    "title": "Property Permissions | Nitrox",
    "keywords": "Property Permissions Namespace NitroxServer Assembly NitroxServer.dll Permissions public Perms Permissions { get; set; } Property Value Perms"
  },
  "api/NitroxServer.Player.PersonalCompletedGoalsWithTimestamp.html": {
    "href": "api/NitroxServer.Player.PersonalCompletedGoalsWithTimestamp.html",
    "title": "Property PersonalCompletedGoalsWithTimestamp | Nitrox",
    "keywords": "Property PersonalCompletedGoalsWithTimestamp Namespace NitroxServer Assembly NitroxServer.dll PersonalCompletedGoalsWithTimestamp public ThreadSafeDictionary<string, float> PersonalCompletedGoalsWithTimestamp { get; } Property Value ThreadSafeDictionary<string, float>"
  },
  "api/NitroxServer.Player.PingInstancePreferences.html": {
    "href": "api/NitroxServer.Player.PingInstancePreferences.html",
    "title": "Property PingInstancePreferences | Nitrox",
    "keywords": "Property PingInstancePreferences Namespace NitroxServer Assembly NitroxServer.dll PingInstancePreferences public ThreadSafeDictionary<string, PingInstancePreference> PingInstancePreferences { get; set; } Property Value ThreadSafeDictionary<string, PingInstancePreference>"
  },
  "api/NitroxServer.Player.PinnedRecipePreferences.html": {
    "href": "api/NitroxServer.Player.PinnedRecipePreferences.html",
    "title": "Property PinnedRecipePreferences | Nitrox",
    "keywords": "Property PinnedRecipePreferences Namespace NitroxServer Assembly NitroxServer.dll PinnedRecipePreferences public ThreadSafeList<int> PinnedRecipePreferences { get; set; } Property Value ThreadSafeList<int>"
  },
  "api/NitroxServer.Player.PlayerContext.html": {
    "href": "api/NitroxServer.Player.PlayerContext.html",
    "title": "Property PlayerContext | Nitrox",
    "keywords": "Property PlayerContext Namespace NitroxServer Assembly NitroxServer.dll PlayerContext public PlayerContext PlayerContext { get; set; } Property Value PlayerContext"
  },
  "api/NitroxServer.Player.PlayerSettings.html": {
    "href": "api/NitroxServer.Player.PlayerSettings.html",
    "title": "Property PlayerSettings | Nitrox",
    "keywords": "Property PlayerSettings Namespace NitroxServer Assembly NitroxServer.dll PlayerSettings public PlayerSettings PlayerSettings { get; } Property Value PlayerSettings"
  },
  "api/NitroxServer.Player.Position.html": {
    "href": "api/NitroxServer.Player.Position.html",
    "title": "Property Position | Nitrox",
    "keywords": "Property Position Namespace NitroxServer Assembly NitroxServer.dll Position public NitroxVector3 Position { get; set; } Property Value NitroxVector3"
  },
  "api/NitroxServer.Player.QuickSlotsBindingIds.html": {
    "href": "api/NitroxServer.Player.QuickSlotsBindingIds.html",
    "title": "Property QuickSlotsBindingIds | Nitrox",
    "keywords": "Property QuickSlotsBindingIds Namespace NitroxServer Assembly NitroxServer.dll QuickSlotsBindingIds public Optional<NitroxId>[] QuickSlotsBindingIds { get; set; } Property Value Optional<NitroxId>[]"
  },
  "api/NitroxServer.Player.RemoveCells.html": {
    "href": "api/NitroxServer.Player.RemoveCells.html",
    "title": "Method RemoveCells | Nitrox",
    "keywords": "Method RemoveCells Namespace NitroxServer Assembly NitroxServer.dll RemoveCells(IEnumerable<AbsoluteEntityCell>) public void RemoveCells(IEnumerable<AbsoluteEntityCell> cells) Parameters cells IEnumerable<AbsoluteEntityCell>"
  },
  "api/NitroxServer.Player.RemoveEquipment.html": {
    "href": "api/NitroxServer.Player.RemoveEquipment.html",
    "title": "Method RemoveEquipment | Nitrox",
    "keywords": "Method RemoveEquipment Namespace NitroxServer Assembly NitroxServer.dll RemoveEquipment(NitroxId) public void RemoveEquipment(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxServer.Player.RemoveModule.html": {
    "href": "api/NitroxServer.Player.RemoveModule.html",
    "title": "Method RemoveModule | Nitrox",
    "keywords": "Method RemoveModule Namespace NitroxServer Assembly NitroxServer.dll RemoveModule(NitroxId) public void RemoveModule(NitroxId id) Parameters id NitroxId"
  },
  "api/NitroxServer.Player.Rotation.html": {
    "href": "api/NitroxServer.Player.Rotation.html",
    "title": "Property Rotation | Nitrox",
    "keywords": "Property Rotation Namespace NitroxServer Assembly NitroxServer.dll Rotation public NitroxQuaternion Rotation { get; set; } Property Value NitroxQuaternion"
  },
  "api/NitroxServer.Player.SendPacket.html": {
    "href": "api/NitroxServer.Player.SendPacket.html",
    "title": "Method SendPacket | Nitrox",
    "keywords": "Method SendPacket Namespace NitroxServer Assembly NitroxServer.dll SendPacket(Packet) public void SendPacket(Packet packet) Parameters packet Packet"
  },
  "api/NitroxServer.Player.Stats.html": {
    "href": "api/NitroxServer.Player.Stats.html",
    "title": "Property Stats | Nitrox",
    "keywords": "Property Stats Namespace NitroxServer Assembly NitroxServer.dll Stats public PlayerStatsData Stats { get; set; } Property Value PlayerStatsData"
  },
  "api/NitroxServer.Player.SubRootId.html": {
    "href": "api/NitroxServer.Player.SubRootId.html",
    "title": "Property SubRootId | Nitrox",
    "keywords": "Property SubRootId Namespace NitroxServer Assembly NitroxServer.dll SubRootId public Optional<NitroxId> SubRootId { get; set; } Property Value Optional<NitroxId>"
  },
  "api/NitroxServer.Player.Teleport.html": {
    "href": "api/NitroxServer.Player.Teleport.html",
    "title": "Method Teleport | Nitrox",
    "keywords": "Method Teleport Namespace NitroxServer Assembly NitroxServer.dll Teleport(NitroxVector3, Optional<NitroxId>) public void Teleport(NitroxVector3 destination, Optional<NitroxId> subRootID) Parameters destination NitroxVector3 subRootID Optional<NitroxId>"
  },
  "api/NitroxServer.Player.ToString.html": {
    "href": "api/NitroxServer.Player.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.Player.UsedItems.html": {
    "href": "api/NitroxServer.Player.UsedItems.html",
    "title": "Property UsedItems | Nitrox",
    "keywords": "Property UsedItems Namespace NitroxServer Assembly NitroxServer.dll UsedItems public ThreadSafeList<NitroxTechType> UsedItems { get; } Property Value ThreadSafeList<NitroxTechType>"
  },
  "api/NitroxServer.Player.html": {
    "href": "api/NitroxServer.Player.html",
    "title": "Class Player | Nitrox",
    "keywords": "Class Player Namespace NitroxServer Assembly NitroxServer.dll public class Player : IProcessorContext Inheritance object Player Implements IProcessorContext Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors Player(ushort, string, bool, PlayerContext, NitroxConnection, NitroxVector3, NitroxQuaternion, NitroxId, Optional<NitroxId>, Perms, PlayerStatsData, NitroxGameMode, IEnumerable<NitroxTechType>, Optional<NitroxId>[], IEnumerable<EquippedItemData>, IEnumerable<EquippedItemData>, IDictionary<string, float>, IDictionary<string, PingInstancePreference>, IList<int>) Properties Connection GameMode GameObjectId Id IsPermaDeath LastStoredPosition LastStoredSubRootID Name Permissions PersonalCompletedGoalsWithTimestamp PingInstancePreferences PinnedRecipePreferences PlayerContext PlayerSettings Position QuickSlotsBindingIds Rotation Stats SubRootId UsedItems Methods AddCells(IEnumerable<AbsoluteEntityCell>) AddEquipment(EquippedItemData) AddModule(EquippedItemData) CanSee(Entity) ClearVisibleCells() Equals(Player) Equals(object) Determines whether the specified object is equal to the current object. GetEquipment() GetHashCode() Serves as the default hash function. GetModules() HasCellLoaded(AbsoluteEntityCell) RemoveCells(IEnumerable<AbsoluteEntityCell>) RemoveEquipment(NitroxId) RemoveModule(NitroxId) SendPacket(Packet) Teleport(NitroxVector3, Optional<NitroxId>) ToString() Returns a string that represents the current object. Operators operator ==(Player, Player) operator !=(Player, Player)"
  },
  "api/NitroxServer.Player.op_Equality.html": {
    "href": "api/NitroxServer.Player.op_Equality.html",
    "title": "Operator operator == | Nitrox",
    "keywords": "Operator operator == Namespace NitroxServer Assembly NitroxServer.dll operator ==(Player, Player) public static bool operator ==(Player left, Player right) Parameters left Player right Player Returns bool"
  },
  "api/NitroxServer.Player.op_Inequality.html": {
    "href": "api/NitroxServer.Player.op_Inequality.html",
    "title": "Operator operator != | Nitrox",
    "keywords": "Operator operator != Namespace NitroxServer Assembly NitroxServer.dll operator !=(Player, Player) public static bool operator !=(Player left, Player right) Parameters left Player right Player Returns bool"
  },
  "api/NitroxServer.Resources.PrefabPlaceholderAsset.-ctor.html": {
    "href": "api/NitroxServer.Resources.PrefabPlaceholderAsset.-ctor.html",
    "title": "Constructor PrefabPlaceholderAsset | Nitrox",
    "keywords": "Constructor PrefabPlaceholderAsset Namespace NitroxServer.Resources Assembly NitroxServer.dll PrefabPlaceholderAsset(string, NitroxEntitySlot) public PrefabPlaceholderAsset(string classId, NitroxEntitySlot entitySlot) Parameters classId string entitySlot NitroxEntitySlot"
  },
  "api/NitroxServer.Resources.PrefabPlaceholderAsset.ClassId.html": {
    "href": "api/NitroxServer.Resources.PrefabPlaceholderAsset.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxServer.Resources Assembly NitroxServer.dll ClassId public string ClassId { get; } Property Value string"
  },
  "api/NitroxServer.Resources.PrefabPlaceholderAsset.EntitySlot.html": {
    "href": "api/NitroxServer.Resources.PrefabPlaceholderAsset.EntitySlot.html",
    "title": "Property EntitySlot | Nitrox",
    "keywords": "Property EntitySlot Namespace NitroxServer.Resources Assembly NitroxServer.dll EntitySlot public NitroxEntitySlot EntitySlot { get; } Property Value NitroxEntitySlot"
  },
  "api/NitroxServer.Resources.PrefabPlaceholderAsset.html": {
    "href": "api/NitroxServer.Resources.PrefabPlaceholderAsset.html",
    "title": "Class PrefabPlaceholderAsset | Nitrox",
    "keywords": "Class PrefabPlaceholderAsset Namespace NitroxServer.Resources Assembly NitroxServer.dll public class PrefabPlaceholderAsset Inheritance object PrefabPlaceholderAsset Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrefabPlaceholderAsset(string, NitroxEntitySlot) Properties ClassId EntitySlot"
  },
  "api/NitroxServer.Resources.PrefabPlaceholdersGroupAsset.-ctor.html": {
    "href": "api/NitroxServer.Resources.PrefabPlaceholdersGroupAsset.-ctor.html",
    "title": "Constructor PrefabPlaceholdersGroupAsset | Nitrox",
    "keywords": "Constructor PrefabPlaceholdersGroupAsset Namespace NitroxServer.Resources Assembly NitroxServer.dll PrefabPlaceholdersGroupAsset(PrefabPlaceholderAsset[], NitroxTechType) public PrefabPlaceholdersGroupAsset(PrefabPlaceholderAsset[] prefabPlaceholders, NitroxTechType techType) Parameters prefabPlaceholders PrefabPlaceholderAsset[] techType NitroxTechType"
  },
  "api/NitroxServer.Resources.PrefabPlaceholdersGroupAsset.PrefabPlaceholders.html": {
    "href": "api/NitroxServer.Resources.PrefabPlaceholdersGroupAsset.PrefabPlaceholders.html",
    "title": "Property PrefabPlaceholders | Nitrox",
    "keywords": "Property PrefabPlaceholders Namespace NitroxServer.Resources Assembly NitroxServer.dll PrefabPlaceholders All attached PrefabPlaceholders. Is in sync with PrefabPlaceholdersGroup.prefabPlaceholders public PrefabPlaceholderAsset[] PrefabPlaceholders { get; } Property Value PrefabPlaceholderAsset[]"
  },
  "api/NitroxServer.Resources.PrefabPlaceholdersGroupAsset.TechType.html": {
    "href": "api/NitroxServer.Resources.PrefabPlaceholdersGroupAsset.TechType.html",
    "title": "Property TechType | Nitrox",
    "keywords": "Property TechType Namespace NitroxServer.Resources Assembly NitroxServer.dll TechType public NitroxTechType TechType { get; } Property Value NitroxTechType"
  },
  "api/NitroxServer.Resources.PrefabPlaceholdersGroupAsset.html": {
    "href": "api/NitroxServer.Resources.PrefabPlaceholdersGroupAsset.html",
    "title": "Class PrefabPlaceholdersGroupAsset | Nitrox",
    "keywords": "Class PrefabPlaceholdersGroupAsset Namespace NitroxServer.Resources Assembly NitroxServer.dll public class PrefabPlaceholdersGroupAsset Inheritance object PrefabPlaceholdersGroupAsset Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrefabPlaceholdersGroupAsset(PrefabPlaceholderAsset[], NitroxTechType) Properties PrefabPlaceholders All attached PrefabPlaceholders. Is in sync with PrefabPlaceholdersGroup.prefabPlaceholders TechType"
  },
  "api/NitroxServer.Resources.html": {
    "href": "api/NitroxServer.Resources.html",
    "title": "Namespace NitroxServer.Resources | Nitrox",
    "keywords": "Namespace NitroxServer.Resources Classes PrefabPlaceholderAsset PrefabPlaceholdersGroupAsset"
  },
  "api/NitroxServer.Serialization.BatchCellsParser.-ctor.html": {
    "href": "api/NitroxServer.Serialization.BatchCellsParser.-ctor.html",
    "title": "Constructor BatchCellsParser | Nitrox",
    "keywords": "Constructor BatchCellsParser Namespace NitroxServer.Serialization Assembly NitroxServer.dll BatchCellsParser(EntitySpawnPointFactory, ServerProtoBufSerializer) public BatchCellsParser(EntitySpawnPointFactory entitySpawnPointFactory, ServerProtoBufSerializer serializer) Parameters entitySpawnPointFactory EntitySpawnPointFactory serializer ServerProtoBufSerializer"
  },
  "api/NitroxServer.Serialization.BatchCellsParser.ParseBatchData.html": {
    "href": "api/NitroxServer.Serialization.BatchCellsParser.ParseBatchData.html",
    "title": "Method ParseBatchData | Nitrox",
    "keywords": "Method ParseBatchData Namespace NitroxServer.Serialization Assembly NitroxServer.dll ParseBatchData(NitroxInt3) public List<EntitySpawnPoint> ParseBatchData(NitroxInt3 batchId) Parameters batchId NitroxInt3 Returns List<EntitySpawnPoint>"
  },
  "api/NitroxServer.Serialization.BatchCellsParser.ParseFile.html": {
    "href": "api/NitroxServer.Serialization.BatchCellsParser.ParseFile.html",
    "title": "Method ParseFile | Nitrox",
    "keywords": "Method ParseFile Namespace NitroxServer.Serialization Assembly NitroxServer.dll ParseFile(NitroxInt3, string, string, string, List<EntitySpawnPoint>) public void ParseFile(NitroxInt3 batchId, string pathPrefix, string prefix, string suffix, List<EntitySpawnPoint> spawnPoints) Parameters batchId NitroxInt3 pathPrefix string prefix string suffix string spawnPoints List<EntitySpawnPoint>"
  },
  "api/NitroxServer.Serialization.BatchCellsParser.html": {
    "href": "api/NitroxServer.Serialization.BatchCellsParser.html",
    "title": "Class BatchCellsParser | Nitrox",
    "keywords": "Class BatchCellsParser Namespace NitroxServer.Serialization Assembly NitroxServer.dll public class BatchCellsParser Inheritance object BatchCellsParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BatchCellsParser(EntitySpawnPointFactory, ServerProtoBufSerializer) Methods ParseBatchData(NitroxInt3) ParseFile(NitroxInt3, string, string, string, List<EntitySpawnPoint>)"
  },
  "api/NitroxServer.Serialization.CellHeader.CellId.html": {
    "href": "api/NitroxServer.Serialization.CellHeader.CellId.html",
    "title": "Field CellId | Nitrox",
    "keywords": "Field CellId Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoMember(1)] public NitroxInt3 CellId Returns NitroxInt3"
  },
  "api/NitroxServer.Serialization.CellHeader.Level.html": {
    "href": "api/NitroxServer.Serialization.CellHeader.Level.html",
    "title": "Field Level | Nitrox",
    "keywords": "Field Level Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoMember(2)] public int Level Returns int"
  },
  "api/NitroxServer.Serialization.CellHeader.ToString.html": {
    "href": "api/NitroxServer.Serialization.CellHeader.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.Serialization Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.Serialization.CellHeader.html": {
    "href": "api/NitroxServer.Serialization.CellHeader.html",
    "title": "Class CellHeader | Nitrox",
    "keywords": "Class CellHeader Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoContract] public class CellHeader Inheritance object CellHeader Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields CellId Level Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.Serialization.CellHeaderEx.CellId.html": {
    "href": "api/NitroxServer.Serialization.CellHeaderEx.CellId.html",
    "title": "Field CellId | Nitrox",
    "keywords": "Field CellId Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoMember(1)] public NitroxInt3 CellId Returns NitroxInt3"
  },
  "api/NitroxServer.Serialization.CellHeaderEx.DataLength.html": {
    "href": "api/NitroxServer.Serialization.CellHeaderEx.DataLength.html",
    "title": "Field DataLength | Nitrox",
    "keywords": "Field DataLength Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoMember(3)] public int DataLength Returns int"
  },
  "api/NitroxServer.Serialization.CellHeaderEx.LegacyDataLength.html": {
    "href": "api/NitroxServer.Serialization.CellHeaderEx.LegacyDataLength.html",
    "title": "Field LegacyDataLength | Nitrox",
    "keywords": "Field LegacyDataLength Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoMember(4)] public int LegacyDataLength Returns int"
  },
  "api/NitroxServer.Serialization.CellHeaderEx.Level.html": {
    "href": "api/NitroxServer.Serialization.CellHeaderEx.Level.html",
    "title": "Field Level | Nitrox",
    "keywords": "Field Level Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoMember(2)] public int Level Returns int"
  },
  "api/NitroxServer.Serialization.CellHeaderEx.ToString.html": {
    "href": "api/NitroxServer.Serialization.CellHeaderEx.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.Serialization Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.Serialization.CellHeaderEx.WaiterDataLength.html": {
    "href": "api/NitroxServer.Serialization.CellHeaderEx.WaiterDataLength.html",
    "title": "Field WaiterDataLength | Nitrox",
    "keywords": "Field WaiterDataLength Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoMember(5)] public int WaiterDataLength Returns int"
  },
  "api/NitroxServer.Serialization.CellHeaderEx.html": {
    "href": "api/NitroxServer.Serialization.CellHeaderEx.html",
    "title": "Class CellHeaderEx | Nitrox",
    "keywords": "Class CellHeaderEx Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoContract] public class CellHeaderEx Inheritance object CellHeaderEx Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields CellId DataLength LegacyDataLength Level WaiterDataLength Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.Serialization.CellsFileHeader.NumCells.html": {
    "href": "api/NitroxServer.Serialization.CellsFileHeader.NumCells.html",
    "title": "Field NumCells | Nitrox",
    "keywords": "Field NumCells Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoMember(2)] public int NumCells Returns int"
  },
  "api/NitroxServer.Serialization.CellsFileHeader.ToString.html": {
    "href": "api/NitroxServer.Serialization.CellsFileHeader.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.Serialization Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.Serialization.CellsFileHeader.Version.html": {
    "href": "api/NitroxServer.Serialization.CellsFileHeader.Version.html",
    "title": "Field Version | Nitrox",
    "keywords": "Field Version Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoMember(1)] public int Version Returns int"
  },
  "api/NitroxServer.Serialization.CellsFileHeader.html": {
    "href": "api/NitroxServer.Serialization.CellsFileHeader.html",
    "title": "Class CellsFileHeader | Nitrox",
    "keywords": "Class CellsFileHeader Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoContract] public class CellsFileHeader Inheritance object CellsFileHeader Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields NumCells Version Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.Serialization.ComponentHeader.IsEnabled.html": {
    "href": "api/NitroxServer.Serialization.ComponentHeader.IsEnabled.html",
    "title": "Property IsEnabled | Nitrox",
    "keywords": "Property IsEnabled Namespace NitroxServer.Serialization Assembly NitroxServer.dll IsEnabled [ProtoMember(2)] public bool IsEnabled { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.ComponentHeader.Reset.html": {
    "href": "api/NitroxServer.Serialization.ComponentHeader.Reset.html",
    "title": "Method Reset | Nitrox",
    "keywords": "Method Reset Namespace NitroxServer.Serialization Assembly NitroxServer.dll Reset() public void Reset()"
  },
  "api/NitroxServer.Serialization.ComponentHeader.ToString.html": {
    "href": "api/NitroxServer.Serialization.ComponentHeader.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.Serialization Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.Serialization.ComponentHeader.TypeName.html": {
    "href": "api/NitroxServer.Serialization.ComponentHeader.TypeName.html",
    "title": "Property TypeName | Nitrox",
    "keywords": "Property TypeName Namespace NitroxServer.Serialization Assembly NitroxServer.dll TypeName [ProtoMember(1)] public string TypeName { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.ComponentHeader.html": {
    "href": "api/NitroxServer.Serialization.ComponentHeader.html",
    "title": "Class ComponentHeader | Nitrox",
    "keywords": "Class ComponentHeader Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoContract] public class ComponentHeader Inheritance object ComponentHeader Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties IsEnabled TypeName Methods Reset() ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.Serialization.DynamicWorldDataAfterAttribute.GetData.html": {
    "href": "api/NitroxServer.Serialization.DynamicWorldDataAfterAttribute.GetData.html",
    "title": "Method GetData | Nitrox",
    "keywords": "Method GetData Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll GetData(MethodInfo) Gets the test data from custom test data source. public IEnumerable<object[]> GetData(MethodInfo methodInfo) Parameters methodInfo MethodInfo The method info of test method. Returns IEnumerable<object[]> Test data for calling test method."
  },
  "api/NitroxServer.Serialization.DynamicWorldDataAfterAttribute.GetDisplayName.html": {
    "href": "api/NitroxServer.Serialization.DynamicWorldDataAfterAttribute.GetDisplayName.html",
    "title": "Method GetDisplayName | Nitrox",
    "keywords": "Method GetDisplayName Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll GetDisplayName(MethodInfo, object[]) Gets the display name corresponding to test data row for displaying in TestResults. public string GetDisplayName(MethodInfo methodInfo, object[] data) Parameters methodInfo MethodInfo The method info of test method. data object[] The test data which is passed to test method. Returns string The string."
  },
  "api/NitroxServer.Serialization.DynamicWorldDataAfterAttribute.html": {
    "href": "api/NitroxServer.Serialization.DynamicWorldDataAfterAttribute.html",
    "title": "Class DynamicWorldDataAfterAttribute | Nitrox",
    "keywords": "Class DynamicWorldDataAfterAttribute Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll [AttributeUsage(AttributeTargets.Method)] public class DynamicWorldDataAfterAttribute : Attribute, _Attribute, ITestDataSource Inheritance object Attribute DynamicWorldDataAfterAttribute Implements _Attribute ITestDataSource Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Methods GetData(MethodInfo) Gets the test data from custom test data source. GetDisplayName(MethodInfo, object[]) Gets the display name corresponding to test data row for displaying in TestResults."
  },
  "api/NitroxServer.Serialization.GameObjectData.ClassId.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxServer.Serialization Assembly NitroxServer.dll ClassId [ProtoMember(7)] public string ClassId { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.GameObjectData.CreateEmptyObject.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.CreateEmptyObject.html",
    "title": "Property CreateEmptyObject | Nitrox",
    "keywords": "Property CreateEmptyObject Namespace NitroxServer.Serialization Assembly NitroxServer.dll CreateEmptyObject [ProtoMember(1)] public bool CreateEmptyObject { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.GameObjectData.Id.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxServer.Serialization Assembly NitroxServer.dll Id [ProtoMember(6)] public string Id { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.GameObjectData.IsActive.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.IsActive.html",
    "title": "Property IsActive | Nitrox",
    "keywords": "Property IsActive Namespace NitroxServer.Serialization Assembly NitroxServer.dll IsActive [ProtoMember(2)] public bool IsActive { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.GameObjectData.Layer.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.Layer.html",
    "title": "Property Layer | Nitrox",
    "keywords": "Property Layer Namespace NitroxServer.Serialization Assembly NitroxServer.dll Layer [ProtoMember(3)] public int Layer { get; set; } Property Value int"
  },
  "api/NitroxServer.Serialization.GameObjectData.MergeObject.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.MergeObject.html",
    "title": "Property MergeObject | Nitrox",
    "keywords": "Property MergeObject Namespace NitroxServer.Serialization Assembly NitroxServer.dll MergeObject [ProtoMember(10)] public bool MergeObject { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.GameObjectData.OverridePrefab.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.OverridePrefab.html",
    "title": "Property OverridePrefab | Nitrox",
    "keywords": "Property OverridePrefab Namespace NitroxServer.Serialization Assembly NitroxServer.dll OverridePrefab [ProtoMember(9)] public bool OverridePrefab { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.GameObjectData.Parent.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.Parent.html",
    "title": "Property Parent | Nitrox",
    "keywords": "Property Parent Namespace NitroxServer.Serialization Assembly NitroxServer.dll Parent [ProtoMember(8)] public string Parent { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.GameObjectData.Reset.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.Reset.html",
    "title": "Method Reset | Nitrox",
    "keywords": "Method Reset Namespace NitroxServer.Serialization Assembly NitroxServer.dll Reset() public void Reset()"
  },
  "api/NitroxServer.Serialization.GameObjectData.Tag.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.Tag.html",
    "title": "Property Tag | Nitrox",
    "keywords": "Property Tag Namespace NitroxServer.Serialization Assembly NitroxServer.dll Tag [ProtoMember(4)] public string Tag { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.GameObjectData.ToString.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.Serialization Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.Serialization.GameObjectData.html": {
    "href": "api/NitroxServer.Serialization.GameObjectData.html",
    "title": "Class GameObjectData | Nitrox",
    "keywords": "Class GameObjectData Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoContract] public class GameObjectData Inheritance object GameObjectData Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ClassId CreateEmptyObject Id IsActive Layer MergeObject OverridePrefab Parent Tag Methods Reset() ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.Serialization.IServerSerializer.Deserialize.html": {
    "href": "api/NitroxServer.Serialization.IServerSerializer.Deserialize.html",
    "title": "Method Deserialize | Nitrox",
    "keywords": "Method Deserialize Namespace NitroxServer.Serialization Assembly NitroxServer.dll Deserialize<T>(Stream) T Deserialize<T>(Stream stream) Parameters stream Stream Returns T Type Parameters T Deserialize<T>(string) T Deserialize<T>(string filePath) Parameters filePath string Returns T Type Parameters T"
  },
  "api/NitroxServer.Serialization.IServerSerializer.FileEnding.html": {
    "href": "api/NitroxServer.Serialization.IServerSerializer.FileEnding.html",
    "title": "Property FileEnding | Nitrox",
    "keywords": "Property FileEnding Namespace NitroxServer.Serialization Assembly NitroxServer.dll FileEnding string FileEnding { get; } Property Value string"
  },
  "api/NitroxServer.Serialization.IServerSerializer.Serialize.html": {
    "href": "api/NitroxServer.Serialization.IServerSerializer.Serialize.html",
    "title": "Method Serialize | Nitrox",
    "keywords": "Method Serialize Namespace NitroxServer.Serialization Assembly NitroxServer.dll Serialize(Stream, object) void Serialize(Stream stream, object o) Parameters stream Stream o object Serialize(string, object) void Serialize(string filePath, object o) Parameters filePath string o object"
  },
  "api/NitroxServer.Serialization.IServerSerializer.html": {
    "href": "api/NitroxServer.Serialization.IServerSerializer.html",
    "title": "Interface IServerSerializer | Nitrox",
    "keywords": "Interface IServerSerializer Namespace NitroxServer.Serialization Assembly NitroxServer.dll public interface IServerSerializer Properties FileEnding Methods Deserialize<T>(Stream) Deserialize<T>(string) Serialize(Stream, object) Serialize(string, object)"
  },
  "api/NitroxServer.Serialization.Json.AttributeContractResolver.CreateContract.html": {
    "href": "api/NitroxServer.Serialization.Json.AttributeContractResolver.CreateContract.html",
    "title": "Method CreateContract | Nitrox",
    "keywords": "Method CreateContract Namespace NitroxServer.Serialization.Json Assembly NitroxServer.dll CreateContract(Type) Determines which contract type is created for the given type. protected override JsonContract CreateContract(Type objectType) Parameters objectType Type Type of the object. Returns JsonContract A Newtonsoft.Json.Serialization.JsonContract for the given type."
  },
  "api/NitroxServer.Serialization.Json.AttributeContractResolver.html": {
    "href": "api/NitroxServer.Serialization.Json.AttributeContractResolver.html",
    "title": "Class AttributeContractResolver | Nitrox",
    "keywords": "Class AttributeContractResolver Namespace NitroxServer.Serialization.Json Assembly NitroxServer.dll public class AttributeContractResolver : DefaultContractResolver, IContractResolver Inheritance object DefaultContractResolver AttributeContractResolver Implements IContractResolver Inherited Members DefaultContractResolver.ResolveContract(Type) DefaultContractResolver.GetSerializableMembers(Type) DefaultContractResolver.CreateObjectContract(Type) DefaultContractResolver.CreateConstructorParameters(ConstructorInfo, JsonPropertyCollection) DefaultContractResolver.CreatePropertyFromConstructorParameter(JsonProperty, ParameterInfo) DefaultContractResolver.ResolveContractConverter(Type) DefaultContractResolver.CreateDictionaryContract(Type) DefaultContractResolver.CreateArrayContract(Type) DefaultContractResolver.CreatePrimitiveContract(Type) DefaultContractResolver.CreateLinqContract(Type) DefaultContractResolver.CreateISerializableContract(Type) DefaultContractResolver.CreateDynamicContract(Type) DefaultContractResolver.CreateStringContract(Type) DefaultContractResolver.CreateProperties(Type, MemberSerialization) DefaultContractResolver.CreateMemberValueProvider(MemberInfo) DefaultContractResolver.CreateProperty(MemberInfo, MemberSerialization) DefaultContractResolver.ResolvePropertyName(string) DefaultContractResolver.ResolveExtensionDataName(string) DefaultContractResolver.ResolveDictionaryKey(string) DefaultContractResolver.GetResolvedPropertyName(string) DefaultContractResolver.DynamicCodeGeneration DefaultContractResolver.DefaultMembersSearchFlags DefaultContractResolver.SerializeCompilerGeneratedMembers DefaultContractResolver.IgnoreSerializableInterface DefaultContractResolver.IgnoreSerializableAttribute DefaultContractResolver.IgnoreIsSpecifiedMembers DefaultContractResolver.IgnoreShouldSerializeMembers DefaultContractResolver.NamingStrategy object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CreateContract(Type) Determines which contract type is created for the given type."
  },
  "api/NitroxServer.Serialization.Json.NitroxIdConverter.ReadJson.html": {
    "href": "api/NitroxServer.Serialization.Json.NitroxIdConverter.ReadJson.html",
    "title": "Method ReadJson | Nitrox",
    "keywords": "Method ReadJson Namespace NitroxServer.Serialization.Json Assembly NitroxServer.dll ReadJson(JsonReader, Type, NitroxId, bool, JsonSerializer) Reads the JSON representation of the object. public override NitroxId ReadJson(JsonReader reader, Type objectType, NitroxId existingValue, bool hasExistingValue, JsonSerializer serializer) Parameters reader JsonReader The Newtonsoft.Json.JsonReader to read from. objectType Type Type of the object. existingValue NitroxId The existing value of object being read. If there is no existing value then null will be used. hasExistingValue bool The existing value has a value. serializer JsonSerializer The calling serializer. Returns NitroxId The object value."
  },
  "api/NitroxServer.Serialization.Json.NitroxIdConverter.WriteJson.html": {
    "href": "api/NitroxServer.Serialization.Json.NitroxIdConverter.WriteJson.html",
    "title": "Method WriteJson | Nitrox",
    "keywords": "Method WriteJson Namespace NitroxServer.Serialization.Json Assembly NitroxServer.dll WriteJson(JsonWriter, NitroxId, JsonSerializer) Writes the JSON representation of the object. public override void WriteJson(JsonWriter writer, NitroxId value, JsonSerializer serializer) Parameters writer JsonWriter The Newtonsoft.Json.JsonWriter to write to. value NitroxId The value. serializer JsonSerializer The calling serializer."
  },
  "api/NitroxServer.Serialization.Json.NitroxIdConverter.html": {
    "href": "api/NitroxServer.Serialization.Json.NitroxIdConverter.html",
    "title": "Class NitroxIdConverter | Nitrox",
    "keywords": "Class NitroxIdConverter Namespace NitroxServer.Serialization.Json Assembly NitroxServer.dll public class NitroxIdConverter : JsonConverter<NitroxId> Inheritance object JsonConverter JsonConverter<NitroxId> NitroxIdConverter Inherited Members JsonConverter<NitroxId>.WriteJson(JsonWriter, object, JsonSerializer) JsonConverter<NitroxId>.ReadJson(JsonReader, Type, object, JsonSerializer) JsonConverter<NitroxId>.CanConvert(Type) JsonConverter.CanRead JsonConverter.CanWrite object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadJson(JsonReader, Type, NitroxId, bool, JsonSerializer) Reads the JSON representation of the object. WriteJson(JsonWriter, NitroxId, JsonSerializer) Writes the JSON representation of the object."
  },
  "api/NitroxServer.Serialization.Json.TechTypeConverter.ReadJson.html": {
    "href": "api/NitroxServer.Serialization.Json.TechTypeConverter.ReadJson.html",
    "title": "Method ReadJson | Nitrox",
    "keywords": "Method ReadJson Namespace NitroxServer.Serialization.Json Assembly NitroxServer.dll ReadJson(JsonReader, Type, NitroxTechType, bool, JsonSerializer) Reads the JSON representation of the object. public override NitroxTechType ReadJson(JsonReader reader, Type objectType, NitroxTechType existingValue, bool hasExistingValue, JsonSerializer serializer) Parameters reader JsonReader The Newtonsoft.Json.JsonReader to read from. objectType Type Type of the object. existingValue NitroxTechType The existing value of object being read. If there is no existing value then null will be used. hasExistingValue bool The existing value has a value. serializer JsonSerializer The calling serializer. Returns NitroxTechType The object value."
  },
  "api/NitroxServer.Serialization.Json.TechTypeConverter.WriteJson.html": {
    "href": "api/NitroxServer.Serialization.Json.TechTypeConverter.WriteJson.html",
    "title": "Method WriteJson | Nitrox",
    "keywords": "Method WriteJson Namespace NitroxServer.Serialization.Json Assembly NitroxServer.dll WriteJson(JsonWriter, NitroxTechType, JsonSerializer) Writes the JSON representation of the object. public override void WriteJson(JsonWriter writer, NitroxTechType value, JsonSerializer serializer) Parameters writer JsonWriter The Newtonsoft.Json.JsonWriter to write to. value NitroxTechType The value. serializer JsonSerializer The calling serializer."
  },
  "api/NitroxServer.Serialization.Json.TechTypeConverter.html": {
    "href": "api/NitroxServer.Serialization.Json.TechTypeConverter.html",
    "title": "Class TechTypeConverter | Nitrox",
    "keywords": "Class TechTypeConverter Namespace NitroxServer.Serialization.Json Assembly NitroxServer.dll public class TechTypeConverter : JsonConverter<NitroxTechType> Inheritance object JsonConverter JsonConverter<NitroxTechType> TechTypeConverter Inherited Members JsonConverter<NitroxTechType>.WriteJson(JsonWriter, object, JsonSerializer) JsonConverter<NitroxTechType>.ReadJson(JsonReader, Type, object, JsonSerializer) JsonConverter<NitroxTechType>.CanConvert(Type) JsonConverter.CanRead JsonConverter.CanWrite object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadJson(JsonReader, Type, NitroxTechType, bool, JsonSerializer) Reads the JSON representation of the object. WriteJson(JsonWriter, NitroxTechType, JsonSerializer) Writes the JSON representation of the object."
  },
  "api/NitroxServer.Serialization.Json.html": {
    "href": "api/NitroxServer.Serialization.Json.html",
    "title": "Namespace NitroxServer.Serialization.Json | Nitrox",
    "keywords": "Namespace NitroxServer.Serialization.Json Classes AttributeContractResolver NitroxIdConverter TechTypeConverter"
  },
  "api/NitroxServer.Serialization.LoopHeader.Count.html": {
    "href": "api/NitroxServer.Serialization.LoopHeader.Count.html",
    "title": "Property Count | Nitrox",
    "keywords": "Property Count Namespace NitroxServer.Serialization Assembly NitroxServer.dll Count [ProtoMember(1)] public int Count { get; set; } Property Value int"
  },
  "api/NitroxServer.Serialization.LoopHeader.Reset.html": {
    "href": "api/NitroxServer.Serialization.LoopHeader.Reset.html",
    "title": "Method Reset | Nitrox",
    "keywords": "Method Reset Namespace NitroxServer.Serialization Assembly NitroxServer.dll Reset() public void Reset()"
  },
  "api/NitroxServer.Serialization.LoopHeader.ToString.html": {
    "href": "api/NitroxServer.Serialization.LoopHeader.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.Serialization Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.Serialization.LoopHeader.html": {
    "href": "api/NitroxServer.Serialization.LoopHeader.html",
    "title": "Class LoopHeader | Nitrox",
    "keywords": "Class LoopHeader Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoContract] public class LoopHeader Inheritance object LoopHeader Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Count Methods Reset() ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.NewtonsoftExtensions.Rename.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.NewtonsoftExtensions.Rename.html",
    "title": "Method Rename | Nitrox",
    "keywords": "Method Rename Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll Rename(JToken, string) public static void Rename(this JToken token, string newName) Parameters token JToken newName string"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.NewtonsoftExtensions.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.NewtonsoftExtensions.html",
    "title": "Class NewtonsoftExtensions | Nitrox",
    "keywords": "Class NewtonsoftExtensions Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll public static class NewtonsoftExtensions Inheritance object NewtonsoftExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Rename(JToken, string)"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1500.TargetVersion.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1500.TargetVersion.html",
    "title": "Property TargetVersion | Nitrox",
    "keywords": "Property TargetVersion Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll TargetVersion public override Version TargetVersion { get; } Property Value Version"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1500.UpgradeWorldData.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1500.UpgradeWorldData.html",
    "title": "Method UpgradeWorldData | Nitrox",
    "keywords": "Method UpgradeWorldData Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll UpgradeWorldData(JObject) protected override void UpgradeWorldData(JObject data) Parameters data JObject"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1500.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1500.html",
    "title": "Class Upgrade_V1500 | Nitrox",
    "keywords": "Class Upgrade_V1500 Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll public sealed class Upgrade_V1500 : SaveDataUpgrade Inheritance object SaveDataUpgrade Upgrade_V1500 Inherited Members SaveDataUpgrade.UpgradeSaveFiles(string, string) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties TargetVersion Methods UpgradeWorldData(JObject)"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1600.TargetVersion.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1600.TargetVersion.html",
    "title": "Property TargetVersion | Nitrox",
    "keywords": "Property TargetVersion Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll TargetVersion public override Version TargetVersion { get; } Property Value Version"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1600.UpgradeWorldData.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1600.UpgradeWorldData.html",
    "title": "Method UpgradeWorldData | Nitrox",
    "keywords": "Method UpgradeWorldData Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll UpgradeWorldData(JObject) protected override void UpgradeWorldData(JObject data) Parameters data JObject"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1600.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1600.html",
    "title": "Class Upgrade_V1600 | Nitrox",
    "keywords": "Class Upgrade_V1600 Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll public class Upgrade_V1600 : SaveDataUpgrade Inheritance object SaveDataUpgrade Upgrade_V1600 Inherited Members SaveDataUpgrade.UpgradeSaveFiles(string, string) SaveDataUpgrade.UpgradeBaseData(JObject) SaveDataUpgrade.UpgradePlayerData(JObject) SaveDataUpgrade.UpgradeEntityData(JObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties TargetVersion Methods UpgradeWorldData(JObject)"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1601.TargetVersion.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1601.TargetVersion.html",
    "title": "Property TargetVersion | Nitrox",
    "keywords": "Property TargetVersion Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll TargetVersion public override Version TargetVersion { get; } Property Value Version"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1601.UpgradeWorldData.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1601.UpgradeWorldData.html",
    "title": "Method UpgradeWorldData | Nitrox",
    "keywords": "Method UpgradeWorldData Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll UpgradeWorldData(JObject) protected override void UpgradeWorldData(JObject data) Parameters data JObject"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1601.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.Upgrade_V1601.html",
    "title": "Class Upgrade_V1601 | Nitrox",
    "keywords": "Class Upgrade_V1601 Namespace NitroxServer.Serialization.SaveDataUpgrades Assembly NitroxServer.dll public class Upgrade_V1601 : SaveDataUpgrade Inheritance object SaveDataUpgrade Upgrade_V1601 Inherited Members SaveDataUpgrade.UpgradeSaveFiles(string, string) SaveDataUpgrade.UpgradeBaseData(JObject) SaveDataUpgrade.UpgradePlayerData(JObject) SaveDataUpgrade.UpgradeEntityData(JObject) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties TargetVersion Methods UpgradeWorldData(JObject)"
  },
  "api/NitroxServer.Serialization.SaveDataUpgrades.html": {
    "href": "api/NitroxServer.Serialization.SaveDataUpgrades.html",
    "title": "Namespace NitroxServer.Serialization.SaveDataUpgrades | Nitrox",
    "keywords": "Namespace NitroxServer.Serialization.SaveDataUpgrades Classes NewtonsoftExtensions Upgrade_V1500 Upgrade_V1600 Upgrade_V1601"
  },
  "api/NitroxServer.Serialization.ServerConfig.AdminPassword.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.AdminPassword.html",
    "title": "Property AdminPassword | Nitrox",
    "keywords": "Property AdminPassword Namespace NitroxServer.Serialization Assembly NitroxServer.dll AdminPassword public string AdminPassword { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.ServerConfig.AutoPortForward.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.AutoPortForward.html",
    "title": "Property AutoPortForward | Nitrox",
    "keywords": "Property AutoPortForward Namespace NitroxServer.Serialization Assembly NitroxServer.dll AutoPortForward [PropertyDescription(\"If set to true, the server will try to open port on your router via UPnP\")] public bool AutoPortForward { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.ServerConfig.CreateFullEntityCache.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.CreateFullEntityCache.html",
    "title": "Field CreateFullEntityCache | Nitrox",
    "keywords": "Field CreateFullEntityCache Namespace NitroxServer.Serialization Assembly NitroxServer.dll [PropertyDescription(\"Set to true to Cache entities for the whole map on next run. \\nWARNING! Will make server load take longer on the cache run but players will gain a performance boost when entering new areas.\")] public bool CreateFullEntityCache Returns bool"
  },
  "api/NitroxServer.Serialization.ServerConfig.DefaultHealthValue.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.DefaultHealthValue.html",
    "title": "Property DefaultHealthValue | Nitrox",
    "keywords": "Property DefaultHealthValue Namespace NitroxServer.Serialization Assembly NitroxServer.dll DefaultHealthValue public float DefaultHealthValue { get; set; } Property Value float"
  },
  "api/NitroxServer.Serialization.ServerConfig.DefaultHungerValue.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.DefaultHungerValue.html",
    "title": "Property DefaultHungerValue | Nitrox",
    "keywords": "Property DefaultHungerValue Namespace NitroxServer.Serialization Assembly NitroxServer.dll DefaultHungerValue public float DefaultHungerValue { get; set; } Property Value float"
  },
  "api/NitroxServer.Serialization.ServerConfig.DefaultInfectionValue.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.DefaultInfectionValue.html",
    "title": "Property DefaultInfectionValue | Nitrox",
    "keywords": "Property DefaultInfectionValue Namespace NitroxServer.Serialization Assembly NitroxServer.dll DefaultInfectionValue [PropertyDescription(\"Recommended to keep at 0.1f which is the default starting value. If set to 0 then new players are cured by default.\")] public float DefaultInfectionValue { get; set; } Property Value float"
  },
  "api/NitroxServer.Serialization.ServerConfig.DefaultMaxOxygenValue.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.DefaultMaxOxygenValue.html",
    "title": "Property DefaultMaxOxygenValue | Nitrox",
    "keywords": "Property DefaultMaxOxygenValue Namespace NitroxServer.Serialization Assembly NitroxServer.dll DefaultMaxOxygenValue public float DefaultMaxOxygenValue { get; set; } Property Value float"
  },
  "api/NitroxServer.Serialization.ServerConfig.DefaultOxygenValue.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.DefaultOxygenValue.html",
    "title": "Property DefaultOxygenValue | Nitrox",
    "keywords": "Property DefaultOxygenValue Namespace NitroxServer.Serialization Assembly NitroxServer.dll DefaultOxygenValue [PropertyDescription(\"\\nDefault player stats below here\")] public float DefaultOxygenValue { get; set; } Property Value float"
  },
  "api/NitroxServer.Serialization.ServerConfig.DefaultPlayerPerm.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.DefaultPlayerPerm.html",
    "title": "Property DefaultPlayerPerm | Nitrox",
    "keywords": "Property DefaultPlayerPerm Namespace NitroxServer.Serialization Assembly NitroxServer.dll DefaultPlayerPerm [PropertyDescription(\"Possible values:\", typeof(Perms))] public Perms DefaultPlayerPerm { get; set; } Property Value Perms"
  },
  "api/NitroxServer.Serialization.ServerConfig.DefaultPlayerStats.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.DefaultPlayerStats.html",
    "title": "Property DefaultPlayerStats | Nitrox",
    "keywords": "Property DefaultPlayerStats Namespace NitroxServer.Serialization Assembly NitroxServer.dll DefaultPlayerStats public PlayerStatsData DefaultPlayerStats { get; } Property Value PlayerStatsData"
  },
  "api/NitroxServer.Serialization.ServerConfig.DefaultThirstValue.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.DefaultThirstValue.html",
    "title": "Property DefaultThirstValue | Nitrox",
    "keywords": "Property DefaultThirstValue Namespace NitroxServer.Serialization Assembly NitroxServer.dll DefaultThirstValue public float DefaultThirstValue { get; set; } Property Value float"
  },
  "api/NitroxServer.Serialization.ServerConfig.DisableAutoSave.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.DisableAutoSave.html",
    "title": "Property DisableAutoSave | Nitrox",
    "keywords": "Property DisableAutoSave Namespace NitroxServer.Serialization Assembly NitroxServer.dll DisableAutoSave public bool DisableAutoSave { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.ServerConfig.DisableConsole.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.DisableConsole.html",
    "title": "Property DisableConsole | Nitrox",
    "keywords": "Property DisableConsole Namespace NitroxServer.Serialization Assembly NitroxServer.dll DisableConsole public bool DisableConsole { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.ServerConfig.FileName.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.FileName.html",
    "title": "Property FileName | Nitrox",
    "keywords": "Property FileName Namespace NitroxServer.Serialization Assembly NitroxServer.dll FileName public override string FileName { get; } Property Value string"
  },
  "api/NitroxServer.Serialization.ServerConfig.GameMode.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.GameMode.html",
    "title": "Property GameMode | Nitrox",
    "keywords": "Property GameMode Namespace NitroxServer.Serialization Assembly NitroxServer.dll GameMode [PropertyDescription(\"Possible values:\", typeof(NitroxGameMode))] public NitroxGameMode GameMode { get; set; } Property Value NitroxGameMode"
  },
  "api/NitroxServer.Serialization.ServerConfig.InitialSyncTimeout.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.InitialSyncTimeout.html",
    "title": "Property InitialSyncTimeout | Nitrox",
    "keywords": "Property InitialSyncTimeout Namespace NitroxServer.Serialization Assembly NitroxServer.dll InitialSyncTimeout public int InitialSyncTimeout { get; set; } Property Value int"
  },
  "api/NitroxServer.Serialization.ServerConfig.IsHardcore.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.IsHardcore.html",
    "title": "Property IsHardcore | Nitrox",
    "keywords": "Property IsHardcore Namespace NitroxServer.Serialization Assembly NitroxServer.dll IsHardcore public bool IsHardcore { get; } Property Value bool"
  },
  "api/NitroxServer.Serialization.ServerConfig.IsPasswordRequired.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.IsPasswordRequired.html",
    "title": "Property IsPasswordRequired | Nitrox",
    "keywords": "Property IsPasswordRequired Namespace NitroxServer.Serialization Assembly NitroxServer.dll IsPasswordRequired public bool IsPasswordRequired { get; } Property Value bool"
  },
  "api/NitroxServer.Serialization.ServerConfig.LANDiscoveryEnabled.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.LANDiscoveryEnabled.html",
    "title": "Property LANDiscoveryEnabled | Nitrox",
    "keywords": "Property LANDiscoveryEnabled Namespace NitroxServer.Serialization Assembly NitroxServer.dll LANDiscoveryEnabled [PropertyDescription(\"Determines whether the server will listen for and reply to LAN discovery requests.\")] public bool LANDiscoveryEnabled { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.ServerConfig.MaxConnections.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.MaxConnections.html",
    "title": "Property MaxConnections | Nitrox",
    "keywords": "Property MaxConnections Namespace NitroxServer.Serialization Assembly NitroxServer.dll MaxConnections public int MaxConnections { get; set; } Property Value int"
  },
  "api/NitroxServer.Serialization.ServerConfig.PostSaveCommandPath.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.PostSaveCommandPath.html",
    "title": "Property PostSaveCommandPath | Nitrox",
    "keywords": "Property PostSaveCommandPath Namespace NitroxServer.Serialization Assembly NitroxServer.dll PostSaveCommandPath [PropertyDescription(\"Command to run following a successful world save (e.g. .exe, .bat, or PowerShell script). \")] public string PostSaveCommandPath { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.ServerConfig.SafeBuilding.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.SafeBuilding.html",
    "title": "Property SafeBuilding | Nitrox",
    "keywords": "Property SafeBuilding Namespace NitroxServer.Serialization Assembly NitroxServer.dll SafeBuilding [PropertyDescription(\"When true, will reject any build actions detected as desynced\")] public bool SafeBuilding { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.ServerConfig.SaveInterval.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.SaveInterval.html",
    "title": "Property SaveInterval | Nitrox",
    "keywords": "Property SaveInterval Namespace NitroxServer.Serialization Assembly NitroxServer.dll SaveInterval [PropertyDescription(\"Measured in milliseconds\")] public int SaveInterval { get; set; } Property Value int"
  },
  "api/NitroxServer.Serialization.ServerConfig.SaveName.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.SaveName.html",
    "title": "Property SaveName | Nitrox",
    "keywords": "Property SaveName Namespace NitroxServer.Serialization Assembly NitroxServer.dll SaveName public string SaveName { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.ServerConfig.Seed.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.Seed.html",
    "title": "Property Seed | Nitrox",
    "keywords": "Property Seed Namespace NitroxServer.Serialization Assembly NitroxServer.dll Seed [PropertyDescription(\"Leave blank for a random spawn position\")] public string Seed { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.ServerConfig.SerializerMode.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.SerializerMode.html",
    "title": "Property SerializerMode | Nitrox",
    "keywords": "Property SerializerMode Namespace NitroxServer.Serialization Assembly NitroxServer.dll SerializerMode [PropertyDescription(\"Possible values:\", typeof(ServerSerializerMode))] public ServerSerializerMode SerializerMode { get; set; } Property Value ServerSerializerMode"
  },
  "api/NitroxServer.Serialization.ServerConfig.ServerPassword.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.ServerPassword.html",
    "title": "Property ServerPassword | Nitrox",
    "keywords": "Property ServerPassword Namespace NitroxServer.Serialization Assembly NitroxServer.dll ServerPassword public string ServerPassword { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.ServerConfig.ServerPort.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.ServerPort.html",
    "title": "Property ServerPort | Nitrox",
    "keywords": "Property ServerPort Namespace NitroxServer.Serialization Assembly NitroxServer.dll ServerPort public int ServerPort { get; set; } Property Value int"
  },
  "api/NitroxServer.Serialization.ServerConfig.html": {
    "href": "api/NitroxServer.Serialization.ServerConfig.html",
    "title": "Class ServerConfig | Nitrox",
    "keywords": "Class ServerConfig Namespace NitroxServer.Serialization Assembly NitroxServer.dll [PropertyDescription(\"Server settings can be changed here\")] public class ServerConfig : NitroxConfig<ServerConfig> Inheritance object NitroxConfig<ServerConfig> ServerConfig Inherited Members NitroxConfig<ServerConfig>.Load(string) NitroxConfig<ServerConfig>.Deserialize(string) NitroxConfig<ServerConfig>.Serialize(string) NitroxConfig<ServerConfig>.Update(string) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields CreateFullEntityCache Properties AdminPassword AutoPortForward DefaultHealthValue DefaultHungerValue DefaultInfectionValue DefaultMaxOxygenValue DefaultOxygenValue DefaultPlayerPerm DefaultPlayerStats DefaultThirstValue DisableAutoSave DisableConsole FileName GameMode InitialSyncTimeout IsHardcore IsPasswordRequired LANDiscoveryEnabled MaxConnections PostSaveCommandPath SafeBuilding SaveInterval SaveName Seed SerializerMode ServerPassword ServerPort"
  },
  "api/NitroxServer.Serialization.ServerJsonSerializer.-ctor.html": {
    "href": "api/NitroxServer.Serialization.ServerJsonSerializer.-ctor.html",
    "title": "Constructor ServerJsonSerializer | Nitrox",
    "keywords": "Constructor ServerJsonSerializer Namespace NitroxServer.Serialization Assembly NitroxServer.dll ServerJsonSerializer() public ServerJsonSerializer()"
  },
  "api/NitroxServer.Serialization.ServerJsonSerializer.Deserialize.html": {
    "href": "api/NitroxServer.Serialization.ServerJsonSerializer.Deserialize.html",
    "title": "Method Deserialize | Nitrox",
    "keywords": "Method Deserialize Namespace NitroxServer.Serialization Assembly NitroxServer.dll Deserialize<T>(Stream) public T Deserialize<T>(Stream stream) Parameters stream Stream Returns T Type Parameters T Deserialize<T>(string) public T Deserialize<T>(string filePath) Parameters filePath string Returns T Type Parameters T"
  },
  "api/NitroxServer.Serialization.ServerJsonSerializer.FileEnding.html": {
    "href": "api/NitroxServer.Serialization.ServerJsonSerializer.FileEnding.html",
    "title": "Property FileEnding | Nitrox",
    "keywords": "Property FileEnding Namespace NitroxServer.Serialization Assembly NitroxServer.dll FileEnding public string FileEnding { get; } Property Value string"
  },
  "api/NitroxServer.Serialization.ServerJsonSerializer.Serialize.html": {
    "href": "api/NitroxServer.Serialization.ServerJsonSerializer.Serialize.html",
    "title": "Method Serialize | Nitrox",
    "keywords": "Method Serialize Namespace NitroxServer.Serialization Assembly NitroxServer.dll Serialize(Stream, object) public void Serialize(Stream stream, object o) Parameters stream Stream o object Serialize(string, object) public void Serialize(string filePath, object o) Parameters filePath string o object"
  },
  "api/NitroxServer.Serialization.ServerJsonSerializer.html": {
    "href": "api/NitroxServer.Serialization.ServerJsonSerializer.html",
    "title": "Class ServerJsonSerializer | Nitrox",
    "keywords": "Class ServerJsonSerializer Namespace NitroxServer.Serialization Assembly NitroxServer.dll public class ServerJsonSerializer : IServerSerializer Inheritance object ServerJsonSerializer Implements IServerSerializer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerJsonSerializer() Properties FileEnding Methods Deserialize<T>(Stream) Deserialize<T>(string) Serialize(Stream, object) Serialize(string, object)"
  },
  "api/NitroxServer.Serialization.ServerProtoBufSerializer.-ctor.html": {
    "href": "api/NitroxServer.Serialization.ServerProtoBufSerializer.-ctor.html",
    "title": "Constructor ServerProtoBufSerializer | Nitrox",
    "keywords": "Constructor ServerProtoBufSerializer Namespace NitroxServer.Serialization Assembly NitroxServer.dll ServerProtoBufSerializer(params string[]) public ServerProtoBufSerializer(params string[] assemblies) Parameters assemblies string[]"
  },
  "api/NitroxServer.Serialization.ServerProtoBufSerializer.Deserialize.html": {
    "href": "api/NitroxServer.Serialization.ServerProtoBufSerializer.Deserialize.html",
    "title": "Method Deserialize | Nitrox",
    "keywords": "Method Deserialize Namespace NitroxServer.Serialization Assembly NitroxServer.dll Deserialize<T>(Stream) public T Deserialize<T>(Stream stream) Parameters stream Stream Returns T Type Parameters T Deserialize<T>(string) public T Deserialize<T>(string filePath) Parameters filePath string Returns T Type Parameters T Deserialize(Stream, object, Type) public void Deserialize(Stream stream, object o, Type t) Parameters stream Stream o object t Type"
  },
  "api/NitroxServer.Serialization.ServerProtoBufSerializer.FileEnding.html": {
    "href": "api/NitroxServer.Serialization.ServerProtoBufSerializer.FileEnding.html",
    "title": "Property FileEnding | Nitrox",
    "keywords": "Property FileEnding Namespace NitroxServer.Serialization Assembly NitroxServer.dll FileEnding public string FileEnding { get; } Property Value string"
  },
  "api/NitroxServer.Serialization.ServerProtoBufSerializer.Model.html": {
    "href": "api/NitroxServer.Serialization.ServerProtoBufSerializer.Model.html",
    "title": "Property Model | Nitrox",
    "keywords": "Property Model Namespace NitroxServer.Serialization Assembly NitroxServer.dll Model protected RuntimeTypeModel Model { get; } Property Value RuntimeTypeModel"
  },
  "api/NitroxServer.Serialization.ServerProtoBufSerializer.Serialize.html": {
    "href": "api/NitroxServer.Serialization.ServerProtoBufSerializer.Serialize.html",
    "title": "Method Serialize | Nitrox",
    "keywords": "Method Serialize Namespace NitroxServer.Serialization Assembly NitroxServer.dll Serialize(Stream, object) public void Serialize(Stream stream, object o) Parameters stream Stream o object Serialize(string, object) public void Serialize(string filePath, object o) Parameters filePath string o object"
  },
  "api/NitroxServer.Serialization.ServerProtoBufSerializer.html": {
    "href": "api/NitroxServer.Serialization.ServerProtoBufSerializer.html",
    "title": "Class ServerProtoBufSerializer | Nitrox",
    "keywords": "Class ServerProtoBufSerializer Namespace NitroxServer.Serialization Assembly NitroxServer.dll public class ServerProtoBufSerializer : IServerSerializer Inheritance object ServerProtoBufSerializer Implements IServerSerializer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerProtoBufSerializer(params string[]) Properties FileEnding Model Methods Deserialize(Stream, object, Type) Deserialize<T>(Stream) Deserialize<T>(string) Serialize(Stream, object) Serialize(string, object)"
  },
  "api/NitroxServer.Serialization.StreamHeader.Reset.html": {
    "href": "api/NitroxServer.Serialization.StreamHeader.Reset.html",
    "title": "Method Reset | Nitrox",
    "keywords": "Method Reset Namespace NitroxServer.Serialization Assembly NitroxServer.dll Reset() public void Reset()"
  },
  "api/NitroxServer.Serialization.StreamHeader.Signature.html": {
    "href": "api/NitroxServer.Serialization.StreamHeader.Signature.html",
    "title": "Property Signature | Nitrox",
    "keywords": "Property Signature Namespace NitroxServer.Serialization Assembly NitroxServer.dll Signature [ProtoMember(1)] public int Signature { get; set; } Property Value int"
  },
  "api/NitroxServer.Serialization.StreamHeader.ToString.html": {
    "href": "api/NitroxServer.Serialization.StreamHeader.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.Serialization Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.Serialization.StreamHeader.Version.html": {
    "href": "api/NitroxServer.Serialization.StreamHeader.Version.html",
    "title": "Property Version | Nitrox",
    "keywords": "Property Version Namespace NitroxServer.Serialization Assembly NitroxServer.dll Version [ProtoMember(2)] public int Version { get; set; } Property Value int"
  },
  "api/NitroxServer.Serialization.StreamHeader.html": {
    "href": "api/NitroxServer.Serialization.StreamHeader.html",
    "title": "Class StreamHeader | Nitrox",
    "keywords": "Class StreamHeader Namespace NitroxServer.Serialization Assembly NitroxServer.dll [ProtoContract] public class StreamHeader Inheritance object StreamHeader Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Signature Version Methods Reset() ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.TargetVersion.html": {
    "href": "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.TargetVersion.html",
    "title": "Property TargetVersion | Nitrox",
    "keywords": "Property TargetVersion Namespace NitroxServer.Serialization.Upgrade Assembly NitroxServer.dll TargetVersion public abstract Version TargetVersion { get; } Property Value Version"
  },
  "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.UpgradeBaseData.html": {
    "href": "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.UpgradeBaseData.html",
    "title": "Method UpgradeBaseData | Nitrox",
    "keywords": "Method UpgradeBaseData Namespace NitroxServer.Serialization.Upgrade Assembly NitroxServer.dll UpgradeBaseData(JObject) protected virtual void UpgradeBaseData(JObject data) Parameters data JObject"
  },
  "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.UpgradeEntityData.html": {
    "href": "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.UpgradeEntityData.html",
    "title": "Method UpgradeEntityData | Nitrox",
    "keywords": "Method UpgradeEntityData Namespace NitroxServer.Serialization.Upgrade Assembly NitroxServer.dll UpgradeEntityData(JObject) protected virtual void UpgradeEntityData(JObject data) Parameters data JObject"
  },
  "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.UpgradePlayerData.html": {
    "href": "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.UpgradePlayerData.html",
    "title": "Method UpgradePlayerData | Nitrox",
    "keywords": "Method UpgradePlayerData Namespace NitroxServer.Serialization.Upgrade Assembly NitroxServer.dll UpgradePlayerData(JObject) protected virtual void UpgradePlayerData(JObject data) Parameters data JObject"
  },
  "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.UpgradeSaveFiles.html": {
    "href": "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.UpgradeSaveFiles.html",
    "title": "Method UpgradeSaveFiles | Nitrox",
    "keywords": "Method UpgradeSaveFiles Namespace NitroxServer.Serialization.Upgrade Assembly NitroxServer.dll UpgradeSaveFiles(string, string) public void UpgradeSaveFiles(string saveDir, string fileEnding) Parameters saveDir string fileEnding string"
  },
  "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.UpgradeWorldData.html": {
    "href": "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.UpgradeWorldData.html",
    "title": "Method UpgradeWorldData | Nitrox",
    "keywords": "Method UpgradeWorldData Namespace NitroxServer.Serialization.Upgrade Assembly NitroxServer.dll UpgradeWorldData(JObject) protected virtual void UpgradeWorldData(JObject data) Parameters data JObject"
  },
  "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.html": {
    "href": "api/NitroxServer.Serialization.Upgrade.SaveDataUpgrade.html",
    "title": "Class SaveDataUpgrade | Nitrox",
    "keywords": "Class SaveDataUpgrade Namespace NitroxServer.Serialization.Upgrade Assembly NitroxServer.dll public abstract class SaveDataUpgrade Inheritance object SaveDataUpgrade Derived Upgrade_V1500 Upgrade_V1600 Upgrade_V1601 Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties TargetVersion Methods UpgradeBaseData(JObject) UpgradeEntityData(JObject) UpgradePlayerData(JObject) UpgradeSaveFiles(string, string) UpgradeWorldData(JObject)"
  },
  "api/NitroxServer.Serialization.Upgrade.html": {
    "href": "api/NitroxServer.Serialization.Upgrade.html",
    "title": "Namespace NitroxServer.Serialization.Upgrade | Nitrox",
    "keywords": "Namespace NitroxServer.Serialization.Upgrade Classes SaveDataUpgrade"
  },
  "api/NitroxServer.Serialization.World.PersistedWorldData.EntityData.html": {
    "href": "api/NitroxServer.Serialization.World.PersistedWorldData.EntityData.html",
    "title": "Property EntityData | Nitrox",
    "keywords": "Property EntityData Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll EntityData [DataMember(Order = 4)] public EntityData EntityData { get; set; } Property Value EntityData"
  },
  "api/NitroxServer.Serialization.World.PersistedWorldData.From.html": {
    "href": "api/NitroxServer.Serialization.World.PersistedWorldData.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll From(World) public static PersistedWorldData From(World world) Parameters world World Returns PersistedWorldData"
  },
  "api/NitroxServer.Serialization.World.PersistedWorldData.GlobalRootData.html": {
    "href": "api/NitroxServer.Serialization.World.PersistedWorldData.GlobalRootData.html",
    "title": "Property GlobalRootData | Nitrox",
    "keywords": "Property GlobalRootData Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll GlobalRootData [DataMember(Order = 3)] public GlobalRootData GlobalRootData { get; set; } Property Value GlobalRootData"
  },
  "api/NitroxServer.Serialization.World.PersistedWorldData.IsValid.html": {
    "href": "api/NitroxServer.Serialization.World.PersistedWorldData.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll IsValid() public bool IsValid() Returns bool"
  },
  "api/NitroxServer.Serialization.World.PersistedWorldData.PlayerData.html": {
    "href": "api/NitroxServer.Serialization.World.PersistedWorldData.PlayerData.html",
    "title": "Property PlayerData | Nitrox",
    "keywords": "Property PlayerData Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll PlayerData [DataMember(Order = 2)] public PlayerData PlayerData { get; set; } Property Value PlayerData"
  },
  "api/NitroxServer.Serialization.World.PersistedWorldData.WorldData.html": {
    "href": "api/NitroxServer.Serialization.World.PersistedWorldData.WorldData.html",
    "title": "Property WorldData | Nitrox",
    "keywords": "Property WorldData Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll WorldData [DataMember(Order = 1)] public WorldData WorldData { get; set; } Property Value WorldData"
  },
  "api/NitroxServer.Serialization.World.PersistedWorldData.html": {
    "href": "api/NitroxServer.Serialization.World.PersistedWorldData.html",
    "title": "Class PersistedWorldData | Nitrox",
    "keywords": "Class PersistedWorldData Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll [DataContract] public class PersistedWorldData Inheritance object PersistedWorldData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties EntityData GlobalRootData PlayerData WorldData Methods From(World) IsValid()"
  },
  "api/NitroxServer.Serialization.World.SaveFileVersion.-ctor.html": {
    "href": "api/NitroxServer.Serialization.World.SaveFileVersion.-ctor.html",
    "title": "Constructor SaveFileVersion | Nitrox",
    "keywords": "Constructor SaveFileVersion Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll SaveFileVersion() public SaveFileVersion() SaveFileVersion(Version) public SaveFileVersion(Version version) Parameters version Version"
  },
  "api/NitroxServer.Serialization.World.SaveFileVersion.Build.html": {
    "href": "api/NitroxServer.Serialization.World.SaveFileVersion.Build.html",
    "title": "Field Build | Nitrox",
    "keywords": "Field Build Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll [DataMember(Order = 3)] public readonly int Build Returns int"
  },
  "api/NitroxServer.Serialization.World.SaveFileVersion.Major.html": {
    "href": "api/NitroxServer.Serialization.World.SaveFileVersion.Major.html",
    "title": "Field Major | Nitrox",
    "keywords": "Field Major Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll [DataMember(Order = 1)] public readonly int Major Returns int"
  },
  "api/NitroxServer.Serialization.World.SaveFileVersion.Minor.html": {
    "href": "api/NitroxServer.Serialization.World.SaveFileVersion.Minor.html",
    "title": "Field Minor | Nitrox",
    "keywords": "Field Minor Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll [DataMember(Order = 2)] public readonly int Minor Returns int"
  },
  "api/NitroxServer.Serialization.World.SaveFileVersion.Revision.html": {
    "href": "api/NitroxServer.Serialization.World.SaveFileVersion.Revision.html",
    "title": "Field Revision | Nitrox",
    "keywords": "Field Revision Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll [DataMember(Order = 4)] public readonly int Revision Returns int"
  },
  "api/NitroxServer.Serialization.World.SaveFileVersion.ToString.html": {
    "href": "api/NitroxServer.Serialization.World.SaveFileVersion.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.Serialization.World.SaveFileVersion.Version.html": {
    "href": "api/NitroxServer.Serialization.World.SaveFileVersion.Version.html",
    "title": "Property Version | Nitrox",
    "keywords": "Property Version Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll Version public Version Version { get; } Property Value Version"
  },
  "api/NitroxServer.Serialization.World.SaveFileVersion.html": {
    "href": "api/NitroxServer.Serialization.World.SaveFileVersion.html",
    "title": "Class SaveFileVersion | Nitrox",
    "keywords": "Class SaveFileVersion Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll [DataContract] public class SaveFileVersion Inheritance object SaveFileVersion Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SaveFileVersion() SaveFileVersion(Version) Fields Build Major Minor Revision Properties Version Methods ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.Serialization.World.VersionMismatchException.-ctor.html": {
    "href": "api/NitroxServer.Serialization.World.VersionMismatchException.-ctor.html",
    "title": "Constructor VersionMismatchException | Nitrox",
    "keywords": "Constructor VersionMismatchException Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll VersionMismatchException() public VersionMismatchException() VersionMismatchException(string) public VersionMismatchException(string message) Parameters message string VersionMismatchException(string, Exception) public VersionMismatchException(string message, Exception inner) Parameters message string inner Exception VersionMismatchException(SerializationInfo, StreamingContext) protected VersionMismatchException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext"
  },
  "api/NitroxServer.Serialization.World.VersionMismatchException.ToString.html": {
    "href": "api/NitroxServer.Serialization.World.VersionMismatchException.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll ToString() Creates and returns a string representation of the current exception. public override string ToString() Returns string A string representation of the current exception."
  },
  "api/NitroxServer.Serialization.World.VersionMismatchException.html": {
    "href": "api/NitroxServer.Serialization.World.VersionMismatchException.html",
    "title": "Class VersionMismatchException | Nitrox",
    "keywords": "Class VersionMismatchException Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll [Serializable] public class VersionMismatchException : Exception, ISerializable, _Exception Inheritance object Exception VersionMismatchException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Extension Methods Extensions.GetFirstNonAggregateMessage(Exception) Constructors VersionMismatchException() VersionMismatchException(SerializationInfo, StreamingContext) VersionMismatchException(string) VersionMismatchException(string, Exception) Methods ToString() Creates and returns a string representation of the current exception."
  },
  "api/NitroxServer.Serialization.World.World.BatchEntitySpawner.html": {
    "href": "api/NitroxServer.Serialization.World.World.BatchEntitySpawner.html",
    "title": "Property BatchEntitySpawner | Nitrox",
    "keywords": "Property BatchEntitySpawner Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll BatchEntitySpawner public BatchEntitySpawner BatchEntitySpawner { get; set; } Property Value BatchEntitySpawner"
  },
  "api/NitroxServer.Serialization.World.World.BuildingManager.html": {
    "href": "api/NitroxServer.Serialization.World.World.BuildingManager.html",
    "title": "Property BuildingManager | Nitrox",
    "keywords": "Property BuildingManager Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll BuildingManager public BuildingManager BuildingManager { get; set; } Property Value BuildingManager"
  },
  "api/NitroxServer.Serialization.World.World.EntityRegistry.html": {
    "href": "api/NitroxServer.Serialization.World.World.EntityRegistry.html",
    "title": "Property EntityRegistry | Nitrox",
    "keywords": "Property EntityRegistry Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll EntityRegistry public EntityRegistry EntityRegistry { get; set; } Property Value EntityRegistry"
  },
  "api/NitroxServer.Serialization.World.World.EntitySimulation.html": {
    "href": "api/NitroxServer.Serialization.World.World.EntitySimulation.html",
    "title": "Property EntitySimulation | Nitrox",
    "keywords": "Property EntitySimulation Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll EntitySimulation public EntitySimulation EntitySimulation { get; set; } Property Value EntitySimulation"
  },
  "api/NitroxServer.Serialization.World.World.EscapePodManager.html": {
    "href": "api/NitroxServer.Serialization.World.World.EscapePodManager.html",
    "title": "Property EscapePodManager | Nitrox",
    "keywords": "Property EscapePodManager Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll EscapePodManager public EscapePodManager EscapePodManager { get; set; } Property Value EscapePodManager"
  },
  "api/NitroxServer.Serialization.World.World.GameData.html": {
    "href": "api/NitroxServer.Serialization.World.World.GameData.html",
    "title": "Property GameData | Nitrox",
    "keywords": "Property GameData Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll GameData public GameData GameData { get; set; } Property Value GameData"
  },
  "api/NitroxServer.Serialization.World.World.GameMode.html": {
    "href": "api/NitroxServer.Serialization.World.World.GameMode.html",
    "title": "Property GameMode | Nitrox",
    "keywords": "Property GameMode Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll GameMode public NitroxGameMode GameMode { get; set; } Property Value NitroxGameMode"
  },
  "api/NitroxServer.Serialization.World.World.PlayerManager.html": {
    "href": "api/NitroxServer.Serialization.World.World.PlayerManager.html",
    "title": "Property PlayerManager | Nitrox",
    "keywords": "Property PlayerManager Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll PlayerManager public PlayerManager PlayerManager { get; set; } Property Value PlayerManager"
  },
  "api/NitroxServer.Serialization.World.World.ScheduleKeeper.html": {
    "href": "api/NitroxServer.Serialization.World.World.ScheduleKeeper.html",
    "title": "Property ScheduleKeeper | Nitrox",
    "keywords": "Property ScheduleKeeper Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll ScheduleKeeper public ScheduleKeeper ScheduleKeeper { get; set; } Property Value ScheduleKeeper"
  },
  "api/NitroxServer.Serialization.World.World.Seed.html": {
    "href": "api/NitroxServer.Serialization.World.World.Seed.html",
    "title": "Property Seed | Nitrox",
    "keywords": "Property Seed Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll Seed public string Seed { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.World.World.SimulationOwnershipData.html": {
    "href": "api/NitroxServer.Serialization.World.World.SimulationOwnershipData.html",
    "title": "Property SimulationOwnershipData | Nitrox",
    "keywords": "Property SimulationOwnershipData Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll SimulationOwnershipData public SimulationOwnershipData SimulationOwnershipData { get; set; } Property Value SimulationOwnershipData"
  },
  "api/NitroxServer.Serialization.World.World.StoryManager.html": {
    "href": "api/NitroxServer.Serialization.World.World.StoryManager.html",
    "title": "Property StoryManager | Nitrox",
    "keywords": "Property StoryManager Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll StoryManager public StoryManager StoryManager { get; set; } Property Value StoryManager"
  },
  "api/NitroxServer.Serialization.World.World.TimeKeeper.html": {
    "href": "api/NitroxServer.Serialization.World.World.TimeKeeper.html",
    "title": "Property TimeKeeper | Nitrox",
    "keywords": "Property TimeKeeper Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll TimeKeeper public TimeKeeper TimeKeeper { get; set; } Property Value TimeKeeper"
  },
  "api/NitroxServer.Serialization.World.World.WorldEntityManager.html": {
    "href": "api/NitroxServer.Serialization.World.World.WorldEntityManager.html",
    "title": "Property WorldEntityManager | Nitrox",
    "keywords": "Property WorldEntityManager Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll WorldEntityManager public WorldEntityManager WorldEntityManager { get; set; } Property Value WorldEntityManager"
  },
  "api/NitroxServer.Serialization.World.World.html": {
    "href": "api/NitroxServer.Serialization.World.World.html",
    "title": "Class World | Nitrox",
    "keywords": "Class World Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll public class World Inheritance object World Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties BatchEntitySpawner BuildingManager EntityRegistry EntitySimulation EscapePodManager GameData GameMode PlayerManager ScheduleKeeper Seed SimulationOwnershipData StoryManager TimeKeeper WorldEntityManager"
  },
  "api/NitroxServer.Serialization.World.WorldData.GameData.html": {
    "href": "api/NitroxServer.Serialization.World.WorldData.GameData.html",
    "title": "Property GameData | Nitrox",
    "keywords": "Property GameData Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll GameData [DataMember(Order = 2)] public GameData GameData { get; set; } Property Value GameData"
  },
  "api/NitroxServer.Serialization.World.WorldData.IsValid.html": {
    "href": "api/NitroxServer.Serialization.World.WorldData.IsValid.html",
    "title": "Method IsValid | Nitrox",
    "keywords": "Method IsValid Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll IsValid() public bool IsValid() Returns bool"
  },
  "api/NitroxServer.Serialization.World.WorldData.ParsedBatchCells.html": {
    "href": "api/NitroxServer.Serialization.World.WorldData.ParsedBatchCells.html",
    "title": "Property ParsedBatchCells | Nitrox",
    "keywords": "Property ParsedBatchCells Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll ParsedBatchCells [DataMember(Order = 1)] public List<NitroxInt3> ParsedBatchCells { get; set; } Property Value List<NitroxInt3>"
  },
  "api/NitroxServer.Serialization.World.WorldData.Seed.html": {
    "href": "api/NitroxServer.Serialization.World.WorldData.Seed.html",
    "title": "Property Seed | Nitrox",
    "keywords": "Property Seed Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll Seed [DataMember(Order = 3)] public string Seed { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.World.WorldData.html": {
    "href": "api/NitroxServer.Serialization.World.WorldData.html",
    "title": "Class WorldData | Nitrox",
    "keywords": "Class WorldData Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll [DataContract] public class WorldData Inheritance object WorldData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties GameData ParsedBatchCells Seed Methods IsValid()"
  },
  "api/NitroxServer.Serialization.World.WorldManager.CreateEmptySave.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.CreateEmptySave.html",
    "title": "Method CreateEmptySave | Nitrox",
    "keywords": "Method CreateEmptySave Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll CreateEmptySave(string) public static string CreateEmptySave(string name) Parameters name string Returns string"
  },
  "api/NitroxServer.Serialization.World.WorldManager.GetSaves.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.GetSaves.html",
    "title": "Method GetSaves | Nitrox",
    "keywords": "Method GetSaves Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll GetSaves() public static IEnumerable<WorldManager.Listing> GetSaves() Returns IEnumerable<WorldManager.Listing>"
  },
  "api/NitroxServer.Serialization.World.WorldManager.Listing.FileLastAccessed.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.Listing.FileLastAccessed.html",
    "title": "Property FileLastAccessed | Nitrox",
    "keywords": "Property FileLastAccessed Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll FileLastAccessed public DateTime FileLastAccessed { get; set; } Property Value DateTime"
  },
  "api/NitroxServer.Serialization.World.WorldManager.Listing.IsValidSave.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.Listing.IsValidSave.html",
    "title": "Property IsValidSave | Nitrox",
    "keywords": "Property IsValidSave Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll IsValidSave public bool IsValidSave { get; set; } Property Value bool"
  },
  "api/NitroxServer.Serialization.World.WorldManager.Listing.WorldGamemode.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.Listing.WorldGamemode.html",
    "title": "Property WorldGamemode | Nitrox",
    "keywords": "Property WorldGamemode Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll WorldGamemode public string WorldGamemode { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.World.WorldManager.Listing.WorldName.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.Listing.WorldName.html",
    "title": "Property WorldName | Nitrox",
    "keywords": "Property WorldName Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll WorldName public string WorldName { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.World.WorldManager.Listing.WorldSaveDir.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.Listing.WorldSaveDir.html",
    "title": "Property WorldSaveDir | Nitrox",
    "keywords": "Property WorldSaveDir Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll WorldSaveDir public string WorldSaveDir { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.World.WorldManager.Listing.WorldVersion.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.Listing.WorldVersion.html",
    "title": "Property WorldVersion | Nitrox",
    "keywords": "Property WorldVersion Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll WorldVersion public string WorldVersion { get; set; } Property Value string"
  },
  "api/NitroxServer.Serialization.World.WorldManager.Listing.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.Listing.html",
    "title": "Class WorldManager.Listing | Nitrox",
    "keywords": "Class WorldManager.Listing Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll public class WorldManager.Listing Inheritance object WorldManager.Listing Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties FileLastAccessed IsValidSave WorldGamemode WorldName WorldSaveDir WorldVersion"
  },
  "api/NitroxServer.Serialization.World.WorldManager.Refresh.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.Refresh.html",
    "title": "Method Refresh | Nitrox",
    "keywords": "Method Refresh Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll Refresh() public static void Refresh()"
  },
  "api/NitroxServer.Serialization.World.WorldManager.SavesFolderDir.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.SavesFolderDir.html",
    "title": "Field SavesFolderDir | Nitrox",
    "keywords": "Field SavesFolderDir Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll public static readonly string SavesFolderDir Returns string"
  },
  "api/NitroxServer.Serialization.World.WorldManager.ValidateSave.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.ValidateSave.html",
    "title": "Method ValidateSave | Nitrox",
    "keywords": "Method ValidateSave Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll ValidateSave(string, bool) public static bool ValidateSave(string saveFileDirectory, bool isImporting = false) Parameters saveFileDirectory string isImporting bool Returns bool"
  },
  "api/NitroxServer.Serialization.World.WorldManager.html": {
    "href": "api/NitroxServer.Serialization.World.WorldManager.html",
    "title": "Class WorldManager | Nitrox",
    "keywords": "Class WorldManager Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll public static class WorldManager Inheritance object WorldManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields SavesFolderDir Methods CreateEmptySave(string) GetSaves() Refresh() ValidateSave(string, bool)"
  },
  "api/NitroxServer.Serialization.World.WorldPersistence.-ctor.html": {
    "href": "api/NitroxServer.Serialization.World.WorldPersistence.-ctor.html",
    "title": "Constructor WorldPersistence | Nitrox",
    "keywords": "Constructor WorldPersistence Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll WorldPersistence(ServerProtoBufSerializer, ServerJsonSerializer, ServerConfig, RandomStartGenerator, SaveDataUpgrade[]) public WorldPersistence(ServerProtoBufSerializer protoBufSerializer, ServerJsonSerializer jsonSerializer, ServerConfig config, RandomStartGenerator randomStart, SaveDataUpgrade[] upgrades) Parameters protoBufSerializer ServerProtoBufSerializer jsonSerializer ServerJsonSerializer config ServerConfig randomStart RandomStartGenerator upgrades SaveDataUpgrade[]"
  },
  "api/NitroxServer.Serialization.World.WorldPersistence.CreateWorld.html": {
    "href": "api/NitroxServer.Serialization.World.WorldPersistence.CreateWorld.html",
    "title": "Method CreateWorld | Nitrox",
    "keywords": "Method CreateWorld Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll CreateWorld(PersistedWorldData, NitroxGameMode) public World CreateWorld(PersistedWorldData pWorldData, NitroxGameMode gameMode) Parameters pWorldData PersistedWorldData gameMode NitroxGameMode Returns World"
  },
  "api/NitroxServer.Serialization.World.WorldPersistence.Load.html": {
    "href": "api/NitroxServer.Serialization.World.WorldPersistence.Load.html",
    "title": "Method Load | Nitrox",
    "keywords": "Method Load Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll Load() public World Load() Returns World"
  },
  "api/NitroxServer.Serialization.World.WorldPersistence.Save.html": {
    "href": "api/NitroxServer.Serialization.World.WorldPersistence.Save.html",
    "title": "Method Save | Nitrox",
    "keywords": "Method Save Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll Save(World, string) public bool Save(World world, string saveDir) Parameters world World saveDir string Returns bool"
  },
  "api/NitroxServer.Serialization.World.WorldPersistence.Serializer.html": {
    "href": "api/NitroxServer.Serialization.World.WorldPersistence.Serializer.html",
    "title": "Property Serializer | Nitrox",
    "keywords": "Property Serializer Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll Serializer public IServerSerializer Serializer { get; } Property Value IServerSerializer"
  },
  "api/NitroxServer.Serialization.World.WorldPersistence.html": {
    "href": "api/NitroxServer.Serialization.World.WorldPersistence.html",
    "title": "Class WorldPersistence | Nitrox",
    "keywords": "Class WorldPersistence Namespace NitroxServer.Serialization.World Assembly NitroxServer.dll public class WorldPersistence Inheritance object WorldPersistence Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WorldPersistence(ServerProtoBufSerializer, ServerJsonSerializer, ServerConfig, RandomStartGenerator, SaveDataUpgrade[]) Properties Serializer Methods CreateWorld(PersistedWorldData, NitroxGameMode) Load() Save(World, string)"
  },
  "api/NitroxServer.Serialization.World.html": {
    "href": "api/NitroxServer.Serialization.World.html",
    "title": "Namespace NitroxServer.Serialization.World | Nitrox",
    "keywords": "Namespace NitroxServer.Serialization.World Classes PersistedWorldData SaveFileVersion VersionMismatchException World WorldData WorldManager WorldManager.Listing WorldPersistence"
  },
  "api/NitroxServer.Serialization.WorldPersistenceTest.ClassCleanup.html": {
    "href": "api/NitroxServer.Serialization.WorldPersistenceTest.ClassCleanup.html",
    "title": "Method ClassCleanup | Nitrox",
    "keywords": "Method ClassCleanup Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll ClassCleanup() [ClassCleanup] public static void ClassCleanup()"
  },
  "api/NitroxServer.Serialization.WorldPersistenceTest.ClassInitialize.html": {
    "href": "api/NitroxServer.Serialization.WorldPersistenceTest.ClassInitialize.html",
    "title": "Method ClassInitialize | Nitrox",
    "keywords": "Method ClassInitialize Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll ClassInitialize(TestContext) [ClassInitialize] public static void ClassInitialize(TestContext context) Parameters context TestContext"
  },
  "api/NitroxServer.Serialization.WorldPersistenceTest.EntityDataTest.html": {
    "href": "api/NitroxServer.Serialization.WorldPersistenceTest.EntityDataTest.html",
    "title": "Method EntityDataTest | Nitrox",
    "keywords": "Method EntityDataTest Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll EntityDataTest(PersistedWorldData, string) [DataTestMethod] public void EntityDataTest(PersistedWorldData worldDataAfter, string serializerName) Parameters worldDataAfter PersistedWorldData serializerName string"
  },
  "api/NitroxServer.Serialization.WorldPersistenceTest.PlayerDataTest.html": {
    "href": "api/NitroxServer.Serialization.WorldPersistenceTest.PlayerDataTest.html",
    "title": "Method PlayerDataTest | Nitrox",
    "keywords": "Method PlayerDataTest Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll PlayerDataTest(PersistedWorldData, string) [DataTestMethod] public void PlayerDataTest(PersistedWorldData worldDataAfter, string serializerName) Parameters worldDataAfter PersistedWorldData serializerName string"
  },
  "api/NitroxServer.Serialization.WorldPersistenceTest.ServerSerializers.html": {
    "href": "api/NitroxServer.Serialization.WorldPersistenceTest.ServerSerializers.html",
    "title": "Property ServerSerializers | Nitrox",
    "keywords": "Property ServerSerializers Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll ServerSerializers public static IServerSerializer[] ServerSerializers { get; } Property Value IServerSerializer[]"
  },
  "api/NitroxServer.Serialization.WorldPersistenceTest.WorldDataTest.html": {
    "href": "api/NitroxServer.Serialization.WorldPersistenceTest.WorldDataTest.html",
    "title": "Method WorldDataTest | Nitrox",
    "keywords": "Method WorldDataTest Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll WorldDataTest(PersistedWorldData, string) [DataTestMethod] public void WorldDataTest(PersistedWorldData worldDataAfter, string serializerName) Parameters worldDataAfter PersistedWorldData serializerName string"
  },
  "api/NitroxServer.Serialization.WorldPersistenceTest.WorldsDataAfter.html": {
    "href": "api/NitroxServer.Serialization.WorldPersistenceTest.WorldsDataAfter.html",
    "title": "Property WorldsDataAfter | Nitrox",
    "keywords": "Property WorldsDataAfter Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll WorldsDataAfter public static PersistedWorldData[] WorldsDataAfter { get; } Property Value PersistedWorldData[]"
  },
  "api/NitroxServer.Serialization.WorldPersistenceTest.html": {
    "href": "api/NitroxServer.Serialization.WorldPersistenceTest.html",
    "title": "Class WorldPersistenceTest | Nitrox",
    "keywords": "Class WorldPersistenceTest Namespace NitroxServer.Serialization Assembly Nitrox.Test.dll [TestClass] public class WorldPersistenceTest Inheritance object WorldPersistenceTest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ServerSerializers WorldsDataAfter Methods ClassCleanup() ClassInitialize(TestContext) EntityDataTest(PersistedWorldData, string) PlayerDataTest(PersistedWorldData, string) WorldDataTest(PersistedWorldData, string)"
  },
  "api/NitroxServer.Serialization.html": {
    "href": "api/NitroxServer.Serialization.html",
    "title": "Namespace NitroxServer.Serialization | Nitrox",
    "keywords": "Namespace NitroxServer.Serialization Namespaces NitroxServer.Serialization.Json NitroxServer.Serialization.SaveDataUpgrades NitroxServer.Serialization.Upgrade NitroxServer.Serialization.World Classes BatchCellsParser CellHeader CellHeaderEx CellsFileHeader ComponentHeader DynamicWorldDataAfterAttribute GameObjectData LoopHeader ServerConfig ServerJsonSerializer ServerProtoBufSerializer StreamHeader WorldPersistenceTest Interfaces IServerSerializer"
  },
  "api/NitroxServer.Server.-ctor.html": {
    "href": "api/NitroxServer.Server.-ctor.html",
    "title": "Constructor Server | Nitrox",
    "keywords": "Constructor Server Namespace NitroxServer Assembly NitroxServer.dll Server(WorldPersistence, World, ServerConfig, NitroxServer, WorldEntityManager, EntityRegistry) public Server(WorldPersistence worldPersistence, World world, ServerConfig serverConfig, NitroxServer server, WorldEntityManager worldEntityManager, EntityRegistry entityRegistry) Parameters worldPersistence WorldPersistence world World serverConfig ServerConfig server NitroxServer worldEntityManager WorldEntityManager entityRegistry EntityRegistry"
  },
  "api/NitroxServer.Server.DisablePeriodicSaving.html": {
    "href": "api/NitroxServer.Server.DisablePeriodicSaving.html",
    "title": "Method DisablePeriodicSaving | Nitrox",
    "keywords": "Method DisablePeriodicSaving Namespace NitroxServer Assembly NitroxServer.dll DisablePeriodicSaving() public void DisablePeriodicSaving()"
  },
  "api/NitroxServer.Server.EnablePeriodicSaving.html": {
    "href": "api/NitroxServer.Server.EnablePeriodicSaving.html",
    "title": "Method EnablePeriodicSaving | Nitrox",
    "keywords": "Method EnablePeriodicSaving Namespace NitroxServer Assembly NitroxServer.dll EnablePeriodicSaving() public void EnablePeriodicSaving()"
  },
  "api/NitroxServer.Server.GetSaveSummary.html": {
    "href": "api/NitroxServer.Server.GetSaveSummary.html",
    "title": "Method GetSaveSummary | Nitrox",
    "keywords": "Method GetSaveSummary Namespace NitroxServer Assembly NitroxServer.dll GetSaveSummary(Perms) public string GetSaveSummary(Perms viewerPerms = Perms.CONSOLE) Parameters viewerPerms Perms Returns string"
  },
  "api/NitroxServer.Server.Instance.html": {
    "href": "api/NitroxServer.Server.Instance.html",
    "title": "Property Instance | Nitrox",
    "keywords": "Property Instance Namespace NitroxServer Assembly NitroxServer.dll Instance public static Server Instance { get; } Property Value Server"
  },
  "api/NitroxServer.Server.IsRunning.html": {
    "href": "api/NitroxServer.Server.IsRunning.html",
    "title": "Property IsRunning | Nitrox",
    "keywords": "Property IsRunning Namespace NitroxServer Assembly NitroxServer.dll IsRunning public bool IsRunning { get; } Property Value bool"
  },
  "api/NitroxServer.Server.IsSaving.html": {
    "href": "api/NitroxServer.Server.IsSaving.html",
    "title": "Property IsSaving | Nitrox",
    "keywords": "Property IsSaving Namespace NitroxServer Assembly NitroxServer.dll IsSaving public bool IsSaving { get; } Property Value bool"
  },
  "api/NitroxServer.Server.PauseServer.html": {
    "href": "api/NitroxServer.Server.PauseServer.html",
    "title": "Method PauseServer | Nitrox",
    "keywords": "Method PauseServer Namespace NitroxServer Assembly NitroxServer.dll PauseServer() public void PauseServer()"
  },
  "api/NitroxServer.Server.Port.html": {
    "href": "api/NitroxServer.Server.Port.html",
    "title": "Property Port | Nitrox",
    "keywords": "Property Port Namespace NitroxServer Assembly NitroxServer.dll Port public int Port { get; } Property Value int"
  },
  "api/NitroxServer.Server.ResumeServer.html": {
    "href": "api/NitroxServer.Server.ResumeServer.html",
    "title": "Method ResumeServer | Nitrox",
    "keywords": "Method ResumeServer Namespace NitroxServer Assembly NitroxServer.dll ResumeServer() public void ResumeServer()"
  },
  "api/NitroxServer.Server.Save.html": {
    "href": "api/NitroxServer.Server.Save.html",
    "title": "Method Save | Nitrox",
    "keywords": "Method Save Namespace NitroxServer Assembly NitroxServer.dll Save() public void Save()"
  },
  "api/NitroxServer.Server.ServerStartHandler.html": {
    "href": "api/NitroxServer.Server.ServerStartHandler.html",
    "title": "Method ServerStartHandler | Nitrox",
    "keywords": "Method ServerStartHandler Namespace NitroxServer Assembly NitroxServer.dll ServerStartHandler() public static ServerConfig ServerStartHandler() Returns ServerConfig"
  },
  "api/NitroxServer.Server.Start.html": {
    "href": "api/NitroxServer.Server.Start.html",
    "title": "Method Start | Nitrox",
    "keywords": "Method Start Namespace NitroxServer Assembly NitroxServer.dll Start(CancellationTokenSource) public bool Start(CancellationTokenSource cancellationToken) Parameters cancellationToken CancellationTokenSource Returns bool"
  },
  "api/NitroxServer.Server.Stop.html": {
    "href": "api/NitroxServer.Server.Stop.html",
    "title": "Method Stop | Nitrox",
    "keywords": "Method Stop Namespace NitroxServer Assembly NitroxServer.dll Stop(bool) public void Stop(bool shouldSave = true) Parameters shouldSave bool"
  },
  "api/NitroxServer.Server.StopAndWait.html": {
    "href": "api/NitroxServer.Server.StopAndWait.html",
    "title": "Method StopAndWait | Nitrox",
    "keywords": "Method StopAndWait Namespace NitroxServer Assembly NitroxServer.dll StopAndWait(bool) public void StopAndWait(bool shouldSave = true) Parameters shouldSave bool"
  },
  "api/NitroxServer.Server.html": {
    "href": "api/NitroxServer.Server.html",
    "title": "Class Server | Nitrox",
    "keywords": "Class Server Namespace NitroxServer Assembly NitroxServer.dll public class Server Inheritance object Server Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Server(WorldPersistence, World, ServerConfig, NitroxServer, WorldEntityManager, EntityRegistry) Properties Instance IsRunning IsSaving Port Methods DisablePeriodicSaving() EnablePeriodicSaving() GetSaveSummary(Perms) PauseServer() ResumeServer() Save() ServerStartHandler() Start(CancellationTokenSource) Stop(bool) StopAndWait(bool)"
  },
  "api/NitroxServer.ServerAutoFacRegistrar.RegisterDependencies.html": {
    "href": "api/NitroxServer.ServerAutoFacRegistrar.RegisterDependencies.html",
    "title": "Method RegisterDependencies | Nitrox",
    "keywords": "Method RegisterDependencies Namespace NitroxServer Assembly NitroxServer.dll RegisterDependencies(ContainerBuilder) public virtual void RegisterDependencies(ContainerBuilder containerBuilder) Parameters containerBuilder ContainerBuilder"
  },
  "api/NitroxServer.ServerAutoFacRegistrar.html": {
    "href": "api/NitroxServer.ServerAutoFacRegistrar.html",
    "title": "Class ServerAutoFacRegistrar | Nitrox",
    "keywords": "Class ServerAutoFacRegistrar Namespace NitroxServer Assembly NitroxServer.dll public class ServerAutoFacRegistrar : IAutoFacRegistrar Inheritance object ServerAutoFacRegistrar Implements IAutoFacRegistrar Derived SubnauticaServerAutoFacRegistrar Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods RegisterDependencies(ContainerBuilder)"
  },
  "api/NitroxServer.UnityStubs.GameObject.-ctor.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.-ctor.html",
    "title": "Constructor GameObject | Nitrox",
    "keywords": "Constructor GameObject Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll GameObject(GameObjectData) public GameObject(GameObjectData goData) Parameters goData GameObjectData"
  },
  "api/NitroxServer.UnityStubs.GameObject.AddComponent.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.AddComponent.html",
    "title": "Method AddComponent | Nitrox",
    "keywords": "Method AddComponent Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll AddComponent(object, Type) public void AddComponent(object component, Type componentType) Parameters component object componentType Type"
  },
  "api/NitroxServer.UnityStubs.GameObject.ClassId.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.ClassId.html",
    "title": "Property ClassId | Nitrox",
    "keywords": "Property ClassId Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll ClassId public string ClassId { get; } Property Value string"
  },
  "api/NitroxServer.UnityStubs.GameObject.GetComponent.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.GetComponent.html",
    "title": "Method GetComponent | Nitrox",
    "keywords": "Method GetComponent Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll GetComponent(Type) public object GetComponent(Type type) Parameters type Type Returns object GetComponent<T>() public T GetComponent<T>() Returns T Type Parameters T"
  },
  "api/NitroxServer.UnityStubs.GameObject.HasComponent.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.HasComponent.html",
    "title": "Method HasComponent | Nitrox",
    "keywords": "Method HasComponent Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll HasComponent<T>() public bool HasComponent<T>() Returns bool Type Parameters T"
  },
  "api/NitroxServer.UnityStubs.GameObject.Id.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.Id.html",
    "title": "Property Id | Nitrox",
    "keywords": "Property Id Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll Id public string Id { get; } Property Value string"
  },
  "api/NitroxServer.UnityStubs.GameObject.IsActive.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.IsActive.html",
    "title": "Property IsActive | Nitrox",
    "keywords": "Property IsActive Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll IsActive public bool IsActive { get; } Property Value bool"
  },
  "api/NitroxServer.UnityStubs.GameObject.Layer.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.Layer.html",
    "title": "Property Layer | Nitrox",
    "keywords": "Property Layer Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll Layer public int Layer { get; } Property Value int"
  },
  "api/NitroxServer.UnityStubs.GameObject.Parent.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.Parent.html",
    "title": "Property Parent | Nitrox",
    "keywords": "Property Parent Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll Parent public string Parent { get; } Property Value string"
  },
  "api/NitroxServer.UnityStubs.GameObject.Tag.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.Tag.html",
    "title": "Property Tag | Nitrox",
    "keywords": "Property Tag Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll Tag public string Tag { get; } Property Value string"
  },
  "api/NitroxServer.UnityStubs.GameObject.ToString.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.ToString.html",
    "title": "Method ToString | Nitrox",
    "keywords": "Method ToString Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NitroxServer.UnityStubs.GameObject.TotalComponents.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.TotalComponents.html",
    "title": "Property TotalComponents | Nitrox",
    "keywords": "Property TotalComponents Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll TotalComponents public int TotalComponents { get; } Property Value int"
  },
  "api/NitroxServer.UnityStubs.GameObject.html": {
    "href": "api/NitroxServer.UnityStubs.GameObject.html",
    "title": "Class GameObject | Nitrox",
    "keywords": "Class GameObject Namespace NitroxServer.UnityStubs Assembly NitroxServer.dll public class GameObject Inheritance object GameObject Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GameObject(GameObjectData) Properties ClassId Id IsActive Layer Parent Tag TotalComponents Methods AddComponent(object, Type) GetComponent(Type) GetComponent<T>() HasComponent<T>() ToString() Returns a string that represents the current object."
  },
  "api/NitroxServer.UnityStubs.html": {
    "href": "api/NitroxServer.UnityStubs.html",
    "title": "Namespace NitroxServer.UnityStubs | Nitrox",
    "keywords": "Namespace NitroxServer.UnityStubs Classes GameObject"
  },
  "api/NitroxServer.html": {
    "href": "api/NitroxServer.html",
    "title": "Namespace NitroxServer | Nitrox",
    "keywords": "Namespace NitroxServer Namespaces NitroxServer.Communication NitroxServer.ConsoleCommands NitroxServer.GameLogic NitroxServer.Helper NitroxServer.Resources NitroxServer.Serialization NitroxServer.UnityStubs Classes Player Server ServerAutoFacRegistrar"
  },
  "api/NitroxServer_Subnautica.AppMutex.Hold.html": {
    "href": "api/NitroxServer_Subnautica.AppMutex.Hold.html",
    "title": "Method Hold | Nitrox",
    "keywords": "Method Hold Namespace NitroxServer_Subnautica Assembly NitroxServer-Subnautica.dll Hold(Action, int) public static void Hold(Action onWaitingForMutex = null, int timeoutInMs = 5000) Parameters onWaitingForMutex Action timeoutInMs int"
  },
  "api/NitroxServer_Subnautica.AppMutex.Release.html": {
    "href": "api/NitroxServer_Subnautica.AppMutex.Release.html",
    "title": "Method Release | Nitrox",
    "keywords": "Method Release Namespace NitroxServer_Subnautica Assembly NitroxServer-Subnautica.dll Release() public static void Release()"
  },
  "api/NitroxServer_Subnautica.AppMutex.html": {
    "href": "api/NitroxServer_Subnautica.AppMutex.html",
    "title": "Class AppMutex | Nitrox",
    "keywords": "Class AppMutex Namespace NitroxServer_Subnautica Assembly NitroxServer-Subnautica.dll public static class AppMutex Inheritance object AppMutex Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Hold(Action, int) Release()"
  },
  "api/NitroxServer_Subnautica.Communication.Packets.Processors.CyclopsDamageProcessor.-ctor.html": {
    "href": "api/NitroxServer_Subnautica.Communication.Packets.Processors.CyclopsDamageProcessor.-ctor.html",
    "title": "Constructor CyclopsDamageProcessor | Nitrox",
    "keywords": "Constructor CyclopsDamageProcessor Namespace NitroxServer_Subnautica.Communication.Packets.Processors Assembly NitroxServer-Subnautica.dll CyclopsDamageProcessor(PlayerManager) public CyclopsDamageProcessor(PlayerManager playerManager) Parameters playerManager PlayerManager"
  },
  "api/NitroxServer_Subnautica.Communication.Packets.Processors.CyclopsDamageProcessor.Process.html": {
    "href": "api/NitroxServer_Subnautica.Communication.Packets.Processors.CyclopsDamageProcessor.Process.html",
    "title": "Method Process | Nitrox",
    "keywords": "Method Process Namespace NitroxServer_Subnautica.Communication.Packets.Processors Assembly NitroxServer-Subnautica.dll Process(CyclopsDamage, Player) public override void Process(CyclopsDamage packet, Player simulatingPlayer) Parameters packet CyclopsDamage simulatingPlayer Player"
  },
  "api/NitroxServer_Subnautica.Communication.Packets.Processors.CyclopsDamageProcessor.html": {
    "href": "api/NitroxServer_Subnautica.Communication.Packets.Processors.CyclopsDamageProcessor.html",
    "title": "Class CyclopsDamageProcessor | Nitrox",
    "keywords": "Class CyclopsDamageProcessor Namespace NitroxServer_Subnautica.Communication.Packets.Processors Assembly NitroxServer-Subnautica.dll This is the absolute damage state. The current simulation owner is the only one who sends this packet to the server public class CyclopsDamageProcessor : AuthenticatedPacketProcessor<CyclopsDamage> Inheritance object PacketProcessor AuthenticatedPacketProcessor<CyclopsDamage> CyclopsDamageProcessor Inherited Members AuthenticatedPacketProcessor<CyclopsDamage>.ProcessPacket(Packet, IProcessorContext) PacketProcessor.GetProcessors(Dictionary<Type, object>, Func<Type, bool>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CyclopsDamageProcessor(PlayerManager) Methods Process(CyclopsDamage, Player)"
  },
  "api/NitroxServer_Subnautica.Communication.Packets.Processors.html": {
    "href": "api/NitroxServer_Subnautica.Communication.Packets.Processors.html",
    "title": "Namespace NitroxServer_Subnautica.Communication.Packets.Processors | Nitrox",
    "keywords": "Namespace NitroxServer_Subnautica.Communication.Packets.Processors Classes CyclopsDamageProcessor This is the absolute damage state. The current simulation owner is the only one who sends this packet to the server"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.SimulationWhitelist.ForServerSpawned.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.SimulationWhitelist.ForServerSpawned.html",
    "title": "Field ForServerSpawned | Nitrox",
    "keywords": "Field ForServerSpawned Namespace NitroxServer_Subnautica.GameLogic.Entities Assembly NitroxServer-Subnautica.dll public static readonly HashSet<NitroxTechType> ForServerSpawned Returns HashSet<NitroxTechType>"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.SimulationWhitelist.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.SimulationWhitelist.html",
    "title": "Class SimulationWhitelist | Nitrox",
    "keywords": "Class SimulationWhitelist Namespace NitroxServer_Subnautica.GameLogic.Entities Assembly NitroxServer-Subnautica.dll public class SimulationWhitelist Inheritance object SimulationWhitelist Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields ForServerSpawned"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.CrashFishBootstrapper.Prepare.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.CrashFishBootstrapper.Prepare.html",
    "title": "Method Prepare | Nitrox",
    "keywords": "Method Prepare Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll Prepare(WorldEntity, DeterministicGenerator) public void Prepare(WorldEntity entity, DeterministicGenerator deterministicBatchGenerator) Parameters entity WorldEntity deterministicBatchGenerator DeterministicGenerator"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.CrashFishBootstrapper.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.CrashFishBootstrapper.html",
    "title": "Class CrashFishBootstrapper | Nitrox",
    "keywords": "Class CrashFishBootstrapper Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll public class CrashFishBootstrapper : IEntityBootstrapper Inheritance object CrashFishBootstrapper Implements IEntityBootstrapper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Prepare(WorldEntity, DeterministicGenerator)"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.LocalCreatureSpawnPoints.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.LocalCreatureSpawnPoints.html",
    "title": "Property LocalCreatureSpawnPoints | Nitrox",
    "keywords": "Property LocalCreatureSpawnPoints Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll LocalCreatureSpawnPoints public static List<NitroxVector3> LocalCreatureSpawnPoints { get; } Property Value List<NitroxVector3>"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.classId.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.classId.html",
    "title": "Field classId | Nitrox",
    "keywords": "Field classId Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll public string classId Returns string"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.html",
    "title": "Struct ReefbackSpawnData.ReefbackEntity | Nitrox",
    "keywords": "Struct ReefbackSpawnData.ReefbackEntity Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll public struct ReefbackSpawnData.ReefbackEntity Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields classId maxNumber minNumber probability techType"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.maxNumber.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.maxNumber.html",
    "title": "Field maxNumber | Nitrox",
    "keywords": "Field maxNumber Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll public int maxNumber Returns int"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.minNumber.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.minNumber.html",
    "title": "Field minNumber | Nitrox",
    "keywords": "Field minNumber Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll public int minNumber Returns int"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.probability.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.probability.html",
    "title": "Field probability | Nitrox",
    "keywords": "Field probability Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll public float probability Returns float"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.techType.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.ReefbackEntity.techType.html",
    "title": "Field techType | Nitrox",
    "keywords": "Field techType Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll public TechType techType Returns TechType"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.SpawnableCreatures.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.SpawnableCreatures.html",
    "title": "Property SpawnableCreatures | Nitrox",
    "keywords": "Property SpawnableCreatures Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll SpawnableCreatures public static List<ReefbackSpawnData.ReefbackEntity> SpawnableCreatures { get; } Property Value List<ReefbackSpawnData.ReefbackEntity>"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.ReefbackSpawnData.html",
    "title": "Class ReefbackSpawnData | Nitrox",
    "keywords": "Class ReefbackSpawnData Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Assembly NitroxServer-Subnautica.dll public static class ReefbackSpawnData Inheritance object ReefbackSpawnData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties LocalCreatureSpawnPoints SpawnableCreatures"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers.html",
    "title": "Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers | Nitrox",
    "keywords": "Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Classes CrashFishBootstrapper ReefbackSpawnData Structs ReefbackSpawnData.ReefbackEntity"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.SlotsHelper.ConvertSlotTypes.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.SlotsHelper.ConvertSlotTypes.html",
    "title": "Method ConvertSlotTypes | Nitrox",
    "keywords": "Method ConvertSlotTypes Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning Assembly NitroxServer-Subnautica.dll ConvertSlotTypes(EntitySlotType) public static List<EntitySlot.Type> ConvertSlotTypes(EntitySlotData.EntitySlotType entitySlotType) Parameters entitySlotType EntitySlotData.EntitySlotType Returns List<EntitySlot.Type>"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.SlotsHelper.GetEntitySlotTypes.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.SlotsHelper.GetEntitySlotTypes.html",
    "title": "Method GetEntitySlotTypes | Nitrox",
    "keywords": "Method GetEntitySlotTypes Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning Assembly NitroxServer-Subnautica.dll GetEntitySlotTypes(IEntitySlot) public static List<EntitySlot.Type> GetEntitySlotTypes(IEntitySlot entitySlot) Parameters entitySlot IEntitySlot Returns List<EntitySlot.Type>"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.SlotsHelper.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.SlotsHelper.html",
    "title": "Class SlotsHelper | Nitrox",
    "keywords": "Class SlotsHelper Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning Assembly NitroxServer-Subnautica.dll public static class SlotsHelper Inheritance object SlotsHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ConvertSlotTypes(EntitySlotType) GetEntitySlotTypes(IEntitySlot)"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.SubnauticaEntitySpawnPointFactory.From.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.SubnauticaEntitySpawnPointFactory.From.html",
    "title": "Method From | Nitrox",
    "keywords": "Method From Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning Assembly NitroxServer-Subnautica.dll From(AbsoluteEntityCell, NitroxTransform, GameObject) public override List<EntitySpawnPoint> From(AbsoluteEntityCell absoluteEntityCell, NitroxTransform transform, GameObject gameObject) Parameters absoluteEntityCell AbsoluteEntityCell transform NitroxTransform gameObject GameObject Returns List<EntitySpawnPoint>"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.SubnauticaEntitySpawnPointFactory.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.SubnauticaEntitySpawnPointFactory.html",
    "title": "Class SubnauticaEntitySpawnPointFactory | Nitrox",
    "keywords": "Class SubnauticaEntitySpawnPointFactory Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning Assembly NitroxServer-Subnautica.dll public class SubnauticaEntitySpawnPointFactory : EntitySpawnPointFactory Inheritance object EntitySpawnPointFactory SubnauticaEntitySpawnPointFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods From(AbsoluteEntityCell, NitroxTransform, GameObject)"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.Spawning.html",
    "title": "Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning | Nitrox",
    "keywords": "Namespace NitroxServer_Subnautica.GameLogic.Entities.Spawning Namespaces NitroxServer_Subnautica.GameLogic.Entities.Spawning.EntityBootstrappers Classes SlotsHelper SubnauticaEntitySpawnPointFactory"
  },
  "api/NitroxServer_Subnautica.GameLogic.Entities.html": {
    "href": "api/NitroxServer_Subnautica.GameLogic.Entities.html",
    "title": "Namespace NitroxServer_Subnautica.GameLogic.Entities | Nitrox",
    "keywords": "Namespace NitroxServer_Subnautica.GameLogic.Entities Namespaces NitroxServer_Subnautica.GameLogic.Entities.Spawning Classes SimulationWhitelist"
  },
  "api/NitroxServer_Subnautica.Program.html": {
    "href": "api/NitroxServer_Subnautica.Program.html",
    "title": "Class Program | Nitrox",
    "keywords": "Class Program Namespace NitroxServer_Subnautica Assembly NitroxServer-Subnautica.dll public class Program Inheritance object Program Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.BundleFileParser-1.-ctor.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.BundleFileParser-1.-ctor.html",
    "title": "Constructor BundleFileParser | Nitrox",
    "keywords": "Constructor BundleFileParser Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract Assembly NitroxServer-Subnautica.dll BundleFileParser(string, int) protected BundleFileParser(string bundleName, int index) Parameters bundleName string index int"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.BundleFileParser-1.ParseFile.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.BundleFileParser-1.ParseFile.html",
    "title": "Method ParseFile | Nitrox",
    "keywords": "Method ParseFile Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract Assembly NitroxServer-Subnautica.dll ParseFile() public abstract T ParseFile() Returns T"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.BundleFileParser-1.assetFileInst.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.BundleFileParser-1.assetFileInst.html",
    "title": "Field assetFileInst | Nitrox",
    "keywords": "Field assetFileInst Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract Assembly NitroxServer-Subnautica.dll protected static AssetsFileInstance assetFileInst Returns AssetsFileInstance"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.BundleFileParser-1.bundleFile.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.BundleFileParser-1.bundleFile.html",
    "title": "Field bundleFile | Nitrox",
    "keywords": "Field bundleFile Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract Assembly NitroxServer-Subnautica.dll protected static AssetsFile bundleFile Returns AssetsFile"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.BundleFileParser-1.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.BundleFileParser-1.html",
    "title": "Class BundleFileParser<T> | Nitrox",
    "keywords": "Class BundleFileParser<T> Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract Assembly NitroxServer-Subnautica.dll public abstract class BundleFileParser<T> : AssetParser Type Parameters T Inheritance object AssetParser BundleFileParser<T> Derived RandomStartParser Inherited Members AssetParser.rootPath AssetParser.assetsManager AssetParser.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BundleFileParser(string, int) Fields assetFileInst bundleFile Methods ParseFile()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.ResourceFileParser-1.ParseFile.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.ResourceFileParser-1.ParseFile.html",
    "title": "Method ParseFile | Nitrox",
    "keywords": "Method ParseFile Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract Assembly NitroxServer-Subnautica.dll ParseFile() public abstract T ParseFile() Returns T"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.ResourceFileParser-1.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.ResourceFileParser-1.html",
    "title": "Class ResourceFileParser<T> | Nitrox",
    "keywords": "Class ResourceFileParser<T> Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract Assembly NitroxServer-Subnautica.dll public abstract class ResourceFileParser<T> : AssetParser Type Parameters T Inheritance object AssetParser ResourceFileParser<T> Derived EntityDistributionsParser WorldEntityInfoParser Inherited Members AssetParser.rootPath AssetParser.assetsManager AssetParser.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields resourceFile resourceInst Methods ParseFile()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.ResourceFileParser-1.resourceFile.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.ResourceFileParser-1.resourceFile.html",
    "title": "Field resourceFile | Nitrox",
    "keywords": "Field resourceFile Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract Assembly NitroxServer-Subnautica.dll protected static readonly AssetsFile resourceFile Returns AssetsFile"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.ResourceFileParser-1.resourceInst.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.ResourceFileParser-1.resourceInst.html",
    "title": "Field resourceInst | Nitrox",
    "keywords": "Field resourceInst Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract Assembly NitroxServer-Subnautica.dll protected static readonly AssetsFileInstance resourceInst Returns AssetsFileInstance"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Abstract.html",
    "title": "Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract | Nitrox",
    "keywords": "Namespace NitroxServer_Subnautica.Resources.Parsers.Abstract Classes BundleFileParser<T> ResourceFileParser<T>"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.AssetParser.Dispose.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.AssetParser.Dispose.html",
    "title": "Method Dispose | Nitrox",
    "keywords": "Method Dispose Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll Dispose() public static void Dispose()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.AssetParser.assetsManager.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.AssetParser.assetsManager.html",
    "title": "Field assetsManager | Nitrox",
    "keywords": "Field assetsManager Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll protected static readonly AssetsManager assetsManager Returns AssetsManager"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.AssetParser.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.AssetParser.html",
    "title": "Class AssetParser | Nitrox",
    "keywords": "Class AssetParser Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll public abstract class AssetParser Inheritance object AssetParser Derived BundleFileParser<T> ResourceFileParser<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields assetsManager rootPath Methods Dispose()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.AssetParser.rootPath.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.AssetParser.rootPath.html",
    "title": "Field rootPath | Nitrox",
    "keywords": "Field rootPath Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll protected static readonly string rootPath Returns string"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.EntityDistributionsParser.ParseFile.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.EntityDistributionsParser.ParseFile.html",
    "title": "Method ParseFile | Nitrox",
    "keywords": "Method ParseFile Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll ParseFile() public override string ParseFile() Returns string"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.EntityDistributionsParser.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.EntityDistributionsParser.html",
    "title": "Class EntityDistributionsParser | Nitrox",
    "keywords": "Class EntityDistributionsParser Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll public class EntityDistributionsParser : ResourceFileParser<string> Inheritance object AssetParser ResourceFileParser<string> EntityDistributionsParser Inherited Members ResourceFileParser<string>.resourceInst ResourceFileParser<string>.resourceFile AssetParser.rootPath AssetParser.assetsManager AssetParser.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ParseFile()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetTypeValueFieldExtension.AsNitroxQuaternion.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetTypeValueFieldExtension.AsNitroxQuaternion.html",
    "title": "Method AsNitroxQuaternion | Nitrox",
    "keywords": "Method AsNitroxQuaternion Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll AsNitroxQuaternion(AssetTypeValueField) public static NitroxQuaternion AsNitroxQuaternion(this AssetTypeValueField valueField) Parameters valueField AssetTypeValueField Returns NitroxQuaternion"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetTypeValueFieldExtension.AsNitroxVector3.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetTypeValueFieldExtension.AsNitroxVector3.html",
    "title": "Method AsNitroxVector3 | Nitrox",
    "keywords": "Method AsNitroxVector3 Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll AsNitroxVector3(AssetTypeValueField) public static NitroxVector3 AsNitroxVector3(this AssetTypeValueField valueField) Parameters valueField AssetTypeValueField Returns NitroxVector3"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetTypeValueFieldExtension.AsVector3.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetTypeValueFieldExtension.AsVector3.html",
    "title": "Method AsVector3 | Nitrox",
    "keywords": "Method AsVector3 Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll AsVector3(AssetTypeValueField) public static Vector3 AsVector3(this AssetTypeValueField valueField) Parameters valueField AssetTypeValueField Returns Vector3"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetTypeValueFieldExtension.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetTypeValueFieldExtension.html",
    "title": "Class AssetTypeValueFieldExtension | Nitrox",
    "keywords": "Class AssetTypeValueFieldExtension Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll public static class AssetTypeValueFieldExtension Inheritance object AssetTypeValueFieldExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AsNitroxQuaternion(AssetTypeValueField) AsNitroxVector3(AssetTypeValueField) AsVector3(AssetTypeValueField)"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.-ctor.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.-ctor.html",
    "title": "Constructor AssetsBundleManager | Nitrox",
    "keywords": "Constructor AssetsBundleManager Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll AssetsBundleManager(string) public AssetsBundleManager(string aaRootPath) Parameters aaRootPath string"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.CleanBundlePath.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.CleanBundlePath.html",
    "title": "Method CleanBundlePath | Nitrox",
    "keywords": "Method CleanBundlePath Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll CleanBundlePath(string) public string CleanBundlePath(string bundlePath) Parameters bundlePath string Returns string"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.Clone.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.Clone.html",
    "title": "Method Clone | Nitrox",
    "keywords": "Method Clone Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll Clone() Returns a ready to use AssetsTools.NET.Extra.AssetsManager with loaded AssetsTools.NET.Extra.AssetsManager.classDatabase, AssetsTools.NET.Extra.AssetsManager.classPackage and AssetsTools.NET.Extra.IMonoBehaviourTemplateGenerator. public AssetsBundleManager Clone() Returns AssetsBundleManager"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.GetMonoBehaviourFromGameObject.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.GetMonoBehaviourFromGameObject.html",
    "title": "Method GetMonoBehaviourFromGameObject | Nitrox",
    "keywords": "Method GetMonoBehaviourFromGameObject Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll GetMonoBehaviourFromGameObject(AssetsFileInstance, AssetFileInfo, string) Copied from https://github.com/nesrak1/AssetsTools.NET#full-monobehaviour-writing-example public AssetFileInfo GetMonoBehaviourFromGameObject(AssetsFileInstance inst, AssetFileInfo targetGameObjectValue, string targetClassName) Parameters inst AssetsFileInstance AssetsTools.NET.Extra.AssetsFileInstance instance currently used targetGameObjectValue AssetFileInfo AssetsTools.NET.AssetFileInfo of the target GameObject targetClassName string Class name of the target MonoBehaviour Returns AssetFileInfo"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.GetTransformComponent.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.GetTransformComponent.html",
    "title": "Method GetTransformComponent | Nitrox",
    "keywords": "Method GetTransformComponent Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll GetTransformComponent(AssetsFileInstance, AssetTypeValueField) public AssetTypeValueField GetTransformComponent(AssetsFileInstance assetFileInst, AssetTypeValueField rootGameObject) Parameters assetFileInst AssetsFileInstance rootGameObject AssetTypeValueField Returns AssetTypeValueField"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.LoadBundleWithDependencies.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.LoadBundleWithDependencies.html",
    "title": "Method LoadBundleWithDependencies | Nitrox",
    "keywords": "Method LoadBundleWithDependencies Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll LoadBundleWithDependencies(string[]) public AssetsFileInstance LoadBundleWithDependencies(string[] bundlePaths) Parameters bundlePaths string[] Returns AssetsFileInstance"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.SetMonoTempGenerator.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.SetMonoTempGenerator.html",
    "title": "Method SetMonoTempGenerator | Nitrox",
    "keywords": "Method SetMonoTempGenerator Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll SetMonoTempGenerator(IMonoBehaviourTemplateGenerator) public void SetMonoTempGenerator(IMonoBehaviourTemplateGenerator generator) Parameters generator IMonoBehaviourTemplateGenerator"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.UnloadAll.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.UnloadAll.html",
    "title": "Method UnloadAll | Nitrox",
    "keywords": "Method UnloadAll Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll UnloadAll(bool) public void UnloadAll(bool unloadClassData = false) Parameters unloadClassData bool"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsBundleManager.html",
    "title": "Class AssetsBundleManager | Nitrox",
    "keywords": "Class AssetsBundleManager Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll public class AssetsBundleManager : AssetsManager Inheritance object AssetsManager AssetsBundleManager Inherited Members AssetsManager.updateAfterLoad AssetsManager.useTemplateFieldCache AssetsManager.classDatabase AssetsManager.classPackage AssetsManager.files AssetsManager.bundles AssetsManager.LoadAssetsFile(Stream, string, bool, BundleFileInstance) AssetsManager.LoadAssetsFile(FileStream, bool) AssetsManager.LoadAssetsFile(string, bool) AssetsManager.UnloadAssetsFile(string) AssetsManager.UnloadAllAssetsFiles(bool) AssetsManager.LoadBundleFile(Stream, string, bool) AssetsManager.LoadBundleFile(FileStream, bool) AssetsManager.LoadBundleFile(string, bool) AssetsManager.UnloadBundleFile(string) AssetsManager.UnloadAllBundleFiles() AssetsManager.LoadAssetsFileFromBundle(BundleFileInstance, int, bool) AssetsManager.LoadAssetsFileFromBundle(BundleFileInstance, string, bool) AssetsManager.LoadClassDatabase(Stream) AssetsManager.LoadClassDatabase(string) AssetsManager.LoadClassDatabaseFromPackage(UnityVersion) AssetsManager.LoadClassDatabaseFromPackage(string) AssetsManager.LoadClassPackage(Stream) AssetsManager.LoadClassPackage(string) AssetsManager.LoadDependencies(AssetsFileInstance) AssetsManager.LoadBundleDependencies(AssetsFileInstance, BundleFileInstance, string) AssetsManager.GetTemplateBaseField(AssetsFileInstance, AssetFileInfo, bool) AssetsManager.GetTemplateBaseField(AssetsFileInstance, long, int, ushort, bool) AssetsManager.GetExtAsset(AssetsFileInstance, int, long, bool, bool) AssetsManager.GetExtAsset(AssetsFileInstance, AssetTypeValueField, bool, bool) AssetsManager.GetBaseField(AssetsFileInstance, AssetFileInfo, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AssetsBundleManager(string) Methods CleanBundlePath(string) Clone() Returns a ready to use AssetsTools.NET.Extra.AssetsManager with loaded AssetsTools.NET.Extra.AssetsManager.classDatabase, AssetsTools.NET.Extra.AssetsManager.classPackage and AssetsTools.NET.Extra.IMonoBehaviourTemplateGenerator. GetMonoBehaviourFromGameObject(AssetsFileInstance, AssetFileInfo, string) Copied from https://github.com/nesrak1/AssetsTools.NET#full-monobehaviour-writing-example GetTransformComponent(AssetsFileInstance, AssetTypeValueField) LoadBundleWithDependencies(string[]) SetMonoTempGenerator(IMonoBehaviourTemplateGenerator) UnloadAll(bool)"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsFileMetadataExtension.GetAssetInfo.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsFileMetadataExtension.GetAssetInfo.html",
    "title": "Method GetAssetInfo | Nitrox",
    "keywords": "Method GetAssetInfo Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll GetAssetInfo(AssetsFile, AssetsManager, string, AssetClassID) public static AssetFileInfo GetAssetInfo(this AssetsFile assetsFile, AssetsManager assetsManager, string assetName, AssetClassID classID) Parameters assetsFile AssetsFile assetsManager AssetsManager assetName string classID AssetClassID Returns AssetFileInfo"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsFileMetadataExtension.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.AssetsFileMetadataExtension.html",
    "title": "Class AssetsFileMetadataExtension | Nitrox",
    "keywords": "Class AssetsFileMetadataExtension Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll public static class AssetsFileMetadataExtension Inheritance object AssetsFileMetadataExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetAssetInfo(AssetsFile, AssetsManager, string, AssetClassID)"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.ThreadSafeMonoCecilTempGenerator.-ctor.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.ThreadSafeMonoCecilTempGenerator.-ctor.html",
    "title": "Constructor ThreadSafeMonoCecilTempGenerator | Nitrox",
    "keywords": "Constructor ThreadSafeMonoCecilTempGenerator Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll ThreadSafeMonoCecilTempGenerator(string) public ThreadSafeMonoCecilTempGenerator(string managedPath) Parameters managedPath string"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.ThreadSafeMonoCecilTempGenerator.Dispose.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.ThreadSafeMonoCecilTempGenerator.Dispose.html",
    "title": "Method Dispose | Nitrox",
    "keywords": "Method Dispose Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.ThreadSafeMonoCecilTempGenerator.GetTemplateField.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.ThreadSafeMonoCecilTempGenerator.GetTemplateField.html",
    "title": "Method GetTemplateField | Nitrox",
    "keywords": "Method GetTemplateField Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll GetTemplateField(AssetTypeTemplateField, string, string, string, UnityVersion) public AssetTypeTemplateField GetTemplateField(AssetTypeTemplateField baseField, string assemblyName, string nameSpace, string className, UnityVersion unityVersion) Parameters baseField AssetTypeTemplateField assemblyName string nameSpace string className string unityVersion UnityVersion Returns AssetTypeTemplateField"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.ThreadSafeMonoCecilTempGenerator.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.ThreadSafeMonoCecilTempGenerator.html",
    "title": "Class ThreadSafeMonoCecilTempGenerator | Nitrox",
    "keywords": "Class ThreadSafeMonoCecilTempGenerator Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Assembly NitroxServer-Subnautica.dll public class ThreadSafeMonoCecilTempGenerator : IMonoBehaviourTemplateGenerator, IDisposable Inheritance object ThreadSafeMonoCecilTempGenerator Implements IMonoBehaviourTemplateGenerator IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ThreadSafeMonoCecilTempGenerator(string) Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. GetTemplateField(AssetTypeTemplateField, string, string, string, UnityVersion)"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.Helper.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.Helper.html",
    "title": "Namespace NitroxServer_Subnautica.Resources.Parsers.Helper | Nitrox",
    "keywords": "Namespace NitroxServer_Subnautica.Resources.Parsers.Helper Classes AssetTypeValueFieldExtension AssetsBundleManager AssetsFileMetadataExtension ThreadSafeMonoCecilTempGenerator"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.PrefabPlaceholderGroupsParser.-ctor.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.PrefabPlaceholderGroupsParser.-ctor.html",
    "title": "Constructor PrefabPlaceholderGroupsParser | Nitrox",
    "keywords": "Constructor PrefabPlaceholderGroupsParser Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll PrefabPlaceholderGroupsParser() public PrefabPlaceholderGroupsParser()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.PrefabPlaceholderGroupsParser.Dispose.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.PrefabPlaceholderGroupsParser.Dispose.html",
    "title": "Method Dispose | Nitrox",
    "keywords": "Method Dispose Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.PrefabPlaceholderGroupsParser.ParseFile.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.PrefabPlaceholderGroupsParser.ParseFile.html",
    "title": "Method ParseFile | Nitrox",
    "keywords": "Method ParseFile Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll ParseFile() public Dictionary<string, PrefabPlaceholdersGroupAsset> ParseFile() Returns Dictionary<string, PrefabPlaceholdersGroupAsset>"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.PrefabPlaceholderGroupsParser.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.PrefabPlaceholderGroupsParser.html",
    "title": "Class PrefabPlaceholderGroupsParser | Nitrox",
    "keywords": "Class PrefabPlaceholderGroupsParser Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll public class PrefabPlaceholderGroupsParser : IDisposable Inheritance object PrefabPlaceholderGroupsParser Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrefabPlaceholderGroupsParser() Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. ParseFile()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.RandomStartParser.-ctor.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.RandomStartParser.-ctor.html",
    "title": "Constructor RandomStartParser | Nitrox",
    "keywords": "Constructor RandomStartParser Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll RandomStartParser() public RandomStartParser()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.RandomStartParser.ParseFile.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.RandomStartParser.ParseFile.html",
    "title": "Method ParseFile | Nitrox",
    "keywords": "Method ParseFile Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll ParseFile() public override RandomStartGenerator ParseFile() Returns RandomStartGenerator"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.RandomStartParser.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.RandomStartParser.html",
    "title": "Class RandomStartParser | Nitrox",
    "keywords": "Class RandomStartParser Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll public class RandomStartParser : BundleFileParser<RandomStartGenerator> Inheritance object AssetParser BundleFileParser<RandomStartGenerator> RandomStartParser Inherited Members BundleFileParser<RandomStartGenerator>.assetFileInst BundleFileParser<RandomStartGenerator>.bundleFile AssetParser.rootPath AssetParser.assetsManager AssetParser.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RandomStartParser() Methods ParseFile()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.WorldEntityInfoParser.ParseFile.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.WorldEntityInfoParser.ParseFile.html",
    "title": "Method ParseFile | Nitrox",
    "keywords": "Method ParseFile Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll ParseFile() public override Dictionary<string, WorldEntityInfo> ParseFile() Returns Dictionary<string, WorldEntityInfo>"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.WorldEntityInfoParser.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.WorldEntityInfoParser.html",
    "title": "Class WorldEntityInfoParser | Nitrox",
    "keywords": "Class WorldEntityInfoParser Namespace NitroxServer_Subnautica.Resources.Parsers Assembly NitroxServer-Subnautica.dll public class WorldEntityInfoParser : ResourceFileParser<Dictionary<string, WorldEntityInfo>> Inheritance object AssetParser ResourceFileParser<Dictionary<string, WorldEntityInfo>> WorldEntityInfoParser Inherited Members ResourceFileParser<Dictionary<string, WorldEntityInfo>>.resourceInst ResourceFileParser<Dictionary<string, WorldEntityInfo>>.resourceFile ResourceFileParser<Dictionary<string, WorldEntityInfo>>.ParseFile() AssetParser.rootPath AssetParser.assetsManager AssetParser.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ParseFile()"
  },
  "api/NitroxServer_Subnautica.Resources.Parsers.html": {
    "href": "api/NitroxServer_Subnautica.Resources.Parsers.html",
    "title": "Namespace NitroxServer_Subnautica.Resources.Parsers | Nitrox",
    "keywords": "Namespace NitroxServer_Subnautica.Resources.Parsers Namespaces NitroxServer_Subnautica.Resources.Parsers.Abstract NitroxServer_Subnautica.Resources.Parsers.Helper Classes AssetParser EntityDistributionsParser PrefabPlaceholderGroupsParser RandomStartParser WorldEntityInfoParser"
  },
  "api/NitroxServer_Subnautica.Resources.ResourceAssets.LootDistributionsJson.html": {
    "href": "api/NitroxServer_Subnautica.Resources.ResourceAssets.LootDistributionsJson.html",
    "title": "Property LootDistributionsJson | Nitrox",
    "keywords": "Property LootDistributionsJson Namespace NitroxServer_Subnautica.Resources Assembly NitroxServer-Subnautica.dll LootDistributionsJson public string LootDistributionsJson { get; init; } Property Value string"
  },
  "api/NitroxServer_Subnautica.Resources.ResourceAssets.NitroxRandom.html": {
    "href": "api/NitroxServer_Subnautica.Resources.ResourceAssets.NitroxRandom.html",
    "title": "Property NitroxRandom | Nitrox",
    "keywords": "Property NitroxRandom Namespace NitroxServer_Subnautica.Resources Assembly NitroxServer-Subnautica.dll NitroxRandom public RandomStartGenerator NitroxRandom { get; init; } Property Value RandomStartGenerator"
  },
  "api/NitroxServer_Subnautica.Resources.ResourceAssets.PrefabPlaceholderGroupsByGroupClassId.html": {
    "href": "api/NitroxServer_Subnautica.Resources.ResourceAssets.PrefabPlaceholderGroupsByGroupClassId.html",
    "title": "Property PrefabPlaceholderGroupsByGroupClassId | Nitrox",
    "keywords": "Property PrefabPlaceholderGroupsByGroupClassId Namespace NitroxServer_Subnautica.Resources Assembly NitroxServer-Subnautica.dll PrefabPlaceholderGroupsByGroupClassId public Dictionary<string, PrefabPlaceholdersGroupAsset> PrefabPlaceholderGroupsByGroupClassId { get; init; } Property Value Dictionary<string, PrefabPlaceholdersGroupAsset>"
  },
  "api/NitroxServer_Subnautica.Resources.ResourceAssets.ValidateMembers.html": {
    "href": "api/NitroxServer_Subnautica.Resources.ResourceAssets.ValidateMembers.html",
    "title": "Method ValidateMembers | Nitrox",
    "keywords": "Method ValidateMembers Namespace NitroxServer_Subnautica.Resources Assembly NitroxServer-Subnautica.dll ValidateMembers(ResourceAssets) public static void ValidateMembers(ResourceAssets resourceAssets) Parameters resourceAssets ResourceAssets"
  },
  "api/NitroxServer_Subnautica.Resources.ResourceAssets.WorldEntitiesByClassId.html": {
    "href": "api/NitroxServer_Subnautica.Resources.ResourceAssets.WorldEntitiesByClassId.html",
    "title": "Property WorldEntitiesByClassId | Nitrox",
    "keywords": "Property WorldEntitiesByClassId Namespace NitroxServer_Subnautica.Resources Assembly NitroxServer-Subnautica.dll WorldEntitiesByClassId public Dictionary<string, WorldEntityInfo> WorldEntitiesByClassId { get; init; } Property Value Dictionary<string, WorldEntityInfo>"
  },
  "api/NitroxServer_Subnautica.Resources.ResourceAssets.html": {
    "href": "api/NitroxServer_Subnautica.Resources.ResourceAssets.html",
    "title": "Class ResourceAssets | Nitrox",
    "keywords": "Class ResourceAssets Namespace NitroxServer_Subnautica.Resources Assembly NitroxServer-Subnautica.dll public class ResourceAssets Inheritance object ResourceAssets Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties LootDistributionsJson NitroxRandom PrefabPlaceholderGroupsByGroupClassId WorldEntitiesByClassId Methods ValidateMembers(ResourceAssets)"
  },
  "api/NitroxServer_Subnautica.Resources.ResourceAssetsParser.FindDirectoryContainingResourceAssets.html": {
    "href": "api/NitroxServer_Subnautica.Resources.ResourceAssetsParser.FindDirectoryContainingResourceAssets.html",
    "title": "Method FindDirectoryContainingResourceAssets | Nitrox",
    "keywords": "Method FindDirectoryContainingResourceAssets Namespace NitroxServer_Subnautica.Resources Assembly NitroxServer-Subnautica.dll FindDirectoryContainingResourceAssets() public static string FindDirectoryContainingResourceAssets() Returns string"
  },
  "api/NitroxServer_Subnautica.Resources.ResourceAssetsParser.Parse.html": {
    "href": "api/NitroxServer_Subnautica.Resources.ResourceAssetsParser.Parse.html",
    "title": "Method Parse | Nitrox",
    "keywords": "Method Parse Namespace NitroxServer_Subnautica.Resources Assembly NitroxServer-Subnautica.dll Parse() public static ResourceAssets Parse() Returns ResourceAssets"
  },
  "api/NitroxServer_Subnautica.Resources.ResourceAssetsParser.html": {
    "href": "api/NitroxServer_Subnautica.Resources.ResourceAssetsParser.html",
    "title": "Class ResourceAssetsParser | Nitrox",
    "keywords": "Class ResourceAssetsParser Namespace NitroxServer_Subnautica.Resources Assembly NitroxServer-Subnautica.dll public static class ResourceAssetsParser Inheritance object ResourceAssetsParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FindDirectoryContainingResourceAssets() Parse()"
  },
  "api/NitroxServer_Subnautica.Resources.html": {
    "href": "api/NitroxServer_Subnautica.Resources.html",
    "title": "Namespace NitroxServer_Subnautica.Resources | Nitrox",
    "keywords": "Namespace NitroxServer_Subnautica.Resources Namespaces NitroxServer_Subnautica.Resources.Parsers Classes ResourceAssets ResourceAssetsParser"
  },
  "api/NitroxServer_Subnautica.SubnauticaServerAutoFacRegistrar.RegisterDependencies.html": {
    "href": "api/NitroxServer_Subnautica.SubnauticaServerAutoFacRegistrar.RegisterDependencies.html",
    "title": "Method RegisterDependencies | Nitrox",
    "keywords": "Method RegisterDependencies Namespace NitroxServer_Subnautica Assembly NitroxServer-Subnautica.dll RegisterDependencies(ContainerBuilder) public override void RegisterDependencies(ContainerBuilder containerBuilder) Parameters containerBuilder ContainerBuilder"
  },
  "api/NitroxServer_Subnautica.SubnauticaServerAutoFacRegistrar.html": {
    "href": "api/NitroxServer_Subnautica.SubnauticaServerAutoFacRegistrar.html",
    "title": "Class SubnauticaServerAutoFacRegistrar | Nitrox",
    "keywords": "Class SubnauticaServerAutoFacRegistrar Namespace NitroxServer_Subnautica Assembly NitroxServer-Subnautica.dll public class SubnauticaServerAutoFacRegistrar : ServerAutoFacRegistrar, IAutoFacRegistrar Inheritance object ServerAutoFacRegistrar SubnauticaServerAutoFacRegistrar Implements IAutoFacRegistrar Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods RegisterDependencies(ContainerBuilder)"
  },
  "api/NitroxServer_Subnautica.html": {
    "href": "api/NitroxServer_Subnautica.html",
    "title": "Namespace NitroxServer_Subnautica | Nitrox",
    "keywords": "Namespace NitroxServer_Subnautica Namespaces NitroxServer_Subnautica.Communication.Packets.Processors NitroxServer_Subnautica.GameLogic.Entities NitroxServer_Subnautica.Resources Classes AppMutex Program SubnauticaServerAutoFacRegistrar"
  },
  "api/NitroxTest.Patcher.PatchTestHelper.Clone.html": {
    "href": "api/NitroxTest.Patcher.PatchTestHelper.Clone.html",
    "title": "Method Clone | Nitrox",
    "keywords": "Method Clone Namespace NitroxTest.Patcher Assembly Nitrox.Test.dll Clone(IEnumerable<CodeInstruction>) Clones the instructions so that the returned instructions are not the same reference. public static List<CodeInstruction> Clone(this IEnumerable<CodeInstruction> instructions) Parameters instructions IEnumerable<CodeInstruction> Returns List<CodeInstruction> Remarks Useful for testing code differences before and after a Harmony transpiler."
  },
  "api/NitroxTest.Patcher.PatchTestHelper.GenerateDummyInstructions.html": {
    "href": "api/NitroxTest.Patcher.PatchTestHelper.GenerateDummyInstructions.html",
    "title": "Method GenerateDummyInstructions | Nitrox",
    "keywords": "Method GenerateDummyInstructions Namespace NitroxTest.Patcher Assembly Nitrox.Test.dll GenerateDummyInstructions(int) public static List<CodeInstruction> GenerateDummyInstructions(int count) Parameters count int Returns List<CodeInstruction>"
  },
  "api/NitroxTest.Patcher.PatchTestHelper.GetILGenerator.html": {
    "href": "api/NitroxTest.Patcher.PatchTestHelper.GetILGenerator.html",
    "title": "Method GetILGenerator | Nitrox",
    "keywords": "Method GetILGenerator Namespace NitroxTest.Patcher Assembly Nitrox.Test.dll GetILGenerator(MethodInfo) public static ILGenerator GetILGenerator(this MethodInfo method) Parameters method MethodInfo Returns ILGenerator"
  },
  "api/NitroxTest.Patcher.PatchTestHelper.GetILInstructions.html": {
    "href": "api/NitroxTest.Patcher.PatchTestHelper.GetILInstructions.html",
    "title": "Method GetILInstructions | Nitrox",
    "keywords": "Method GetILInstructions Namespace NitroxTest.Patcher Assembly Nitrox.Test.dll GetILInstructions(MethodInfo) public static IEnumerable<KeyValuePair<OpCode, object>> GetILInstructions(MethodInfo method) Parameters method MethodInfo Returns IEnumerable<KeyValuePair<OpCode, object>> GetILInstructions(DynamicMethod) public static IEnumerable<KeyValuePair<OpCode, object>> GetILInstructions(DynamicMethod method) Parameters method DynamicMethod Returns IEnumerable<KeyValuePair<OpCode, object>>"
  },
  "api/NitroxTest.Patcher.PatchTestHelper.GetInstructionsFromMethod.html": {
    "href": "api/NitroxTest.Patcher.PatchTestHelper.GetInstructionsFromMethod.html",
    "title": "Method GetInstructionsFromMethod | Nitrox",
    "keywords": "Method GetInstructionsFromMethod Namespace NitroxTest.Patcher Assembly Nitrox.Test.dll GetInstructionsFromMethod(DynamicMethod) public static ReadOnlyCollection<CodeInstruction> GetInstructionsFromMethod(DynamicMethod targetMethod) Parameters targetMethod DynamicMethod Returns ReadOnlyCollection<CodeInstruction> GetInstructionsFromMethod(MethodInfo) public static ReadOnlyCollection<CodeInstruction> GetInstructionsFromMethod(MethodInfo targetMethod) Parameters targetMethod MethodInfo Returns ReadOnlyCollection<CodeInstruction>"
  },
  "api/NitroxTest.Patcher.PatchTestHelper.TestPattern.html": {
    "href": "api/NitroxTest.Patcher.PatchTestHelper.TestPattern.html",
    "title": "Method TestPattern | Nitrox",
    "keywords": "Method TestPattern Namespace NitroxTest.Patcher Assembly Nitrox.Test.dll TestPattern(MethodInfo, InstructionsPattern, out IEnumerable<CodeInstruction>, out IEnumerable<CodeInstruction>) public static void TestPattern(MethodInfo targetMethod, InstructionsPattern pattern, out IEnumerable<CodeInstruction> originalIl, out IEnumerable<CodeInstruction> transformedIl) Parameters targetMethod MethodInfo pattern InstructionsPattern originalIl IEnumerable<CodeInstruction> transformedIl IEnumerable<CodeInstruction>"
  },
  "api/NitroxTest.Patcher.PatchTestHelper.html": {
    "href": "api/NitroxTest.Patcher.PatchTestHelper.html",
    "title": "Class PatchTestHelper | Nitrox",
    "keywords": "Class PatchTestHelper Namespace NitroxTest.Patcher Assembly Nitrox.Test.dll public static class PatchTestHelper Inheritance object PatchTestHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Clone(IEnumerable<CodeInstruction>) Clones the instructions so that the returned instructions are not the same reference. GenerateDummyInstructions(int) GetILGenerator(MethodInfo) GetILInstructions(DynamicMethod) GetILInstructions(MethodInfo) GetInstructionsFromMethod(DynamicMethod) GetInstructionsFromMethod(MethodInfo) TestPattern(MethodInfo, InstructionsPattern, out IEnumerable<CodeInstruction>, out IEnumerable<CodeInstruction>)"
  },
  "api/NitroxTest.Patcher.html": {
    "href": "api/NitroxTest.Patcher.html",
    "title": "Namespace NitroxTest.Patcher | Nitrox",
    "keywords": "Namespace NitroxTest.Patcher Classes PatchTestHelper"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Nitrox",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Nitrox",
    "keywords": "Introduction"
  }
}