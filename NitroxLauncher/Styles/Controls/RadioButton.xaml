<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:math="http://hexinnovation.com/math"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <math:MathConverter x:Key="Math"  />
    
    <!-- Global Style -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource Nitrox.Brushes.White}" />
        <Setter Property="Background" Value="{DynamicResource Nitrox.Brushes.White}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Width" Value="18" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <!-- TODO: Add Disabled look -->
                            <Setter Property="Cursor" Value="No" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- TODO: Add Hover look -->
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                    <Grid>
                        <Border x:Name="RootBorder"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="20"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="LeftCol" Width="Auto" />
                                <ColumnDefinition x:Name="RightCol" Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="Radio"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Ellipse x:Name="OuterEllipse"
                                         Width="{TemplateBinding Width}"
                                         Height="{TemplateBinding Height}"
                                         Fill="{TemplateBinding Background}"
                                         Stroke="#FFB9B9B9"
                                         StrokeThickness="1"
                                         UseLayoutRounding="False" />
                                <Ellipse x:Name="CheckOuterEllipse"
                                         Width="{TemplateBinding Width}"
                                         Height="{TemplateBinding Height}"
                                         Fill="{DynamicResource Nitrox.Brushes.DarkBlue}"
                                         Opacity="0"
                                         Stroke="#FFB9B9B9"
                                         StrokeThickness="0"
                                         UseLayoutRounding="False" />
                                <Ellipse x:Name="CheckGlyph"
                                         Width="{TemplateBinding Width, ConverterParameter=Round(x*0.45), Converter={StaticResource Math}}"
                                         Height="{TemplateBinding Height, ConverterParameter=Round(x*0.45), Converter={StaticResource Math}}"
                                         Fill="{DynamicResource Nitrox.Brushes.White}"
                                         Opacity="0"
                                         Stroke="{DynamicResource Nitrox.Brushes.DarkBlue}"
                                         UseLayoutRounding="False" />
                            </Grid>
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                        
                        <!-- Animations -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="OuterEllipse"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckOuterEllipse"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom Style -->

    <Style x:Key="WorldGamemodeButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">

                    <BulletDecorator>
                        <Border x:Name="BackgroundBorder" Height="50" Width="140" Background="#151516" BorderBrush="#151516">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="12" />
                                    <Setter Property="BorderThickness" Value="2" />
                                </Style>
                            </Border.Style>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </BulletDecorator>

                    <!-- Interactive behavior for the buttons -->
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.75" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontWeight" Value="DemiBold"/>
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="#FF007BFF"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>